outEdges,SIMPLE_NAME, line no: 128,outEdges.iterator(),METHOD_INVOCATION, line no: 108, 0.2, 0.986013986013986, 0.0, 0.42105263157894735, 0.2
edge,SIMPLE_NAME, line no: 128,graph.getEdgeWeight(edge),METHOD_INVOCATION, line no: 110, 0.16666666666666666, 0.24305555555555555, 0.0, 0.16, 0.16666666666666666
edge,SIMPLE_NAME, line no: 128,maxFlow.get(edge),METHOD_INVOCATION, line no: 111, 0.16666666666666666, 0.24305555555555555, 0.0, 0.23529411764705882, 0.16666666666666666
edge,SIMPLE_NAME, line no: 128,cutEdges.add(edge),METHOD_INVOCATION, line no: 175, 0.16666666666666666, 0.1388888888888889, 0.0, 0.2222222222222222, 0.16666666666666666
E,SIMPLE_NAME, line no: 128,new HashSet<E>(),CLASS_INSTANCE_CREATION, line no: 171, 0.14285714285714285, 0.2896551724137931, 0.0, 0.0625, 0.14285714285714285
edge,SIMPLE_NAME, line no: 128,Graphs.getOppositeVertex(graph edge vertex),METHOD_INVOCATION, line no: 116, 0.1111111111111111, 0.10416666666666667, 0.0, 0.09302325581395349, 0.1111111111111111
E,SIMPLE_NAME, line no: 128,new EdmondsKarpMaximumFlow<V E>(graph),CLASS_INSTANCE_CREATION, line no: 73, 0.1, 0.08275862068965517, 0.0, 0.02631578947368421, 0.1
E,SIMPLE_NAME, line no: 128,new HashSet<E>(graph.outgoingEdgesOf(vertex)),CLASS_INSTANCE_CREATION, line no: 107, 0.09090909090909091, 0.9724137931034482, 0.0, 0.022222222222222223, 0.09090909090909091
E,SIMPLE_NAME, line no: 128,Iterator<E> it=outEdges.iterator(),VARIABLE_DECLARATION_EXPRESSION, line no: 108, 0.09090909090909091, 0.9724137931034482, 0.0, 0.029411764705882353, 0.09090909090909091
E,SIMPLE_NAME, line no: 128,new HashSet<E>(graph.incomingEdgesOf(vertex)),CLASS_INSTANCE_CREATION, line no: 120, 0.09090909090909091, 0.9724137931034482, 0.0, 0.022222222222222223, 0.09090909090909091
E,SIMPLE_NAME, line no: 128,Iterator<E> it=inEdges.iterator(),VARIABLE_DECLARATION_EXPRESSION, line no: 121, 0.09090909090909091, 0.9724137931034482, 0.0, 0.030303030303030304, 0.09090909090909091
edge,SIMPLE_NAME, line no: 128,processQueue.add(Graphs.getOppositeVertex(graph edge vertex)),METHOD_INVOCATION, line no: 116, 0.09090909090909091, 0.09722222222222222, 0.0, 0.06557377049180328, 0.09090909090909091
edge,SIMPLE_NAME, line no: 128,minCut.contains(Graphs.getOppositeVertex(graph edge vertex)),METHOD_INVOCATION, line no: 174, 0.09090909090909091, 0.13194444444444445, 0.0, 0.06666666666666667, 0.09090909090909091
outEdges,SIMPLE_NAME, line no: 128,Iterator<E> it=outEdges.iterator(),VARIABLE_DECLARATION_EXPRESSION, line no: 108, 0.09090909090909091, 0.986013986013986, 0.0, 0.23529411764705882, 0.09090909090909091
edge,SIMPLE_NAME, line no: 128,!minCut.contains(Graphs.getOppositeVertex(graph edge vertex)),PREFIX_EXPRESSION, line no: 174, 0.08333333333333333, 0.125, 0.0, 0.06557377049180328, 0.08333333333333333
E,SIMPLE_NAME, line no: 128,this.ekMaxFlow=new EdmondsKarpMaximumFlow<V E>(graph),ASSIGNMENT, line no: 73, 0.07142857142857142, 0.07586206896551724, 0.0, 0.018867924528301886, 0.07142857142857142
