getString,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 2.6777777777777776, 0.8, 1.0, 0.7777777777777778
getString,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 2.6666666666666665, 0.1, 1.0, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 2.642857142857143, 1.0, 1.0, 0.6428571428571429
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 2.5833333333333335, 1.0, 1.0, 0.5833333333333334
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 2.571428571428571, 0.7777777777777778, 1.0, 0.5714285714285714
getString,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 2.5428571428571427, 0.9, 1.0, 0.6428571428571429
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 2.526315789473684, 1.0, 1.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 2.5, 1.0, 1.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 2.473684210526316, 1.0, 1.0, 0.47368421052631576
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 2.473684210526316, 1.0, 1.0, 0.47368421052631576
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 2.4603174603174605, 0.6666666666666666, 1.0, 0.5714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,String,SIMPLE_NAME, line no: 69, 2.4285714285714284, 0.1111111111111111, 1.0, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 2.3947368421052633, 0.75, 1.0, 0.39473684210526316
fp.getString(),METHOD_INVOCATION, line no: 107,toString,SIMPLE_NAME, line no: 979, 2.388888888888889, 0.7777777777777778, 1.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 2.380952380952381, 0.7777777777777778, 1.0, 0.38095238095238093
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 2.3684210526315788, 0.75, 1.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 2.3684210526315788, 1.0, 1.0, 0.3684210526315789
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 2.36, 0.7777777777777778, 1.0, 0.36
getString,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 2.3333333333333335, 1.0, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 2.3333333333333335, 0.8, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 2.3333333333333335, 1.0, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 2.3333333333333335, 1.0, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 2.3333333333333335, 1.0, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 2.3333333333333335, 1.0, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 2.3, 1.0, 1.0, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 2.2960526315789473, 0.875, 1.0, 0.42105263157894735
fp.getString(),METHOD_INVOCATION, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 2.2857142857142856, 0.7777777777777778, 1.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 2.2801932367149758, 0.6666666666666666, 1.0, 0.391304347826087
LiteralValueSource,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 2.2736842105263158, 0.8, 1.0, 0.47368421052631576
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 2.2698412698412698, 0.7777777777777778, 1.0, 0.38095238095238093
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 2.2698412698412698, 0.7777777777777778, 1.0, 0.38095238095238093
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 2.263888888888889, 0.8888888888888888, 1.0, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 2.2573099415204676, 0.8888888888888888, 1.0, 0.3684210526315789
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 2.2444444444444445, 0.7777777777777778, 1.0, 0.4666666666666667
getString,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 2.2333333333333334, 0.9, 1.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 2.230769230769231, 0.8, 1.0, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 2.2303030303030305, 1.0, 1.0, 0.23030303030303031
getString,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 2.2222222222222223, 1.0, 1.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 2.2142857142857144, 1.0, 1.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,"vector",STRING_LITERAL, line no: 226, 2.2142857142857144, 1.0, 1.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,"geodist",STRING_LITERAL, line no: 262, 2.2142857142857144, 1.0, 1.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 2.2142857142857144, 1.0, 1.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,"strdist",STRING_LITERAL, line no: 327, 2.2142857142857144, 1.0, 1.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,"rint",STRING_LITERAL, line no: 470, 2.2142857142857144, 1.0, 1.0, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 2.2105263157894735, 0.75, 1.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 2.206349206349206, 0.7777777777777778, 1.0, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 2.204301075268817, 1.0, 1.0, 0.20430107526881722
fp.getString(),METHOD_INVOCATION, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 2.2, 1.0, 1.0, 0.2
getString,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 2.2, 1.0, 1.0, 0.2
getString,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 2.2, 1.0, 1.0, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 2.1933333333333334, 1.0, 1.0, 0.19333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 2.19205298013245, 1.0, 1.0, 0.19205298013245034
getString,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 2.188888888888889, 0.8, 1.0, 0.3888888888888889
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 2.1847133757961785, 1.0, 1.0, 0.18471337579617833
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 2.1835443037974684, 1.0, 1.0, 0.18354430379746836
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 2.1834319526627217, 1.0, 1.0, 0.1834319526627219
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 2.177142857142857, 1.0, 1.0, 0.17714285714285713
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 2.176470588235294, 1.0, 1.0, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 2.1744186046511627, 1.0, 1.0, 0.1744186046511628
getString,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 2.172727272727273, 0.9, 1.0, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 2.1714285714285713, 1.0, 1.0, 0.17142857142857143
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 2.169491525423729, 1.0, 1.0, 0.1694915254237288
getString,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 2.168421052631579, 0.8, 1.0, 0.3684210526315789
getString,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 2.168421052631579, 0.8, 1.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 2.1666666666666665, 1.0, 1.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 2.1666666666666665, 1.0, 1.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 2.1666666666666665, 1.0, 1.0, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 2.1644736842105265, 0.625, 1.0, 0.2894736842105263
getString,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 2.1636363636363636, 0.1, 1.0, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 2.158974358974359, 1.0, 1.0, 0.15897435897435896
fp.getString(),METHOD_INVOCATION, line no: 107,"literal",STRING_LITERAL, line no: 104, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"linear",STRING_LITERAL, line no: 125, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"recip",STRING_LITERAL, line no: 134, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"product",STRING_LITERAL, line no: 199, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"query",STRING_LITERAL, line no: 232, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"joindf",STRING_LITERAL, line no: 253, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"hsin",STRING_LITERAL, line no: 264, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"geohash",STRING_LITERAL, line no: 317, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"field",STRING_LITERAL, line no: 352, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"deg",STRING_LITERAL, line no: 368, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"sin",STRING_LITERAL, line no: 404, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"tan",STRING_LITERAL, line no: 416, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"asin",STRING_LITERAL, line no: 422, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"atan",STRING_LITERAL, line no: 434, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"sinh",STRING_LITERAL, line no: 440, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"tanh",STRING_LITERAL, line no: 452, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"ceil",STRING_LITERAL, line no: 458, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"floor",STRING_LITERAL, line no: 464, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"hypot",STRING_LITERAL, line no: 482, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"atan2",STRING_LITERAL, line no: 488, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"min",STRING_LITERAL, line no: 501, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"pi",STRING_LITERAL, line no: 530, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"ttf",STRING_LITERAL, line no: 559, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"sttf",STRING_LITERAL, line no: 568, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"true",STRING_LITERAL, line no: 616, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"false",STRING_LITERAL, line no: 623, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"exists",STRING_LITERAL, line no: 630, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,first,SIMPLE_NAME, line no: 858, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,second,SIMPLE_NAME, line no: 859, 2.142857142857143, 1.0, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 2.1403508771929824, 1.0, 1.0, 0.14035087719298245
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 2.134920634920635, 0.7777777777777778, 1.0, 0.35714285714285715
getString,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 2.1222222222222222, 0.9, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 2.1222222222222222, 0.9, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 2.1222222222222222, 0.1, 1.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 2.1174603174603175, 0.8888888888888888, 1.0, 0.22857142857142856
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 2.1174603174603175, 0.8888888888888888, 1.0, 0.22857142857142856
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 2.111842105263158, 0.75, 1.0, 0.23684210526315788
getString,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 2.111111111111111, 0.1, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 2.111111111111111, 1.0, 1.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 2.1031746031746033, 0.8888888888888888, 1.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 2.090909090909091, 1.0, 1.0, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 2.0855263157894735, 0.75, 1.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 2.0855263157894735, 0.625, 1.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 2.084848484848485, 1.0, 1.0, 0.08484848484848485
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 2.076388888888889, 0.8888888888888888, 1.0, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 2.075268817204301, 1.0, 1.0, 0.07526881720430108
getString,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 2.0739130434782607, 0.9, 1.0, 0.17391304347826086
fp.getString(),METHOD_INVOCATION, line no: 107,name,SIMPLE_NAME, line no: 74, 2.0714285714285716, 0.1111111111111111, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"ord",STRING_LITERAL, line no: 97, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"rord",STRING_LITERAL, line no: 110, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"top",STRING_LITERAL, line no: 117, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"scale",STRING_LITERAL, line no: 144, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"div",STRING_LITERAL, line no: 153, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"map",STRING_LITERAL, line no: 161, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"boost",STRING_LITERAL, line no: 244, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,f0,SIMPLE_NAME, line no: 256, 2.0714285714285716, 0.7777777777777778, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,qf,SIMPLE_NAME, line no: 257, 2.0714285714285716, 0.7777777777777778, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"rad",STRING_LITERAL, line no: 362, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"log",STRING_LITERAL, line no: 386, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"ln",STRING_LITERAL, line no: 392, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"exp",STRING_LITERAL, line no: 398, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"pow",STRING_LITERAL, line no: 476, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"dist",STRING_LITERAL, line no: 518, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"e",STRING_LITERAL, line no: 536, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"idf",STRING_LITERAL, line no: 570, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"tf",STRING_LITERAL, line no: 586, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"norm",STRING_LITERAL, line no: 594, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"not",STRING_LITERAL, line no: 647, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"and",STRING_LITERAL, line no: 665, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"or",STRING_LITERAL, line no: 684, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"xor",STRING_LITERAL, line no: 703, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"if",STRING_LITERAL, line no: 725, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"def",STRING_LITERAL, line no: 736, 2.0714285714285716, 1.0, 1.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 2.066666666666667, 0.8, 1.0, 0.26666666666666666
getString,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 2.066666666666667, 0.8, 1.0, 0.26666666666666666
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 2.0666666666666664, 0.9, 1.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 2.0666666666666664, 0.9, 1.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,description,SIMPLE_NAME, line no: 951, 2.0634920634920633, 0.1111111111111111, 1.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 2.06, 1.0, 1.0, 0.06
getString,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 2.06, 0.9, 1.0, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 2.0596026490066226, 1.0, 1.0, 0.059602649006622516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 2.0592105263157894, 0.875, 1.0, 0.18421052631578946
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 2.059171597633136, 1.0, 1.0, 0.05917159763313609
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 2.0573248407643314, 1.0, 1.0, 0.05732484076433121
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 2.0569620253164556, 1.0, 1.0, 0.056962025316455694
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 2.056497175141243, 1.0, 1.0, 0.05649717514124294
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 2.0555555555555554, 0.5555555555555556, 1.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 2.053763440860215, 1.0, 1.0, 0.053763440860215055
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 2.052941176470588, 1.0, 1.0, 0.052941176470588235
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 2.052325581395349, 1.0, 1.0, 0.05232558139534884
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 2.0514285714285716, 1.0, 1.0, 0.05142857142857143
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 2.0514285714285716, 1.0, 1.0, 0.05142857142857143
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 2.046153846153846, 1.0, 1.0, 0.046153846153846156
fp.getString(),METHOD_INVOCATION, line no: 107,field,SIMPLE_NAME, line no: 100, 2.0317460317460316, 0.6666666666666666, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"edit",STRING_LITERAL, line no: 338, 2.0317460317460316, 0.8888888888888888, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,"ngram",STRING_LITERAL, line no: 340, 2.0317460317460316, 0.8888888888888888, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 2.0317460317460316, 0.8888888888888888, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,arg,SIMPLE_NAME, line no: 839, 2.0317460317460316, 0.1111111111111111, 1.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 2.0136363636363637, 0.9, 1.0, 0.11363636363636363
getString,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 2.011111111111111, 0.7, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 2.011111111111111, 0.9, 1.0, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 2.010869565217391, 0.75, 1.0, 0.2608695652173913
getString,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 2.0105263157894737, 0.8, 1.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 2.0, 1.0, 0.5, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,"abs",STRING_LITERAL, line no: 173, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sum",STRING_LITERAL, line no: 190, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"add",STRING_LITERAL, line no: 197, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"mul",STRING_LITERAL, line no: 206, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sub",STRING_LITERAL, line no: 208, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cos",STRING_LITERAL, line no: 410, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"acos",STRING_LITERAL, line no: 428, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cosh",STRING_LITERAL, line no: 446, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"max",STRING_LITERAL, line no: 494, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ms",STRING_LITERAL, line no: 527, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 2.0, 1.0, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"NOW",STRING_LITERAL, line no: 841, 2.0, 0.7777777777777778, 1.0, 0.0
fp,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 2.0, 0.1, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 2.0, 0.8, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 2.0, 0.8, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 2.0, 1.0, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 2.0, 0.8, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 1.981818181818182, 0.8, 1.0, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.9736842105263157, 1.0, 0.5, 0.47368421052631576
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 1.9734299516908211, 0.7777777777777778, 1.0, 0.1956521739130435
fp.getString(),METHOD_INVOCATION, line no: 107,distClass,SIMPLE_NAME, line no: 333, 1.9603174603174602, 0.8888888888888888, 1.0, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 1.9342105263157894, 0.75, 1.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 1.9342105263157894, 0.75, 1.0, 0.18421052631578946
getString,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 1.9230769230769231, 0.8, 1.0, 0.12307692307692308
fp.getString(),METHOD_INVOCATION, line no: 107,parseId,SIMPLE_NAME, line no: 100, 1.9206349206349205, 0.7777777777777778, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107," request=",STRING_LITERAL, line no: 1229, 1.9206349206349205, 0.7777777777777778, 1.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 1.9111111111111112, 0.8, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 1.9111111111111112, 0.8, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 1.9111111111111112, 0.8, 1.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 1.9111111111111112, 0.8, 1.0, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 1.9078947368421053, 0.75, 1.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 1.9, 0.9, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 1.9, 0.9, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 1.8892857142857142, 0.8, 1.0, 0.08928571428571429
fp.getString(),METHOD_INVOCATION, line no: 107,"jw",STRING_LITERAL, line no: 336, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,val,SIMPLE_NAME, line no: 548, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 1.8877192982456141, 0.8, 1.0, 0.08771929824561403
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 1.8849206349206349, 0.7777777777777778, 1.0, 0.10714285714285714
getString,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 1.8833333333333333, 0.8, 1.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 1.8727272727272728, 0.6, 1.0, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.8529411764705883, 1.0, 0.5, 0.35294117647058826
getString,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 1.8522388059701493, 0.8, 1.0, 0.05223880597014925
getString,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 1.85, 0.6, 1.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,")",STRING_LITERAL, line no: 952, 1.849206349206349, 0.3333333333333333, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"(",STRING_LITERAL, line no: 1107, 1.849206349206349, 0.7777777777777778, 1.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,"null",STRING_LITERAL, line no: 1229, 1.849206349206349, 0.7777777777777778, 1.0, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 1.8486842105263157, 0.75, 0.5, 0.47368421052631576
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 1.8412698412698414, 0.5555555555555556, 1.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.8333333333333333, 1.0, 0.5, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 1.8222222222222224, 0.1, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 1.8222222222222224, 0.6, 1.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 1.8111111111111111, 0.7, 1.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 1.8095238095238093, 0.6666666666666666, 1.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 1.8076923076923077, 0.5, 1.0, 0.3076923076923077
getString,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 1.8, 0.6, 1.0, 0.2
getString,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 1.8, 0.3, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 1.8, 0.8, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 1.8, 0.8, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 1.8, 0.6, 1.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.7916666666666667, 1.0, 0.5, 0.2916666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.78, 1.0, 0.5, 0.28
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.7777777777777777, 1.0, 0.3333333333333333, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107," ",STRING_LITERAL, line no: 1107, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 1.7727272727272727, 0.5, 1.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 1.7666666666666668, 0.6, 1.0, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.7651515151515151, 1.0, 0.3333333333333333, 0.4318181818181818
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.763157894736842, 1.0, 0.5, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.736842105263158, 1.0, 0.5, 0.23684210526315788
getString,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 1.7363636363636363, 0.6, 1.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 1.729032258064516, 0.6, 1.0, 0.12903225806451613
LiteralValueSource,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 1.7222222222222223, 1.0, 0.0, 0.7222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.7222222222222223, 1.0, 0.0, 0.7222222222222222
getString,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 1.7111111111111112, 0.1, 1.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 1.7013888888888888, 0.7777777777777778, 0.5, 0.3125
fp.getString(),METHOD_INVOCATION, line no: 107,dest,SIMPLE_NAME, line no: 85, 1.6984126984126984, 0.1111111111111111, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 1.6984126984126984, 0.5555555555555556, 1.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,text,SIMPLE_NAME, line no: 762, 1.6984126984126984, 0.5555555555555556, 1.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 1.6847457627118645, 0.6, 1.0, 0.0847457627118644
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 1.6842105263157894, 0.5, 1.0, 0.18421052631578946
LiteralValueSource,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 1.6842105263157894, 1.0, 0.0, 0.6842105263157895
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.680327868852459, 1.0, 0.5, 0.18032786885245902
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.6801242236024845, 1.0, 0.5, 0.18012422360248448
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.6790123456790123, 1.0, 0.5, 0.17901234567901234
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.6783783783783783, 1.0, 0.5, 0.1783783783783784
getString,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 1.676923076923077, 0.6, 1.0, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.6736842105263159, 1.0, 0.5, 0.1736842105263158
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.6704545454545454, 1.0, 0.5, 0.17045454545454544
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.6685393258426966, 1.0, 0.5, 0.16853932584269662
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.66751269035533, 1.0, 0.5, 0.16751269035532995
getString,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 1.6666666666666667, 0.6, 1.0, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 1.6666666666666665, 1.0, 0.0, 0.6666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 1.6666666666666665, 1.0, 0.0, 0.6666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 1.6666666666666665, 1.0, 0.0, 0.6666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.665, 1.0, 0.5, 0.165
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.6625615763546797, 1.0, 0.5, 0.1625615763546798
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.6586538461538463, 1.0, 0.5, 0.15865384615384615
getString,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 1.6579710144927537, 0.6, 1.0, 0.057971014492753624
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.6564245810055866, 1.0, 0.5, 0.1564245810055866
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.6504854368932038, 1.0, 0.5, 0.15048543689320387
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.65, 0.9, 0.0, 0.65
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.6479591836734695, 1.0, 0.5, 0.14795918367346939
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.645374449339207, 1.0, 0.5, 0.14537444933920704
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.6403508771929824, 1.0, 0.5, 0.14035087719298245
fp.getString(),METHOD_INVOCATION, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 1.64030131826742, 0.5555555555555556, 1.0, 0.0847457627118644
fp.getString(),METHOD_INVOCATION, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 1.6355555555555557, 0.5555555555555556, 1.0, 0.08
fp.getString(),METHOD_INVOCATION, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 1.6280193236714977, 0.5555555555555556, 1.0, 0.07246376811594203
fp.getString(),METHOD_INVOCATION, line no: 107,source,SIMPLE_NAME, line no: 85, 1.626984126984127, 0.1111111111111111, 1.0, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.625984251968504, 1.0, 0.5, 0.12598425196850394
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.625984251968504, 1.0, 0.5, 0.12598425196850394
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.625984251968504, 1.0, 0.5, 0.12598425196850394
getString,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 1.625, 0.5, 1.0, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.624031007751938, 1.0, 0.5, 0.12403100775193798
LiteralValueSource,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.6222222222222222, 0.7, 0.0, 0.7222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.6222222222222222, 0.7, 0.0, 0.7222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.619047619047619, 1.0, 0.0, 0.6190476190476191
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.618081180811808, 1.0, 0.5, 0.11808118081180811
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.618081180811808, 1.0, 0.5, 0.11808118081180811
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.618081180811808, 1.0, 0.5, 0.11808118081180811
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.614695340501792, 1.0, 0.5, 0.11469534050179211
LiteralValueSource,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.6111111111111112, 0.1, 0.0, 0.6111111111111112
LiteralValueSource,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.6111111111111112, 0.1, 0.0, 0.6111111111111112
LiteralValueSource,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 1.6111111111111112, 1.0, 0.0, 0.6111111111111112
LiteralValueSource,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 1.6111111111111112, 1.0, 0.0, 0.6111111111111112
LiteralValueSource,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.5909090909090908, 1.0, 0.0, 0.5909090909090909
LiteralValueSource,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 1.5833333333333335, 1.0, 0.0, 0.5833333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 1.5789473684210527, 1.0, 0.0, 0.5789473684210527
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 1.5700483091787438, 0.8888888888888888, 0.3333333333333333, 0.34782608695652173
LiteralValueSource,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.5666666666666667, 0.7, 0.0, 0.6666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 1.5666666666666667, 0.9, 0.0, 0.6666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.5666666666666667, 0.7, 0.0, 0.6666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.5666666666666667, 0.7, 0.0, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.5655737704918034, 1.0, 0.5, 0.06557377049180328
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.5648648648648649, 1.0, 0.5, 0.06486486486486487
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.563157894736842, 1.0, 0.5, 0.06315789473684211
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.5609137055837563, 1.0, 0.5, 0.06091370558375635
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.56, 1.0, 0.5, 0.06
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.5591133004926108, 1.0, 0.5, 0.059113300492610835
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.5576923076923077, 1.0, 0.5, 0.057692307692307696
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.5559006211180124, 1.0, 0.5, 0.055900621118012424
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.5555555555555556, 1.0, 0.5, 0.05555555555555555
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.552863436123348, 1.0, 0.5, 0.05286343612334802
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.5526315789473686, 1.0, 0.0, 0.5526315789473685
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.5511363636363635, 1.0, 0.5, 0.05113636363636364
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.550561797752809, 1.0, 0.5, 0.05056179775280899
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.5502793296089385, 1.0, 0.5, 0.05027932960893855
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.5485436893203883, 1.0, 0.5, 0.04854368932038835
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.5459183673469388, 1.0, 0.5, 0.04591836734693878
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.543859649122807, 1.0, 0.5, 0.043859649122807015
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.5433070866141732, 1.0, 0.5, 0.04330708661417323
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.5433070866141732, 1.0, 0.5, 0.04330708661417323
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.5433070866141732, 1.0, 0.5, 0.04330708661417323
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.5426356589147288, 1.0, 0.5, 0.04263565891472868
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.5422222222222222, 0.8888888888888888, 0.3333333333333333, 0.32
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.540590405904059, 1.0, 0.5, 0.04059040590405904
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.540590405904059, 1.0, 0.5, 0.04059040590405904
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.540590405904059, 1.0, 0.5, 0.04059040590405904
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.539426523297491, 1.0, 0.5, 0.03942652329749104
getString,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 1.5333333333333332, 0.2, 1.0, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.526315789473684, 1.0, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.526315789473684, 1.0, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.526315789473684, 1.0, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 1.526315789473684, 1.0, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.5241228070175437, 0.875, 0.3333333333333333, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 1.5185185185185186, 1.0, 0.0, 0.5185185185185185
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.5116279069767442, 1.0, 0.0, 0.5116279069767442
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 1.5102201257861634, 0.875, 0.3333333333333333, 0.3018867924528302
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 1.5, 1.0, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.5, 1.0, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.5, 1.0, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.5, 1.0, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 1.5, 1.0, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.5, 0.7, 0.0, 0.6
fp.getString(),METHOD_INVOCATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.5, 1.0, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.5, 1.0, 0.0, 0.5
fp,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 1.5, 0.8, 0.0, 0.5
fp,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 1.5, 0.8, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 1.4978070175438596, 0.875, 0.3333333333333333, 0.2894736842105263
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.4924242424242424, 1.0, 0.3333333333333333, 0.1590909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.488888888888889, 1.0, 0.3333333333333333, 0.15555555555555556
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.4847094801223242, 1.0, 0.3333333333333333, 0.15137614678899083
fp.getString(),METHOD_INVOCATION, line no: 107,"const(",STRING_LITERAL, line no: 952, 1.476190476190476, 0.3333333333333333, 1.0, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.4743589743589742, 1.0, 0.3333333333333333, 0.14102564102564102
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 1.4738372093023255, 0.625, 0.5, 0.3488372093023256
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.4719887955182072, 1.0, 0.3333333333333333, 0.13865546218487396
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 1.4714285714285715, 0.7, 0.0, 0.5714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.470262793914246, 1.0, 0.3333333333333333, 0.13692946058091288
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.4687915006640107, 1.0, 0.3333333333333333, 0.13545816733067728
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.4659090909090908, 0.875, 0.25, 0.3409090909090909
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.4651162790697674, 1.0, 0.3333333333333333, 0.13178294573643412
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.4631043256997454, 1.0, 0.3333333333333333, 0.1297709923664122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.4560770156438025, 1.0, 0.3333333333333333, 0.12274368231046931
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 1.4473684210526316, 1.0, 0.0, 0.4473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 1.4473684210526316, 1.0, 0.0, 0.4473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.4468085106382977, 1.0, 0.0, 0.44680851063829785
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 1.4454545454545453, 0.9, 0.0, 0.5454545454545454
getString,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.4444444444444444, 0.1, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.4444444444444444, 1.0, 0.0, 0.4444444444444444
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.442488262910798, 1.0, 0.3333333333333333, 0.10915492957746478
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.4389438943894388, 1.0, 0.3333333333333333, 0.10561056105610561
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 1.4297693920335428, 0.8888888888888888, 0.3333333333333333, 0.20754716981132076
LiteralValueSource,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 1.4285714285714286, 1.0, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 1.4224806201550386, 0.6666666666666666, 0.5, 0.2558139534883721
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.4210526315789473, 1.0, 0.0, 0.42105263157894735
LiteralValueSource,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.4210526315789473, 1.0, 0.0, 0.42105263157894735
getString,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 1.42, 0.3, 1.0, 0.12
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.4166666666666667, 1.0, 0.0, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.4146341463414633, 1.0, 0.0, 0.4146341463414634
getString,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 1.4142857142857141, 0.2, 1.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 1.4111111111111112, 0.3, 1.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 1.4, 0.9, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 1.4, 0.7, 0.0, 0.6
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.4, 0.9, 0.0, 0.5
fp,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 1.4, 0.7, 0.0, 0.5
fp,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 1.4, 0.9, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.3947368421052633, 1.0, 0.0, 0.39473684210526316
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 1.3888888888888888, 0.7777777777777778, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 1.3888888888888888, 0.8888888888888888, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 1.3888888888888888, 0.8888888888888888, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.3883792048929662, 1.0, 0.3333333333333333, 0.05504587155963303
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.3837535014005602, 1.0, 0.3333333333333333, 0.05042016806722689
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.3837209302325582, 1.0, 0.3333333333333333, 0.050387596899224806
LiteralValueSource,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.3814814814814815, 0.9, 0.0, 0.48148148148148145
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.380952380952381, 1.0, 0.0, 0.38095238095238093
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.3803418803418803, 1.0, 0.3333333333333333, 0.04700854700854701
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.3802647412755715, 1.0, 0.3333333333333333, 0.04693140794223827
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.38, 0.9, 0.0, 0.48
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.3789764868603043, 1.0, 0.3333333333333333, 0.04564315352697095
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.3771580345285523, 1.0, 0.3333333333333333, 0.043824701195219126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.3753180661577606, 1.0, 0.3333333333333333, 0.04198473282442748
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 1.375, 0.875, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 1.375, 0.875, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 1.375, 0.875, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.3720657276995305, 1.0, 0.3333333333333333, 0.03873239436619718
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.370967741935484, 1.0, 0.0, 0.3709677419354839
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.370879120879121, 1.0, 0.25, 0.12087912087912088
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.3696369636963697, 1.0, 0.3333333333333333, 0.036303630363036306
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.368421052631579, 1.0, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 1.368421052631579, 1.0, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 1.368421052631579, 1.0, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 1.368421052631579, 1.0, 0.0, 0.3684210526315789
LiteralValueSource,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 1.3666666666666667, 0.7, 0.0, 0.6666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 1.3666666666666667, 0.7, 0.0, 0.6666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.3664383561643836, 1.0, 0.25, 0.11643835616438356
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.3655234657039712, 1.0, 0.25, 0.11552346570397112
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.363793103448276, 1.0, 0.25, 0.11379310344827587
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.3626279863481228, 1.0, 0.25, 0.11262798634812286
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.3596774193548387, 1.0, 0.25, 0.10967741935483871
fp.getString(),METHOD_INVOCATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 1.3594771241830066, 0.8888888888888888, 0.0, 0.47058823529411764
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.3586261980830672, 1.0, 0.25, 0.10862619808306709
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.3581081081081081, 1.0, 0.25, 0.10810810810810811
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.3571428571428572, 1.0, 0.0, 0.35714285714285715
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.3571428571428572, 0.7777777777777778, 0.0, 0.35714285714285715
getString,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.3571428571428572, 0.8, 0.0, 0.35714285714285715
LiteralValueSource,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 1.35, 0.7, 0.0, 0.65
LiteralValueSource,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.3482758620689657, 0.9, 0.0, 0.4482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.3482758620689657, 0.9, 0.0, 0.4482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.3482758620689657, 0.9, 0.0, 0.4482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.3478260869565217, 1.0, 0.0, 0.34782608695652173
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.3461538461538463, 1.0, 0.0, 0.34615384615384615
LiteralValueSource,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 1.3444444444444446, 0.9, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 1.3444444444444446, 0.7, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 1.3444444444444446, 0.7, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 1.3444444444444446, 0.9, 0.0, 0.4444444444444444
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.343484419263456, 1.0, 0.25, 0.09348441926345609
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.3434343434343434, 0.8888888888888888, 0.25, 0.20454545454545456
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.342857142857143, 1.0, 0.0, 0.34285714285714286
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.342857142857143, 1.0, 0.0, 0.34285714285714286
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.3421409214092141, 1.0, 0.25, 0.0921409214092141
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.3421052631578947, 0.125, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 1.3421052631578947, 1.0, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.3421052631578947, 0.75, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.3421052631578947, 1.0, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.3421052631578947, 1.0, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.3421052631578947, 1.0, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.3421052631578947, 0.75, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 1.3421052631578947, 1.0, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.3421052631578947, 0.75, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.3421052631578947, 0.75, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.3421052631578947, 0.875, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.3409090909090908, 1.0, 0.0, 0.3409090909090909
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.335427135678392, 1.0, 0.25, 0.08542713567839195
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.3352130325814535, 1.0, 0.25, 0.08521303258145363
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.3343373493975903, 1.0, 0.25, 0.08433734939759036
LiteralValueSource,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.3333333333333335, 0.9, 0.0, 0.43333333333333335
fp.getString(),METHOD_INVOCATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 1.3333333333333335, 0.7777777777777778, 0.0, 0.5555555555555556
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.3333333333333333, 0.1, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.3333333333333333, 0.1, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 1.3333333333333333, 0.1, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 1.3333333333333333, 0.8, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.3333333333333333, 0.9, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.3333333333333333, 0.9, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 1.3333333333333333, 0.8, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.3333333333333333, 0.7, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.3333333333333333, 1.0, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.3333333333333333, 0.9, 0.0, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.3319277108433736, 1.0, 0.25, 0.0819277108433735
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.331145584725537, 1.0, 0.25, 0.081145584725537
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.3287037037037037, 1.0, 0.25, 0.0787037037037037
getString,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 1.3285714285714285, 0.1, 0.0, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.3243243243243243, 1.0, 0.0, 0.32432432432432434
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.31913357400722, 1.0, 0.2, 0.11913357400722022
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 1.3174603174603174, 0.1111111111111111, 0.0, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.3157894736842106, 0.75, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.3157894736842106, 1.0, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 1.3157894736842106, 1.0, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 1.3157894736842106, 1.0, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.3157894736842106, 0.75, 0.0, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.3157894736842106, 1.0, 0.0, 0.3157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.3157894736842106, 1.0, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.3140939597315435, 1.0, 0.2, 0.11409395973154363
fp.getString(),METHOD_INVOCATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 1.3128654970760234, 0.4444444444444444, 0.5, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.3111111111111111, 1.0, 0.0, 0.3111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 1.3111111111111111, 0.7, 0.0, 0.6111111111111112
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.3096345514950165, 1.0, 0.2, 0.10963455149501661
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 1.3095238095238095, 1.0, 0.0, 0.30952380952380953
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 1.3076923076923077, 1.0, 0.0, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.30625, 1.0, 0.2, 0.10625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.306122448979592, 1.0, 0.0, 0.30612244897959184
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.304093567251462, 0.7777777777777778, 0.0, 0.5263157894736842
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.304093567251462, 0.7777777777777778, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 1.3037974683544304, 1.0, 0.0, 0.3037974683544304
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 1.303370786516854, 1.0, 0.0, 0.30337078651685395
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 1.3026315789473686, 0.75, 0.0, 0.5526315789473685
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 1.3012048192771084, 1.0, 0.0, 0.30120481927710846
fp,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 1.3, 0.1, 0.0, 0.5
fp,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 1.3, 0.1, 0.0, 0.5
getString,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.3, 1.0, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 1.2999999999999998, 0.7, 0.0, 0.6
getString,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.2941176470588236, 1.0, 0.0, 0.29411764705882354
LiteralValueSource,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.293939393939394, 0.9, 0.0, 0.3939393939393939
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.2937853107344632, 1.0, 0.16666666666666666, 0.1271186440677966
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.2932489451476794, 1.0, 0.16666666666666666, 0.12658227848101267
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.2911479944674966, 1.0, 0.16666666666666666, 0.12448132780082988
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.2909556313993173, 1.0, 0.25, 0.040955631399317405
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.290633608815427, 1.0, 0.16666666666666666, 0.12396694214876033
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.2902930402930404, 1.0, 0.25, 0.040293040293040296
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.28971119133574, 1.0, 0.25, 0.039711191335740074
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.2894736842105263, 0.125, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.2894736842105263, 1.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 1.2894736842105263, 0.5, 0.5, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.2894736842105263, 1.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.2894736842105263, 1.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 1.2894736842105263, 1.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 1.2894736842105263, 1.0, 0.0, 0.2894736842105263
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.288338658146965, 1.0, 0.25, 0.038338658146964855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.2881241565452093, 1.0, 0.16666666666666666, 0.1214574898785425
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.2879310344827586, 1.0, 0.25, 0.03793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.2876712328767124, 1.0, 0.25, 0.03767123287671233
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.287162162162162, 1.0, 0.25, 0.037162162162162164
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.2870967741935484, 0.9, 0.0, 0.3870967741935484
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.2857142857142858, 1.0, 0.16666666666666666, 0.11904761904761904
LiteralValueSource,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.2857142857142856, 1.0, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.2857142857142856, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.2857142857142856, 1.0, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.2857142857142856, 1.0, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.2857142857142856, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.2857142857142856, 1.0, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.2857142857142856, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.2857142857142856, 1.0, 0.0, 0.2857142857142857
getString,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.2857142857142856, 0.1, 0.0, 0.2857142857142857
getString,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.2857142857142856, 1.0, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.2854838709677419, 1.0, 0.25, 0.035483870967741936
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.2847769028871392, 1.0, 0.16666666666666666, 0.11811023622047244
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.2839943342776203, 1.0, 0.25, 0.0339943342776204
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.2826633165829147, 1.0, 0.25, 0.032663316582914576
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.2825814536340852, 1.0, 0.25, 0.03258145363408521
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.282520325203252, 1.0, 0.25, 0.032520325203252036
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.2813253012048194, 1.0, 0.25, 0.03132530120481928
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.2813253012048194, 1.0, 0.25, 0.03132530120481928
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.28117048346056, 1.0, 0.16666666666666666, 0.11450381679389313
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.2810262529832936, 1.0, 0.25, 0.031026252983293555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.2803030303030303, 1.0, 0.16666666666666666, 0.11363636363636363
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.2800925925925926, 1.0, 0.25, 0.03009259259259259
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 1.28, 0.7, 0.0, 0.48
fp.getString(),METHOD_INVOCATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.28, 1.0, 0.0, 0.28
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.2798053527980535, 1.0, 0.16666666666666666, 0.11313868613138686
LiteralValueSource,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
getString,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
getString,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.2777777777777777, 1.0, 0.0, 0.2777777777777778
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 1.276315789473684, 0.75, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 1.276315789473684, 0.75, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 1.276315789473684, 0.75, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.2749469214437368, 1.0, 0.16666666666666666, 0.10828025477707007
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.2727272727272727, 1.0, 0.0, 0.2727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.2727272727272727, 1.0, 0.0, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.2727272727272727, 1.0, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.2727272727272727, 0.1, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.2727272727272727, 1.0, 0.0, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.2720883534136547, 1.0, 0.16666666666666666, 0.10542168674698796
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 1.2714285714285714, 0.7, 0.0, 0.5714285714285714
LiteralValueSource,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 1.268421052631579, 0.9, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.2677290836653385, 1.0, 0.2, 0.06772908366533864
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.2674603174603174, 1.0, 0.2, 0.06746031746031746
fp.getString(),METHOD_INVOCATION, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.2666666666666666, 1.0, 0.0, 0.26666666666666666
getString,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.2666666666666666, 1.0, 0.0, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.2656370656370657, 1.0, 0.2, 0.06563706563706563
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.2652591170825336, 1.0, 0.2, 0.06525911708253358
LiteralValueSource,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 1.2652173913043478, 0.7, 0.0, 0.5652173913043478
getString,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 1.2636363636363637, 0.9, 0.0, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 1.263157894736842, 0.5, 0.5, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
getString,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
getString,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.263157894736842, 1.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 1.2628205128205128, 0.75, 0.0, 0.5128205128205128
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 1.2628205128205128, 0.75, 0.0, 0.5128205128205128
fp.getString(),METHOD_INVOCATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 1.2626262626262625, 0.4444444444444444, 0.5, 0.3181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.26, 1.0, 0.0, 0.26
LiteralValueSource,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 1.26, 0.9, 0.0, 0.36
getString,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 1.2571428571428571, 0.9, 0.0, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.2554395126196694, 1.0, 0.16666666666666666, 0.08877284595300261
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.2541666666666667, 1.0, 0.16666666666666666, 0.0875
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 1.2525252525252526, 0.8888888888888888, 0.0, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 1.25, 0.75, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 1.25, 0.75, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 1.25, 0.75, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 1.25, 0.75, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.25, 1.0, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.25, 1.0, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.25, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.25, 1.0, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.25, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.25, 1.0, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.25, 1.0, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.25, 1.0, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.25, 0.7777777777777778, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 1.25, 0.9, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.25, 0.8, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 1.25, 1.0, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 1.25, 1.0, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 1.25, 1.0, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.25, 1.0, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.25, 1.0, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.25, 1.0, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.25, 1.0, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.25, 1.0, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.2469314079422382, 1.0, 0.2, 0.04693140794223827
fp.getString(),METHOD_INVOCATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 1.2444444444444445, 0.7777777777777778, 0.0, 0.4666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 1.2444444444444445, 0.7777777777777778, 0.0, 0.4666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.2436241610738255, 1.0, 0.2, 0.0436241610738255
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 1.243421052631579, 0.875, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 1.243421052631579, 0.875, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.2405886379192335, 1.0, 0.16666666666666666, 0.07392197125256673
getString,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.24, 1.0, 0.0, 0.24
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.2380952380952381, 1.0, 0.16666666666666666, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.236842105263158, 1.0, 0.0, 0.23684210526315788
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.2365448504983387, 1.0, 0.2, 0.036544850498338874
fp.getString(),METHOD_INVOCATION, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.2352941176470589, 1.0, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.2352941176470589, 1.0, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.2352941176470589, 1.0, 0.0, 0.23529411764705882
getString,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.2352941176470589, 1.0, 0.0, 0.23529411764705882
getString,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.2352941176470589, 1.0, 0.0, 0.23529411764705882
getString,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.2352941176470589, 1.0, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.234375, 1.0, 0.2, 0.034375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 1.233974358974359, 0.875, 0.0, 0.358974358974359
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 1.2333333333333334, 0.1, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 1.2333333333333334, 0.9, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.2333333333333334, 0.7, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 1.2333333333333334, 0.9, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 1.2333333333333334, 0.9, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 1.2333333333333334, 0.6, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 1.2333333333333334, 0.7, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 1.2333333333333334, 0.8, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 1.2333333333333334, 0.9, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 1.2333333333333334, 0.9, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 1.2333333333333334, 0.1, 0.0, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 1.2326388888888888, 0.8888888888888888, 0.0, 0.34375
getString,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.2307692307692308, 0.8, 0.0, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.2272727272727273, 1.0, 0.0, 0.22727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.2272727272727273, 1.0, 0.0, 0.22727272727272727
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.2272727272727273, 1.0, 0.0, 0.22727272727272727
getString,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.2272727272727273, 1.0, 0.0, 0.22727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 1.2261904761904763, 0.75, 0.0, 0.47619047619047616
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.2258964143426294, 1.0, 0.2, 0.025896414342629483
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.2258064516129032, 1.0, 0.0, 0.22580645161290322
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.2258064516129032, 1.0, 0.0, 0.22580645161290322
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.2257936507936507, 1.0, 0.2, 0.025793650793650792
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.2255813953488373, 0.9, 0.0, 0.32558139534883723
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.2250965250965251, 1.0, 0.2, 0.025096525096525095
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.2249520153550864, 1.0, 0.2, 0.02495201535508637
LiteralValueSource,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.2222222222222223, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.2222222222222223, 0.2, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.2222222222222223, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.2222222222222223, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 1.2222222222222223, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.2222222222222223, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.2222222222222223, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.2222222222222223, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.2222222222222223, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 1.2222222222222223, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.2222222222222223, 1.0, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.2222222222222223, 0.4, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 1.2217391304347824, 0.7, 0.0, 0.5217391304347826
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 1.22, 0.7, 0.0, 0.52
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 1.22, 0.7, 0.0, 0.52
fp.getString(),METHOD_INVOCATION, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.2173913043478262, 1.0, 0.0, 0.21739130434782608
getString,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.2173913043478262, 1.0, 0.0, 0.21739130434782608
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 1.2171052631578947, 0.875, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 1.2171052631578947, 0.875, 0.0, 0.34210526315789475
fp.getString(),METHOD_INVOCATION, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.2142857142857142, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.2142857142857142, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.2142857142857142, 1.0, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.2142857142857142, 1.0, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,target,SIMPLE_NAME, line no: 167, 1.2142857142857142, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.2142857142857142, 1.0, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.2142857142857142, 1.0, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.2142857142857142, 1.0, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,power,SIMPLE_NAME, line no: 521, 1.2142857142857142, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.2142857142857142, 0.6666666666666666, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.2142857142857142, 1.0, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.2142857142857142, 0.8888888888888888, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.2142857142857142, 0.1, 0.0, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.2105263157894737, 0.125, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.2105263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.2105263157894737, 1.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.2105263157894737, 1.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.2105263157894737, 1.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.2105263157894737, 1.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.2105263157894737, 1.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.2105263157894737, 1.0, 0.0, 0.21052631578947367
LiteralValueSource,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.2083333333333333, 1.0, 0.0, 0.20833333333333334
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.2080679405520172, 1.0, 0.16666666666666666, 0.041401273885350316
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.206896551724138, 1.0, 0.0, 0.20689655172413793
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.206896551724138, 1.0, 0.0, 0.20689655172413793
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.2063492063492065, 1.0, 0.16666666666666666, 0.03968253968253968
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 1.2063492063492063, 0.7777777777777778, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 1.2063492063492063, 0.7777777777777778, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 1.2063492063492063, 0.7777777777777778, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 1.2063492063492063, 0.7777777777777778, 0.0, 0.42857142857142855
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 1.20625, 0.7, 0.0, 0.40625
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.2060367454068242, 1.0, 0.16666666666666666, 0.03937007874015748
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.2058232931726909, 1.0, 0.16666666666666666, 0.0391566265060241
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.2048346055979644, 1.0, 0.16666666666666666, 0.03816793893129771
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.2048022598870056, 1.0, 0.16666666666666666, 0.038135593220338986
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.2046413502109705, 1.0, 0.16666666666666666, 0.0379746835443038
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.2045454545454546, 1.0, 0.16666666666666666, 0.03787878787878788
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.2040110650069158, 1.0, 0.16666666666666666, 0.03734439834024896
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.2038567493112948, 1.0, 0.16666666666666666, 0.0371900826446281
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.2031630170316303, 1.0, 0.16666666666666666, 0.0364963503649635
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.2031039136302295, 1.0, 0.16666666666666666, 0.03643724696356275
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 1.2023809523809523, 0.75, 0.0, 0.4523809523809524
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 1.2023809523809523, 0.75, 0.0, 0.4523809523809524
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.2002895752895753, 1.0, 0.14285714285714285, 0.057432432432432436
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 1.2, 0.1, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 1.2, 0.7, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 1.2, 0.7, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 1.2, 0.7, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.2, 0.1111111111111111, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.2, 1.0, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.2, 0.7777777777777778, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.2, 0.7777777777777778, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.2, 0.1, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.2, 0.8, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 1.2, 0.8, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.2, 0.7, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 1.2, 1.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 1.2, 1.0, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.2, 0.1, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.2, 1.0, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.2, 0.8, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.2, 1.0, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.2, 0.8, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.2, 0.8, 0.0, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.198686371100164, 1.0, 0.14285714285714285, 0.05582922824302135
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.1979982593559617, 1.0, 0.16666666666666666, 0.031331592689295036
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 1.1973684210526316, 0.75, 0.0, 0.4473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 1.1973684210526316, 0.75, 0.0, 0.4473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 1.1973684210526316, 0.75, 0.0, 0.4473684210526316
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.1966666666666668, 1.0, 0.16666666666666666, 0.03
getString,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 1.1941176470588235, 0.9, 0.0, 0.29411764705882354
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.1935483870967742, 1.0, 0.0, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.1933607118412046, 1.0, 0.16666666666666666, 0.026694045174537988
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.1924603174603174, 1.0, 0.16666666666666666, 0.025793650793650792
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.1916666666666667, 0.9, 0.0, 0.2916666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 1.1907894736842106, 0.875, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 1.1907894736842106, 0.875, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 1.1907894736842106, 0.875, 0.0, 0.3157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 1.1895424836601307, 0.7777777777777778, 0.0, 0.4117647058823529
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 1.1875, 0.75, 0.0, 0.4375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 1.1875, 0.75, 0.0, 0.4375
fp.getString(),METHOD_INVOCATION, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.1875, 1.0, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.1875, 0.8, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.1875, 1.0, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.1875, 0.8, 0.0, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.1842105263157894, 0.125, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
fp.getString(),METHOD_INVOCATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.1842105263157894, 1.0, 0.0, 0.18421052631578946
LiteralValueSource,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 1.18125, 0.9, 0.0, 0.28125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 1.1785714285714286, 0.75, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.1785714285714286, 1.0, 0.0, 0.17857142857142858
LiteralValueSource,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 1.1777777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 1.1777777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 1.1777777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.1777777777777778, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.1777777777777778, 0.9, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 1.1777777777777778, 0.9, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 1.1777777777777778, 0.7777777777777778, 0.0, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.1764705882352942, 0.1111111111111111, 0.0, 0.17647058823529413
getString,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.1764705882352942, 0.1, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 1.1746031746031744, 0.5555555555555556, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 1.1746031746031744, 0.6666666666666666, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getField,SIMPLE_NAME, line no: 357, 1.1746031746031744, 0.6666666666666666, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 1.1746031746031744, 0.8888888888888888, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 1.1746031746031744, 0.8888888888888888, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 1.1746031746031744, 0.8888888888888888, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,StrField,SIMPLE_NAME, line no: 753, 1.1746031746031744, 0.8888888888888888, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 1.1746031746031744, 0.8888888888888888, 0.0, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.1741935483870969, 0.9, 0.0, 0.27419354838709675
fp.getString(),METHOD_INVOCATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.1730769230769231, 1.0, 0.0, 0.17307692307692307
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.1727272727272728, 0.9, 0.0, 0.2727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.1727272727272728, 0.9, 0.0, 0.2727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.1727272727272728, 0.9, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 1.1727272727272728, 0.7, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 1.1727272727272728, 0.8, 0.0, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.1724137931034484, 1.0, 0.0, 0.1724137931034483
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.1724137931034484, 1.0, 0.0, 0.1724137931034483
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.1724137931034484, 1.0, 0.0, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.1714285714285715, 1.0, 0.0, 0.17142857142857143
LiteralValueSource,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 1.1714285714285715, 0.8, 0.0, 0.37142857142857144
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 1.1710526315789473, 0.75, 0.0, 0.42105263157894735
fp.getString(),METHOD_INVOCATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.170731707317073, 1.0, 0.0, 0.17073170731707318
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.1700669914738124, 1.0, 0.125, 0.04506699147381242
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.17, 1.0, 0.125, 0.045
LiteralValueSource,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.1682926829268294, 0.9, 0.0, 0.2682926829268293
LiteralValueSource,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.1666666666666667, 0.9, 0.0, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.1666666666666667, 0.8, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 1.1666666666666667, 0.9, 0.0, 0.26666666666666666
getString,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.1666666666666667, 1.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.1648166023166022, 1.0, 0.14285714285714285, 0.02195945945945946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 1.1646341463414633, 0.75, 0.0, 0.4146341463414634
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 1.1646341463414633, 0.75, 0.0, 0.4146341463414634
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 1.1644736842105263, 0.875, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 1.1644736842105263, 0.875, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.1642857142857144, 1.0, 0.0, 0.16428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.1642036124794746, 1.0, 0.14285714285714285, 0.021346469622331693
getString,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 1.1636363636363636, 0.8, 0.0, 0.36363636363636365
LiteralValueSource,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.1631578947368422, 0.9, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 1.1631578947368422, 0.9, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 1.1615384615384614, 0.7, 0.0, 0.46153846153846156
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.1605839416058394, 1.0, 0.0, 0.16058394160583941
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.1594202898550725, 1.0, 0.0, 0.15942028985507245
getString,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.1590909090909092, 1.0, 0.0, 0.1590909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.1589403973509933, 1.0, 0.0, 0.15894039735099338
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.1578947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 1.1578947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.1578947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,String,SIMPLE_NAME, line no: 69, 1.1578947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"literal",STRING_LITERAL, line no: 104, 1.1578947368421053, 1.0, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,target,SIMPLE_NAME, line no: 167, 1.1578947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 1.1578947368421053, 1.0, 0.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.1578947368421053, 1.0, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.157142857142857, 1.0, 0.0, 0.15714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.157142857142857, 1.0, 0.0, 0.15714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.157142857142857, 1.0, 0.0, 0.15714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.157142857142857, 1.0, 0.0, 0.15714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.157142857142857, 1.0, 0.0, 0.15714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.157142857142857, 1.0, 0.0, 0.15714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.15625, 1.0, 0.0, 0.15625
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 1.1555555555555554, 0.8888888888888888, 0.0, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.1555555555555554, 1.0, 0.0, 0.15555555555555556
LiteralValueSource,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.1553191489361703, 0.9, 0.0, 0.2553191489361702
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 1.1547619047619047, 0.75, 0.0, 0.40476190476190477
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 1.1547619047619047, 0.75, 0.0, 0.40476190476190477
fp,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 1.1538461538461537, 0.8, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.1538461538461537, 1.0, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.1538461538461537, 1.0, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.1538461538461537, 1.0, 0.0, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 1.1527777777777777, 0.7777777777777778, 0.0, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.152317880794702, 1.0, 0.0, 0.152317880794702
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.1521739130434783, 1.0, 0.0, 0.15217391304347827
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.1521739130434783, 1.0, 0.0, 0.15217391304347827
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.1521739130434783, 1.0, 0.0, 0.15217391304347827
LiteralValueSource,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 1.1516129032258065, 0.7, 0.0, 0.45161290322580644
fp.getString(),METHOD_INVOCATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.1515151515151516, 1.0, 0.0, 0.15151515151515152
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 1.151315789473684, 0.625, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 1.151315789473684, 0.625, 0.0, 0.5263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.150259067357513, 1.0, 0.0, 0.15025906735751296
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.15, 1.0, 0.0, 0.15
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.15, 1.0, 0.0, 0.15
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.15, 1.0, 0.0, 0.15
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.15, 0.9, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 1.15, 0.9, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.148936170212766, 1.0, 0.0, 0.14893617021276595
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.1486486486486487, 1.0, 0.0, 0.14864864864864866
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 1.1482758620689655, 0.7, 0.0, 0.4482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 1.1482758620689655, 0.7, 0.0, 0.4482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 1.1482758620689655, 0.7, 0.0, 0.4482758620689655
getString,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.1481481481481481, 1.0, 0.0, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.147887323943662, 1.0, 0.0, 0.14788732394366197
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.1476510067114094, 1.0, 0.0, 0.1476510067114094
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 1.1470588235294117, 0.5, 0.3333333333333333, 0.3137254901960784
fp.getString(),METHOD_INVOCATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.1458333333333333, 1.0, 0.0, 0.14583333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.1456953642384107, 1.0, 0.0, 0.1456953642384106
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.1456953642384107, 1.0, 0.0, 0.1456953642384106
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.1456953642384107, 1.0, 0.0, 0.1456953642384106
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.1456953642384107, 1.0, 0.0, 0.1456953642384106
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.1456953642384107, 1.0, 0.0, 0.1456953642384106
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.1456953642384107, 1.0, 0.0, 0.1456953642384106
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 1.1447368421052633, 0.125, 0.0, 0.39473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 1.1447368421052633, 0.75, 0.0, 0.39473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 1.1447368421052633, 0.75, 0.0, 0.39473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 1.1447368421052633, 0.75, 0.0, 0.39473684210526316
LiteralValueSource,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 1.1444444444444444, 0.1, 0.0, 0.4444444444444444
LiteralValueSource,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 1.1444444444444444, 0.7, 0.0, 0.4444444444444444
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.1428571428571428, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 1.1428571428571428, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.1428571428571428, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.1428571428571428, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.1428571428571428, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,min,SIMPLE_NAME, line no: 148, 1.1428571428571428, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,func,SIMPLE_NAME, line no: 184, 1.1428571428571428, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.1428571428571428, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.1428571428571428, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.1428571428571428, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.1428571428571428, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.1428571428571428, 0.3333333333333333, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 1.1428571428571428, 0.8, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.1428571428571428, 1.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.1425, 1.0, 0.125, 0.0175
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.1420523751522533, 1.0, 0.125, 0.01705237515225335
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.1413793103448275, 0.9, 0.0, 0.2413793103448276
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.1409395973154361, 1.0, 0.0, 0.14093959731543623
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.1409395973154361, 1.0, 0.0, 0.14093959731543623
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.1409395973154361, 1.0, 0.0, 0.14093959731543623
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.1400000000000001, 1.0, 0.0, 0.14
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.1395348837209303, 1.0, 0.0, 0.13953488372093023
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.1390728476821192, 1.0, 0.0, 0.1390728476821192
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.1390728476821192, 1.0, 0.0, 0.1390728476821192
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.1390728476821192, 1.0, 0.0, 0.1390728476821192
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 1.1388888888888888, 0.75, 0.0, 0.3888888888888889
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 1.1388888888888888, 0.75, 0.0, 0.3888888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 1.1388888888888888, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 1.1388888888888888, 0.8888888888888888, 0.0, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 1.138157894736842, 0.875, 0.0, 0.2631578947368421
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.1379310344827587, 1.0, 0.0, 0.13793103448275862
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.1379310344827587, 1.0, 0.0, 0.13793103448275862
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.1372549019607843, 1.0, 0.0, 0.13725490196078433
fp.getString(),METHOD_INVOCATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.1363636363636362, 1.0, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.1363636363636362, 1.0, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.1363636363636362, 1.0, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.1363636363636362, 1.0, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 1.1352941176470588, 0.9, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 1.1349206349206349, 0.7777777777777778, 0.0, 0.35714285714285715
LiteralValueSource,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 1.1333333333333333, 0.8, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 1.1333333333333333, 0.1, 0.0, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.1333333333333333, 1.0, 0.0, 0.13333333333333333
fp,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 1.1333333333333333, 0.8, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 1.1333333333333333, 0.8, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 1.1333333333333333, 0.8, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 1.1333333333333333, 0.6, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 1.1333333333333333, 0.8, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 1.1333333333333333, 0.6, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 1.1333333333333333, 0.8, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.1333333333333333, 1.0, 0.0, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.1329479768786128, 1.0, 0.0, 0.1329479768786127
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.1329479768786128, 1.0, 0.0, 0.1329479768786127
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.131578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source,SIMPLE_NAME, line no: 85, 1.131578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.131578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"product",STRING_LITERAL, line no: 199, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 1.131578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.131578947368421, 1.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.1311475409836065, 1.0, 0.0, 0.13114754098360656
getString,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 1.1307692307692307, 0.9, 0.0, 0.23076923076923078
getString,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 1.1307692307692307, 0.1, 0.0, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.1301775147928994, 1.0, 0.0, 0.1301775147928994
getString,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.129032258064516, 1.0, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.129032258064516, 1.0, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.129032258064516, 1.0, 0.0, 0.12903225806451613
LiteralValueSource,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.1285714285714286, 0.9, 0.0, 0.22857142857142856
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.127906976744186, 1.0, 0.0, 0.12790697674418605
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 1.1277777777777778, 0.7777777777777778, 0.0, 0.35
getString,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.127659574468085, 1.0, 0.0, 0.1276595744680851
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.1262135922330097, 1.0, 0.0, 0.1262135922330097
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.1256830601092895, 1.0, 0.0, 0.12568306010928962
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.125, 1.0, 0.0, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.125, 1.0, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 1.125, 1.0, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 1.125, 0.8, 0.0, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 1.1241830065359477, 0.8888888888888888, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 1.1241830065359477, 0.5555555555555556, 0.3333333333333333, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 1.1241830065359477, 0.8888888888888888, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 1.1241830065359477, 0.8888888888888888, 0.0, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.1222222222222222, 1.0, 0.0, 0.12222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.1222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 1.1222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.1222222222222222, 0.8, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.1222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 1.1222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 1.1222222222222222, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 1.1222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 1.1222222222222222, 0.9, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 1.1222222222222222, 0.1, 0.0, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.122093023255814, 1.0, 0.0, 0.12209302325581395
getString,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.1219512195121952, 1.0, 0.0, 0.12195121951219512
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.1204819277108433, 1.0, 0.0, 0.12048192771084337
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.1204819277108433, 1.0, 0.0, 0.12048192771084337
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.1202185792349726, 1.0, 0.0, 0.12021857923497267
getString,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.12, 1.0, 0.0, 0.12
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 1.1193548387096774, 0.7, 0.0, 0.41935483870967744
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 1.1193548387096774, 0.7, 0.0, 0.41935483870967744
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 1.1189024390243902, 0.875, 0.0, 0.24390243902439024
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.11875, 0.9, 0.0, 0.21875
getString,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 1.11875, 0.9, 0.0, 0.21875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.1185567010309279, 1.0, 0.0, 0.11855670103092783
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 1.118421052631579, 0.75, 0.0, 0.3684210526315789
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 1.1180555555555556, 0.5555555555555556, 0.0, 0.5625
fp,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.1176470588235294, 1.0, 0.0, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 1.1161616161616161, 0.8888888888888888, 0.0, 0.22727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.1153049141503848, 1.0, 0.08333333333333333, 0.03197158081705151
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.1148018648018647, 1.0, 0.08333333333333333, 0.03146853146853147
LiteralValueSource,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.1142857142857143, 0.9, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.1142857142857143, 0.9, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.1142857142857143, 0.9, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 1.1142857142857143, 0.9, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 1.1142857142857143, 0.9, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.1136363636363635, 1.0, 0.0, 0.11363636363636363
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 1.1125, 0.8, 0.0, 0.3125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 1.111842105263158, 0.875, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 1.111842105263158, 0.875, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 1.111842105263158, 0.875, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 1.111842105263158, 0.875, 0.0, 0.23684210526315788
LiteralValueSource,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 1.1111111111111112, 0.2, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.1111111111111112, 0.2, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 1.1111111111111112, 0.8888888888888888, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 1.1111111111111112, 0.8888888888888888, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 1.1111111111111112, 0.8888888888888888, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 1.1111111111111112, 0.8888888888888888, 0.0, 0.2222222222222222
fp,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.1111111111111112, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.1111111111111112, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 1.1111111111111112, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.1111111111111112, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.1111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.1111111111111112, 1.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.1111111111111112, 0.1, 0.0, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.109704641350211, 1.0, 0.0, 0.10970464135021098
LiteralValueSource,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 1.1095238095238096, 0.8, 0.0, 0.30952380952380953
getString,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 1.1076923076923078, 0.1, 0.0, 0.3076923076923077
getString,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 1.1076923076923078, 0.8, 0.0, 0.3076923076923077
getString,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.1071428571428572, 1.0, 0.0, 0.10714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"linear",STRING_LITERAL, line no: 125, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.1052631578947367, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"recip",STRING_LITERAL, line no: 134, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.1052631578947367, 0.875, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"vector",STRING_LITERAL, line no: 226, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.1052631578947367, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.1052631578947367, 0.875, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"true",STRING_LITERAL, line no: 616, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.1052631578947367, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.1052631578947367, 1.0, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.1050420168067228, 1.0, 0.0, 0.10504201680672269
getString,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.1041666666666667, 1.0, 0.0, 0.10416666666666667
getString,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.103448275862069, 1.0, 0.0, 0.10344827586206896
fp.getString(),METHOD_INVOCATION, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,getReq,SIMPLE_NAME, line no: 357, 1.103174603174603, 0.6666666666666666, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,getType,SIMPLE_NAME, line no: 358, 1.103174603174603, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,TextField,SIMPLE_NAME, line no: 755, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,getClass,SIMPLE_NAME, line no: 850, 1.103174603174603, 0.8888888888888888, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,getValues,SIMPLE_NAME, line no: 956, 1.103174603174603, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 1.103174603174603, 0.1111111111111111, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.1027027027027028, 0.9, 0.0, 0.20270270270270271
getString,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.1020408163265305, 1.0, 0.0, 0.10204081632653061
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 1.101010101010101, 0.8888888888888888, 0.0, 0.21212121212121213
LiteralValueSource,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.1, 0.9, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.1, 1.0, 0.0, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.1, 1.0, 0.0, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.1, 1.0, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 1.1, 1.0, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 1.1, 0.7, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 1.1, 0.7, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 1.1, 1.0, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 1.1, 0.9, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 1.1, 0.9, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 1.1, 0.8, 0.0, 0.3
getString,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.1, 1.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.1, 1.0, 0.0, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 1.0994152046783625, 0.8888888888888888, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 1.0986842105263157, 0.625, 0.0, 0.47368421052631576
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0977443609022557, 1.0, 0.0, 0.09774436090225563
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0970149253731343, 1.0, 0.0, 0.09701492537313433
fp.getString(),METHOD_INVOCATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.096774193548387, 1.0, 0.0, 0.0967741935483871
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 1.0961538461538463, 0.75, 0.0, 0.34615384615384615
fp,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 1.0952380952380953, 0.8, 0.0, 0.09523809523809523
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0948786264061574, 1.0, 0.08333333333333333, 0.011545293072824156
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.0946969696969697, 1.0, 0.08333333333333333, 0.011363636363636364
fp.getString(),METHOD_INVOCATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0945945945945945, 1.0, 0.0, 0.0945945945945946
getString,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 1.0941176470588236, 0.8, 0.0, 0.29411764705882354
fp.getString(),METHOD_INVOCATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 1.094017094017094, 0.8888888888888888, 0.0, 0.20512820512820512
getString,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.09375, 1.0, 0.0, 0.09375
getString,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.0930232558139534, 1.0, 0.0, 0.09302325581395349
LiteralValueSource,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.0923076923076924, 0.9, 0.0, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 1.0921052631578947, 0.75, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 1.0921052631578947, 0.75, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.0921052631578947, 0.75, 0.0, 0.34210526315789475
fp,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.0909090909090908, 1.0, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.0909090909090908, 1.0, 0.0, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 1.0902777777777777, 0.7777777777777778, 0.0, 0.3125
fp.getString(),METHOD_INVOCATION, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 1.0902777777777777, 0.7777777777777778, 0.0, 0.3125
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 1.0888888888888888, 0.7, 0.0, 0.3888888888888889
LiteralValueSource,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 1.0888888888888888, 0.7, 0.0, 0.3888888888888889
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 1.0888888888888888, 0.7, 0.0, 0.3888888888888889
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 1.0888888888888888, 0.7, 0.0, 0.3888888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 1.0888888888888888, 0.8888888888888888, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 1.0888888888888888, 0.8888888888888888, 0.0, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 1.0875331564986737, 1.0, 0.0, 0.08753315649867374
getString,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 1.0875, 0.8, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 1.0875, 0.8, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 1.0875, 0.9, 0.0, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,toString,SIMPLE_NAME, line no: 979, 1.0855263157894737, 0.875, 0.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 1.084010840108401, 0.8888888888888888, 0.0, 0.1951219512195122
fp,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.0833333333333333, 1.0, 0.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.0833333333333333, 1.0, 0.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.0833333333333333, 1.0, 0.0, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 1.0823529411764705, 0.7, 0.0, 0.38235294117647056
fp,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 1.0818181818181818, 0.7, 0.0, 0.18181818181818182
fp,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 1.0818181818181818, 0.8, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 1.0818181818181818, 0.7, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 1.0818181818181818, 0.9, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 1.0818181818181818, 0.8, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 1.0818181818181818, 0.9, 0.0, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 1.0811965811965811, 0.8888888888888888, 0.0, 0.19230769230769232
getString,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.0806451612903225, 1.0, 0.0, 0.08064516129032258
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.08, 0.9, 0.0, 0.18
fp,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.08, 1.0, 0.0, 0.08
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.0789473684210527, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name,SIMPLE_NAME, line no: 74, 1.0789473684210527, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0789473684210527, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,field,SIMPLE_NAME, line no: 100, 1.0789473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rord",STRING_LITERAL, line no: 110, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"top",STRING_LITERAL, line no: 117, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"scale",STRING_LITERAL, line no: 144, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,null,NULL_LITERAL, line no: 168, 1.0789473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0789473684210527, 0.875, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"query",STRING_LITERAL, line no: 232, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"joindf",STRING_LITERAL, line no: 253, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"geodist",STRING_LITERAL, line no: 262, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0789473684210527, 0.875, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0789473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0789473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"strdist",STRING_LITERAL, line no: 327, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"field",STRING_LITERAL, line no: 352, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"log",STRING_LITERAL, line no: 386, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tan",STRING_LITERAL, line no: 416, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"asin",STRING_LITERAL, line no: 422, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"atan",STRING_LITERAL, line no: 434, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tanh",STRING_LITERAL, line no: 452, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ceil",STRING_LITERAL, line no: 458, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"floor",STRING_LITERAL, line no: 464, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rint",STRING_LITERAL, line no: 470, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"atan2",STRING_LITERAL, line no: 488, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,power,SIMPLE_NAME, line no: 521, 1.0789473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.0789473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"norm",STRING_LITERAL, line no: 594, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"false",STRING_LITERAL, line no: 623, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"exists",STRING_LITERAL, line no: 630, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"not",STRING_LITERAL, line no: 647, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first,SIMPLE_NAME, line no: 858, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,second,SIMPLE_NAME, line no: 859, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0789473684210527, 1.0, 0.0, 0.07894736842105263
LiteralValueSource,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 1.077777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 1.077777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 1.077777777777778, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 1.077777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 1.077777777777778, 0.8, 0.0, 0.2777777777777778
fp,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.0769230769230769, 0.8, 0.0, 0.07692307692307693
fp,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.0769230769230769, 1.0, 0.0, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 1.076470588235294, 0.9, 0.0, 0.17647058823529413
getString,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 1.076470588235294, 0.9, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 1.0763888888888888, 0.7777777777777778, 0.0, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 1.0763888888888888, 0.8888888888888888, 0.0, 0.1875
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 1.075, 0.7, 0.0, 0.375
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 1.0739130434782609, 0.7, 0.0, 0.17391304347826086
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 1.073076923076923, 0.75, 0.0, 0.3230769230769231
getString,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 1.0727272727272728, 0.8, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 1.0727272727272728, 0.7, 0.0, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.072674418604651, 1.0, 0.0, 0.07267441860465117
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 1.0723684210526316, 0.625, 0.0, 0.4473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 1.0714285714285714, 0.75, 0.0, 0.32142857142857145
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 1.0714285714285714, 0.7, 0.0, 0.37142857142857144
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 1.0714285714285714, 0.7, 0.0, 0.37142857142857144
fp.getString(),METHOD_INVOCATION, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0714285714285714, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,def,SIMPLE_NAME, line no: 168, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,null,NULL_LITERAL, line no: 168, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0714285714285714, 0.8888888888888888, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0714285714285714, 0.8888888888888888, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0714285714285714, 0.8888888888888888, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0714285714285714, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0714285714285714, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
fp,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.0714285714285714, 0.1, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.0714285714285714, 1.0, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 1.0701754385964912, 1.0, 0.0, 0.07017543859649122
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 1.068421052631579, 0.7, 0.0, 0.3684210526315789
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 1.068421052631579, 0.7, 0.0, 0.3684210526315789
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 1.068421052631579, 0.7, 0.0, 0.3684210526315789
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.068421052631579, 0.7, 0.0, 0.3684210526315789
getString,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0675675675675675, 1.0, 0.0, 0.06756756756756757
LiteralValueSource,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 1.0666666666666667, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 1.0666666666666667, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.0666666666666667, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0666666666666667, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 1.0666666666666667, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getString,SIMPLE_NAME, line no: 107, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.0666666666666667, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 1.0666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 1.0666666666666667, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 1.0666666666666667, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 1.0666666666666667, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 1.0666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 1.0666666666666667, 0.2, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.0666666666666667, 0.1, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0666666666666667, 0.1111111111111111, 0.0, 0.06666666666666667
fp,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 1.0666666666666667, 1.0, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 1.0666666666666667, 0.1, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0666666666666667, 0.1, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 1.0666666666666667, 0.9, 0.0, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 1.0657894736842106, 0.75, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 1.0657894736842106, 0.75, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 1.0657894736842106, 0.75, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 1.0657894736842106, 0.75, 0.0, 0.3157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0656934306569343, 1.0, 0.0, 0.06569343065693431
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.065217391304348, 1.0, 0.0, 0.06521739130434782
LiteralValueSource,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 1.0652173913043477, 0.5, 0.0, 0.5652173913043478
LiteralValueSource,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 1.0647058823529412, 0.8, 0.0, 0.2647058823529412
LiteralValueSource,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 1.0647058823529412, 0.8, 0.0, 0.2647058823529412
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.0642857142857143, 1.0, 0.0, 0.06428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.0642857142857143, 1.0, 0.0, 0.06428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.0642857142857143, 1.0, 0.0, 0.06428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.0642857142857143, 1.0, 0.0, 0.06428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 1.0634920634920635, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 1.0634920634920635, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,Collections,SIMPLE_NAME, line no: 801, 1.0634920634920635, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 1.0634920634920635, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 1.0634920634920635, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 1.0634920634920635, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 1.0634920634920635, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 1.0634920634920635, 0.7777777777777778, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0633802816901408, 1.0, 0.0, 0.06338028169014084
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 1.063157894736842, 0.8, 0.0, 0.2631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 1.0628019323671496, 0.8888888888888888, 0.0, 0.17391304347826086
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 1.0628019323671496, 0.8888888888888888, 0.0, 0.17391304347826086
fp,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.0625, 0.8, 0.0, 0.0625
fp,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.0625, 0.8, 0.0, 0.0625
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0621761658031088, 1.0, 0.0, 0.06217616580310881
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.061904761904762, 1.0, 0.0, 0.06190476190476191
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 1.0608695652173914, 0.6, 0.0, 0.2608695652173913
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 1.0608695652173914, 0.8, 0.0, 0.2608695652173913
LiteralValueSource,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 1.0608695652173914, 0.8, 0.0, 0.2608695652173913
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0608108108108107, 1.0, 0.0, 0.060810810810810814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0604026845637584, 1.0, 0.0, 0.06040268456375839
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 1.0603174603174603, 0.8888888888888888, 0.0, 0.17142857142857143
getString,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 1.06, 0.9, 0.0, 0.16
getString,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 1.06, 0.8, 0.0, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0596026490066226, 1.0, 0.0, 0.059602649006622516
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0596026490066226, 1.0, 0.0, 0.059602649006622516
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0596026490066226, 1.0, 0.0, 0.059602649006622516
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0596026490066226, 1.0, 0.0, 0.059602649006622516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 1.0592105263157894, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 1.0592105263157894, 0.875, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 1.0592105263157894, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 1.0592105263157894, 0.875, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValues,SIMPLE_NAME, line no: 956, 1.0592105263157894, 0.125, 0.0, 0.18421052631578946
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0588235294117647, 1.0, 0.0, 0.058823529411764705
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.0579710144927537, 1.0, 0.0, 0.057971014492753624
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.0579710144927537, 1.0, 0.0, 0.057971014492753624
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.0579710144927537, 1.0, 0.0, 0.057971014492753624
getString,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 1.0578947368421052, 0.9, 0.0, 0.15789473684210525
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 1.057777777777778, 0.7777777777777778, 0.0, 0.28
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 1.0576923076923077, 0.75, 0.0, 0.3076923076923077
LiteralValueSource,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 1.057303370786517, 0.9, 0.0, 0.15730337078651685
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 1.0571428571428572, 0.7, 0.0, 0.35714285714285715
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 1.0571428571428572, 0.7, 0.0, 0.35714285714285715
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0571428571428572, 1.0, 0.0, 0.05714285714285714
getString,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 1.0571428571428572, 0.7, 0.0, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 1.0568181818181819, 0.875, 0.0, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.056701030927835, 1.0, 0.0, 0.05670103092783505
LiteralValueSource,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 1.0566265060240965, 0.9, 0.0, 0.1566265060240964
getString,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 1.05625, 0.8, 0.0, 0.15625
LiteralValueSource,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.0555555555555556, 0.9, 0.0, 0.15555555555555556
LiteralValueSource,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.0555555555555556, 0.9, 0.0, 0.15555555555555556
fp.getString(),METHOD_INVOCATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 1.0555555555555556, 0.8888888888888888, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 1.0555555555555556, 0.8888888888888888, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 1.0555555555555556, 0.7777777777777778, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 1.0555555555555556, 0.7777777777777778, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 1.0555555555555556, 0.7777777777777778, 0.0, 0.2777777777777778
fp,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 1.0555555555555556, 1.0, 0.0, 0.05555555555555555
fp,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.0555555555555556, 1.0, 0.0, 0.05555555555555555
getString,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.0555555555555556, 1.0, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 1.0547619047619048, 0.9, 0.0, 0.15476190476190477
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 1.0545454545454545, 1.0, 0.0, 0.05454545454545454
LiteralValueSource,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 1.0538461538461539, 0.9, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 1.0538461538461539, 0.1, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 1.0538461538461539, 0.9, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 1.0538461538461539, 0.9, 0.0, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0536912751677852, 1.0, 0.0, 0.053691275167785234
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0536912751677852, 1.0, 0.0, 0.053691275167785234
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0536912751677852, 1.0, 0.0, 0.053691275167785234
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0533980582524272, 1.0, 0.0, 0.05339805825242718
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0532786885245902, 1.0, 0.0, 0.05327868852459016
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.0529801324503312, 1.0, 0.0, 0.052980132450331126
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 1.0526315789473684, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ord",STRING_LITERAL, line no: 97, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,min,SIMPLE_NAME, line no: 148, 1.0526315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"map",STRING_LITERAL, line no: 161, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,def,SIMPLE_NAME, line no: 168, 1.0526315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func,SIMPLE_NAME, line no: 184, 1.0526315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0526315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0526315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"boost",STRING_LITERAL, line no: 244, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"hsin",STRING_LITERAL, line no: 264, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"geohash",STRING_LITERAL, line no: 317, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.0526315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.0526315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0526315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rad",STRING_LITERAL, line no: 362, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"deg",STRING_LITERAL, line no: 368, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ln",STRING_LITERAL, line no: 392, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"exp",STRING_LITERAL, line no: 398, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sin",STRING_LITERAL, line no: 404, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"acos",STRING_LITERAL, line no: 428, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sinh",STRING_LITERAL, line no: 440, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"hypot",STRING_LITERAL, line no: 482, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"min",STRING_LITERAL, line no: 501, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"dist",STRING_LITERAL, line no: 518, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"pi",STRING_LITERAL, line no: 530, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,val,SIMPLE_NAME, line no: 548, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ttf",STRING_LITERAL, line no: 559, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sttf",STRING_LITERAL, line no: 568, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"idf",STRING_LITERAL, line no: 570, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tf",STRING_LITERAL, line no: 586, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"and",STRING_LITERAL, line no: 665, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"or",STRING_LITERAL, line no: 684, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"xor",STRING_LITERAL, line no: 703, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"if",STRING_LITERAL, line no: 725, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"def",STRING_LITERAL, line no: 736, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0526315789473684, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.0526315789473684, 0.375, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.0526315789473684, 1.0, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 1.052325581395349, 0.75, 0.0, 0.3023255813953488
LiteralValueSource,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 1.0518987341772152, 0.9, 0.0, 0.1518987341772152
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 1.0518867924528301, 0.75, 0.0, 0.3018867924528302
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 1.05, 0.8, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.05, 0.8, 0.0, 0.05
getString,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.05, 1.0, 0.0, 0.05
getString,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 1.05, 0.8, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 1.05, 0.1, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 1.05, 0.8, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 1.05, 0.8, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 1.05, 0.8, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 1.0483870967741935, 1.0, 0.0, 0.04838709677419355
getString,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 1.0481481481481483, 0.9, 0.0, 0.14814814814814814
fp,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.0476190476190477, 1.0, 0.0, 0.047619047619047616
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.047337278106509, 1.0, 0.0, 0.047337278106508875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 1.0472972972972974, 0.75, 0.0, 0.2972972972972973
fp.getString(),METHOD_INVOCATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 1.0467836257309941, 0.8888888888888888, 0.0, 0.15789473684210525
fp.getString(),METHOD_INVOCATION, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 1.0467836257309941, 0.8888888888888888, 0.0, 0.15789473684210525
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.0465116279069768, 1.0, 0.0, 0.046511627906976744
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.0465116279069768, 1.0, 0.0, 0.046511627906976744
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0464135021097047, 1.0, 0.0, 0.046413502109704644
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0463576158940397, 1.0, 0.0, 0.046357615894039736
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.046242774566474, 1.0, 0.0, 0.046242774566473986
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.046242774566474, 1.0, 0.0, 0.046242774566473986
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.046218487394958, 1.0, 0.0, 0.046218487394957986
fp,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.0454545454545454, 1.0, 0.0, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.0454545454545454, 1.0, 0.0, 0.045454545454545456
getString,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.0454545454545454, 1.0, 0.0, 0.045454545454545456
fp.getString(),METHOD_INVOCATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 1.0451388888888888, 0.8888888888888888, 0.0, 0.15625
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 1.0451388888888888, 0.8888888888888888, 0.0, 0.15625
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.0444444444444445, 1.0, 0.0, 0.044444444444444446
fp,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.0444444444444445, 1.0, 0.0, 0.044444444444444446
getString,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 1.0444444444444443, 0.6, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 1.0444444444444443, 0.6, 0.0, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.0441767068273093, 1.0, 0.0, 0.04417670682730924
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.0441767068273093, 1.0, 0.0, 0.04417670682730924
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 1.0441176470588236, 0.75, 0.0, 0.29411764705882354
getString,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0437956204379562, 1.0, 0.0, 0.043795620437956206
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.0437158469945356, 1.0, 0.0, 0.04371584699453552
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.0437158469945356, 1.0, 0.0, 0.04371584699453552
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.0437158469945356, 1.0, 0.0, 0.04371584699453552
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0434782608695652, 1.0, 0.0, 0.043478260869565216
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0434782608695652, 1.0, 0.0, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.0434782608695652, 1.0, 0.0, 0.043478260869565216
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.0434782608695652, 1.0, 0.0, 0.043478260869565216
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.0432432432432432, 1.0, 0.0, 0.043243243243243246
LiteralValueSource,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.042857142857143, 0.9, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.042857142857143, 0.9, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 1.042857142857143, 0.9, 0.0, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 1.042857142857143, 0.8, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 1.042857142857143, 0.9, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 1.042857142857143, 0.8, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 1.042857142857143, 0.8, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.042857142857143, 1.0, 0.0, 0.04285714285714286
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.042857142857143, 1.0, 0.0, 0.04285714285714286
getString,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.042857142857143, 1.0, 0.0, 0.04285714285714286
getString,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 1.042857142857143, 0.9, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 1.042857142857143, 0.9, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.042857142857143, 1.0, 0.0, 0.04285714285714286
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 1.0421052631578946, 0.7, 0.0, 0.34210526315789475
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.0421052631578946, 1.0, 0.0, 0.042105263157894736
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0416666666666667, 1.0, 0.0, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0414507772020725, 1.0, 0.0, 0.04145077720207254
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0413533834586466, 1.0, 0.0, 0.041353383458646614
getString,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.041237113402062, 1.0, 0.0, 0.041237113402061855
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.041044776119403, 1.0, 0.0, 0.041044776119402986
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 1.04093567251462, 0.7777777777777778, 0.0, 0.2631578947368421
getString,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.0406976744186047, 1.0, 0.0, 0.040697674418604654
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.0406091370558375, 1.0, 0.0, 0.04060913705583756
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0405405405405406, 1.0, 0.0, 0.04054054054054054
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0402684563758389, 1.0, 0.0, 0.040268456375838924
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.04, 0.8, 0.0, 0.24
getString,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.04, 1.0, 0.0, 0.04
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 1.04, 1.0, 0.0, 0.04
getString,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 1.04, 1.0, 0.0, 0.04
getString,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 1.04, 0.8, 0.0, 0.24
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0397350993377483, 1.0, 0.0, 0.039735099337748346
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0397350993377483, 1.0, 0.0, 0.039735099337748346
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0397350993377483, 1.0, 0.0, 0.039735099337748346
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 1.0397350993377483, 1.0, 0.0, 0.039735099337748346
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 1.0394736842105263, 0.75, 0.0, 0.2894736842105263
getString,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.0394088669950738, 1.0, 0.0, 0.03940886699507389
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 1.0388888888888888, 0.75, 0.0, 0.28888888888888886
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 1.0388888888888888, 0.75, 0.0, 0.28888888888888886
getString,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0388349514563107, 1.0, 0.0, 0.038834951456310676
getString,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.0384615384615385, 1.0, 0.0, 0.038461538461538464
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.0382513661202186, 1.0, 0.0, 0.03825136612021858
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 1.0382165605095541, 1.0, 0.0, 0.03821656050955414
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 1.0380952380952382, 0.7, 0.0, 0.23809523809523808
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 1.0379746835443038, 1.0, 0.0, 0.0379746835443038
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.0372670807453417, 1.0, 0.0, 0.037267080745341616
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.037037037037037, 1.0, 0.0, 0.037037037037037035
getString,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0368852459016393, 1.0, 0.0, 0.036885245901639344
getString,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 1.036842105263158, 0.8, 0.0, 0.23684210526315788
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.036697247706422, 1.0, 0.0, 0.03669724770642202
LiteralValueSource,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.0363636363636364, 0.9, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 1.0363636363636364, 0.9, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.036231884057971, 1.0, 0.0, 0.036231884057971016
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.036231884057971, 1.0, 0.0, 0.036231884057971016
getString,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.036231884057971, 1.0, 0.0, 0.036231884057971016
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.036144578313253, 1.0, 0.0, 0.03614457831325301
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.036144578313253, 1.0, 0.0, 0.03614457831325301
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 1.0359477124183005, 0.8888888888888888, 0.0, 0.14705882352941177
getString,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 1.035897435897436, 1.0, 0.0, 0.035897435897435895
fp,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0357142857142858, 1.0, 0.0, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 1.0355029585798816, 1.0, 0.0, 0.03550295857988166
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 1.035294117647059, 0.8, 0.0, 0.23529411764705882
getString,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 1.035294117647059, 1.0, 0.0, 0.03529411764705882
getString,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.0352422907488987, 1.0, 0.0, 0.03524229074889868
getString,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0352112676056338, 1.0, 0.0, 0.035211267605633804
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 1.0350877192982457, 1.0, 0.0, 0.03508771929824561
getString,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.0348837209302326, 1.0, 0.0, 0.03488372093023256
getString,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 1.0348837209302326, 1.0, 0.0, 0.03488372093023256
fp,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.0344827586206897, 1.0, 0.0, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.0344827586206897, 1.0, 0.0, 0.034482758620689655
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 1.0342857142857143, 1.0, 0.0, 0.03428571428571429
getString,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.0340909090909092, 1.0, 0.0, 0.03409090909090909
getString,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 1.0338983050847457, 1.0, 0.0, 0.03389830508474576
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0337552742616034, 1.0, 0.0, 0.03375527426160337
getString,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.0337078651685394, 1.0, 0.0, 0.033707865168539325
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.0336134453781514, 1.0, 0.0, 0.03361344537815126
getString,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.0336134453781514, 1.0, 0.0, 0.03361344537815126
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0335570469798658, 1.0, 0.0, 0.03355704697986577
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0335570469798658, 1.0, 0.0, 0.03355704697986577
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0335570469798658, 1.0, 0.0, 0.03355704697986577
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.0335195530726258, 1.0, 0.0, 0.0335195530726257
fp,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.0333333333333334, 1.0, 0.0, 0.03333333333333333
getString,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 1.0333333333333334, 0.9, 0.0, 0.13333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 1.0333333333333332, 0.7, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 1.0333333333333332, 0.7, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 1.0333333333333332, 0.7, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 1.0333333333333332, 0.7, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 1.0333333333333332, 0.7, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 1.0333333333333332, 0.7, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.033112582781457, 1.0, 0.0, 0.033112582781456956
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 1.0328947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 1.0328947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 1.0328947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 1.0328947368421053, 0.875, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 1.0328947368421053, 0.125, 0.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.0327868852459017, 1.0, 0.0, 0.03278688524590164
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0326797385620916, 1.0, 0.0, 0.032679738562091505
getString,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 1.032258064516129, 1.0, 0.0, 0.03225806451612903
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 1.0320754716981133, 0.9, 0.0, 0.1320754716981132
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.0319767441860466, 1.0, 0.0, 0.03197674418604651
fp.getString(),METHOD_INVOCATION, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 1.0317460317460316, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 1.0317460317460316, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Query,SIMPLE_NAME, line no: 29, 1.0317460317460316, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 1.0317460317460316, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 1.0317460317460316, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 1.0317460317460316, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 1.0317460317460316, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 1.0317460317460316, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 1.0317460317460316, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 1.0317460317460316, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,ft,SIMPLE_NAME, line no: 752, 1.0317460317460316, 0.8888888888888888, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,DateField,SIMPLE_NAME, line no: 833, 1.0317460317460316, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 1.0317460317460316, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,context,SIMPLE_NAME, line no: 956, 1.0317460317460316, 0.1111111111111111, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 1.0315789473684212, 0.9, 0.0, 0.13157894736842105
fp,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.03125, 1.0, 0.0, 0.03125
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.0310077519379846, 1.0, 0.0, 0.031007751937984496
LiteralValueSource,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 1.0307692307692309, 0.8, 0.0, 0.23076923076923078
getString,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 1.0307692307692309, 0.1, 0.0, 0.23076923076923078
getString,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.030701754385965, 1.0, 0.0, 0.03070175438596491
getString,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.0305343511450382, 1.0, 0.0, 0.030534351145038167
getString,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 1.0304347826086957, 0.9, 0.0, 0.13043478260869565
fp,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.0303030303030303, 1.0, 0.0, 0.030303030303030304
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0300751879699248, 1.0, 0.0, 0.03007518796992481
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.0299145299145298, 1.0, 0.0, 0.029914529914529916
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0298507462686568, 1.0, 0.0, 0.029850746268656716
getString,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.029585798816568, 1.0, 0.0, 0.029585798816568046
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.029126213592233, 1.0, 0.0, 0.02912621359223301
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 1.0290697674418605, 0.75, 0.0, 0.27906976744186046
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.0290456431535269, 1.0, 0.0, 0.029045643153526972
LiteralValueSource,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.0290322580645161, 0.9, 0.0, 0.12903225806451613
LiteralValueSource,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.0290322580645161, 0.9, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.0289017341040463, 1.0, 0.0, 0.028901734104046242
getString,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.0289017341040463, 1.0, 0.0, 0.028901734104046242
getString,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.0288808664259927, 1.0, 0.0, 0.02888086642599278
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.0288808664259927, 1.0, 0.0, 0.02888086642599278
getString,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.0287539936102237, 1.0, 0.0, 0.02875399361022364
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 1.0285714285714287, 0.8, 0.0, 0.22857142857142856
getString,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.0278884462151394, 1.0, 0.0, 0.027888446215139442
fp.getString(),METHOD_INVOCATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 1.0277777777777777, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 1.0277777777777777, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 1.0277777777777777, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 1.0277777777777777, 0.7777777777777778, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 1.0277777777777777, 0.7777777777777778, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.0277777777777777, 1.0, 0.0, 0.027777777777777776
getString,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.0277777777777777, 1.0, 0.0, 0.027777777777777776
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.0275590551181102, 1.0, 0.0, 0.027559055118110236
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.0275590551181102, 1.0, 0.0, 0.027559055118110236
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.0275590551181102, 1.0, 0.0, 0.027559055118110236
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.0273037542662116, 1.0, 0.0, 0.027303754266211604
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 1.0272727272727273, 0.8, 0.0, 0.22727272727272727
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0271739130434783, 1.0, 0.0, 0.02717391304347826
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0271739130434783, 1.0, 0.0, 0.02717391304347826
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.0271317829457365, 1.0, 0.0, 0.027131782945736434
getString,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.0268456375838926, 1.0, 0.0, 0.026845637583892617
getString,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.0265151515151516, 1.0, 0.0, 0.026515151515151516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"div",STRING_LITERAL, line no: 153, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"abs",STRING_LITERAL, line no: 173, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sum",STRING_LITERAL, line no: 190, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"add",STRING_LITERAL, line no: 197, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"mul",STRING_LITERAL, line no: 206, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sub",STRING_LITERAL, line no: 208, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f0,SIMPLE_NAME, line no: 256, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,qf,SIMPLE_NAME, line no: 257, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0263157894736843, 0.875, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0263157894736843, 0.875, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cos",STRING_LITERAL, line no: 410, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cosh",STRING_LITERAL, line no: 446, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"pow",STRING_LITERAL, line no: 476, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"max",STRING_LITERAL, line no: 494, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0263157894736843, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"e",STRING_LITERAL, line no: 536, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0263157894736843, 1.0, 0.0, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.0258302583025831, 1.0, 0.0, 0.025830258302583026
getString,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.0258302583025831, 1.0, 0.0, 0.025830258302583026
getString,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.0258302583025831, 1.0, 0.0, 0.025830258302583026
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.0256410256410255, 1.0, 0.0, 0.02564102564102564
getString,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.0255474452554745, 1.0, 0.0, 0.025547445255474453
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.0254777070063694, 1.0, 0.0, 0.025477707006369428
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.0254237288135593, 1.0, 0.0, 0.025423728813559324
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.0253164556962024, 1.0, 0.0, 0.02531645569620253
getString,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.025089605734767, 1.0, 0.0, 0.025089605734767026
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 1.025, 0.625, 0.0, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.025, 0.9, 0.0, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.025, 0.9, 0.0, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.025, 0.9, 0.0, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.025, 0.9, 0.0, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.025, 0.9, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 1.025, 0.1, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 1.025, 0.9, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 1.025, 0.9, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 1.025, 0.9, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 1.025, 0.9, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.0248962655601659, 1.0, 0.0, 0.024896265560165973
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.024793388429752, 1.0, 0.0, 0.024793388429752067
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.0246478873239437, 1.0, 0.0, 0.02464788732394366
fp,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.024390243902439, 1.0, 0.0, 0.024390243902439025
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.0242914979757085, 1.0, 0.0, 0.024291497975708502
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.0241379310344827, 1.0, 0.0, 0.02413793103448276
getString,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.0240963855421688, 1.0, 0.0, 0.024096385542168676
getString,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.023972602739726, 1.0, 0.0, 0.023972602739726026
fp.getString(),METHOD_INVOCATION, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 1.0238095238095237, 0.6666666666666666, 0.0, 0.35714285714285715
getString,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.0236486486486487, 1.0, 0.0, 0.02364864864864865
getString,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.0236220472440944, 1.0, 0.0, 0.023622047244094488
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.0232558139534884, 1.0, 0.0, 0.023255813953488372
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.0232558139534884, 1.0, 0.0, 0.023255813953488372
getString,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.023102310231023, 1.0, 0.0, 0.0231023102310231
getString,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.0229007633587786, 1.0, 0.0, 0.022900763358778626
getString,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.0225806451612902, 1.0, 0.0, 0.02258064516129032
LiteralValueSource,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 1.0222222222222221, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 1.0222222222222221, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 1.0222222222222221, 0.6, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 1.0222222222222221, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 1.0222222222222221, 0.7, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 1.0222222222222221, 0.8888888888888888, 0.0, 0.13333333333333333
fp,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.0222222222222221, 1.0, 0.0, 0.022222222222222223
getString,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 1.0222222222222221, 0.7, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 1.0222222222222221, 0.7, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 1.0222222222222221, 0.4, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 1.0222222222222221, 0.4, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 1.0222222222222221, 0.8, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 1.0219512195121951, 0.9, 0.0, 0.12195121951219512
getString,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.021875, 1.0, 0.0, 0.021875
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.0216606498194947, 1.0, 0.0, 0.021660649819494584
fp,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.0212765957446808, 1.0, 0.0, 0.02127659574468085
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.0208877284595301, 1.0, 0.0, 0.020887728459530026
fp,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.0204081632653061, 1.0, 0.0, 0.02040816326530612
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.020100502512563, 1.0, 0.0, 0.020100502512562814
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.0200501253132832, 1.0, 0.0, 0.020050125313283207
fp,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.02, 1.0, 0.0, 0.02
getString,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.02, 1.0, 0.0, 0.02
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.019830028328612, 1.0, 0.0, 0.019830028328611898
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.0192771084337349, 1.0, 0.0, 0.01927710843373494
getString,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.0192771084337349, 1.0, 0.0, 0.01927710843373494
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 1.0192307692307692, 0.75, 0.0, 0.2692307692307692
fp,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.0192307692307692, 1.0, 0.0, 0.019230769230769232
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 1.0191570881226053, 0.7777777777777778, 0.0, 0.2413793103448276
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 1.0191570881226053, 0.7777777777777778, 0.0, 0.2413793103448276
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 1.0191570881226053, 0.7777777777777778, 0.0, 0.2413793103448276
getString,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.0190930787589498, 1.0, 0.0, 0.01909307875894988
getString,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.018970189701897, 1.0, 0.0, 0.018970189701897018
getString,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.0185185185185186, 1.0, 0.0, 0.018518518518518517
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 1.0182926829268293, 0.75, 0.0, 0.2682926829268293
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 1.017777777777778, 0.7777777777777778, 0.0, 0.24
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 1.017777777777778, 0.7777777777777778, 0.0, 0.24
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 1.0173913043478262, 0.8, 0.0, 0.21739130434782608
fp.getString(),METHOD_INVOCATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 1.0166666666666666, 0.6666666666666666, 0.0, 0.35
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.0164271047227926, 1.0, 0.0, 0.01642710472279261
fp,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.0161290322580645, 1.0, 0.0, 0.016129032258064516
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.0159362549800797, 1.0, 0.0, 0.01593625498007968
getString,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.0158730158730158, 1.0, 0.0, 0.015873015873015872
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.0158730158730158, 1.0, 0.0, 0.015873015873015872
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.0157894736842104, 0.7, 0.0, 0.3157894736842105
getString,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.0154440154440154, 1.0, 0.0, 0.015444015444015444
getString,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.0153550863723608, 1.0, 0.0, 0.015355086372360844
fp,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.0144927536231885, 1.0, 0.0, 0.014492753623188406
getString,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 1.0142857142857142, 0.9, 0.0, 0.11428571428571428
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 1.0142857142857142, 0.9, 0.0, 0.11428571428571428
getString,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 1.0142857142857142, 0.8, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 1.0142857142857142, 0.8, 0.0, 0.21428571428571427
fp,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0140845070422535, 1.0, 0.0, 0.014084507042253521
fp.getString(),METHOD_INVOCATION, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 1.0138888888888888, 0.8888888888888888, 0.0, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 1.0138888888888888, 0.8888888888888888, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.0135135135135136, 1.0, 0.0, 0.013513513513513514
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0134228187919463, 1.0, 0.0, 0.013422818791946308
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 1.0133333333333334, 1.0, 0.0, 0.013333333333333334
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 1.0132450331125828, 1.0, 0.0, 0.013245033112582781
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 1.013157894736842, 0.75, 0.0, 0.2631578947368421
getString,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.013136288998358, 1.0, 0.0, 0.013136288998357963
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 1.0130718954248366, 0.7777777777777778, 0.0, 0.23529411764705882
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0130718954248366, 1.0, 0.0, 0.013071895424836602
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 1.0127388535031847, 1.0, 0.0, 0.012738853503184714
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 1.0126582278481013, 1.0, 0.0, 0.012658227848101266
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.0124223602484472, 1.0, 0.0, 0.012422360248447204
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.0123456790123457, 1.0, 0.0, 0.012345679012345678
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 1.0121212121212122, 1.0, 0.0, 0.012121212121212121
fp,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.0118343195266273, 1.0, 0.0, 0.011834319526627219
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 1.0118343195266273, 1.0, 0.0, 0.011834319526627219
fp,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 1.011764705882353, 1.0, 0.0, 0.011764705882352941
fp,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 1.0116279069767442, 1.0, 0.0, 0.011627906976744186
fp,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.0115606936416186, 1.0, 0.0, 0.011560693641618497
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 1.0114285714285713, 1.0, 0.0, 0.011428571428571429
fp,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 1.0114285714285713, 1.0, 0.0, 0.011428571428571429
fp,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.0113636363636365, 1.0, 0.0, 0.011363636363636364
fp,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 1.0112994350282485, 1.0, 0.0, 0.011299435028248588
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.01125, 1.0, 0.0, 0.01125
fp,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.0112359550561798, 1.0, 0.0, 0.011235955056179775
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.011173184357542, 1.0, 0.0, 0.0111731843575419
LiteralValueSource,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 1.011111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 1.011111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.011111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.011111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 1.011111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.011111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.011111111111111, 1.0, 0.0, 0.011111111111111112
fp,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 1.011111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 1.011111111111111, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 1.011111111111111, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 1.011111111111111, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 1.011111111111111, 0.7, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 1.011111111111111, 0.9, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.0109622411693058, 1.0, 0.0, 0.010962241169305725
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.010928961748634, 1.0, 0.0, 0.01092896174863388
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0108695652173914, 1.0, 0.0, 0.010869565217391304
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.0108108108108107, 1.0, 0.0, 0.010810810810810811
fp,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 1.010752688172043, 1.0, 0.0, 0.010752688172043012
fp,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 1.010752688172043, 1.0, 0.0, 0.010752688172043012
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.0105263157894737, 1.0, 0.0, 0.010526315789473684
fp,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0103626943005182, 1.0, 0.0, 0.010362694300518135
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 1.0103448275862068, 0.7, 0.0, 0.3103448275862069
fp,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 1.0102564102564102, 1.0, 0.0, 0.010256410256410256
fp,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.010204081632653, 1.0, 0.0, 0.01020408163265306
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.0101522842639594, 1.0, 0.0, 0.01015228426395939
fp,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.01, 1.0, 0.0, 0.01
fp,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.0098522167487685, 1.0, 0.0, 0.009852216748768473
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.0097087378640777, 1.0, 0.0, 0.009708737864077669
fp,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.0096153846153846, 1.0, 0.0, 0.009615384615384616
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 1.0095238095238095, 0.7, 0.0, 0.30952380952380953
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 1.0095238095238095, 0.7, 0.0, 0.30952380952380953
fp,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.0095238095238095, 1.0, 0.0, 0.009523809523809525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 1.0092592592592593, 0.75, 0.0, 0.25925925925925924
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.0091743119266054, 1.0, 0.0, 0.009174311926605505
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 1.009090909090909, 0.9, 0.0, 0.10909090909090909
fp,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.0088105726872247, 1.0, 0.0, 0.00881057268722467
fp,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.0087719298245614, 1.0, 0.0, 0.008771929824561403
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.0085470085470085, 1.0, 0.0, 0.008547008547008548
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.0084745762711864, 1.0, 0.0, 0.00847457627118644
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.0084388185654007, 1.0, 0.0, 0.008438818565400843
fp,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.0084033613445378, 1.0, 0.0, 0.008403361344537815
getString,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 1.0083333333333333, 0.8, 0.0, 0.20833333333333334
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.008298755186722, 1.0, 0.0, 0.008298755186721992
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.008298755186722, 1.0, 0.0, 0.008298755186721992
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 1.0082802547770702, 0.9, 0.0, 0.10828025477707007
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.0082644628099173, 1.0, 0.0, 0.008264462809917356
fp,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0081967213114753, 1.0, 0.0, 0.00819672131147541
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.008097165991903, 1.0, 0.0, 0.008097165991902834
fp,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.0079681274900398, 1.0, 0.0, 0.00796812749003984
fp,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.007936507936508, 1.0, 0.0, 0.007936507936507936
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.0078740157480315, 1.0, 0.0, 0.007874015748031496
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.0078740157480315, 1.0, 0.0, 0.007874015748031496
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.0078740157480315, 1.0, 0.0, 0.007874015748031496
fp,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.0078740157480315, 1.0, 0.0, 0.007874015748031496
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.0077519379844961, 1.0, 0.0, 0.007751937984496124
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.0077519379844961, 1.0, 0.0, 0.007751937984496124
fp,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.0076335877862594, 1.0, 0.0, 0.007633587786259542
fp,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.0076335877862594, 1.0, 0.0, 0.007633587786259542
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 1.0075949367088608, 0.9, 0.0, 0.10759493670886076
fp,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.0075757575757576, 1.0, 0.0, 0.007575757575757576
fp,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.007380073800738, 1.0, 0.0, 0.007380073800738007
fp,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.007380073800738, 1.0, 0.0, 0.007380073800738007
fp,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.007380073800738, 1.0, 0.0, 0.007380073800738007
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.0073260073260073, 1.0, 0.0, 0.007326007326007326
fp,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0072992700729928, 1.0, 0.0, 0.0072992700729927005
fp,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.0072992700729928, 1.0, 0.0, 0.0072992700729927005
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.0072463768115942, 1.0, 0.0, 0.007246376811594203
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.0072463768115942, 1.0, 0.0, 0.007246376811594203
fp,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.0072463768115942, 1.0, 0.0, 0.007246376811594203
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.0072202166064983, 1.0, 0.0, 0.007220216606498195
fp,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.0072202166064983, 1.0, 0.0, 0.007220216606498195
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.0072202166064983, 1.0, 0.0, 0.007220216606498195
fp,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.007168458781362, 1.0, 0.0, 0.007168458781362007
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
fp,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.0071428571428571, 1.0, 0.0, 0.007142857142857143
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0071047957371226, 1.0, 0.0, 0.007104795737122558
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.0070422535211268, 1.0, 0.0, 0.007042253521126761
getString,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.006993006993007, 1.0, 0.0, 0.006993006993006993
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.006896551724138, 1.0, 0.0, 0.006896551724137931
fp,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.0068493150684932, 1.0, 0.0, 0.00684931506849315
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.006825938566553, 1.0, 0.0, 0.006825938566552901
fp,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.0067567567567568, 1.0, 0.0, 0.006756756756756757
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0067567567567568, 1.0, 0.0, 0.006756756756756757
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0067114093959733, 1.0, 0.0, 0.006711409395973154
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0067114093959733, 1.0, 0.0, 0.006711409395973154
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0067114093959733, 1.0, 0.0, 0.006711409395973154
fp,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.0067114093959733, 1.0, 0.0, 0.006711409395973154
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 1.0066666666666666, 0.9, 0.0, 0.10666666666666667
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.0066445182724253, 1.0, 0.0, 0.006644518272425249
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0066225165562914, 1.0, 0.0, 0.006622516556291391
fp,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.0066006600660067, 1.0, 0.0, 0.006600660066006601
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 1.006578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 1.006578947368421, 0.875, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 1.006578947368421, 0.875, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 1.006578947368421, 0.625, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 1.006578947368421, 0.875, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 1.006578947368421, 0.875, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,intVal,SIMPLE_NAME, line no: 964, 1.006578947368421, 0.875, 0.0, 0.13157894736842105
fp,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.0064516129032257, 1.0, 0.0, 0.0064516129032258064
fp,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.0063897763578276, 1.0, 0.0, 0.006389776357827476
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.0063694267515924, 1.0, 0.0, 0.006369426751592357
fp,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.00625, 1.0, 0.0, 0.00625
fp,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.0060240963855422, 1.0, 0.0, 0.006024096385542169
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 1.0059602649006623, 0.9, 0.0, 0.10596026490066225
fp,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.005813953488372, 1.0, 0.0, 0.005813953488372093
fp,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.005813953488372, 1.0, 0.0, 0.005813953488372093
fp,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.0057803468208093, 1.0, 0.0, 0.005780346820809248
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.0056657223796035, 1.0, 0.0, 0.0056657223796034
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.0055900621118012, 0.9, 0.0, 0.10559006211180125
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.005464480874317, 1.0, 0.0, 0.00546448087431694
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.005464480874317, 1.0, 0.0, 0.00546448087431694
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0054347826086956, 1.0, 0.0, 0.005434782608695652
fp,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.005420054200542, 1.0, 0.0, 0.005420054200542005
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0052631578947369, 0.9, 0.0, 0.10526315789473684
getString,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 1.0052631578947369, 0.9, 0.0, 0.10526315789473684
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.0052219321148825, 1.0, 0.0, 0.005221932114882507
fp,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.0051546391752577, 1.0, 0.0, 0.005154639175257732
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 1.005050505050505, 0.7777777777777778, 0.0, 0.22727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 1.005050505050505, 0.7777777777777778, 0.0, 0.22727272727272727
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.0050251256281406, 1.0, 0.0, 0.005025125628140704
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.0050125313283207, 1.0, 0.0, 0.005012531328320802
fp,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.005, 1.0, 0.0, 0.005
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.0049382716049382, 0.9, 0.0, 0.10493827160493827
fp,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0048543689320388, 1.0, 0.0, 0.0048543689320388345
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.0048192771084337, 1.0, 0.0, 0.004819277108433735
fp,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.0048192771084337, 1.0, 0.0, 0.004819277108433735
fp,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.0047732696897376, 1.0, 0.0, 0.00477326968973747
fp,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.0046296296296295, 1.0, 0.0, 0.004629629629629629
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0042194092827004, 1.0, 0.0, 0.004219409282700422
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.004201680672269, 1.0, 0.0, 0.004201680672268907
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.004106776180698, 1.0, 0.0, 0.004106776180698152
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.0040160642570282, 1.0, 0.0, 0.004016064257028112
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.0040160642570282, 1.0, 0.0, 0.004016064257028112
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.00398406374502, 1.0, 0.0, 0.00398406374501992
fp,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.003968253968254, 1.0, 0.0, 0.003968253968253968
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.003968253968254, 1.0, 0.0, 0.003968253968253968
fp,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.0038610038610039, 1.0, 0.0, 0.003861003861003861
fp,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.0038387715930903, 1.0, 0.0, 0.003838771593090211
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0037593984962405, 1.0, 0.0, 0.0037593984962406013
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0037313432835822, 1.0, 0.0, 0.0037313432835820895
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 1.003584229390681, 0.7777777777777778, 0.0, 0.22580645161290322
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.0033783783783783, 1.0, 0.0, 0.0033783783783783786
fp,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.0032840722495895, 1.0, 0.0, 0.003284072249589491
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.002906976744186, 1.0, 0.0, 0.0029069767441860465
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.0025, 1.0, 0.0, 0.0025
fp,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.002436053593179, 1.0, 0.0, 0.00243605359317905
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0017761989342806, 1.0, 0.0, 0.0017761989342806395
fp,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.0017482517482517, 1.0, 0.0, 0.0017482517482517483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 1.0, 0.5, 0.0, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.875, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.875, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ms",STRING_LITERAL, line no: 527, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.625, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"NOW",STRING_LITERAL, line no: 841, 1.0, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 1.0, 0.8, 0.0, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 1.0, 0.7, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 1.0, 0.7, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 1.0, 0.7, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 1.0, 0.7, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 1.0, 0.5, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.8888888888888888, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.8888888888888888, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 1.0, 0.7777777777777778, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.8888888888888888, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.8888888888888888, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.8888888888888888, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.8888888888888888, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 1.0, 0.8888888888888888, 0.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.5555555555555556, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 1.0, 0.7777777777777778, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 1.0, 0.7777777777777778, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getString,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 1.0, 0.8, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 1.0, 0.8, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 1.0, 0.5, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 1.0, 0.9, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.0, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.0, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.0, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp,SIMPLE_NAME, line no: 66, 1.0, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 1.0, 0.8, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.6, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 1.0, 0.8, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 1.0, 0.8, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 1.0, 0.8, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 1.0, 0.1, 0.0, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.997289972899729, 0.7777777777777778, 0.0, 0.21951219512195122
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.997289972899729, 0.7777777777777778, 0.0, 0.21951219512195122
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.9971428571428571, 0.9, 0.0, 0.09714285714285714
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.9971428571428571, 0.9, 0.0, 0.09714285714285714
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.9967741935483871, 0.9, 0.0, 0.0967741935483871
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.9965909090909091, 0.9, 0.0, 0.09659090909090909
fp.getString(),METHOD_INVOCATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.9965277777777778, 0.7777777777777778, 0.0, 0.21875
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.996045197740113, 0.9, 0.0, 0.096045197740113
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.9955056179775281, 0.9, 0.0, 0.09550561797752809
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.9952380952380953, 0.8, 0.0, 0.09523809523809523
fp,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.9952380952380953, 0.8, 0.0, 0.09523809523809523
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.9949720670391061, 0.9, 0.0, 0.09497206703910614
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.9946745562130178, 0.9, 0.0, 0.09467455621301775
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.9941176470588236, 0.9, 0.0, 0.09411764705882353
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.9930232558139536, 0.9, 0.0, 0.09302325581395349
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.9928571428571429, 0.9, 0.0, 0.09285714285714286
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.9928571428571429, 0.9, 0.0, 0.09285714285714286
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.9928571428571429, 0.9, 0.0, 0.09285714285714286
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.9928571428571429, 0.9, 0.0, 0.09285714285714286
fp.getString(),METHOD_INVOCATION, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.9920634920634921, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,get,SIMPLE_NAME, line no: 86, 0.9920634920634921, 0.5555555555555556, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,length,SIMPLE_NAME, line no: 764, 0.9920634920634921, 0.5555555555555556, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.9920634920634921, 0.7777777777777778, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.9920634920634921, 0.6666666666666666, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.991891891891892, 0.9, 0.0, 0.0918918918918919
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.9916666666666667, 0.7, 0.0, 0.2916666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.9916666666666667, 0.7, 0.0, 0.2916666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.9914529914529914, 0.8888888888888888, 0.0, 0.10256410256410256
fp,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.990909090909091, 0.9, 0.0, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.9904761904761905, 0.7, 0.0, 0.19047619047619047
getString,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.9904761904761905, 0.8, 0.0, 0.19047619047619047
getString,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.9904761904761905, 0.8, 0.0, 0.19047619047619047
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.9903225806451612, 0.7, 0.0, 0.2903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.990154711673699, 0.8888888888888888, 0.0, 0.10126582278481013
LiteralValueSource,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.9888888888888889, 0.6, 0.0, 0.3888888888888889
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.9888888888888889, 0.6, 0.0, 0.3888888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.9883040935672515, 0.7777777777777778, 0.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.9883040935672515, 0.7777777777777778, 0.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.9883040935672515, 0.7777777777777778, 0.0, 0.21052631578947367
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.9882352941176471, 0.9, 0.0, 0.08823529411764706
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.9875912408759124, 0.9, 0.0, 0.08759124087591241
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.9875, 0.8, 0.0, 0.1875
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.987248322147651, 0.9, 0.0, 0.087248322147651
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.9871794871794872, 0.9, 0.0, 0.08717948717948718
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.9869565217391305, 0.9, 0.0, 0.08695652173913043
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.9869565217391305, 0.9, 0.0, 0.08695652173913043
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.9869565217391305, 0.9, 0.0, 0.08695652173913043
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.9869565217391305, 0.7, 0.0, 0.08695652173913043
fp,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.9869565217391305, 0.9, 0.0, 0.08695652173913043
getString,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.9869565217391305, 0.9, 0.0, 0.08695652173913043
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.9868421052631579, 0.125, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.9868421052631579, 0.625, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.9868421052631579, 0.625, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.9868421052631579, 0.75, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.9868421052631579, 0.75, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.9868421052631579, 0.75, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.9868421052631579, 0.75, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.9868421052631579, 0.75, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.9868421052631579, 0.75, 0.0, 0.23684210526315788
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.9867346938775511, 0.9, 0.0, 0.08673469387755102
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.9862944162436549, 0.9, 0.0, 0.08629441624365482
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.9860927152317881, 0.9, 0.0, 0.08609271523178808
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.9860927152317881, 0.9, 0.0, 0.08609271523178808
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.9860927152317881, 0.9, 0.0, 0.08609271523178808
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.9860927152317881, 0.9, 0.0, 0.08609271523178808
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.9860927152317881, 0.9, 0.0, 0.08609271523178808
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.9860215053763441, 0.9, 0.0, 0.08602150537634409
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.9857142857142858, 0.9, 0.0, 0.08571428571428572
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.9857142857142857, 0.7, 0.0, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.9857142857142857, 0.7, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.9852744310575635, 0.8888888888888888, 0.0, 0.0963855421686747
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.9845070422535211, 0.9, 0.0, 0.08450704225352113
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.9841269841269842, 0.5555555555555556, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.9841269841269842, 0.5555555555555556, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.9841269841269842, 0.1111111111111111, 0.0, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.9841269841269841, 0.8888888888888888, 0.0, 0.09523809523809523
LiteralValueSource,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.9838709677419355, 0.5, 0.0, 0.4838709677419355
LiteralValueSource,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.9838709677419355, 0.5, 0.0, 0.4838709677419355
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.983743842364532, 0.9, 0.0, 0.08374384236453201
fp,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.9833333333333334, 0.9, 0.0, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.9825242718446602, 0.9, 0.0, 0.0825242718446602
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.9819672131147541, 0.9, 0.0, 0.08196721311475409
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.9818181818181819, 0.8, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.9818181818181819, 0.8, 0.0, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.981081081081081, 0.9, 0.0, 0.08108108108108109
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.9809248554913295, 0.9, 0.0, 0.08092485549132948
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.9809248554913295, 0.9, 0.0, 0.08092485549132948
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.9805369127516779, 0.9, 0.0, 0.08053691275167785
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.9805369127516779, 0.9, 0.0, 0.08053691275167785
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.9805369127516779, 0.9, 0.0, 0.08053691275167785
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.9802631578947368, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.9802631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.9802631578947368, 0.875, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.9802631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.9802631578947368, 0.625, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.9802631578947368, 0.625, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.9802631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.9802631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.9802631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.9802631578947368, 0.875, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.9802631578947368, 0.875, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.9802631578947368, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.9802631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.9802631578947368, 0.875, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.9802631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context,SIMPLE_NAME, line no: 956, 0.9802631578947368, 0.125, 0.0, 0.10526315789473684
fp,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.98, 0.8, 0.0, 0.08
fp,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.98, 0.9, 0.0, 0.08
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.9797101449275363, 0.9, 0.0, 0.07971014492753623
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.9794701986754967, 0.9, 0.0, 0.07947019867549669
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.9794701986754967, 0.9, 0.0, 0.07947019867549669
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.9794701986754967, 0.9, 0.0, 0.07947019867549669
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.9794701986754967, 0.9, 0.0, 0.07947019867549669
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.9794701986754967, 0.9, 0.0, 0.07947019867549669
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.9794701986754967, 0.9, 0.0, 0.07947019867549669
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.9791666666666666, 0.75, 0.0, 0.22916666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.9789473684210527, 0.9, 0.0, 0.07894736842105263
fp.getString(),METHOD_INVOCATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.978776529338327, 0.8888888888888888, 0.0, 0.0898876404494382
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.9784313725490197, 0.9, 0.0, 0.0784313725490196
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.9777777777777779, 0.9, 0.0, 0.07777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.9777777777777779, 0.7777777777777778, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.9777777777777779, 0.7777777777777778, 0.0, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.9777777777777777, 0.7, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.976923076923077, 0.9, 0.0, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.9760869565217392, 0.9, 0.0, 0.07608695652173914
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.9760869565217392, 0.9, 0.0, 0.07608695652173914
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.9758620689655172, 0.7, 0.0, 0.27586206896551724
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.9758620689655172, 0.7, 0.0, 0.27586206896551724
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.9758620689655172, 0.7, 0.0, 0.27586206896551724
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.9758620689655172, 0.7, 0.0, 0.27586206896551724
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.9755813953488373, 0.9, 0.0, 0.0755813953488372
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.9755813953488373, 0.9, 0.0, 0.0755813953488372
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.975, 0.5, 0.0, 0.475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.975, 0.5, 0.0, 0.475
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.975, 0.9, 0.0, 0.075
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.9748898678414097, 0.9, 0.0, 0.07488986784140969
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.974561403508772, 0.9, 0.0, 0.07456140350877193
getString,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.9739130434782609, 0.6, 0.0, 0.17391304347826086
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.9736842105263157, 0.5, 0.0, 0.47368421052631576
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.9736842105263157, 0.5, 0.0, 0.47368421052631576
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.9736842105263157, 0.5, 0.0, 0.47368421052631576
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.9733944954128441, 0.9, 0.0, 0.07339449541284404
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.9727272727272727, 0.7, 0.0, 0.2727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.9727272727272727, 0.7, 0.0, 0.2727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.9726495726495726, 0.9, 0.0, 0.07264957264957266
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.972538860103627, 0.9, 0.0, 0.07253886010362694
getString,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.9724137931034483, 0.8, 0.0, 0.1724137931034483
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.9721649484536082, 0.9, 0.0, 0.07216494845360824
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.9721153846153846, 0.9, 0.0, 0.07211538461538461
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.9714285714285714, 0.4, 0.0, 0.5714285714285714
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.9714285714285714, 0.4, 0.0, 0.5714285714285714
fp,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.9714285714285714, 0.9, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.9713261648745519, 0.7777777777777778, 0.0, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.9713261648745519, 0.7777777777777778, 0.0, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.9713261648745519, 0.7777777777777778, 0.0, 0.1935483870967742
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.9710382513661202, 0.9, 0.0, 0.07103825136612021
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.9710382513661202, 0.9, 0.0, 0.07103825136612021
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.9708661417322835, 0.9, 0.0, 0.07086614173228346
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.9708661417322835, 0.9, 0.0, 0.07086614173228346
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.9708661417322835, 0.9, 0.0, 0.07086614173228346
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.9705394190871369, 0.9, 0.0, 0.07053941908713693
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.9697674418604652, 0.9, 0.0, 0.06976744186046512
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.9695121951219512, 0.75, 0.0, 0.21951219512195122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.9695121951219512, 0.75, 0.0, 0.21951219512195122
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.9688259109311741, 0.9, 0.0, 0.06882591093117409
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.9682539682539683, 0.7777777777777778, 0.0, 0.19047619047619047
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.9682539682539683, 0.7777777777777778, 0.0, 0.19047619047619047
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.9679611650485437, 0.9, 0.0, 0.06796116504854369
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.9677966101694916, 0.9, 0.0, 0.06779661016949153
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.9677290836653387, 0.9, 0.0, 0.06772908366533864
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.9675105485232067, 0.9, 0.0, 0.06751054852320675
getString,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.9674157303370787, 0.9, 0.0, 0.06741573033707865
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.9672268907563025, 0.9, 0.0, 0.06722689075630252
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.9671052631578947, 0.625, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.9671052631578947, 0.625, 0.0, 0.34210526315789475
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.9666666666666667, 0.6, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.9666666666666667, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.9666666666666667, 0.9, 0.0, 0.06666666666666667
fp,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.9666666666666667, 0.8, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.9666666666666666, 0.7, 0.0, 0.26666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.9666666666666666, 0.7, 0.0, 0.26666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.9666666666666666, 0.7, 0.0, 0.26666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.9666666666666666, 0.7, 0.0, 0.26666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.9666666666666666, 0.7, 0.0, 0.26666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.9666666666666666, 0.7, 0.0, 0.26666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.9664206642066421, 0.9, 0.0, 0.06642066420664207
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.9664206642066421, 0.9, 0.0, 0.06642066420664207
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.9664206642066421, 0.9, 0.0, 0.06642066420664207
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.9663900414937759, 0.9, 0.0, 0.06639004149377593
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.9661157024793389, 0.9, 0.0, 0.06611570247933884
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.9658914728682171, 0.9, 0.0, 0.06589147286821706
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.9652777777777778, 0.7777777777777778, 0.0, 0.1875
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.9649819494584838, 0.9, 0.0, 0.06498194945848375
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.9648854961832061, 0.9, 0.0, 0.0648854961832061
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.9645161290322581, 0.9, 0.0, 0.06451612903225806
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.9642570281124498, 0.9, 0.0, 0.0642570281124498
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.9642570281124498, 0.9, 0.0, 0.0642570281124498
getString,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.9641025641025641, 0.9, 0.0, 0.0641025641025641
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.9634920634920635, 0.9, 0.0, 0.06349206349206349
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.9632911392405064, 0.9, 0.0, 0.06329113924050633
getString,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.9632911392405064, 0.9, 0.0, 0.06329113924050633
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.963157894736842, 0.7, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.9630252100840336, 0.9, 0.0, 0.06302521008403361
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.962992125984252, 0.9, 0.0, 0.06299212598425197
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.962962962962963, 0.7777777777777778, 0.0, 0.18518518518518517
fp,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.9625, 0.8, 0.0, 0.0625
fp,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.9625, 0.8, 0.0, 0.0625
fp,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.9625, 0.9, 0.0, 0.0625
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.9625, 0.9, 0.0, 0.0625
getString,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.9625, 0.9, 0.0, 0.0625
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.9625, 0.9, 0.0, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.9622710622710623, 0.9, 0.0, 0.06227106227106227
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.962043795620438, 0.9, 0.0, 0.06204379562043796
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.9614754098360656, 0.9, 0.0, 0.06147540983606557
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.9613718411552347, 0.9, 0.0, 0.061371841155234655
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.9613718411552347, 0.9, 0.0, 0.061371841155234655
getString,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.9612903225806452, 0.8, 0.0, 0.16129032258064516
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.9610687022900763, 0.9, 0.0, 0.061068702290076333
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.9606060606060607, 0.9, 0.0, 0.06060606060606061
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.9605263157894737, 0.125, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.9605263157894737, 0.75, 0.0, 0.21052631578947367
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.9604026845637584, 0.9, 0.0, 0.06040268456375839
fp.getString(),METHOD_INVOCATION, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.9603174603174602, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,List,SIMPLE_NAME, line no: 193, 0.9603174603174602, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,one,SIMPLE_NAME, line no: 275, 0.9603174603174602, 0.8888888888888888, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,two,SIMPLE_NAME, line no: 276, 0.9603174603174602, 0.8888888888888888, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,req,SIMPLE_NAME, line no: 347, 0.9603174603174602, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,f,SIMPLE_NAME, line no: 357, 0.9603174603174602, 0.6666666666666666, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.9603174603174602, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.9603174603174602, 0.6666666666666666, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.9602409638554217, 0.9, 0.0, 0.060240963855421686
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.9600000000000001, 0.8, 0.0, 0.16
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.9600000000000001, 0.8, 0.0, 0.16
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.9598591549295775, 0.9, 0.0, 0.05985915492957746
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.9595959595959596, 0.7777777777777778, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.9595238095238096, 0.9, 0.0, 0.05952380952380952
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.9590909090909091, 0.8, 0.0, 0.1590909090909091
fp,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.9588235294117647, 0.9, 0.0, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.9586206896551724, 0.9, 0.0, 0.05862068965517241
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.9582191780821918, 0.9, 0.0, 0.05821917808219178
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.9580645161290322, 0.7, 0.0, 0.25806451612903225
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.9580204778156997, 0.9, 0.0, 0.05802047781569966
getString,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.9578947368421054, 0.8, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.9574324324324325, 0.9, 0.0, 0.057432432432432436
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.9573248407643312, 0.9, 0.0, 0.05732484076433121
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.9572649572649573, 0.7777777777777778, 0.0, 0.1794871794871795
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.9572649572649573, 0.7777777777777778, 0.0, 0.1794871794871795
fp,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.9571428571428572, 0.9, 0.0, 0.05714285714285714
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.9564784053156147, 0.9, 0.0, 0.05647840531561462
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.956390977443609, 0.9, 0.0, 0.05639097744360902
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.9563492063492063, 0.75, 0.0, 0.20634920634920634
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.9563492063492063, 0.75, 0.0, 0.20634920634920634
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.9561056105610561, 0.9, 0.0, 0.056105610561056105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.9560975609756097, 0.5, 0.2, 0.25609756097560976
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.9559701492537314, 0.9, 0.0, 0.055970149253731345
LiteralValueSource,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.9558139534883721, 0.7, 0.0, 0.2558139534883721
LiteralValueSource,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 0.9555555555555556, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 0.9555555555555556, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 0.9555555555555556, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 0.9555555555555556, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.9555555555555556, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.9555555555555556, 0.8, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.9555555555555556, 0.4, 0.0, 0.05555555555555555
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
fp,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.9555555555555556, 0.9, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.9548387096774194, 0.9, 0.0, 0.054838709677419356
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.9543130990415336, 0.9, 0.0, 0.054313099041533544
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.954248366013072, 0.7777777777777778, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.954248366013072, 0.7777777777777778, 0.0, 0.17647058823529413
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.9542168674698795, 0.9, 0.0, 0.05421686746987952
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.9539473684210527, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,List,SIMPLE_NAME, line no: 193, 0.9539473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.9539473684210527, 0.875, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.9539473684210527, 0.875, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.9539473684210527, 0.875, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.9539473684210527, 0.625, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.9539473684210527, 0.875, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.9539473684210527, 0.125, 0.0, 0.07894736842105263
fp,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.9538461538461539, 0.8, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.9538461538461539, 0.8, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.9538461538461539, 0.8, 0.0, 0.15384615384615385
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.953125, 0.9, 0.0, 0.053125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.9525316455696202, 0.75, 0.0, 0.20253164556962025
fp.getString(),METHOD_INVOCATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.9523809523809523, 0.6666666666666666, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.9523809523809523, 0.6666666666666666, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.9516908212560387, 0.5555555555555556, 0.0, 0.17391304347826086
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.9515151515151515, 0.8, 0.0, 0.15151515151515152
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.9508547008547008, 0.7777777777777778, 0.0, 0.17307692307692307
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.9501915708812261, 0.7777777777777778, 0.0, 0.1724137931034483
fp.getString(),METHOD_INVOCATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.9501915708812261, 0.7777777777777778, 0.0, 0.1724137931034483
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.9501915708812261, 0.7777777777777778, 0.0, 0.1724137931034483
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.9501915708812261, 0.7777777777777778, 0.0, 0.1724137931034483
LiteralValueSource,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.95, 0.7, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.95, 0.7, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.95, 0.7, 0.0, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.9492063492063492, 0.7777777777777778, 0.0, 0.17142857142857143
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.9492063492063492, 0.7777777777777778, 0.0, 0.17142857142857143
fp,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.9487804878048781, 0.9, 0.0, 0.04878048780487805
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.9481586402266289, 0.9, 0.0, 0.04815864022662889
getString,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.9481481481481482, 0.8, 0.0, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.9479166666666666, 0.6666666666666666, 0.0, 0.28125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.9473684210526316, 0.5, 0.0, 0.4473684210526316
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.947008547008547, 0.7777777777777778, 0.0, 0.16923076923076924
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.9463414634146342, 0.8, 0.0, 0.14634146341463414
getString,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.9463414634146342, 0.8, 0.0, 0.14634146341463414
getString,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.9463414634146342, 0.8, 0.0, 0.14634146341463414
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.9460704607046071, 0.9, 0.0, 0.04607046070460705
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.9454545454545454, 0.9, 0.0, 0.045454545454545456
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9450928381962865, 0.9, 0.0, 0.04509283819628647
fp.getString(),METHOD_INVOCATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.9444444444444444, 0.7777777777777778, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.9444444444444444, 0.7777777777777778, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.9444444444444444, 0.7777777777777778, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.9444444444444444, 0.7777777777777778, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.9444444444444444, 0.7777777777777778, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.9444444444444444, 0.7777777777777778, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.9443864229765013, 0.9, 0.0, 0.044386422976501305
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.9436046511627907, 0.9, 0.0, 0.0436046511627907
fp,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.9434782608695652, 0.9, 0.0, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.9428571428571428, 0.8, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.9428571428571428, 0.8, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.942713567839196, 0.9, 0.0, 0.04271356783919598
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.9426065162907269, 0.9, 0.0, 0.042606516290726815
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.9425, 0.9, 0.0, 0.0425
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.9409638554216868, 0.9, 0.0, 0.04096385542168675
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.9409638554216868, 0.9, 0.0, 0.04096385542168675
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.9407894736842105, 0.625, 0.0, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.9405727923627685, 0.9, 0.0, 0.0405727923627685
fp,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.9400000000000001, 0.9, 0.0, 0.04
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.9393518518518519, 0.9, 0.0, 0.03935185185185185
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.9390681003584229, 0.7777777777777778, 0.0, 0.16129032258064516
fp.getString(),METHOD_INVOCATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.9390681003584229, 0.7777777777777778, 0.0, 0.16129032258064516
getString,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.9388888888888889, 0.8, 0.0, 0.1388888888888889
fp,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.9384615384615385, 0.9, 0.0, 0.038461538461538464
LiteralValueSource,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.9380952380952381, 0.7, 0.0, 0.23809523809523808
getString,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.9379310344827587, 0.8, 0.0, 0.13793103448275862
getString,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.9379310344827587, 0.8, 0.0, 0.13793103448275862
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.9377358490566038, 0.9, 0.0, 0.03773584905660377
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.9365671641791045, 0.75, 0.0, 0.1865671641791045
getString,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.9363636363636364, 0.8, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.9363636363636364, 0.8, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.935672514619883, 0.7777777777777778, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.9349075975359343, 0.9, 0.0, 0.03490759753593429
getString,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.9346153846153846, 0.8, 0.0, 0.1346153846153846
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.9342105263157895, 0.75, 0.0, 0.18421052631578946
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.9338645418326693, 0.9, 0.0, 0.03386454183266932
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.9337301587301587, 0.9, 0.0, 0.03373015873015873
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.9337301587301587, 0.9, 0.0, 0.03373015873015873
LiteralValueSource,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.9333333333333333, 0.1, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.9333333333333333, 0.5, 0.0, 0.43333333333333335
fp.getString(),METHOD_INVOCATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.9333333333333333, 0.6666666666666666, 0.0, 0.26666666666666666
fp,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.9333333333333333, 0.8, 0.0, 0.13333333333333333
getString,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.9333333333333333, 0.8, 0.0, 0.13333333333333333
getString,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.9333333333333333, 0.8, 0.0, 0.13333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.9328185328185329, 0.9, 0.0, 0.032818532818532815
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.9326295585412668, 0.9, 0.0, 0.03262955854126679
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.9325581395348836, 0.7, 0.0, 0.23255813953488372
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.9320754716981132, 0.8, 0.0, 0.1320754716981132
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.9316239316239316, 0.7777777777777778, 0.0, 0.15384615384615385
fp,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.93125, 0.9, 0.0, 0.03125
getString,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.9307692307692308, 0.4, 0.0, 0.23076923076923078
fp,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.9303030303030303, 0.9, 0.0, 0.030303030303030304
LiteralValueSource,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.9297297297297297, 0.7, 0.0, 0.22972972972972974
getString,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.9296296296296297, 0.8, 0.0, 0.12962962962962962
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.9290322580645162, 0.8, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.9290322580645162, 0.8, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.9290322580645162, 0.8, 0.0, 0.12903225806451613
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.9287162162162163, 0.9, 0.0, 0.028716216216216218
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.9279146141215107, 0.9, 0.0, 0.027914614121510674
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.9276315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one,SIMPLE_NAME, line no: 275, 0.9276315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,two,SIMPLE_NAME, line no: 276, 0.9276315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,req,SIMPLE_NAME, line no: 347, 0.9276315789473684, 0.5, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.9276315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.9276315789473684, 0.875, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.9276315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.9276315789473684, 0.875, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.9263157894736842, 0.9, 0.0, 0.02631578947368421
fp,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.925, 0.8, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.925, 0.8, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.925, 0.8, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.925, 0.8, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9238726790450928, 0.9, 0.0, 0.023872679045092837
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.9236111111111112, 0.7777777777777778, 0.0, 0.14583333333333334
fp.getString(),METHOD_INVOCATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9233716475095785, 0.8888888888888888, 0.0, 0.034482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.9222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.9222222222222222, 0.6, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.9222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.9222222222222222, 0.6, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.9222222222222222, 0.7, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.9222222222222222, 0.5, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.9222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.92125, 0.9, 0.0, 0.02125
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.9212121212121213, 0.8, 0.0, 0.12121212121212122
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.9207064555420219, 0.9, 0.0, 0.020706455542021926
fp.getString(),METHOD_INVOCATION, line no: 107,put,SIMPLE_NAME, line no: 75, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.9206349206349207, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.9206349206349207, 0.5555555555555556, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,other,SIMPLE_NAME, line no: 993, 0.9206349206349207, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.9206349206349207, 0.3333333333333333, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.9206349206349207, 0.3333333333333333, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.9206349206349207, 0.7777777777777778, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.9193548387096775, 0.5, 0.0, 0.41935483870967744
getString,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.9190476190476191, 0.8, 0.0, 0.11904761904761904
getString,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.9190476190476191, 0.8, 0.0, 0.11904761904761904
getString,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.9190476190476191, 0.8, 0.0, 0.11904761904761904
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.9184027777777778, 0.7777777777777778, 0.0, 0.140625
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.9184027777777778, 0.7777777777777778, 0.0, 0.140625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.9183333333333333, 0.625, 0.0, 0.29333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.9181286549707602, 0.7777777777777778, 0.0, 0.14035087719298245
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.917391304347826, 0.6, 0.0, 0.21739130434782608
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.917312661498708, 0.7777777777777778, 0.0, 0.13953488372093023
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.9166666666666667, 0.7777777777777778, 0.0, 0.1388888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.9166666666666667, 0.7777777777777778, 0.0, 0.1388888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.9166666666666666, 0.6666666666666666, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.9159857904085258, 0.9, 0.0, 0.015985790408525755
LiteralValueSource,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.9157894736842105, 0.1, 0.0, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.9157342657342658, 0.9, 0.0, 0.015734265734265736
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.9157088122605364, 0.7777777777777778, 0.0, 0.13793103448275862
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.9153846153846155, 0.1, 0.0, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.9150326797385622, 0.7777777777777778, 0.0, 0.13725490196078433
getString,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.9142857142857144, 0.6, 0.0, 0.11428571428571428
getString,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.9142857142857144, 0.8, 0.0, 0.11428571428571428
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.9142857142857143, 0.7, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.9142857142857143, 0.7, 0.0, 0.21428571428571427
fp,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.9128205128205128, 0.9, 0.0, 0.01282051282051282
fp.getString(),METHOD_INVOCATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.9126984126984128, 0.5555555555555556, 0.0, 0.35714285714285715
fp.getString(),METHOD_INVOCATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.9126984126984128, 0.5555555555555556, 0.0, 0.35714285714285715
fp,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.9126582278481012, 0.9, 0.0, 0.012658227848101266
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.9123931623931624, 0.7777777777777778, 0.0, 0.1346153846153846
fp,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.9120481927710844, 0.9, 0.0, 0.012048192771084338
fp,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.9119047619047619, 0.9, 0.0, 0.011904761904761904
fp,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.9112359550561798, 0.9, 0.0, 0.011235955056179775
LiteralValueSource,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.9111111111111112, 0.5, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.9111111111111112, 0.5, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.9111111111111112, 0.6, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.9111111111111112, 0.6, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.9111111111111112, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.9111111111111112, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.9111111111111112, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.9111111111111112, 0.1, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.9111111111111112, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.9111111111111112, 0.5, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.9111111111111112, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.9111111111111112, 0.8, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.9111111111111112, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.9111111111111112, 0.1, 0.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.9111111111111111, 0.7777777777777778, 0.0, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.9111111111111111, 0.7777777777777778, 0.0, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.9111111111111111, 0.7777777777777778, 0.0, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.9111111111111111, 0.7777777777777778, 0.0, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.909853249475891, 0.7777777777777778, 0.0, 0.1320754716981132
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.909375, 0.8, 0.0, 0.109375
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.909375, 0.8, 0.0, 0.109375
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.9093567251461988, 0.7777777777777778, 0.0, 0.13157894736842105
getString,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.9086956521739131, 0.8, 0.0, 0.10869565217391304
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description,SIMPLE_NAME, line no: 951, 0.9078947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.9078947368421053, 0.625, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.9078947368421053, 0.75, 0.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.9076923076923077, 0.6, 0.0, 0.3076923076923077
fp,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9053050397877984, 0.9, 0.0, 0.005305039787798408
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.9052631578947369, 0.8, 0.0, 0.10526315789473684
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.9043600562587905, 0.7777777777777778, 0.0, 0.12658227848101267
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.9041666666666667, 0.8, 0.0, 0.10416666666666667
getString,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.903448275862069, 0.8, 0.0, 0.10344827586206896
getString,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.903448275862069, 0.8, 0.0, 0.10344827586206896
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.903125, 0.7, 0.0, 0.203125
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.903125, 0.7, 0.0, 0.203125
getString,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.9025641025641026, 0.8, 0.0, 0.10256410256410256
getString,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.9025641025641026, 0.8, 0.0, 0.10256410256410256
fp.getString(),METHOD_INVOCATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.9019607843137254, 0.6666666666666666, 0.0, 0.23529411764705882
fp.getString(),METHOD_INVOCATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.9018970189701897, 0.5555555555555556, 0.2, 0.14634146341463414
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.9013157894736842, 0.875, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f,SIMPLE_NAME, line no: 357, 0.9013157894736842, 0.625, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.9013157894736842, 0.875, 0.0, 0.02631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.9, 0.1, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.9, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.9, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.9, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.9, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.9, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.9, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.9, 0.9, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.9, 0.8, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.9, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.9, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.9, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.9, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.9, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.9, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.9, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.9, 0.1, 0.0, 0.5
fp,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.9, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.9, 0.9, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.9, 0.9, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.9, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.9, 0.8, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.9, 0.8, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.9, 0.8, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.9, 0.8, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.8999999999999999, 0.1, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.8999999999999999, 0.6, 0.0, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.8997289972899729, 0.7777777777777778, 0.0, 0.12195121951219512
getString,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.8980392156862745, 0.8, 0.0, 0.09803921568627451
getString,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.8972222222222223, 0.8, 0.0, 0.09722222222222222
getString,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.8972222222222223, 0.8, 0.0, 0.09722222222222222
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.8952380952380953, 0.8, 0.0, 0.09523809523809523
getString,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.8952380952380953, 0.8, 0.0, 0.09523809523809523
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.8951219512195121, 0.7, 0.0, 0.1951219512195122
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.8951219512195121, 0.7, 0.0, 0.1951219512195122
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.8951219512195121, 0.7, 0.0, 0.1951219512195122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.8947368421052632, 0.5, 0.0, 0.39473684210526316
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.8947368421052632, 0.5, 0.0, 0.39473684210526316
LiteralValueSource,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.8944444444444444, 0.7, 0.0, 0.19444444444444445
getString,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.8943396226415095, 0.8, 0.0, 0.09433962264150944
fp.getString(),METHOD_INVOCATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.8940568475452196, 0.7777777777777778, 0.0, 0.11627906976744186
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.8935483870967742, 0.7, 0.0, 0.1935483870967742
LiteralValueSource,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.8935483870967742, 0.7, 0.0, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.8931623931623932, 0.1111111111111111, 0.0, 0.11538461538461539
getString,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.8930232558139535, 0.8, 0.0, 0.09302325581395349
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.8928571428571428, 0.75, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.8920634920634921, 0.5555555555555556, 0.0, 0.11428571428571428
fp,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.890909090909091, 0.1, 0.0, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.890909090909091, 0.7, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.890909090909091, 0.8, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.890909090909091, 0.8, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.890909090909091, 0.6, 0.0, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.8888888888888888, 0.5, 0.0, 0.3888888888888889
LiteralValueSource,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.8888888888888888, 0.5, 0.0, 0.3888888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.8888888888888888, 0.7777777777777778, 0.0, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.8888888888888888, 0.7777777777777778, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.8886075949367089, 0.8, 0.0, 0.08860759493670886
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.888157894736842, 0.625, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.8875, 0.7, 0.0, 0.1875
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.8875, 0.7, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.8857142857142857, 0.6, 0.0, 0.2857142857142857
getString,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.8857142857142857, 0.6, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.8840579710144927, 0.6666666666666666, 0.0, 0.21739130434782608
fp,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.8833333333333334, 0.1, 0.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.8833333333333334, 0.8, 0.0, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.881578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.881578947368421, 0.75, 0.0, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.8809523809523809, 0.3333333333333333, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.8809523809523809, 0.6666666666666666, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.8805555555555555, 0.7, 0.0, 0.18055555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.8805555555555555, 0.7, 0.0, 0.18055555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.88, 0.4, 0.0, 0.48
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.88, 0.4, 0.0, 0.48
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.8794871794871795, 0.7, 0.0, 0.1794871794871795
LiteralValueSource,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.8777777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.8777777777777778, 0.6, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.8777777777777778, 0.6, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.8777777777777778, 0.6, 0.0, 0.2777777777777778
fp,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.8769230769230769, 0.1, 0.0, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.8769230769230769, 0.1, 0.0, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.8769230769230769, 0.8, 0.0, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.8769230769230769, 0.8, 0.0, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.8758620689655172, 0.6, 0.0, 0.27586206896551724
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.875, 0.625, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.875, 0.875, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,E,SIMPLE_NAME, line no: 539, 0.875, 0.875, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.875, 0.5, 0.0, 0.375
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.875, 0.5, 0.0, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.875, 0.6666666666666666, 0.0, 0.20833333333333334
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.875, 0.6666666666666666, 0.0, 0.20833333333333334
getString,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.8739130434782608, 0.7, 0.0, 0.17391304347826086
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.8735632183908045, 0.6666666666666666, 0.0, 0.20689655172413793
getString,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.8727272727272727, 0.1, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.8727272727272727, 0.6, 0.0, 0.2727272727272727
getString,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.8724137931034482, 0.7, 0.0, 0.1724137931034483
getString,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.8714285714285714, 0.8, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.8713450292397661, 0.5555555555555556, 0.0, 0.3157894736842105
getString,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.8689655172413794, 0.8, 0.0, 0.06896551724137931
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.8666666666666667, 0.1111111111111111, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.8666666666666667, 0.6666666666666666, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.8666666666666667, 0.8, 0.0, 0.06666666666666667
fp,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.8666666666666667, 0.8, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.8666666666666667, 0.8, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.8666666666666667, 0.8, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.8666666666666667, 0.8, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.8666666666666667, 0.8, 0.0, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.8666666666666666, 0.5, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.8666666666666666, 0.6, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.8666666666666666, 0.6, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.8666666666666666, 0.4, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.8666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.8666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.8666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.8666666666666666, 0.7, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.864516129032258, 0.8, 0.0, 0.06451612903225806
getString,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.864516129032258, 0.8, 0.0, 0.06451612903225806
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.8636363636363636, 0.5, 0.0, 0.36363636363636365
fp,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.8625, 0.8, 0.0, 0.0625
getString,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8625, 0.8, 0.0, 0.0625
getString,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8625, 0.8, 0.0, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.86, 0.7, 0.0, 0.16
LiteralValueSource,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.86, 0.7, 0.0, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.8598673300165838, 0.7777777777777778, 0.0, 0.08208955223880597
getString,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8588235294117648, 0.8, 0.0, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.8578947368421053, 0.7, 0.0, 0.15789473684210525
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.8571428571428572, 0.8, 0.0, 0.05714285714285714
getString,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.85625, 0.7, 0.0, 0.15625
LiteralValueSource,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.8555555555555556, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.8555555555555556, 0.8, 0.0, 0.05555555555555555
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.8555555555555556, 0.5555555555555556, 0.0, 0.3
fp,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.8555555555555556, 0.8, 0.0, 0.05555555555555555
fp,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.8555555555555556, 0.8, 0.0, 0.05555555555555555
getString,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.8555555555555556, 0.8, 0.0, 0.05555555555555555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.8552631578947368, 0.625, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.8552631578947368, 0.625, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.8552631578947368, 0.625, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.8552631578947368, 0.625, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,length,SIMPLE_NAME, line no: 764, 0.8552631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.8552631578947368, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.8552631578947368, 0.375, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.8552631578947368, 0.75, 0.0, 0.10526315789473684
fp.getString(),METHOD_INVOCATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.8541666666666666, 0.6666666666666666, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.8538461538461538, 0.7, 0.0, 0.15384615384615385
fp,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
getString,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
getString,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.8526315789473684, 0.8, 0.0, 0.05263157894736842
getString,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.8505050505050505, 0.8, 0.0, 0.050505050505050504
fp,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.8500000000000001, 0.8, 0.0, 0.05
getString,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.85, 0.6, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.85, 0.6, 0.0, 0.15
fp.getString(),METHOD_INVOCATION, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.8492063492063492, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,p,SIMPLE_NAME, line no: 74, 0.8492063492063492, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.8492063492063492, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.8492063492063492, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,log,SIMPLE_NAME, line no: 395, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.8492063492063492, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,df,SIMPLE_NAME, line no: 833, 0.8492063492063492, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.8492063492063492, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.8492063492063492, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.8492063492063492, 0.7777777777777778, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.8487804878048781, 0.8, 0.0, 0.04878048780487805
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.8484848484848485, 0.7777777777777778, 0.0, 0.0707070707070707
fp,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.8476190476190477, 0.8, 0.0, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.8476190476190477, 0.8, 0.0, 0.047619047619047616
getString,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.8476190476190477, 0.8, 0.0, 0.047619047619047616
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.8472222222222223, 0.5555555555555556, 0.0, 0.2916666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.8463414634146341, 0.7, 0.0, 0.14634146341463414
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.8463414634146341, 0.7, 0.0, 0.14634146341463414
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.8452380952380952, 0.6666666666666666, 0.0, 0.17857142857142858
getString,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.8444444444444444, 0.8, 0.0, 0.044444444444444446
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.8434782608695652, 0.8, 0.0, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.8434782608695652, 0.6, 0.0, 0.043478260869565216
fp.getString(),METHOD_INVOCATION, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.8431372549019608, 0.6666666666666666, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.8431372549019608, 0.6666666666666666, 0.0, 0.17647058823529413
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.8428571428571427, 0.6, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.8428571428571427, 0.7, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.8428571428571427, 0.7, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.8428571428571427, 0.7, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.8428571428571427, 0.7, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.8423280423280424, 0.8, 0.0, 0.042328042328042326
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.8421052631578947, 0.5, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.8421052631578947, 0.5, 0.0, 0.34210526315789475
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.8421052631578947, 0.5, 0.0, 0.34210526315789475
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.8416666666666667, 0.8, 0.0, 0.041666666666666664
fp.getString(),METHOD_INVOCATION, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.8412698412698413, 0.5555555555555556, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.8412698412698413, 0.5555555555555556, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.8412698412698413, 0.5555555555555556, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.8412698412698413, 0.5555555555555556, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.8405797101449275, 0.6666666666666666, 0.0, 0.17391304347826086
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.8403846153846154, 0.625, 0.0, 0.2153846153846154
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.8395348837209302, 0.7, 0.0, 0.13953488372093023
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.8384615384615384, 0.7, 0.0, 0.13846153846153847
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.8372549019607842, 0.7, 0.0, 0.13725490196078433
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.835978835978836, 0.7777777777777778, 0.0, 0.0582010582010582
fp,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.8357142857142857, 0.8, 0.0, 0.03571428571428571
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.8355263157894737, 0.625, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.8355263157894737, 0.625, 0.0, 0.21052631578947367
getString,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.8352941176470587, 0.6, 0.0, 0.23529411764705882
fp,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.8344827586206897, 0.8, 0.0, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.8344827586206897, 0.8, 0.0, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.8344827586206897, 0.8, 0.0, 0.034482758620689655
getString,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.8344827586206897, 0.8, 0.0, 0.034482758620689655
getString,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.8344827586206897, 0.8, 0.0, 0.034482758620689655
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.8333333333333334, 0.5555555555555556, 0.0, 0.2777777777777778
getString,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.8333333333333334, 0.8, 0.0, 0.03333333333333333
getString,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.8333333333333334, 0.8, 0.0, 0.03333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.8333333333333333, 0.5, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.8333333333333333, 0.5, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.8333333333333333, 0.5, 0.0, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.8333333333333333, 0.6666666666666666, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.8333333333333333, 0.6666666666666666, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.8333333333333333, 0.6666666666666666, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.832258064516129, 0.8, 0.0, 0.03225806451612903
LiteralValueSource,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.8320754716981131, 0.7, 0.0, 0.1320754716981132
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.8304347826086956, 0.7, 0.0, 0.13043478260869565
getString,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.8304347826086956, 0.7, 0.0, 0.13043478260869565
getString,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.8290322580645161, 0.7, 0.0, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,get,SIMPLE_NAME, line no: 86, 0.8289473684210527, 0.5, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.8289473684210527, 0.625, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,log,SIMPLE_NAME, line no: 395, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.8289473684210527, 0.625, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.8289473684210527, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.8289473684210527, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other,SIMPLE_NAME, line no: 993, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.8289473684210527, 0.75, 0.0, 0.07894736842105263
fp,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.8285714285714286, 0.6, 0.0, 0.02857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.8283898305084746, 0.625, 0.0, 0.2033898305084746
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.8279569892473118, 0.6666666666666666, 0.0, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.8278985507246377, 0.625, 0.0, 0.2028985507246377
LiteralValueSource,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.8266666666666667, 0.6, 0.0, 0.22666666666666666
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.8263157894736842, 0.8, 0.0, 0.02631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.825, 0.5, 0.0, 0.325
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.825, 0.5, 0.0, 0.325
getString,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.825, 0.7, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.8243902439024391, 0.8, 0.0, 0.024390243902439025
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.8238095238095239, 0.8, 0.0, 0.023809523809523808
fp,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.8238095238095239, 0.8, 0.0, 0.023809523809523808
fp,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.8238095238095239, 0.8, 0.0, 0.023809523809523808
fp,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.8232558139534885, 0.8, 0.0, 0.023255813953488372
fp,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.8232558139534885, 0.8, 0.0, 0.023255813953488372
getString,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.8232558139534885, 0.8, 0.0, 0.023255813953488372
fp,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.8222222222222223, 0.8, 0.0, 0.022222222222222223
LiteralValueSource,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.8222222222222222, 0.6, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.8222222222222222, 0.6, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.8222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.8222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.8222222222222222, 0.6, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.8222222222222222, 0.6, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.8222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.8222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.8222222222222222, 0.6, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.8222222222222222, 0.6, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.8219512195121951, 0.7, 0.0, 0.12195121951219512
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.8219512195121951, 0.7, 0.0, 0.12195121951219512
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.8205128205128205, 0.6666666666666666, 0.0, 0.15384615384615385
fp,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.819607843137255, 0.8, 0.0, 0.0196078431372549
getString,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.819047619047619, 0.7, 0.0, 0.11904761904761904
fp,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.8188679245283019, 0.8, 0.0, 0.018867924528301886
LiteralValueSource,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.8181818181818181, 0.5, 0.0, 0.3181818181818182
fp,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.817857142857143, 0.8, 0.0, 0.017857142857142856
getString,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.8176470588235294, 0.7, 0.0, 0.11764705882352941
fp,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.8175438596491229, 0.8, 0.0, 0.017543859649122806
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.8173076923076923, 0.625, 0.0, 0.19230769230769232
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.8166666666666667, 0.6666666666666666, 0.0, 0.15
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.8157894736842105, 0.5, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.8157894736842105, 0.5, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.8157894736842105, 0.5, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.8157894736842105, 0.5, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.8157894736842105, 0.5, 0.0, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.8157894736842105, 0.5, 0.0, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.8153846153846154, 0.7, 0.0, 0.11538461538461539
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.8153846153846154, 0.7, 0.0, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.8148148148148148, 0.4444444444444444, 0.0, 0.37037037037037035
getString,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.8142857142857143, 0.7, 0.0, 0.11428571428571428
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.8142857142857143, 0.7, 0.0, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.8136200716845878, 0.5555555555555556, 0.0, 0.25806451612903225
LiteralValueSource,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.8111111111111111, 0.6, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.8111111111111111, 0.5, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.8111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.8111111111111111, 0.4, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.8111111111111111, 0.7, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.8111111111111111, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.8111111111111111, 0.6, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.8101010101010101, 0.8, 0.0, 0.010101010101010102
fp.getString(),METHOD_INVOCATION, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.8095238095238095, 0.5555555555555556, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.8095238095238095, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.8095238095238095, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.8095238095238095, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.8095238095238095, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.8095238095238095, 0.6666666666666666, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.8095238095238095, 0.6666666666666666, 0.0, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.8092105263157895, 0.125, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.8092105263157895, 0.125, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.8092105263157895, 0.125, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.8092105263157895, 0.625, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.8092105263157895, 0.625, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.8092105263157895, 0.125, 0.0, 0.18421052631578946
fp,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.8074626865671642, 0.8, 0.0, 0.007462686567164179
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.8066666666666666, 0.5, 0.0, 0.30666666666666664
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.8052910052910054, 0.8, 0.0, 0.005291005291005291
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,put,SIMPLE_NAME, line no: 75, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.8026315789473684, 0.75, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.8026315789473684, 0.375, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.8026315789473684, 0.375, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.8024193548387097, 0.625, 0.0, 0.1774193548387097
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.8012658227848101, 0.7, 0.0, 0.10126582278481013
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.8, 0.5, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.8, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.8, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.8, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.8, 0.8, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.8, 0.6, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.8, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.8, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.8, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.8, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.8, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.8, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.8, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.8, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.8, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8, 0.8, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.8, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.8, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.8, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.8, 0.8, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.8, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.7999999999999999, 0.7, 0.0, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.7955555555555556, 0.5555555555555556, 0.0, 0.24
fp.getString(),METHOD_INVOCATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.7955555555555556, 0.5555555555555556, 0.0, 0.24
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.7952380952380952, 0.7, 0.0, 0.09523809523809523
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.7916666666666666, 0.625, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7909090909090909, 0.7, 0.0, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.7908496732026145, 0.5555555555555556, 0.0, 0.23529411764705882
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.7895522388059701, 0.7, 0.0, 0.08955223880597014
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.7894736842105263, 0.5, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.7894736842105263, 0.5, 0.0, 0.2894736842105263
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.7886178861788617, 0.6666666666666666, 0.0, 0.12195121951219512
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.7886178861788617, 0.6666666666666666, 0.0, 0.12195121951219512
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.787719298245614, 0.7, 0.0, 0.08771929824561403
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.7875, 0.6, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.7833333333333333, 0.7, 0.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.7833333333333333, 0.7, 0.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.7833333333333333, 0.7, 0.0, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.7833333333333333, 0.7, 0.0, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.7828947368421053, 0.625, 0.0, 0.15789473684210525
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.7828282828282829, 0.5555555555555556, 0.0, 0.22727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.782051282051282, 0.6666666666666666, 0.0, 0.11538461538461539
LiteralValueSource,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.78, 0.5, 0.0, 0.28
LiteralValueSource,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.78, 0.5, 0.0, 0.28
getString,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7799999999999999, 0.7, 0.0, 0.08
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.7793650793650793, 0.7, 0.0, 0.07936507936507936
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.7793650793650793, 0.7, 0.0, 0.07936507936507936
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.7777777777777778, 0.5, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.7777777777777778, 0.5, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.7777777777777778, 0.5, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.7777777777777778, 0.5, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.7777777777777778, 0.5, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.7777777777777778, 0.5, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.7777777777777778, 0.1, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.7777777777777778, 0.1111111111111111, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,add,SIMPLE_NAME, line no: 281, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,E,SIMPLE_NAME, line no: 539, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.7777777777777778, 0.5555555555555556, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o,SIMPLE_NAME, line no: 991, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.7764705882352941, 0.6, 0.0, 0.17647058823529413
getString,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.7764705882352941, 0.6, 0.0, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p,SIMPLE_NAME, line no: 74, 0.7763157894736842, 0.125, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,add,SIMPLE_NAME, line no: 281, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.7763157894736842, 0.625, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.7763157894736842, 0.125, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df,SIMPLE_NAME, line no: 833, 0.7763157894736842, 0.125, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,")",STRING_LITERAL, line no: 952, 0.7763157894736842, 0.375, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o,SIMPLE_NAME, line no: 991, 0.7763157894736842, 0.125, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.7763157894736842, 0.75, 0.0, 0.02631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.7729468599033816, 0.5555555555555556, 0.0, 0.21739130434782608
fp,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.7714285714285714, 0.7, 0.0, 0.07142857142857142
fp,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.7714285714285714, 0.7, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.7714285714285714, 0.7, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.7698412698412699, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.7698412698412699, 0.5555555555555556, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.7698412698412699, 0.5555555555555556, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.7698412698412699, 0.5555555555555556, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.7698412698412699, 0.5555555555555556, 0.0, 0.21428571428571427
getString,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.7675675675675675, 0.7, 0.0, 0.06756756756756757
LiteralValueSource,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.7666666666666666, 0.6, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.7666666666666666, 0.6, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.7666666666666666, 0.6, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.7666666666666666, 0.1, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.7666666666666666, 0.6, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.7666666666666666, 0.6, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.7666666666666666, 0.6, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.7666666666666666, 0.7, 0.0, 0.06666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.7660818713450293, 0.1111111111111111, 0.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.763888888888889, 0.5555555555555556, 0.0, 0.20833333333333334
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.7634920634920634, 0.7, 0.0, 0.06349206349206349
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.763157894736842, 0.5, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.763157894736842, 0.5, 0.0, 0.2631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.7619047619047619, 0.6666666666666666, 0.0, 0.09523809523809523
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.7619047619047619, 0.6666666666666666, 0.0, 0.09523809523809523
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.7612612612612613, 0.6666666666666666, 0.0, 0.0945945945945946
getString,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.76, 0.6, 0.0, 0.16
getString,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.76, 0.6, 0.0, 0.16
LiteralValueSource,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.7594202898550724, 0.6, 0.0, 0.15942028985507245
getString,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.7588235294117647, 0.7, 0.0, 0.058823529411764705
getString,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.7578947368421052, 0.6, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.7575757575757576, 0.5, 0.0, 0.25757575757575757
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.7575757575757576, 0.6666666666666666, 0.0, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.7575757575757576, 0.6666666666666666, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.7568627450980392, 0.6, 0.0, 0.1568627450980392
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.756578947368421, 0.625, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.756578947368421, 0.625, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.756578947368421, 0.625, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.756578947368421, 0.625, 0.0, 0.13157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.7555555555555555, 0.5, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.7555555555555555, 0.6, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.7555555555555555, 0.1, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.7555555555555555, 0.1, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.7555555555555555, 0.4, 0.0, 0.05555555555555555
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.7555555555555555, 0.5555555555555556, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.7555555555555555, 0.5555555555555556, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
getString,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7555555555555555, 0.7, 0.0, 0.05555555555555555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.75, 0.5, 0.0, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107," ",STRING_LITERAL, line no: 1107, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.75, 0.75, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.75, 0.625, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.75, 0.5, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.75, 0.5, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.75, 0.5, 0.0, 0.25
getString,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.75, 0.7, 0.0, 0.05
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.7491039426523298, 0.5555555555555556, 0.0, 0.1935483870967742
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.7470588235294118, 0.5, 0.0, 0.24705882352941178
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7466666666666666, 0.6666666666666666, 0.0, 0.08
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.7466666666666666, 0.6666666666666666, 0.0, 0.08
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.7466666666666666, 0.6666666666666666, 0.0, 0.08
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.7465116279069767, 0.7, 0.0, 0.046511627906976744
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.7430555555555556, 0.5555555555555556, 0.0, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.7430555555555556, 0.5555555555555556, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.7428571428571429, 0.6, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.7395348837209302, 0.6, 0.0, 0.13953488372093023
getString,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.7388888888888889, 0.6, 0.0, 0.1388888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.738095238095238, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.738095238095238, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.738095238095238, 0.6666666666666666, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.738095238095238, 0.6666666666666666, 0.0, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.7368421052631579, 0.5, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.7368421052631579, 0.5, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.7368421052631579, 0.5, 0.0, 0.23684210526315788
fp,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.7357142857142857, 0.7, 0.0, 0.03571428571428571
LiteralValueSource,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.735593220338983, 0.6, 0.0, 0.13559322033898305
fp,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.73125, 0.7, 0.0, 0.03125
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.7307692307692307, 0.6, 0.0, 0.13076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.7305555555555556, 0.5555555555555556, 0.0, 0.175
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.7305555555555556, 0.5555555555555556, 0.0, 0.175
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.7302631578947368, 0.125, 0.0, 0.10526315789473684
fp,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.725, 0.6, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.725, 0.6, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.725, 0.6, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.725, 0.6, 0.0, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.7236842105263158, 0.5, 0.0, 0.2236842105263158
LiteralValueSource,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.7230769230769231, 0.6, 0.0, 0.12307692307692308
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.7222222222222222, 0.5, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.7222222222222222, 0.1, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7222222222222222, 0.6666666666666666, 0.0, 0.05555555555555555
fp.getString(),METHOD_INVOCATION, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7222222222222222, 0.6666666666666666, 0.0, 0.05555555555555555
getString,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.7222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.7222222222222222, 0.1, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.7180555555555556, 0.5555555555555556, 0.0, 0.1625
getString,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.7176470588235294, 0.6, 0.0, 0.11764705882352941
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.7171052631578947, 0.375, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.7171052631578947, 0.375, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.7171052631578947, 0.375, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.7171052631578947, 0.375, 0.0, 0.34210526315789475
fp.getString(),METHOD_INVOCATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.7155555555555556, 0.5555555555555556, 0.0, 0.16
fp,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.7135135135135134, 0.7, 0.0, 0.013513513513513514
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.7134502923976609, 0.5555555555555556, 0.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.7125, 0.6, 0.0, 0.1125
LiteralValueSource,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.711111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.711111111111111, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.711111111111111, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.711111111111111, 0.6, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.711111111111111, 0.6, 0.0, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.7105263157894737, 0.5, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.7105263157894737, 0.5, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.7105263157894737, 0.5, 0.0, 0.21052631578947367
getString,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.7105263157894737, 0.1, 0.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.7084967320261438, 0.5555555555555556, 0.0, 0.15294117647058825
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.7083333333333334, 0.5, 0.0, 0.20833333333333334
getString,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.7058823529411764, 0.6, 0.0, 0.10588235294117647
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.7052631578947368, 0.6, 0.0, 0.10526315789473684
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.7048387096774194, 0.6, 0.0, 0.10483870967741936
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.7039473684210527, 0.625, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.7039473684210527, 0.625, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.7039473684210527, 0.625, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.7039473684210527, 0.625, 0.0, 0.07894736842105263
LiteralValueSource,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.7, 0.1, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.7, 0.5, 0.0, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.7, 0.1, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.7, 0.2, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.7, 0.3, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.7, 0.7, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.7, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.7, 0.5, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.7, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.7, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.7, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.7, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.7, 0.7, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.7, 0.6, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.7, 0.6, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.7, 0.6, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.6984126984126984, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.6984126984126984, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,term,SIMPLE_NAME, line no: 760, 0.6984126984126984, 0.5555555555555556, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.6984126984126984, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.6984126984126984, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.6984126984126984, 0.5555555555555556, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.6984126984126984, 0.5555555555555556, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.6984126984126984, 0.1111111111111111, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.697560975609756, 0.6, 0.0, 0.0975609756097561
fp.getString(),METHOD_INVOCATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.6944444444444444, 0.4444444444444444, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.6935483870967742, 0.5, 0.0, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.6919191919191919, 0.5555555555555556, 0.0, 0.13636363636363635
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6916666666666667, 0.6, 0.0, 0.09166666666666666
getString,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.6909090909090909, 0.6, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.6909090909090909, 0.6, 0.0, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.6907894736842105, 0.375, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.6907894736842105, 0.375, 0.0, 0.3157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.6844444444444444, 0.4444444444444444, 0.0, 0.24
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.6842105263157895, 0.5, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.6842105263157895, 0.5, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.6842105263157895, 0.5, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.6842105263157895, 0.5, 0.0, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.6842105263157895, 0.5, 0.0, 0.18421052631578946
fp,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.6833333333333333, 0.6, 0.0, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.68, 0.4, 0.0, 0.28
getString,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.6789473684210526, 0.6, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6776315789473684, 0.625, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6776315789473684, 0.625, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6776315789473684, 0.625, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6776315789473684, 0.625, 0.0, 0.05263157894736842
fp.getString(),METHOD_INVOCATION, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.673202614379085, 0.5555555555555556, 0.0, 0.11764705882352941
LiteralValueSource,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.6727272727272727, 0.4, 0.0, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.6717171717171717, 0.4444444444444444, 0.0, 0.22727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.6666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.6666666666666666, 0.5, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.6666666666666666, 0.5, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.6666666666666666, 0.5, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.6666666666666666, 0.5, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.6666666666666666, 0.5, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.6666666666666666, 0.6, 0.0, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.6666666666666666, 0.5, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6666666666666666, 0.6, 0.0, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.6634615384615384, 0.125, 0.0, 0.5384615384615384
LiteralValueSource,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.6631578947368422, 0.4, 0.0, 0.2631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.6622222222222223, 0.5555555555555556, 0.0, 0.10666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.6608187134502924, 0.5555555555555556, 0.0, 0.10526315789473684
LiteralValueSource,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.66, 0.5, 0.0, 0.16
LiteralValueSource,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.6592592592592592, 0.4, 0.0, 0.25925925925925924
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.6587301587301587, 0.3333333333333333, 0.0, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.6578947368421053, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.6578947368421053, 0.5, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.6578947368421053, 0.5, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.6578947368421053, 0.5, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.6578947368421053, 0.5, 0.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.6564516129032257, 0.6, 0.0, 0.056451612903225805
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.6555555555555556, 0.6, 0.0, 0.05555555555555555
getString,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.6555555555555556, 0.1, 0.0, 0.5555555555555556
fp,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.6538461538461539, 0.5, 0.0, 0.15384615384615385
getString,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.6538461538461539, 0.5, 0.0, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.6513157894736842, 0.625, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.6513157894736842, 0.625, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.6513157894736842, 0.625, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.6513157894736842, 0.625, 0.0, 0.02631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.65, 0.4, 0.0, 0.25
fp,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.65, 0.6, 0.0, 0.05
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.6461538461538461, 0.6, 0.0, 0.046153846153846156
fp,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.6454545454545454, 0.6, 0.0, 0.045454545454545456
LiteralValueSource,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.6447368421052632, 0.5, 0.0, 0.14473684210526316
LiteralValueSource,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.6444444444444444, 0.2, 0.0, 0.4444444444444444
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.6392156862745098, 0.6, 0.0, 0.0392156862745098
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.6372549019607843, 0.5, 0.0, 0.13725490196078433
fp.getString(),METHOD_INVOCATION, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.6324786324786325, 0.5555555555555556, 0.0, 0.07692307692307693
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.632258064516129, 0.6, 0.0, 0.03225806451612903
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.631578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.631578947368421, 0.5, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.631578947368421, 0.375, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.631578947368421, 0.5, 0.0, 0.13157894736842105
getString,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.6307692307692307, 0.3, 0.0, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6305555555555555, 0.5555555555555556, 0.0, 0.075
getString,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.6304347826086957, 0.5, 0.0, 0.13043478260869565
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.6294117647058823, 0.5, 0.0, 0.12941176470588237
getString,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.6290322580645161, 0.5, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.6290322580645161, 0.5, 0.0, 0.12903225806451613
getString,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.6290322580645161, 0.5, 0.0, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.626984126984127, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,i,SIMPLE_NAME, line no: 774, 0.626984126984127, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.626984126984127, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.626984126984127, 0.5555555555555556, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.6262626262626263, 0.4444444444444444, 0.0, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.625, 0.625, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.625, 0.625, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.625, 0.625, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.625, 0.625, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.625, 0.5, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.625, 0.6, 0.0, 0.025
getString,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.625, 0.5, 0.0, 0.125
fp,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.624390243902439, 0.6, 0.0, 0.024390243902439025
fp,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.6235294117647059, 0.6, 0.0, 0.023529411764705882
getString,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.6222222222222222, 0.4, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.6222222222222222, 0.4, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.6222222222222222, 0.4, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.6222222222222222, 0.4, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.6222222222222222, 0.4, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.6209150326797386, 0.4444444444444444, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.6200716845878136, 0.5555555555555556, 0.0, 0.06451612903225806
fp,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.62, 0.6, 0.0, 0.02
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.6170940170940171, 0.5555555555555556, 0.0, 0.06153846153846154
fp,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.6169491525423728, 0.6, 0.0, 0.01694915254237288
fp,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.6153846153846154, 0.6, 0.0, 0.015384615384615385
fp,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.6144927536231883, 0.6, 0.0, 0.014492753623188406
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.6133333333333333, 0.6, 0.0, 0.013333333333333334
fp,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.6133333333333333, 0.6, 0.0, 0.013333333333333334
fp,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.6131578947368421, 0.6, 0.0, 0.013157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.6118421052631579, 0.375, 0.0, 0.23684210526315788
LiteralValueSource,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.6111111111111112, 0.5, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.6111111111111112, 0.5, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.6111111111111112, 0.5, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.6111111111111112, 0.5, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.6111111111111112, 0.5, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.6111111111111112, 0.5, 0.0, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6083333333333333, 0.6, 0.0, 0.008333333333333333
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.6080645161290322, 0.6, 0.0, 0.008064516129032258
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.6076923076923076, 0.6, 0.0, 0.007692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.6052631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.6052631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.6052631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.6052631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.6052631578947368, 0.5, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.6052631578947368, 0.5, 0.0, 0.10526315789473684
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.6023391812865497, 0.4444444444444444, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.6, 0.1, 0.0, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.6, 0.3, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.6, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.6, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.6, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.6, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.6, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.6, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.6, 0.6, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.6, 0.6, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.6, 0.6, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.5975609756097561, 0.5, 0.0, 0.0975609756097561
fp,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.5909090909090909, 0.5, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5909090909090909, 0.5, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.5904761904761905, 0.4, 0.0, 0.19047619047619047
getString,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.5875, 0.4, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.5875, 0.4, 0.0, 0.1875
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.5818181818181818, 0.4, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.5818181818181818, 0.4, 0.0, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term,SIMPLE_NAME, line no: 760, 0.5789473684210527, 0.5, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,text,SIMPLE_NAME, line no: 762, 0.5789473684210527, 0.5, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.5789473684210527, 0.5, 0.0, 0.07894736842105263
LiteralValueSource,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.5777777777777777, 0.3, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.5777777777777777, 0.4444444444444444, 0.0, 0.13333333333333333
fp,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.5769230769230769, 0.5, 0.0, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5734767025089605, 0.4444444444444444, 0.0, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5734767025089605, 0.4444444444444444, 0.0, 0.12903225806451613
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.5666666666666667, 0.4, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.5666666666666667, 0.4, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.5666666666666667, 0.4, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.5666666666666667, 0.3, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.5666666666666667, 0.4, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.5666666666666667, 0.4, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.5666666666666667, 0.4, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.56, 0.4, 0.0, 0.16
getString,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.56, 0.4, 0.0, 0.16
getString,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.5578947368421052, 0.4, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.5555555555555556, 0.1, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.5555555555555556, 0.1, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.5555555555555556, 0.1, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.5555555555555556, 0.5, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.5555555555555556, 0.5, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.5555555555555556, 0.5, 0.0, 0.05555555555555555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.5526315789473684, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.5526315789473684, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.5526315789473684, 0.5, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.5526315789473684, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.5526315789473684, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.5526315789473684, 0.5, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.55, 0.5, 0.0, 0.05
getString,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.5444444444444444, 0.1, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.5444444444444444, 0.1, 0.0, 0.4444444444444444
getString,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.5444444444444444, 0.1, 0.0, 0.4444444444444444
fp,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.5428571428571429, 0.4, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.5428571428571429, 0.4, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.5402298850574713, 0.3333333333333333, 0.0, 0.20689655172413793
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.5363636363636364, 0.4, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.5363636363636364, 0.4, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.5363636363636364, 0.4, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5353535353535354, 0.4444444444444444, 0.0, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.5333333333333333, 0.2, 0.0, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.5333333333333333, 0.3333333333333333, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.5333333333333333, 0.3333333333333333, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.5333333333333333, 0.3333333333333333, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.5333333333333333, 0.4, 0.0, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.5328947368421053, 0.375, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.5328947368421053, 0.375, 0.0, 0.15789473684210525
fp,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.532258064516129, 0.5, 0.0, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.532258064516129, 0.5, 0.0, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.532258064516129, 0.5, 0.0, 0.03225806451612903
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i,SIMPLE_NAME, line no: 774, 0.5263157894736842, 0.5, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.5263157894736842, 0.5, 0.0, 0.02631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.5263157894736842, 0.125, 0.0, 0.02631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.5238095238095237, 0.3333333333333333, 0.0, 0.19047619047619047
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.5238095238095237, 0.3333333333333333, 0.0, 0.19047619047619047
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.5208333333333333, 0.3333333333333333, 0.0, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.5208333333333333, 0.3333333333333333, 0.0, 0.1875
getString,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.52, 0.4, 0.0, 0.12
getString,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.5176470588235295, 0.4, 0.0, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.5158730158730158, 0.4444444444444444, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.5158730158730158, 0.4444444444444444, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.5158730158730158, 0.1111111111111111, 0.0, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.5157894736842106, 0.1, 0.0, 0.3157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.5151515151515151, 0.3333333333333333, 0.0, 0.18181818181818182
fp,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5151515151515151, 0.5, 0.0, 0.015151515151515152
LiteralValueSource,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.5111111111111111, 0.4, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.5111111111111111, 0.4, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.506896551724138, 0.3, 0.0, 0.20689655172413793
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.5052631578947369, 0.4, 0.0, 0.10526315789473684
fp,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.5052631578947369, 0.4, 0.0, 0.10526315789473684
getString,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.5052631578947369, 0.4, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.5, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.5, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.5, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.5, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.5, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.5, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.5, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.5, 0.5, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.4933333333333333, 0.3333333333333333, 0.0, 0.16
fp,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.49090909090909096, 0.4, 0.0, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.49090909090909096, 0.4, 0.0, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.48026315789473684, 0.375, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.48026315789473684, 0.375, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.48026315789473684, 0.375, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.48026315789473684, 0.375, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.48026315789473684, 0.375, 0.0, 0.10526315789473684
LiteralValueSource,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.4777777777777778, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.4777777777777778, 0.2, 0.0, 0.2777777777777778
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.47619047619047616, 0.3333333333333333, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.47619047619047616, 0.3333333333333333, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.47619047619047616, 0.3333333333333333, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.47619047619047616, 0.3333333333333333, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.47619047619047616, 0.3333333333333333, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.46923076923076923, 0.1, 0.0, 0.2692307692307692
fp.getString(),METHOD_INVOCATION, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.46825396825396826, 0.1111111111111111, 0.0, 0.35714285714285715
fp.getString(),METHOD_INVOCATION, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.46825396825396826, 0.1111111111111111, 0.0, 0.35714285714285715
getString,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.4636363636363636, 0.1, 0.0, 0.36363636363636365
fp,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.4625, 0.4, 0.0, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.4605263157894737, 0.25, 0.0, 0.21052631578947367
fp.getString(),METHOD_INVOCATION, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.4583333333333333, 0.3333333333333333, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.4571428571428572, 0.1, 0.0, 0.35714285714285715
LiteralValueSource,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.4555555555555556, 0.4, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.4555555555555556, 0.4, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.4555555555555556, 0.4, 0.0, 0.05555555555555555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.45394736842105265, 0.375, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.45394736842105265, 0.375, 0.0, 0.07894736842105263
getString,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.45384615384615384, 0.3, 0.0, 0.15384615384615385
fp,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.4454545454545455, 0.4, 0.0, 0.045454545454545456
fp.getString(),METHOD_INVOCATION, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.44, 0.4, 0.0, 0.04
fp,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.44, 0.4, 0.0, 0.04
getString,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.4379310344827586, 0.3, 0.0, 0.13793103448275862
fp,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.43703703703703706, 0.4, 0.0, 0.037037037037037035
fp.getString(),METHOD_INVOCATION, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.4365079365079365, 0.2222222222222222, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.4365079365079365, 0.2222222222222222, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.4365079365079365, 0.2222222222222222, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.43636363636363634, 0.3, 0.0, 0.13636363636363635
LiteralValueSource,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.43333333333333335, 0.3, 0.0, 0.13333333333333333
getString,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.43333333333333335, 0.1, 0.0, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.4307692307692308, 0.2, 0.0, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.4276315789473684, 0.375, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.4276315789473684, 0.375, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.4276315789473684, 0.375, 0.0, 0.05263157894736842
getString,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.425, 0.3, 0.0, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.4222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.4222222222222222, 0.2, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.4222222222222222, 0.2, 0.0, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.4144736842105263, 0.125, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.4144736842105263, 0.125, 0.0, 0.2894736842105263
LiteralValueSource,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.4111111111111111, 0.3, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.4111111111111111, 0.3, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.4111111111111111, 0.3, 0.0, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.40789473684210525, 0.25, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.4, 0.1, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.4, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.4, 0.4, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.4, 0.4, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.4, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4, 0.4, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,function,SIMPLE_NAME, line no: 21, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.3968253968253968, 0.1111111111111111, 0.0, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.39215686274509803, 0.3333333333333333, 0.0, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.3888888888888889, 0.0, 0.0, 0.3888888888888889
fp.getString(),METHOD_INVOCATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.38888888888888884, 0.2222222222222222, 0.0, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.3881578947368421, 0.125, 0.0, 0.2631578947368421
getString,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.38181818181818183, 0.2, 0.0, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.381578947368421, 0.25, 0.0, 0.13157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.38, 0.3, 0.0, 0.08
LiteralValueSource,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.37777777777777777, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.37777777777777777, 0.1, 0.0, 0.2777777777777778
LiteralValueSource,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.37777777777777777, 0.1, 0.0, 0.2777777777777778
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.375, 0.375, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.375, 0.375, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.3742690058479532, 0.1111111111111111, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.3666666666666667, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.3666666666666667, 0.2, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.3666666666666667, 0.2, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.36507936507936506, 0.2222222222222222, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.36363636363636365, 0.0, 0.0, 0.36363636363636365
LiteralValueSource,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.3631578947368421, 0.1, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.36184210526315785, 0.125, 0.0, 0.23684210526315788
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.36, 0.0, 0.0, 0.36
LiteralValueSource,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3588235294117647, 0.3, 0.0, 0.058823529411764705
getString,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3588235294117647, 0.3, 0.0, 0.058823529411764705
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.35555555555555557, 0.0, 0.0, 0.35555555555555557
LiteralValueSource,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.3555555555555555, 0.3, 0.0, 0.05555555555555555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.35526315789473684, 0.25, 0.0, 0.10526315789473684
fp,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.34285714285714286, 0.2, 0.0, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.34210526315789475, 0.0, 0.0, 0.34210526315789475
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.34210526315789475, 0.0, 0.0, 0.34210526315789475
fp.getString(),METHOD_INVOCATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.3418803418803419, 0.1111111111111111, 0.0, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.3355263157894737, 0.125, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.3355263157894737, 0.125, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.3333333333333333, 0.0, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.3333333333333333, 0.0, 0.0, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.3333333333333333, 0.0, 0.0, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.3307692307692308, 0.1, 0.0, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.32894736842105265, 0.25, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.32894736842105265, 0.25, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.32608695652173914, 0.0, 0.0, 0.32608695652173914
fp.getString(),METHOD_INVOCATION, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.32539682539682535, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.32539682539682535, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.32539682539682535, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.32539682539682535, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.32539682539682535, 0.1111111111111111, 0.0, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.32539682539682535, 0.1111111111111111, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.3222222222222222, 0.1, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.3181818181818182, 0.0, 0.0, 0.3181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.3181818181818182, 0.0, 0.0, 0.3181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.3181818181818182, 0.0, 0.0, 0.3181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.3157894736842105, 0.0, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.3157894736842105, 0.0, 0.0, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.3157894736842105, 0.0, 0.0, 0.3157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.3111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.3111111111111111, 0.2, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.3111111111111111, 0.2, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.3103448275862069, 0.0, 0.0, 0.3103448275862069
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.3092105263157895, 0.125, 0.0, 0.18421052631578946
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.30434782608695654, 0.0, 0.0, 0.30434782608695654
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.30434782608695654, 0.0, 0.0, 0.30434782608695654
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.30434782608695654, 0.0, 0.0, 0.30434782608695654
fp.getString(),METHOD_INVOCATION, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.30341880341880345, 0.1111111111111111, 0.0, 0.19230769230769232
fp,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.30000000000000004, 0.1, 0.0, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.3, 0.0, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.3, 0.0, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.3, 0.0, 0.0, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.3, 0.3, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.29545454545454547, 0.0, 0.0, 0.29545454545454547
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.29545454545454547, 0.0, 0.0, 0.29545454545454547
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.29411764705882354, 0.0, 0.0, 0.29411764705882354
fp.getString(),METHOD_INVOCATION, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.2936507936507936, 0.2222222222222222, 0.0, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.2923076923076923, 0.1, 0.0, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.2894736842105263, 0.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.2894736842105263, 0.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.2894736842105263, 0.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.2894736842105263, 0.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.2894736842105263, 0.0, 0.0, 0.2894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.2894736842105263, 0.0, 0.0, 0.2894736842105263
fp.getString(),METHOD_INVOCATION, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.2875816993464052, 0.1111111111111111, 0.0, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.2857142857142857, 0.0, 0.0, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.2857142857142857, 0.0, 0.0, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.28289473684210525, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.28289473684210525, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.28289473684210525, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.28289473684210525, 0.125, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.2826086956521739, 0.0, 0.0, 0.2826086956521739
getString,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.28181818181818186, 0.1, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.28181818181818186, 0.1, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.28181818181818186, 0.1, 0.0, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.28, 0.0, 0.0, 0.28
getString,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.2794871794871795, 0.1, 0.0, 0.1794871794871795
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.27906976744186046, 0.0, 0.0, 0.27906976744186046
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.2777777777777778, 0.0, 0.0, 0.2777777777777778
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.2765957446808511, 0.0, 0.0, 0.2765957446808511
getString,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.27647058823529413, 0.1, 0.0, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.275, 0.0, 0.0, 0.275
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.2692307692307692, 0.0, 0.0, 0.2692307692307692
fp.getString(),METHOD_INVOCATION, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.26900584795321636, 0.1111111111111111, 0.0, 0.15789473684210525
LiteralValueSource,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.26666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.26666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.26666666666666666, 0.1, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.26666666666666666, 0.1, 0.0, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.26666666666666666, 0.1, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.2647058823529412, 0.0, 0.0, 0.2647058823529412
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.2647058823529412, 0.0, 0.0, 0.2647058823529412
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.2647058823529412, 0.0, 0.0, 0.2647058823529412
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
fp.getString(),METHOD_INVOCATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.2631578947368421, 0.0, 0.0, 0.2631578947368421
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.2608695652173913, 0.0, 0.0, 0.2608695652173913
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.25925925925925924, 0.0, 0.0, 0.25925925925925924
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.25806451612903225, 0.0, 0.0, 0.25806451612903225
getString,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.2578947368421053, 0.1, 0.0, 0.15789473684210525
getString,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.2578947368421053, 0.1, 0.0, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,function,SIMPLE_NAME, line no: 21, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,request,SIMPLE_NAME, line no: 41, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.256578947368421, 0.125, 0.0, 0.13157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.2564102564102564, 0.0, 0.0, 0.2564102564102564
LiteralValueSource,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.25555555555555554, 0.2, 0.0, 0.05555555555555555
fp.getString(),METHOD_INVOCATION, line no: 107,org,SIMPLE_NAME, line no: 17, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,search,SIMPLE_NAME, line no: 17, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,index,SIMPLE_NAME, line no: 19, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,util,SIMPLE_NAME, line no: 37, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,request,SIMPLE_NAME, line no: 41, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,init,SIMPLE_NAME, line no: 58, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,args,SIMPLE_NAME, line no: 58, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.25396825396825395, 0.1111111111111111, 0.0, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.25, 0.0, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.25, 0.0, 0.0, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.24324324324324326, 0.0, 0.0, 0.24324324324324326
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.2413793103448276, 0.0, 0.0, 0.2413793103448276
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.24074074074074073, 0.0, 0.0, 0.24074074074074073
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.23684210526315788, 0.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.23684210526315788, 0.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.23684210526315788, 0.0, 0.0, 0.23684210526315788
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.23684210526315788, 0.0, 0.0, 0.23684210526315788
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.23529411764705882, 0.0, 0.0, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.23026315789473684, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,search,SIMPLE_NAME, line no: 17, 0.23026315789473684, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.23026315789473684, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.23026315789473684, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.23026315789473684, 0.125, 0.0, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.23026315789473684, 0.125, 0.0, 0.10526315789473684
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.22727272727272727, 0.0, 0.0, 0.22727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.22727272727272727, 0.0, 0.0, 0.22727272727272727
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.22580645161290322, 0.0, 0.0, 0.22580645161290322
fp,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.225, 0.1, 0.0, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.22413793103448276, 0.0, 0.0, 0.22413793103448276
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.2222222222222222, 0.0, 0.0, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.2222222222222222, 0.0, 0.0, 0.2222222222222222
getString,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.2222222222222222, 0.0, 0.0, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.21739130434782608, 0.0, 0.0, 0.21739130434782608
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.21666666666666667, 0.0, 0.0, 0.21666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.21621621621621623, 0.0, 0.0, 0.21621621621621623
fp.getString(),METHOD_INVOCATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.21428571428571427, 0.0, 0.0, 0.21428571428571427
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.2127659574468085, 0.0, 0.0, 0.2127659574468085
LiteralValueSource,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
LiteralValueSource,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.2111111111111111, 0.1, 0.0, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.21052631578947367, 0.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.21052631578947367, 0.0, 0.0, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.21052631578947367, 0.0, 0.0, 0.21052631578947367
getString,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.21052631578947367, 0.0, 0.0, 0.21052631578947367
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.20930232558139536, 0.0, 0.0, 0.20930232558139536
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.20454545454545456, 0.0, 0.0, 0.20454545454545456
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.20408163265306123, 0.0, 0.0, 0.20408163265306123
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org,SIMPLE_NAME, line no: 17, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,util,SIMPLE_NAME, line no: 37, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,init,SIMPLE_NAME, line no: 58, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,args,SIMPLE_NAME, line no: 58, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.20394736842105263, 0.125, 0.0, 0.07894736842105263
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.2, 0.0, 0.0, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.2, 0.0, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.2, 0.0, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.2, 0.0, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.2, 0.0, 0.0, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.2, 0.0, 0.0, 0.2
fp,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.2, 0.2, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.2, 0.2, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.2, 0.2, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.2, 0.2, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.2, 0.2, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.2, 0.0, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.2, 0.0, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.2, 0.0, 0.0, 0.2
getString,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.2, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.1935483870967742, 0.0, 0.0, 0.1935483870967742
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.19230769230769232, 0.0, 0.0, 0.19230769230769232
fp,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.19090909090909092, 0.1, 0.0, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.19090909090909092, 0.1, 0.0, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.18518518518518517, 0.0, 0.0, 0.18518518518518517
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.18518518518518517, 0.0, 0.0, 0.18518518518518517
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.18421052631578946, 0.0, 0.0, 0.18421052631578946
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.1836734693877551, 0.0, 0.0, 0.1836734693877551
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.18333333333333332, 0.0, 0.0, 0.18333333333333332
fp.getString(),METHOD_INVOCATION, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,common,SIMPLE_NAME, line no: 39, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,io,SIMPLE_NAME, line no: 47, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.18253968253968253, 0.1111111111111111, 0.0, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.18181818181818182, 0.0, 0.0, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.18181818181818182, 0.0, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.18181818181818182, 0.0, 0.0, 0.18181818181818182
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.18181818181818182, 0.0, 0.0, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.1794871794871795, 0.0, 0.0, 0.1794871794871795
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.17857142857142858, 0.0, 0.0, 0.17857142857142858
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.17777777777777778, 0.0, 0.0, 0.17777777777777778
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,index,SIMPLE_NAME, line no: 19, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,common,SIMPLE_NAME, line no: 39, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java,SIMPLE_NAME, line no: 47, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,io,SIMPLE_NAME, line no: 47, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.17763157894736842, 0.125, 0.0, 0.05263157894736842
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.17647058823529413, 0.0, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.17647058823529413, 0.0, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.17647058823529413, 0.0, 0.0, 0.17647058823529413
getString,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.17647058823529413, 0.0, 0.0, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.17391304347826086, 0.0, 0.0, 0.17391304347826086
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.17391304347826086, 0.0, 0.0, 0.17391304347826086
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.1724137931034483, 0.0, 0.0, 0.1724137931034483
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.1724137931034483, 0.0, 0.0, 0.1724137931034483
LiteralValueSource,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.16666666666666666, 0.0, 0.0, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.16666666666666666, 0.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.16666666666666666, 0.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.16666666666666666, 0.0, 0.0, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.16666666666666666, 0.0, 0.0, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.16129032258064516, 0.0, 0.0, 0.16129032258064516
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.16129032258064516, 0.0, 0.0, 0.16129032258064516
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.16, 0.0, 0.0, 0.16
LiteralValueSource,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.15555555555555556, 0.1, 0.0, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.15555555555555556, 0.1, 0.0, 0.05555555555555555
getString,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.15384615384615385, 0.0, 0.0, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.15, 0.0, 0.0, 0.15
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.14814814814814814, 0.0, 0.0, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.14814814814814814, 0.0, 0.0, 0.14814814814814814
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.14814814814814814, 0.0, 0.0, 0.14814814814814814
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.14705882352941177, 0.0, 0.0, 0.14705882352941177
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.14705882352941177, 0.0, 0.0, 0.14705882352941177
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.14705882352941177, 0.0, 0.0, 0.14705882352941177
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.14285714285714285, 0.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.14285714285714285, 0.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.14285714285714285, 0.0, 0.0, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.14285714285714285, 0.0, 0.0, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.13953488372093023, 0.0, 0.0, 0.13953488372093023
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.13793103448275862, 0.0, 0.0, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.13636363636363635, 0.0, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.13636363636363635, 0.0, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.13636363636363635, 0.0, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.13636363636363635, 0.0, 0.0, 0.13636363636363635
getString,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.13636363636363635, 0.0, 0.0, 0.13636363636363635
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.13513513513513514, 0.0, 0.0, 0.13513513513513514
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.13333333333333333, 0.0, 0.0, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.13333333333333333, 0.0, 0.0, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.13157894736842105, 0.0, 0.0, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.13157894736842105, 0.0, 0.0, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.13157894736842105, 0.0, 0.0, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.13043478260869565, 0.0, 0.0, 0.13043478260869565
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.13043478260869565, 0.0, 0.0, 0.13043478260869565
getString,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.13043478260869565, 0.0, 0.0, 0.13043478260869565
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.12962962962962962, 0.0, 0.0, 0.12962962962962962
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.12903225806451613, 0.0, 0.0, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.1276595744680851, 0.0, 0.0, 0.1276595744680851
fp,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.12564102564102564, 0.1, 0.0, 0.02564102564102564
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.125, 0.0, 0.0, 0.125
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.125, 0.0, 0.0, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.12244897959183673, 0.0, 0.0, 0.12244897959183673
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.12244897959183673, 0.0, 0.0, 0.12244897959183673
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.1206896551724138, 0.0, 0.0, 0.1206896551724138
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.12, 0.0, 0.0, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.11764705882352941, 0.0, 0.0, 0.11764705882352941
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.11627906976744186, 0.0, 0.0, 0.11627906976744186
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.11538461538461539, 0.0, 0.0, 0.11538461538461539
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.11363636363636363, 0.0, 0.0, 0.11363636363636363
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.11363636363636363, 0.0, 0.0, 0.11363636363636363
fp.getString(),METHOD_INVOCATION, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.1111111111111111, 0.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.1111111111111111, 0.0, 0.0, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.10869565217391304, 0.0, 0.0, 0.10869565217391304
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.10869565217391304, 0.0, 0.0, 0.10869565217391304
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.10810810810810811, 0.0, 0.0, 0.10810810810810811
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.10810810810810811, 0.0, 0.0, 0.10810810810810811
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.10810810810810811, 0.0, 0.0, 0.10810810810810811
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.10638297872340426, 0.0, 0.0, 0.10638297872340426
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.10526315789473684, 0.0, 0.0, 0.10526315789473684
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.10526315789473684, 0.0, 0.0, 0.10526315789473684
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.10344827586206896, 0.0, 0.0, 0.10344827586206896
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.10344827586206896, 0.0, 0.0, 0.10344827586206896
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.10344827586206896, 0.0, 0.0, 0.10344827586206896
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.10204081632653061, 0.0, 0.0, 0.10204081632653061
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.1, 0.0, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.1, 0.0, 0.0, 0.1
fp,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.1, 0.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.1, 0.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.1, 0.0, 0.0, 0.1
getString,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.1, 0.1, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.09615384615384616, 0.0, 0.0, 0.09615384615384616
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.08823529411764706, 0.0, 0.0, 0.08823529411764706
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.08620689655172414, 0.0, 0.0, 0.08620689655172414
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.08333333333333333, 0.0, 0.0, 0.08333333333333333
fp,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.06666666666666667, 0.0, 0.0, 0.06666666666666667
fp,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.058823529411764705, 0.0, 0.0, 0.058823529411764705
fp,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.05263157894736842, 0.0, 0.0, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.05, 0.0, 0.0, 0.05
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.045454545454545456, 0.0, 0.0, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.045454545454545456, 0.0, 0.0, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.045454545454545456, 0.0, 0.0, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.045454545454545456, 0.0, 0.0, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.043478260869565216, 0.0, 0.0, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.043478260869565216, 0.0, 0.0, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.041666666666666664, 0.0, 0.0, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.04, 0.0, 0.0, 0.04
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.037037037037037035, 0.0, 0.0, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.037037037037037035, 0.0, 0.0, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.03571428571428571, 0.0, 0.0, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.034482758620689655, 0.0, 0.0, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.03333333333333333, 0.0, 0.0, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.03333333333333333, 0.0, 0.0, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.03225806451612903, 0.0, 0.0, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.03225806451612903, 0.0, 0.0, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.029411764705882353, 0.0, 0.0, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.029411764705882353, 0.0, 0.0, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.029411764705882353, 0.0, 0.0, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.029411764705882353, 0.0, 0.0, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.027777777777777776, 0.0, 0.0, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.02702702702702703, 0.0, 0.0, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.02702702702702703, 0.0, 0.0, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.02631578947368421, 0.0, 0.0, 0.02631578947368421
fp,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.02564102564102564, 0.0, 0.0, 0.02564102564102564
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.025, 0.0, 0.0, 0.025
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.023255813953488372, 0.0, 0.0, 0.023255813953488372
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.022727272727272728, 0.0, 0.0, 0.022727272727272728
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.022727272727272728, 0.0, 0.0, 0.022727272727272728
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.022222222222222223, 0.0, 0.0, 0.022222222222222223
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.021739130434782608, 0.0, 0.0, 0.021739130434782608
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.021739130434782608, 0.0, 0.0, 0.021739130434782608
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.02127659574468085, 0.0, 0.0, 0.02127659574468085
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.02040816326530612, 0.0, 0.0, 0.02040816326530612
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.02040816326530612, 0.0, 0.0, 0.02040816326530612
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.02, 0.0, 0.0, 0.02
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.019230769230769232, 0.0, 0.0, 0.019230769230769232
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.018518518518518517, 0.0, 0.0, 0.018518518518518517
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.017241379310344827, 0.0, 0.0, 0.017241379310344827
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.017241379310344827, 0.0, 0.0, 0.017241379310344827
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.016666666666666666, 0.0, 0.0, 0.016666666666666666
