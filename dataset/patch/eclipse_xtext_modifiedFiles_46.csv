outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 2.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 2.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 2.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit,SIMPLE_NAME, line no: 221, 2.0, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 2.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 2.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Void,SIMPLE_NAME, line no: 775, 2.0, 1.0, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 2.0, 0.9130434782608695, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 2.0, 0.9565217391304348, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 2.0, 1.0, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 2.0, 1.0, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 2.0, 1.0, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 2.0, 1.0, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 2.0, 1.0, 1.0
outerVisit,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 2.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 2.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 2.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 2.0, 0.4583333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 2.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 2.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 2.0, 1.0, 1.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 2.0, 1.0, 1.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 2.0, 1.0, 1.0
outerVisit,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 2.0, 1.0, 1.0
outerVisit,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 2.0, 1.0, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 2.0, 0.08333333333333333, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,put,SIMPLE_NAME, line no: 83, 2.0, 0.041666666666666664, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 2.0, 0.3333333333333333, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 2.0, 0.041666666666666664, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference,SIMPLE_NAME, line no: 215, 2.0, 1.0, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 2.0, 0.6666666666666666, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 2.0, 0.041666666666666664, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualType,SIMPLE_NAME, line no: 773, 2.0, 0.041666666666666664, 1.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 2.0, 0.08, 1.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 2.0, 0.92, 1.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 2.0, 0.92, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 2.0, 0.08, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 2.0, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 2.0, 0.32, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 2.0, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 2.0, 1.0, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 2.0, 1.0, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 2.0, 0.76, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 2.0, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 2.0, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 2.0, 1.0, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,param,SIMPLE_NAME, line no: 237, 2.0, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 2.0, 0.041666666666666664, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameter,SIMPLE_NAME, line no: 464, 2.0, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 2.0, 0.9166666666666666, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 2.0, 1.0, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 2.0, 1.0, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 2.0, 0.08, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 2.0, 0.32, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 2.0, 0.04, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference,SIMPLE_NAME, line no: 215, 2.0, 1.0, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 2.0, 0.64, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 2.0, 0.04, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualType,SIMPLE_NAME, line no: 773, 2.0, 0.04, 1.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 2.0, 0.07692307692307693, 1.0
actualConstraint,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 2.0, 0.8846153846153846, 1.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 2.0, 1.0, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 2.0, 0.07692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 2.0, 0.3076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 2.0, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 2.0, 1.0, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 2.0, 1.0, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 2.0, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 2.0, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 2.0, 1.0, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 2.0, 0.92, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 2.0, 0.92, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 2.0, 0.92, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 2.0, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 2.0, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 2.0, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 2.0, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 2.0, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 2.0, 0.9230769230769231, 1.0
param.hint,QUALIFIED_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 2.0, 0.04, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 2.0, 1.0, 1.0
param,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 2.0, 0.038461538461538464, 1.0
param,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 2.0, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 2.0, 1.0, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.9615384615384617, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.9615384615384617, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.9615384615384617, 0.9615384615384616, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 1.9615384615384617, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 1.9615384615384617, 0.7307692307692307, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.9615384615384617, 0.9615384615384616, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 1.9615384615384617, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 1.9615384615384617, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 1.9615384615384617, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 1.9615384615384617, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 1.9615384615384617, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 1.9615384615384617, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 1.9615384615384617, 0.9615384615384616, 1.0
UPPER,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 1.9615384615384617, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 1.9615384615384617, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 1.9615384615384617, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 1.9615384615384617, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 1.9615384615384617, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 1.9615384615384617, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 1.9615384615384617, 0.9615384615384616, 1.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.9615384615384617, 0.9615384615384616, 1.0
param,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.9615384615384617, 0.9615384615384616, 1.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 1.9615384615384617, 0.3076923076923077, 1.0
hint,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 1.9615384615384617, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 1.9615384615384617, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 1.9615384615384617, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 1.9615384615384617, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 1.9615384615384617, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.9615384615384617, 0.9615384615384616, 1.0
hint,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 1.9615384615384617, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 1.96, 0.96, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 1.96, 0.96, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 1.96, 0.96, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 1.96, 0.96, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 1.96, 0.96, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.96, 0.96, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.96, 0.96, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,put,SIMPLE_NAME, line no: 83, 1.96, 0.04, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 1.96, 0.92, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 1.96, 0.92, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 1.96, 0.92, 1.0
param.hint,QUALIFIED_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 1.96, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 1.96, 0.72, 1.0
param.hint,QUALIFIED_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.96, 0.96, 1.0
param.hint,QUALIFIED_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.96, 0.96, 1.0
param.hint,QUALIFIED_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.96, 0.96, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 1.96, 0.96, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 1.96, 0.96, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 1.9583333333333335, 0.9583333333333334, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 1.9583333333333335, 0.9583333333333334, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 1.9583333333333335, 0.9583333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 1.9583333333333335, 0.9583333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.9583333333333335, 0.9583333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.9583333333333335, 0.9583333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 1.9583333333333335, 0.9583333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 1.9583333333333335, 0.9583333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 1.9583333333333335, 0.9583333333333334, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 1.9565217391304348, 0.9565217391304348, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 1.9565217391304348, 0.9565217391304348, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 1.9230769230769231, 0.3076923076923077, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 1.9230769230769231, 0.5769230769230769, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 1.9230769230769231, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 1.9230769230769231, 0.9230769230769231, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 1.9230769230769231, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 1.9230769230769231, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 1.9230769230769231, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 1.9230769230769231, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 1.9230769230769231, 0.9230769230769231, 1.0
UPPER,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 1.9230769230769231, 0.9230769230769231, 1.0
param,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 1.9230769230769231, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 1.9230769230769231, 0.9230769230769231, 1.0
param,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 1.9230769230769231, 0.9230769230769231, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 1.9230769230769231, 0.9230769230769231, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 1.9230769230769231, 0.9230769230769231, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 1.9230769230769231, 0.9230769230769231, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 1.9230769230769231, 0.9230769230769231, 1.0
hint,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 1.9230769230769231, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 1.9230769230769231, 0.9230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.92, 0.44, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 1.92, 0.6, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.92, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.92, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 1.92, 0.92, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 1.92, 0.92, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 1.92, 0.92, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 1.92, 0.92, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 1.92, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 1.92, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 1.92, 0.92, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 1.92, 0.92, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 1.92, 0.92, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actual,SIMPLE_NAME, line no: 827, 1.92, 0.8, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 1.92, 0.92, 1.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 1.92, 0.92, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 1.92, 0.92, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 1.92, 0.92, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 1.92, 0.92, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 1.92, 0.92, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 1.9166666666666665, 0.9166666666666666, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.9166666666666665, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.9166666666666665, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.9166666666666665, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 1.9166666666666665, 0.9166666666666666, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declared,SIMPLE_NAME, line no: 826, 1.9166666666666665, 0.8333333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actual,SIMPLE_NAME, line no: 827, 1.9166666666666665, 0.8333333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 1.9166666666666665, 0.9166666666666666, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,get,SIMPLE_NAME, line no: 198, 1.9166666666666665, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info,SIMPLE_NAME, line no: 314, 1.9166666666666665, 0.9166666666666666, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 1.9166666666666665, 0.9166666666666666, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 1.9166666666666665, 0.9166666666666666, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 1.9130434782608696, 0.9130434782608695, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 1.9130434782608696, 0.9130434782608695, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 1.8846153846153846, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.8846153846153846, 0.4230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.8846153846153846, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.8846153846153846, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 1.8846153846153846, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 1.8846153846153846, 0.8076923076923077, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 1.8846153846153846, 0.8846153846153846, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 1.8846153846153846, 0.8846153846153846, 1.0
UPPER,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 1.8846153846153846, 0.8846153846153846, 1.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 1.8846153846153846, 0.8846153846153846, 1.0
UPPER,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 1.8846153846153846, 0.8846153846153846, 1.0
param,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 1.8846153846153846, 0.8846153846153846, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 1.8846153846153846, 0.8846153846153846, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 1.8846153846153846, 0.8846153846153846, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 1.8846153846153846, 0.8846153846153846, 1.0
hint,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 1.8846153846153846, 0.8846153846153846, 1.0
hint,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 1.8846153846153846, 0.8846153846153846, 1.0
hint,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 1.8846153846153846, 0.8846153846153846, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.88, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.88, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 1.88, 0.8, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 1.88, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 1.88, 0.88, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 1.88, 0.88, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.88, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.88, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.88, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 1.88, 0.88, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 1.88, 0.68, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 1.88, 0.88, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 1.88, 0.88, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 1.88, 0.88, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declared,SIMPLE_NAME, line no: 826, 1.88, 0.8, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 1.88, 0.88, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 1.88, 0.88, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 1.88, 0.88, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 1.875, 0.875, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.875, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.875, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upper,SIMPLE_NAME, line no: 384, 1.875, 0.7916666666666666, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 1.875, 0.7083333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 1.875, 0.875, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 1.875, 0.875, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 1.875, 0.875, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 1.875, 0.875, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 1.875, 0.875, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 1.875, 0.875, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 1.875, 0.875, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 1.875, 0.875, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 1.875, 0.875, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 1.8695652173913042, 0.8695652173913043, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 1.8695652173913042, 0.8695652173913043, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 1.8695652173913042, 0.8695652173913043, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 1.8695652173913042, 0.8695652173913043, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 1.8695652173913042, 0.8695652173913043, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 1.8695652173913042, 0.8695652173913043, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 1.8461538461538463, 0.8461538461538461, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 1.8461538461538463, 0.8461538461538461, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.8461538461538463, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.8461538461538463, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 1.8461538461538463, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 1.8461538461538463, 0.8461538461538461, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 1.8461538461538463, 0.8461538461538461, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 1.8461538461538463, 0.8461538461538461, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 1.8461538461538463, 0.8461538461538461, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 1.8461538461538463, 0.8461538461538461, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 1.8461538461538463, 0.8461538461538461, 1.0
UPPER,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 1.8461538461538463, 0.8461538461538461, 1.0
param,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 1.8461538461538463, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 1.8461538461538463, 0.8461538461538461, 1.0
param,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 1.8461538461538463, 0.8461538461538461, 1.0
param,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 1.8461538461538463, 0.038461538461538464, 1.0
hint,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 1.8461538461538463, 0.8461538461538461, 1.0
hint,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 1.8461538461538463, 0.8461538461538461, 1.0
hint,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 1.8461538461538463, 0.8461538461538461, 1.0
hint,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 1.8461538461538463, 0.8461538461538461, 1.0
hint,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 1.8461538461538463, 0.8461538461538461, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 1.8399999999999999, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 1.8399999999999999, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 1.8399999999999999, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 1.8399999999999999, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 1.8399999999999999, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 1.8399999999999999, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 1.8399999999999999, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 1.8399999999999999, 0.84, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 1.8399999999999999, 0.84, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.8399999999999999, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.8399999999999999, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upper,SIMPLE_NAME, line no: 384, 1.8399999999999999, 0.76, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 1.8399999999999999, 0.84, 1.0
param.hint,QUALIFIED_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 1.8399999999999999, 0.84, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 1.8399999999999999, 0.84, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 1.8399999999999999, 0.84, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 1.8399999999999999, 0.84, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 1.8333333333333335, 0.8333333333333334, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 1.8333333333333335, 0.8333333333333334, 1.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 1.8333333333333335, 0.8333333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,get,SIMPLE_NAME, line no: 198, 1.8333333333333335, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 1.8333333333333335, 0.7083333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 1.8333333333333335, 0.8333333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 1.8333333333333335, 0.8333333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 1.8333333333333335, 0.8333333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value,SIMPLE_NAME, line no: 83, 1.8333333333333335, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lower,SIMPLE_NAME, line no: 324, 1.8333333333333335, 0.8333333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 1.8333333333333335, 0.041666666666666664, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 1.8333333333333335, 0.8333333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 1.8333333333333335, 0.8333333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 1.8333333333333335, 0.8333333333333334, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 1.8076923076923077, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 1.8076923076923077, 0.8076923076923077, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 1.8076923076923077, 0.038461538461538464, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 1.8076923076923077, 0.8076923076923077, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 1.8076923076923077, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 1.8076923076923077, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 1.8076923076923077, 0.8076923076923077, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 1.8076923076923077, 0.8076923076923077, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 1.8076923076923077, 0.8076923076923077, 1.0
hint,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 1.8076923076923077, 0.8076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 1.8, 0.8, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 1.8, 0.8, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 1.8, 0.8, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 1.8, 0.8, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 1.8, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 1.8, 0.8, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 1.8, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 1.8, 0.8, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,get,SIMPLE_NAME, line no: 198, 1.8, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 1.8, 0.68, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 1.8, 0.8, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 1.8, 0.8, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 1.8, 0.8, 1.0
param.hint,QUALIFIED_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 1.8, 0.8, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 1.8, 0.8, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 1.8, 0.8, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 1.7916666666666665, 0.041666666666666664, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 1.7916666666666665, 0.7916666666666666, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 1.7826086956521738, 0.782608695652174, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 1.7692307692307692, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 1.7692307692307692, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 1.7692307692307692, 0.7692307692307693, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 1.7692307692307692, 0.7692307692307693, 1.0
UPPER,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 1.7692307692307692, 0.7692307692307693, 1.0
param,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 1.7692307692307692, 0.7307692307692307, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 1.7692307692307692, 0.7692307692307693, 1.0
hint,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 1.7692307692307692, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 1.7692307692307692, 0.7692307692307693, 1.0
hint,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 1.7692307692307692, 0.7692307692307693, 1.0
hint,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 1.7692307692307692, 0.7692307692307693, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 1.76, 0.76, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 1.76, 0.76, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 1.76, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 1.76, 0.24, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 1.76, 0.76, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 1.76, 0.04, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument,SIMPLE_NAME, line no: 235, 1.75, 0.75, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 1.75, 0.7083333333333334, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,other,SIMPLE_NAME, line no: 556, 1.75, 0.7083333333333334, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 1.7307692307692308, 0.6923076923076923, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 1.7307692307692308, 0.7307692307692307, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 1.7307692307692308, 0.7307692307692307, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 1.7307692307692308, 0.7307692307692307, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 1.7307692307692308, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 1.7307692307692308, 0.23076923076923078, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 1.7307692307692308, 0.7307692307692307, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 1.7307692307692308, 0.7307692307692307, 1.0
UPPER,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 1.7307692307692308, 0.7307692307692307, 1.0
param,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 1.7307692307692308, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 1.7307692307692308, 0.7307692307692307, 1.0
param,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 1.7307692307692308, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 1.7307692307692308, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 1.7307692307692308, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 1.7307692307692308, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 1.7307692307692308, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 1.7307692307692308, 0.7307692307692307, 1.0
hint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 1.7307692307692308, 0.7307692307692307, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 1.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 1.72, 0.68, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 1.72, 0.68, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 1.72, 0.72, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 1.72, 0.72, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument,SIMPLE_NAME, line no: 235, 1.72, 0.72, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 1.72, 0.68, 1.0
param.hint,QUALIFIED_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 1.72, 0.72, 1.0
outerVisit,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 1.7083333333333335, 0.7083333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,component,SIMPLE_NAME, line no: 220, 1.7083333333333335, 0.7083333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,superType,SIMPLE_NAME, line no: 272, 1.7083333333333335, 0.7083333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,transitive,SIMPLE_NAME, line no: 473, 1.7083333333333335, 0.7083333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 1.7083333333333335, 0.6666666666666666, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 1.7083333333333335, 0.6666666666666666, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 1.7083333333333335, 0.6666666666666666, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 1.6923076923076923, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 1.6923076923076923, 0.6538461538461539, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 1.6923076923076923, 0.6923076923076923, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 1.6923076923076923, 0.6923076923076923, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 1.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 1.6923076923076923, 0.6538461538461539, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 1.6923076923076923, 0.6538461538461539, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 1.6923076923076923, 0.6923076923076923, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 1.6923076923076923, 0.6923076923076923, 1.0
param,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 1.6923076923076923, 0.6538461538461539, 1.0
param,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 1.6923076923076923, 0.6923076923076923, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,component,SIMPLE_NAME, line no: 220, 1.6800000000000002, 0.68, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,superType,SIMPLE_NAME, line no: 272, 1.6800000000000002, 0.68, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,transitive,SIMPLE_NAME, line no: 473, 1.6800000000000002, 0.68, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 1.6800000000000002, 0.64, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 1.6800000000000002, 0.64, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 1.6666666666666665, 0.625, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.6666666666666665, 0.6666666666666666, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 1.6538461538461537, 0.6538461538461539, 1.0
ResolveInfo,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.6538461538461537, 0.6538461538461539, 1.0
param,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 1.6538461538461537, 0.6538461538461539, 1.0
param,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 1.6538461538461537, 0.6538461538461539, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 1.6400000000000001, 0.6, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 1.6400000000000001, 0.6, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 1.6400000000000001, 0.64, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 1.6400000000000001, 0.64, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 1.6400000000000001, 0.6, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 1.6153846153846154, 0.5769230769230769, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 1.6153846153846154, 0.5769230769230769, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 1.6153846153846154, 0.6153846153846154, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 1.6153846153846154, 0.6153846153846154, 1.0
hint,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 1.6153846153846154, 0.038461538461538464, 1.0
hint,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 1.6153846153846154, 0.6153846153846154, 1.0
hint,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 1.6153846153846154, 0.6153846153846154, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 1.6, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 1.6, 0.6, 1.0
param.hint,QUALIFIED_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 1.6, 0.04, 1.0
outerVisit,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 1.5833333333333335, 0.5833333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value,SIMPLE_NAME, line no: 83, 1.5833333333333335, 0.041666666666666664, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 1.5769230769230769, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.5769230769230769, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 1.5769230769230769, 0.5769230769230769, 1.0
hint,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 1.5769230769230769, 0.5769230769230769, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 1.56, 0.56, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 1.56, 0.56, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 1.56, 0.56, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value,SIMPLE_NAME, line no: 83, 1.56, 0.04, 1.0
param.hint,QUALIFIED_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.56, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 1.56, 0.56, 1.0
outerVisit,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 1.5416666666666665, 0.4166666666666667, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 1.5384615384615383, 0.5384615384615384, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 1.5384615384615383, 0.5384615384615384, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 1.5384615384615383, 0.5384615384615384, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 1.52, 0.52, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.5, 1.0, 0.5
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 1.5, 0.5, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.5, 1.0, 0.5
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 1.5, 0.5, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.5, 1.0, 0.5
getTypeReference,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 1.48, 0.48, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 1.48, 0.48, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 1.4615384615384617, 0.46153846153846156, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 1.44, 0.44, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 1.44, 0.44, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 1.44, 0.44, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 1.4230769230769231, 0.4230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 1.4230769230769231, 0.4230769230769231, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 1.4230769230769231, 0.4230769230769231, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 1.4166666666666665, 0.9166666666666666, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 1.4166666666666665, 0.9166666666666666, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 1.4130434782608696, 0.9130434782608695, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 1.4130434782608696, 0.9130434782608695, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 1.4130434782608696, 0.9130434782608695, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 1.4130434782608696, 0.9130434782608695, 0.5
getTypeReference,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 1.4, 0.4, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 1.4, 0.4, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 1.3846153846153846, 0.38461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 1.3846153846153846, 0.38461538461538464, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 1.38, 0.88, 0.5
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 1.38, 0.88, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 1.375, 0.875, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 1.375, 0.875, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 1.3478260869565217, 0.34782608695652173, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 1.3478260869565217, 0.34782608695652173, 1.0
param.hint,QUALIFIED_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 1.3399999999999999, 0.84, 0.5
param.hint,QUALIFIED_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 1.3399999999999999, 0.84, 0.5
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 1.3399999999999999, 0.84, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 1.3333333333333335, 0.8333333333333334, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 1.3333333333333333, 0.3333333333333333, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 1.3333333333333333, 0.3333333333333333, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 1.3260869565217392, 0.8260869565217391, 0.5
getTypeReference,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 1.32, 0.32, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 1.32, 0.32, 1.0
param.hint,QUALIFIED_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 1.32, 0.32, 1.0
param.hint,QUALIFIED_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 1.32, 0.32, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 1.3076923076923077, 0.3076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 1.3076923076923077, 0.3076923076923077, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 1.3076923076923077, 0.3076923076923077, 1.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 1.3076923076923077, 0.3076923076923077, 1.0
UPPER,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 1.3076923076923077, 0.3076923076923077, 1.0
UPPER,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 1.3076923076923077, 0.3076923076923077, 1.0
hint,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 1.3076923076923077, 0.3076923076923077, 1.0
hint,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 1.3076923076923077, 0.3076923076923077, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 1.28, 0.28, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 1.2692307692307692, 0.2692307692307692, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 1.25, 0.75, 0.5
getTypeReference,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 1.24, 0.24, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 1.2391304347826086, 0.7391304347826086, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 1.2391304347826086, 0.7391304347826086, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 1.2391304347826086, 0.7391304347826086, 0.5
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 1.2391304347826086, 0.7391304347826086, 0.5
getTypeReference,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 1.2307692307692308, 0.23076923076923078, 1.0
param.hint,QUALIFIED_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 1.22, 0.72, 0.5
param.hint,QUALIFIED_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 1.22, 0.72, 0.5
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 1.22, 0.72, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 1.2083333333333335, 0.7083333333333334, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 1.2083333333333335, 0.7083333333333334, 0.5
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 1.2083333333333335, 0.7083333333333334, 0.5
outerVisit,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 1.2083333333333333, 0.20833333333333334, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiver,SIMPLE_NAME, line no: 181, 1.2083333333333333, 0.041666666666666664, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.2, 1.0, 0.2
getTypeReference,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 1.2, 0.04, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.2, 1.0, 0.2
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiver,SIMPLE_NAME, line no: 181, 1.2, 0.04, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.2, 1.0, 0.2
getTypeReference,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 1.1923076923076923, 0.038461538461538464, 1.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 1.1800000000000002, 0.68, 0.5
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 1.1733333333333333, 0.84, 0.3333333333333333
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.1666666666666667, 1.0, 0.16666666666666666
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.1666666666666667, 1.0, 0.16666666666666666
outerVisit,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 1.1666666666666667, 0.16666666666666666, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.1666666666666667, 1.0, 0.16666666666666666
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.1666666666666667, 1.0, 0.16666666666666666
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 1.1666666666666667, 0.8333333333333334, 0.3333333333333333
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.1666666666666667, 1.0, 0.16666666666666666
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.1666666666666667, 1.0, 0.16666666666666666
getTypeReference,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 1.16, 0.16, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 1.16, 0.16, 1.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 1.1594202898550725, 0.8260869565217391, 0.3333333333333333
getTypeReference,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 1.1538461538461537, 0.15384615384615385, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 1.1538461538461537, 0.15384615384615385, 1.0
hint,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 1.1538461538461537, 0.15384615384615385, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 1.05, 0.8, 0.25
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 1.0416666666666667, 0.041666666666666664, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 1.0416666666666667, 0.041666666666666664, 1.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 1.0416666666666667, 0.041666666666666664, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 1.0416666666666665, 0.7916666666666666, 0.25
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 1.04, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 1.04, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 1.04, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 1.04, 0.04, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 1.04, 0.04, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 1.04, 0.04, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 1.04, 0.04, 1.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 1.04, 0.04, 1.0
param.hint,QUALIFIED_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 1.04, 0.84, 0.2
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 1.0384615384615385, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 1.0384615384615385, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 1.0384615384615385, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 1.0384615384615385, 0.038461538461538464, 1.0
getTypeReference,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 1.0384615384615385, 0.038461538461538464, 1.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 1.0333333333333334, 0.8333333333333334, 0.2
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 1.0326086956521738, 0.782608695652174, 0.25
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 1.0326086956521738, 0.782608695652174, 0.25
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 1.0260869565217392, 0.8260869565217391, 0.2
param.hint,QUALIFIED_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 1.01, 0.76, 0.25
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Collections,SIMPLE_NAME, line no: 11, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,List,SIMPLE_NAME, line no: 12, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Lists,SIMPLE_NAME, line no: 43, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,put,SIMPLE_NAME, line no: 83, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.34782608695652173, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5652173913043478, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,size,SIMPLE_NAME, line no: 91, 1.0, 0.5217391304347826, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,get,SIMPLE_NAME, line no: 198, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 1.0, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 1.0, 0.21739130434782608, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,add,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i,SIMPLE_NAME, line no: 234, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,0,NUMBER_LITERAL, line no: 234, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 1.0, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map,SIMPLE_NAME, line no: 290, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,1,NUMBER_LITERAL, line no: 293, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 1.0, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Entry,SIMPLE_NAME, line no: 294, 1.0, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,keySet,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 1.0, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,uppers,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowers,SIMPLE_NAME, line no: 309, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,done,SIMPLE_NAME, line no: 310, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Integer,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,kind,SIMPLE_NAME, line no: 315, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 1.0, 0.34782608695652173, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 1.0, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 1.0, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,entry,SIMPLE_NAME, line no: 463, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5416666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 1.0, 0.5, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 1.0, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 1.0, 0.20833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 1.0, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 1.0, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 1.0, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 1.0, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 1.0, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 1.0, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 1.0, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections,SIMPLE_NAME, line no: 11, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,List,SIMPLE_NAME, line no: 12, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists,SIMPLE_NAME, line no: 43, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,size,SIMPLE_NAME, line no: 91, 1.0, 0.5, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 1.0, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 1.0, 0.20833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,add,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 1.0, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i,SIMPLE_NAME, line no: 234, 1.0, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,0,NUMBER_LITERAL, line no: 234, 1.0, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 1.0, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map,SIMPLE_NAME, line no: 290, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,1,NUMBER_LITERAL, line no: 293, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 1.0, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Entry,SIMPLE_NAME, line no: 294, 1.0, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,keySet,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 1.0, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers,SIMPLE_NAME, line no: 309, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,done,SIMPLE_NAME, line no: 310, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Integer,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 1.0, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 1.0, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 1.0, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entry,SIMPLE_NAME, line no: 463, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.52, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 1.0, 0.48, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 1.0, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 1.0, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 1.0, 0.2, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.44, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 1.0, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 1.0, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 1.0, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 1.0, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 1.0, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 1.0, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 1.0, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 1.0, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 1.0, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 1.0, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 1.0, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 1.0, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 1.0, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.52, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 1.0, 0.48, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 1.0, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 1.0, 0.2, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 1.0, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 1.0, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 1.0, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 1.0, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 1.0, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 1.0, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 1.0, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 1.0, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 1.0, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 1.0, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 1.0, 0.75, 0.25
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 1.0, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 1.0, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 1.0, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 1.0, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 1.0, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 1.0, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
param,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,Collection,SIMPLE_NAME, line no: 10, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Map,SIMPLE_NAME, line no: 13, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Set,SIMPLE_NAME, line no: 14, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmCompoundTypeReference,SIMPLE_NAME, line no: 17, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmGenericArrayTypeReference,SIMPLE_NAME, line no: 24, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmParameterizedTypeReference,SIMPLE_NAME, line no: 27, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmType,SIMPLE_NAME, line no: 28, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmTypeConstraint,SIMPLE_NAME, line no: 29, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmTypeParameter,SIMPLE_NAME, line no: 30, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator,SIMPLE_NAME, line no: 31, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmTypeReference,SIMPLE_NAME, line no: 32, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmUpperBound,SIMPLE_NAME, line no: 33, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmWildcardTypeReference,SIMPLE_NAME, line no: 34, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 1.0, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 1.0, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 1.0, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,TypeArgumentContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor.InheritanceAware,QUALIFIED_NAME, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitor,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,InheritanceAware,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,Boolean,SIMPLE_NAME, line no: 209, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 1.0, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 1.0, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 1.0, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 1.0, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 1.0, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 1.0, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 1.0, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,param,SIMPLE_NAME, line no: 237, 1.0, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 1.0, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 1.0, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 1.0, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 1.0, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfo,SIMPLE_NAME, line no: 290, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 1.0, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 1.0, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 1.0, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,parameter,SIMPLE_NAME, line no: 464, 1.0, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 1.0, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 1.0, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 1.0, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,ITypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,Void,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter.InheritanceAware,QUALIFIED_NAME, line no: 775, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,AbstractTypeReferenceVisitorWithParameter,SIMPLE_NAME, line no: 775, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 1.0, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 1.0, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 1.0, 1.0, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualType ResolveInfoKind.UPPER hint),CLASS_INSTANCE_CREATION, line no: 952, 1.0, 1.0, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Sets,SIMPLE_NAME, line no: 46, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeReferences,SIMPLE_NAME, line no: 59, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typesFactory,SIMPLE_NAME, line no: 62, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,rawTypeHelper,SIMPLE_NAME, line no: 65, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,primitives,SIMPLE_NAME, line no: 71, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Override,SIMPLE_NAME, line no: 77, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,asWrapperTypeIfPrimitive,SIMPLE_NAME, line no: 84, 0.9615384615384616, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isEmpty,SIMPLE_NAME, line no: 89, 0.9615384615384616, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result,SIMPLE_NAME, line no: 198, 0.9615384615384616, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getReceiverContext,SIMPLE_NAME, line no: 206, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,receiverType,SIMPLE_NAME, line no: 206, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createTemporaryMap(),METHOD_INVOCATION, line no: 207, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createTemporaryMap,SIMPLE_NAME, line no: 207, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visited,SIMPLE_NAME, line no: 208, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Sets.newHashSet(),METHOD_INVOCATION, line no: 208, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,newHashSet,SIMPLE_NAME, line no: 208, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,rawType,SIMPLE_NAME, line no: 209, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } .visit(primitives.asWrapperTypeIfPrimitive(receiverType)),METHOD_INVOCATION, line no: 209, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return Boolean.TRUE;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return Boolean.FALSE;   }   @Override public Boolean doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences()) {       if (visit(component))       return Boolean.TRUE;     }     return Boolean.FALSE;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (visited.add(type)) {       if (type instanceof JvmTypeParameterDeclarator) {         List<JvmTypeParameter> typeParameters=((JvmTypeParameterDeclarator)type).getTypeParameters();         List<JvmTypeReference> typeArguments=reference.getArguments();         if (!typeArguments.isEmpty()) {           for (int i=0; i < typeArguments.size() && i < typeParameters.size(); i++) {             JvmTypeReference argument=typeArguments.get(i);             if (argument != null) {               JvmTypeParameter param=typeParameters.get(i);               boolean self=false;               if (argument instanceof JvmParameterizedTypeReference) {                 self=param == argument.getType();               }               if (!self) {                 if (result.put(param argument) != null)                 throw new IllegalStateException();               }             }           }         }  else {           if (!typeParameters.isEmpty()) {             return Boolean.TRUE;           }         }       }       if (type instanceof JvmTypeParameter) {         List<JvmTypeConstraint> constraints=((JvmTypeParameter)type).getConstraints();         boolean upperBoundSeen=false;         for (        JvmTypeConstraint constraint : constraints) {           if (constraint instanceof JvmUpperBound) {             upperBoundSeen=true;             if (visit(constraint.getTypeReference())) {               return Boolean.TRUE;             }           }         }         if (!upperBoundSeen) {           if (visit(typeReferences.getTypeForName(Object.class type))) {             return Boolean.TRUE;           }         }       }  else       if (type instanceof JvmDeclaredType) {         List<JvmTypeReference> superTypes=((JvmDeclaredType)type).getSuperTypes();         for (        JvmTypeReference superType : superTypes) {           if (visit(superType)) {             return Boolean.TRUE;           }         }       }     }     return Boolean.FALSE;   } } ,CLASS_INSTANCE_CREATION, line no: 209, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,@Override,MARKER_ANNOTATION, line no: 210, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,handleNullReference,SIMPLE_NAME, line no: 211, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,doVisitTypeReference,SIMPLE_NAME, line no: 215, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference,SIMPLE_NAME, line no: 215, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,doVisitCompoundTypeReference,SIMPLE_NAME, line no: 219, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit,SIMPLE_NAME, line no: 221, 0.9615384615384616, 0.4230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,doVisitParameterizedTypeReference,SIMPLE_NAME, line no: 227, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,type,SIMPLE_NAME, line no: 228, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getType,SIMPLE_NAME, line no: 228, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 230, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters(),METHOD_INVOCATION, line no: 231, 0.9615384615384616, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type),PARENTHESIZED_EXPRESSION, line no: 231, 0.9615384615384616, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)type,CAST_EXPRESSION, line no: 231, 0.9615384615384616, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getTypeParameters,SIMPLE_NAME, line no: 231, 0.9615384615384616, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,null,NULL_LITERAL, line no: 236, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,false,BOOLEAN_LITERAL, line no: 238, 0.9615384615384616, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameter,INSTANCEOF_EXPRESSION, line no: 254, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getConstraints,SIMPLE_NAME, line no: 255, 0.9615384615384616, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraint,SIMPLE_NAME, line no: 257, 0.9615384615384616, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.9615384615384616, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(receiverType),METHOD_INVOCATION, line no: 281, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new TypeArgumentContext(null typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 283, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,normalized,SIMPLE_NAME, line no: 284, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,normalizedCopy(result),METHOD_INVOCATION, line no: 284, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,normalizedCopy,SIMPLE_NAME, line no: 284, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,normalized.isEmpty(),METHOD_INVOCATION, line no: 285, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new TypeArgumentContext(normalized typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 287, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ResolveInfoKind,SIMPLE_NAME, line no: 315, 0.9615384615384616, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 319, 0.9615384615384616, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,UPPER,SIMPLE_NAME, line no: 319, 0.9615384615384616, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.9615384615384616, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,hint,SIMPLE_NAME, line no: 530, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredType,SIMPLE_NAME, line no: 575, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,doVisitWildcardTypeReference,SIMPLE_NAME, line no: 619, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.getConstraints(),METHOD_INVOCATION, line no: 620, 0.9615384615384616, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualType,SIMPLE_NAME, line no: 773, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,implementation,SIMPLE_NAME, line no: 775, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitorWithParameter.InheritanceAware<ResolveInfo Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference   ResolveInfo param){     for (    JvmTypeReference component : reference.getReferences())     visit(component param);     return null;   }   @Override protected Void handleNullReference(  ResolveInfo parameter){     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference   ResolveInfo param){     return null;   }   @Override public Void doVisitParameterizedTypeReference(  final JvmParameterizedTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override protected Void handleNullReference(){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           for (          JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {             if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {               result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));             }           }         }         return null;       }       @Override public Void doVisitParameterizedTypeReference(      JvmParameterizedTypeReference reference){         final JvmType type=declaredReference.getType();         if (type instanceof JvmTypeParameter) {           result.put((JvmTypeParameter)type param);         }  else         if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {           TypeArgumentContext actualContext=getReceiverContext(reference);           if (actualContext != null) {             TypeArgumentContext declaredContext=getReceiverContext(declaredReference);             if (declaredContext == null) {               declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);             }             Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();             for (            JvmTypeParameter receiverBound : receiverBoundParameters) {               JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);               JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);               outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));             }             for (            JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {               if (!result.containsKey(declaredBoundParameter)) {                 result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint constraint : reference.getConstraints()) {           if (constraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint constraint : reference.getConstraints()) {             if (constraint instanceof JvmUpperBound) {               outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitWildcardTypeReference(  final JvmWildcardTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override protected Void handleNullReference(){         return null;       }       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         return doVisitTypeReference(reference);       }       @Override public Void doVisitWildcardTypeReference(      JvmWildcardTypeReference reference){         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmUpperBound) {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmUpperBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));               }             }           }  else {             for (            JvmTypeConstraint actualConstraint : reference.getConstraints()) {               if (actualConstraint instanceof JvmLowerBound) {                 outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));               }             }           }         }         return null;       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         boolean lowerBoundFound=false;         for (        JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {           if (declaredConstraint instanceof JvmLowerBound) {             lowerBoundFound=true;             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));           }         }         if (!lowerBoundFound) {           for (          JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {             if (declaredConstraint instanceof JvmUpperBound) {               outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));             }           }         }         return null;       }     } .visit(param.reference);   }   @Override public Void doVisitGenericArrayTypeReference(  final JvmGenericArrayTypeReference declaredReference   final ResolveInfo param){     return new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){       @Override public Void doVisitCompoundTypeReference(      JvmCompoundTypeReference reference){         for (        JvmTypeReference component : reference.getReferences())         visit(component);         return null;       }       @Override public Void doVisitGenericArrayTypeReference(      JvmGenericArrayTypeReference reference){         return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));       }       @Override public Void doVisitTypeReference(      JvmTypeReference reference){         return null;       }       @Override protected Void handleNullReference(){         return null;       }     } .visit(param.reference);   }   public Void outerVisit(  JvmTypeReference reference   ResolveInfo parameter){     return visit(reference parameter);   } } ,CLASS_INSTANCE_CREATION, line no: 775, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredReference,SIMPLE_NAME, line no: 791, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 792, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override protected Void handleNullReference(){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       for (      JvmTypeConstraint constraint : ((JvmTypeParameter)type).getConstraints()) {         if (constraint instanceof JvmUpperBound && constraint.getTypeReference() != null) {           result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint));         }       }     }     return null;   }   @Override public Void doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     final JvmType type=declaredReference.getType();     if (type instanceof JvmTypeParameter) {       result.put((JvmTypeParameter)type param);     }  else     if (type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty()) {       TypeArgumentContext actualContext=getReceiverContext(reference);       if (actualContext != null) {         TypeArgumentContext declaredContext=getReceiverContext(declaredReference);         if (declaredContext == null) {           declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper);         }         Collection<JvmTypeParameter> receiverBoundParameters=actualContext.getBoundParameters();         for (        JvmTypeParameter receiverBound : receiverBoundParameters) {           JvmTypeReference declared=declaredContext.getBoundArgument(receiverBound);           JvmTypeReference actual=actualContext.getBoundArgument(receiverBound);           outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint));         }         for (        JvmTypeParameter declaredBoundParameter : declaredContext.getBoundParameters()) {           if (!result.containsKey(declaredBoundParameter)) {             result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (constraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint constraint : reference.getConstraints()) {         if (constraint instanceof JvmUpperBound) {           outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 792, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredReference.getType(),METHOD_INVOCATION, line no: 801, 0.9615384615384616, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,type instanceof JvmTypeParameterDeclarator && !((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),INFIX_EXPRESSION, line no: 816, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),PREFIX_EXPRESSION, line no: 816, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)type).getTypeParameters().isEmpty(),METHOD_INVOCATION, line no: 816, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualContext,SIMPLE_NAME, line no: 817, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getReceiverContext(reference),METHOD_INVOCATION, line no: 817, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualContext != null,INFIX_EXPRESSION, line no: 818, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredContext,SIMPLE_NAME, line no: 819, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getReceiverContext(declaredReference),METHOD_INVOCATION, line no: 819, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredContext == null,INFIX_EXPRESSION, line no: 820, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,receiverBoundParameters,SIMPLE_NAME, line no: 824, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualContext.getBoundParameters(),METHOD_INVOCATION, line no: 824, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getBoundParameters,SIMPLE_NAME, line no: 824, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,receiverBound,SIMPLE_NAME, line no: 825, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit,SIMPLE_NAME, line no: 828, 0.9615384615384616, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredBoundParameter,SIMPLE_NAME, line no: 830, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredContext.getBoundParameters(),METHOD_INVOCATION, line no: 830, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerBoundFound,SIMPLE_NAME, line no: 841, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!lowerBoundFound,PREFIX_EXPRESSION, line no: 851, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,param.reference,QUALIFIED_NAME, line no: 870, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 874, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override protected Void handleNullReference(){     return null;   }   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     return doVisitTypeReference(reference);   }   @Override public Void doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmUpperBound) {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmUpperBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint));           }         }       }  else {         for (        JvmTypeConstraint actualConstraint : reference.getConstraints()) {           if (actualConstraint instanceof JvmLowerBound) {             outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint));           }         }       }     }     return null;   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     boolean lowerBoundFound=false;     for (    JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {       if (declaredConstraint instanceof JvmLowerBound) {         lowerBoundFound=true;         outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint));       }     }     if (!lowerBoundFound) {       for (      JvmTypeConstraint declaredConstraint : declaredReference.getConstraints()) {         if (declaredConstraint instanceof JvmUpperBound) {           outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint));         }       }     }     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 874, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredConstraint,SIMPLE_NAME, line no: 885, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredReference.getConstraints(),METHOD_INVOCATION, line no: 885, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 886, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.9615384615384616, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,doVisitGenericArrayTypeReference,SIMPLE_NAME, line no: 925, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,implementation.visit(declaredType new ResolveInfo(actualType ResolveInfoKind.UPPER hint)),METHOD_INVOCATION, line no: 952, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9615384615384616, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9615384615384616, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9615384615384616, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9615384615384616, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 0.9615384615384616, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9615384615384616, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9615384615384616, 0.19230769230769232, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9615384615384616, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9615384615384616, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9615384615384616, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9615384615384616, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9615384615384616, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9615384615384616, 0.9615384615384616, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9615384615384616, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9615384615384616, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9615384615384616, 0.46153846153846156, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9615384615384616, 0.15384615384615385, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9615384615384616, 0.19230769230769232, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9615384615384616, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9615384615384616, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9615384615384616, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9615384615384616, 0.9615384615384616, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9615384615384616, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9615384615384616, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9615384615384616, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9615384615384616, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9615384615384616, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9615384615384616, 0.19230769230769232, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9615384615384616, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9615384615384616, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.9615384615384616, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9615384615384616, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9615384615384616, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9615384615384616, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9615384615384616, 0.9615384615384616, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9615384615384616, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.9615384615384616, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9615384615384616, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9615384615384616, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9615384615384616, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9615384615384616, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 0.9615384615384616, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9615384615384616, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9615384615384616, 0.19230769230769232, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9615384615384616, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9615384615384616, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.9615384615384616, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9615384615384616, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9615384615384616, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9615384615384616, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9615384615384616, 0.9615384615384616, 0.0
UPPER,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9615384615384616, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.9615384615384616, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9615384615384616, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9615384615384616, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9615384615384616, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9615384615384616, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9615384615384616, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9615384615384616, 0.19230769230769232, 0.0
param,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9615384615384616, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9615384615384616, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9615384615384616, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.9615384615384616, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9615384615384616, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9615384615384616, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9615384615384616, 0.9615384615384616, 0.0
param,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9615384615384616, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.9615384615384616, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9615384615384616, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9615384615384616, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9615384615384616, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9615384615384616, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9615384615384616, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 0.9615384615384616, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9615384615384616, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9615384615384616, 0.19230769230769232, 0.0
hint,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9615384615384616, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9615384615384616, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.9615384615384616, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9615384615384616, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9615384615384616, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9615384615384616, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9615384615384616, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9615384615384616, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9615384615384616, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9615384615384616, 0.9615384615384616, 0.0
hint,SIMPLE_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.9615384615384616, 0.8846153846153846, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.96, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.96, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.96, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.96, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.96, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.96, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.96, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.96, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.96, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.96, 0.96, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.96, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.96, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.96, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.96, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.96, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.96, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.96, 0.32, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.96, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.96, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.96, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,List,SIMPLE_NAME, line no: 12, 0.96, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.96, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.96, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,size,SIMPLE_NAME, line no: 91, 0.96, 0.48, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.96, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.96, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,add,SIMPLE_NAME, line no: 229, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.96, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i,SIMPLE_NAME, line no: 234, 0.96, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.96, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.96, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.96, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map,SIMPLE_NAME, line no: 290, 0.96, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.96, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.96, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.96, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,done,SIMPLE_NAME, line no: 310, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.96, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.96, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.96, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.96, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.96, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.96, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.96, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.96, 0.96, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.96, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.96, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.96, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.96, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.96, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.96, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 0.96, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.96, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.96, 0.2, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.96, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.96, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.96, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.96, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.96, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.96, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.96, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.96, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.96, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.96, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.96, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.96, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.96, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.96, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.96, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.96, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.96, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.96, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.96, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.96, 0.96, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.96, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,List,SIMPLE_NAME, line no: 12, 0.96, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.96, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.96, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.96, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,get,SIMPLE_NAME, line no: 198, 0.96, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.96, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.96, 0.2, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.96, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.96, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.96, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.96, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.96, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getTypeReference,SIMPLE_NAME, line no: 260, 0.96, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.96, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.96, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.96, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.96, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.96, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower,SIMPLE_NAME, line no: 369, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolvedLower,SIMPLE_NAME, line no: 370, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.96, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.96, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.96, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.96, 0.96, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualConstraint,SIMPLE_NAME, line no: 887, 0.96, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.96, 0.96, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9583333333333334, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.9583333333333334, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.9583333333333334, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.9583333333333334, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9583333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9583333333333334, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9583333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9583333333333334, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.9583333333333334, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9583333333333334, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9583333333333334, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.9583333333333334, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.9583333333333334, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.9583333333333334, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9583333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9583333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LOWER,SIMPLE_NAME, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9583333333333334, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9583333333333334, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.9583333333333334, 0.9583333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9583333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,List,SIMPLE_NAME, line no: 12, 0.9583333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmDeclaredType,SIMPLE_NAME, line no: 19, 0.9583333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9583333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9583333333333334, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9583333333333334, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9583333333333334, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9583333333333334, 0.20833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9583333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9583333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9583333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9583333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9583333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9583333333333334, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9583333333333334, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Map.Entry,QUALIFIED_NAME, line no: 294, 0.9583333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Entry,SIMPLE_NAME, line no: 294, 0.9583333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9583333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9583333333333334, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9583333333333334, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9583333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9583333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9583333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9583333333333334, 0.9583333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9583333333333334, 0.9583333333333334, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9565217391304348, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.9565217391304348, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.9565217391304348, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.9565217391304348, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9565217391304348, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9565217391304348, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9565217391304348, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeConformanceComputationArgument,SIMPLE_NAME, line no: 375, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.9565217391304348, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9565217391304348, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9565217391304348, 0.9565217391304348, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.9420289855072463, 0.6086956521739131, 0.3333333333333333
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.9420289855072463, 0.6086956521739131, 0.3333333333333333
ResolveInfo,SIMPLE_NAME, line no: 889,Collections,SIMPLE_NAME, line no: 11, 0.9230769230769231, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Lists,SIMPLE_NAME, line no: 43, 0.9230769230769231, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,put,SIMPLE_NAME, line no: 83, 0.9230769230769231, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,size,SIMPLE_NAME, line no: 91, 0.9230769230769231, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Boolean.FALSE,QUALIFIED_NAME, line no: 216, 0.9230769230769231, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,FALSE,SIMPLE_NAME, line no: 216, 0.9230769230769231, 0.19230769230769232, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.getType(),METHOD_INVOCATION, line no: 228, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visited.add(type),METHOD_INVOCATION, line no: 229, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,add,SIMPLE_NAME, line no: 229, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 234, 0.9230769230769231, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i,SIMPLE_NAME, line no: 234, 0.9230769230769231, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,0,NUMBER_LITERAL, line no: 234, 0.9230769230769231, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i++,POSTFIX_EXPRESSION, line no: 234, 0.9230769230769231, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,true,BOOLEAN_LITERAL, line no: 259, 0.9230769230769231, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9230769230769231, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,type instanceof JvmDeclaredType,INSTANCEOF_EXPRESSION, line no: 270, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map,SIMPLE_NAME, line no: 290, 0.9230769230769231, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.isEmpty(),METHOD_INVOCATION, line no: 291, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Collections.emptyMap(),METHOD_INVOCATION, line no: 292, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,emptyMap,SIMPLE_NAME, line no: 292, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.size() == 1,INFIX_EXPRESSION, line no: 293, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.size(),METHOD_INVOCATION, line no: 293, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,1,NUMBER_LITERAL, line no: 293, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createMapWithTweakedToString(),METHOD_INVOCATION, line no: 299, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createMapWithTweakedToString,SIMPLE_NAME, line no: 299, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundParameter,SIMPLE_NAME, line no: 300, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.keySet(),METHOD_INVOCATION, line no: 300, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,keySet,SIMPLE_NAME, line no: 300, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundTo,SIMPLE_NAME, line no: 301, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.get(boundParameter),METHOD_INVOCATION, line no: 301, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundTo.size() == 1,INFIX_EXPRESSION, line no: 302, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundTo.size(),METHOD_INVOCATION, line no: 302, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(boundParameter reference),METHOD_INVOCATION, line no: 305, 0.9230769230769231, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundToList,SIMPLE_NAME, line no: 307, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Lists.newArrayList(boundTo),METHOD_INVOCATION, line no: 307, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,newArrayList,SIMPLE_NAME, line no: 307, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,uppers,SIMPLE_NAME, line no: 308, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(boundToList.size()),METHOD_INVOCATION, line no: 308, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,newArrayListWithCapacity,SIMPLE_NAME, line no: 308, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundToList.size(),METHOD_INVOCATION, line no: 308, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowers,SIMPLE_NAME, line no: 309, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,done,SIMPLE_NAME, line no: 310, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerIndex,SIMPLE_NAME, line no: 311, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Integer.MAX_VALUE,QUALIFIED_NAME, line no: 311, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Integer,SIMPLE_NAME, line no: 311, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,MAX_VALUE,SIMPLE_NAME, line no: 311, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperIndex,SIMPLE_NAME, line no: 312, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < boundToList.size(),INFIX_EXPRESSION, line no: 313, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!lowers.isEmpty(),PREFIX_EXPRESSION, line no: 322, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowers.isEmpty(),METHOD_INVOCATION, line no: 322, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!done,PREFIX_EXPRESSION, line no: 342, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!uppers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 344, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!uppers.isEmpty(),PREFIX_EXPRESSION, line no: 344, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,uppers.isEmpty(),METHOD_INVOCATION, line no: 344, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerWithWildcard,SIMPLE_NAME, line no: 368, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new TypeConformanceComputationArgument(false false true),CLASS_INSTANCE_CREATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower != null,INFIX_EXPRESSION, line no: 380, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference != null,INFIX_EXPRESSION, line no: 405, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.entrySet(),METHOD_INVOCATION, line no: 459, 0.9230769230769231, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,entrySet,SIMPLE_NAME, line no: 459, 0.9230769230769231, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,entry,SIMPLE_NAME, line no: 463, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9230769230769231, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9230769230769231, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9230769230769231, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.9230769230769231, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.9230769230769231, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.9230769230769231, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9230769230769231, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9230769230769231, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9230769230769231, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.9230769230769231, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9230769230769231, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9230769230769231, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9230769230769231, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.9230769230769231, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.9230769230769231, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.9230769230769231, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9230769230769231, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.LOWER,QUALIFIED_NAME, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.9230769230769231, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.9230769230769231, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.9230769230769231, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9230769230769231, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9230769230769231, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9230769230769231, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9230769230769231, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9230769230769231, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9230769230769231, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9230769230769231, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9230769230769231, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9230769230769231, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9230769230769231, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9230769230769231, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9230769230769231, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.9230769230769231, 0.9230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9230769230769231, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9230769230769231, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9230769230769231, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.9230769230769231, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.9230769230769231, 0.9230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.9230769230769231, 0.9230769230769231, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.92, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.92, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.92, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.92, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.92, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.92, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.92, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.92, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.92, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.92, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.92, 0.92, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.92, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.92, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.92, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.92, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.92, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param.hint,QUALIFIED_NAME, line no: 805, 0.92, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.92, 0.92, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 895, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.92, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.92, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.92, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.92, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.92, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info,SIMPLE_NAME, line no: 314, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind,SIMPLE_NAME, line no: 315, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.EXACT,QUALIFIED_NAME, line no: 315, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,EXACT,SIMPLE_NAME, line no: 315, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.92, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ResolveInfoKind.WC_LOWER,QUALIFIED_NAME, line no: 336, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,WC_LOWER,SIMPLE_NAME, line no: 336, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerWithWildcard|=resolvedLower.kind == ResolveInfoKind.WC_LOWER,ASSIGNMENT, line no: 371, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 371, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower.kind,QUALIFIED_NAME, line no: 371, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower == null,INFIX_EXPRESSION, line no: 372, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower=resolvedLower,ASSIGNMENT, line no: 373, 0.92, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.92, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.92, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.92, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.92, 0.92, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.92, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.92, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.92, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.92, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.92, 0.92, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.92, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info,SIMPLE_NAME, line no: 314, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.92, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.92, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actual,SIMPLE_NAME, line no: 827, 0.92, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,internalGetBoundArgument,SIMPLE_NAME, line no: 832, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.92, 0.92, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.92, 0.92, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.9166666666666667, 0.5833333333333334, 0.3333333333333333
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.9166666666666667, 0.5833333333333334, 0.3333333333333333
outerVisit,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.9166666666666666, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.9166666666666666, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.9166666666666666, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.9166666666666666, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.9166666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.9166666666666666, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.9166666666666666, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9166666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.9166666666666666, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint.getTypeReference(),METHOD_INVOCATION, line no: 260, 0.9166666666666666, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.9166666666666666, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.9166666666666666, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.9166666666666666, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.9166666666666666, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(actual ResolveInfoKind.EXACT param.hint),CLASS_INSTANCE_CREATION, line no: 828, 0.9166666666666666, 0.9166666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext.internalGetBoundArgument(declaredBoundParameter),METHOD_INVOCATION, line no: 832, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.9166666666666666, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.9166666666666666, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.9166666666666666, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.9166666666666666, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundToList.get(i),METHOD_INVOCATION, line no: 314, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.9166666666666666, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeConformanceResult,SIMPLE_NAME, line no: 375, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.9166666666666666, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9166666666666666, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.9166666666666666, 0.9166666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.9166666666666666, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.9166666666666666, 0.9166666666666666, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.9130434782608695, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.9130434782608695, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.9130434782608695, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.9130434782608695, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.9130434782608695, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.9130434782608695, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.9130434782608695, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.9130434782608695, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.9130434782608695, 0.9130434782608695, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.9130434782608695, 0.9130434782608695, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.8933333333333333, 0.56, 0.3333333333333333
param.hint,QUALIFIED_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.8933333333333333, 0.56, 0.3333333333333333
ResolveInfo,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8846153846153846, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8846153846153846, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8846153846153846, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer,SIMPLE_NAME, line no: 68, 0.8846153846153846, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.EXACT,INFIX_EXPRESSION, line no: 315, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind,QUALIFIED_NAME, line no: 315, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER || info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.UPPER,INFIX_EXPRESSION, line no: 319, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 319, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ResolveInfoKind.WC_UPPER,QUALIFIED_NAME, line no: 319, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,WC_UPPER,SIMPLE_NAME, line no: 319, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isConformant,SIMPLE_NAME, line no: 325, 0.8846153846153846, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER || info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.LOWER,INFIX_EXPRESSION, line no: 336, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 336, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceResult,SIMPLE_NAME, line no: 375, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference resolvedLower.reference new TypeConformanceComputationArgument(false false true)),METHOD_INVOCATION, line no: 375, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolvedLower.reference,QUALIFIED_NAME, line no: 375, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceResult.isConformant(),METHOD_INVOCATION, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),METHOD_INVOCATION, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceResult.getKinds(),METHOD_INVOCATION, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getKinds,SIMPLE_NAME, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,contains,SIMPLE_NAME, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind.SUBTYPE,QUALIFIED_NAME, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeConformanceResult.Kind,QUALIFIED_NAME, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Kind,SIMPLE_NAME, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,SUBTYPE,SIMPLE_NAME, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.8846153846153846, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8846153846153846, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8846153846153846, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8846153846153846, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.8846153846153846, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8846153846153846, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8846153846153846, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8846153846153846, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8846153846153846, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8846153846153846, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8846153846153846, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8846153846153846, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.8846153846153846, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.8846153846153846, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8846153846153846, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8846153846153846, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8846153846153846, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8846153846153846, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8846153846153846, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8846153846153846, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8846153846153846, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8846153846153846, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8846153846153846, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.8846153846153846, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8846153846153846, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.8846153846153846, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8846153846153846, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.8846153846153846, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.8846153846153846, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8846153846153846, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.8846153846153846, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.8846153846153846, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8846153846153846, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.8846153846153846, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.8846153846153846, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.8846153846153846, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889, 0.8846153846153846, 0.8846153846153846, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 895, 0.8846153846153846, 0.8846153846153846, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.88, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.88, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.88, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.88, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.88, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.88, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.88, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.88, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.88, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.88, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.88, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.88, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.88, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.88, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.88, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.88, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.88, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.88, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.88, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.88, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.88, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.88, 0.88, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.88, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.88, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.88, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.88, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.88, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.88, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.88, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.88, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.88, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.88, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.88, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.88, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.88, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.88, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.88, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.88, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.88, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.88, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.88, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.88, 0.88, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.88, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.88, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.88, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.88, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 320, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperIndex=i,ASSIGNMENT, line no: 321, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!lowers.isEmpty() && upperIndex < lowerIndex,INFIX_EXPRESSION, line no: 322, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceResult.isConformant() && conformanceResult.getKinds().contains(TypeConformanceResult.Kind.SUBTYPE),INFIX_EXPRESSION, line no: 376, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.88, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.88, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.88, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.88, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.88, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.88, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.88, 0.88, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.88, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.88, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.88, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.88, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.88, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.88, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declared new ResolveInfo(actual ResolveInfoKind.EXACT param.hint)),METHOD_INVOCATION, line no: 828, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.88, 0.88, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.88, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameter)type).getConstraints(),METHOD_INVOCATION, line no: 255, 0.88, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameter)type),PARENTHESIZED_EXPRESSION, line no: 255, 0.88, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmTypeParameter)type,CAST_EXPRESSION, line no: 255, 0.88, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=conformanceComputer.getCommonSuperType(uppers),ASSIGNMENT, line no: 345, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.getCommonSuperType(uppers),METHOD_INVOCATION, line no: 345, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getCommonSuperType,SIMPLE_NAME, line no: 345, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,uppers.size() == 1 && boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,uppers.size() == 1,INFIX_EXPRESSION, line no: 346, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,uppers.size(),METHOD_INVOCATION, line no: 346, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundToList.get(upperIndex).kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 346, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundToList.get(upperIndex).kind,FIELD_ACCESS, line no: 346, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundToList.get(upperIndex),METHOD_INVOCATION, line no: 346, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } ,CLASS_INSTANCE_CREATION, line no: 467, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(result typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 520, 0.88, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.88, 0.88, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declared,SIMPLE_NAME, line no: 826, 0.88, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.88, 0.88, 0.0
outerVisit,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.875, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.875, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.875, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.875, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.875, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.875, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.875, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.875, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.875, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.875, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.875, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.875, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.875, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.875, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.875, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.875, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.875, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.875, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.875, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.875, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.875, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.875, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.875, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.875, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.875, 0.875, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.875, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.875, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.875, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.875, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.875, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.875, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.875, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.875, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.875, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.875, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.875, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.875, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.875, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.875, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.875, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.875, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.875, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.875, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allowWildcardResolutions,SIMPLE_NAME, line no: 774, 0.875, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 805, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param.kind,QUALIFIED_NAME, line no: 805, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 832, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 855, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER,CONDITIONAL_EXPRESSION, line no: 856, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.875, 0.875, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.875, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.875, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.875, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.875, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.875, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.875, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.875, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.875, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.875, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.875, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,create,SIMPLE_NAME, line no: 586, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.875, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.875, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.875, 0.875, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.875, 0.875, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8695652173913043, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8695652173913043, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8695652173913043, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8695652173913043, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8695652173913043, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8695652173913043, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8695652173913043, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8695652173913043, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8695652173913043, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8695652173913043, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.8695652173913043, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8695652173913043, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8695652173913043, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8695652173913043, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8695652173913043, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8695652173913043, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8695652173913043, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8695652173913043, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8695652173913043, 0.8695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8695652173913043, 0.8695652173913043, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8461538461538461, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8461538461538461, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowers.size() == 1 || lowerWithWildcard,INFIX_EXPRESSION, line no: 381, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowers.size() == 1,INFIX_EXPRESSION, line no: 381, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowers.size(),METHOD_INVOCATION, line no: 381, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower.kind != ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 382, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bestResolvedLower.kind,QUALIFIED_NAME, line no: 382, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8461538461538461, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8461538461538461, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8461538461538461, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8461538461538461, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8461538461538461, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8461538461538461, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8461538461538461, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8461538461538461, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8461538461538461, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8461538461538461, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8461538461538461, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8461538461538461, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8461538461538461, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8461538461538461, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.8461538461538461, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8461538461538461, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8461538461538461, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8461538461538461, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8461538461538461, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8461538461538461, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8461538461538461, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8461538461538461, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8461538461538461, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8461538461538461, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8461538461538461, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8461538461538461, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8461538461538461, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8461538461538461, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.8461538461538461, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8461538461538461, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8461538461538461, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8461538461538461, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8461538461538461, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.8461538461538461, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8461538461538461, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8461538461538461, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8461538461538461, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8461538461538461, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8461538461538461, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8461538461538461, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8461538461538461, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8461538461538461, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8461538461538461, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8461538461538461, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.8461538461538461, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8461538461538461, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.8461538461538461, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8461538461538461, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8461538461538461, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8461538461538461, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8461538461538461, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8461538461538461, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8461538461538461, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8461538461538461, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8461538461538461, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8461538461538461, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8461538461538461, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8461538461538461, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8461538461538461, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8461538461538461, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8461538461538461, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8461538461538461, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.8461538461538461, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.8461538461538461, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8461538461538461, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.8461538461538461, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8461538461538461, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8461538461538461, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.8461538461538461, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.8461538461538461, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.8461538461538461, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.8461538461538461, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.8461538461538461, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.8461538461538461, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.8461538461538461, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.8461538461538461, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.8461538461538461, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8461538461538461, 0.8461538461538461, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.84, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.84, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.84, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.84, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.84, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.84, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.84, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.84, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.84, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.84, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.84, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.84, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.84, 0.84, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.84, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.84, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.84, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.84, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.84, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.84, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.84, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.84, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.84, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.84, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.84, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,create,SIMPLE_NAME, line no: 586, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.84, 0.84, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.84, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.84, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.84, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.84, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.84, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.84, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.84, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.84, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.84, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.84, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.84, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.84, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.84, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,create,SIMPLE_NAME, line no: 586, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.84, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_UPPER : ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 855, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.84, 0.84, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.84, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.84, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.84, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.84, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.84, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.84, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.84, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.84, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.84, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.84, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.84, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.84, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.84, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.84, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.84, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.84, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.84, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,paramCount,SIMPLE_NAME, line no: 714, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.84, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put((JvmTypeParameter)type new ResolveInfo(constraint.getTypeReference() param.kind param.hint)),METHOD_INVOCATION, line no: 805, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(declaredBoundParameter new ResolveInfo(declaredContext.internalGetBoundArgument(declaredBoundParameter) param.kind param.hint)),METHOD_INVOCATION, line no: 832, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.84, 0.84, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmFormalParameter,SIMPLE_NAME, line no: 23, 0.84, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmLowerBound,SIMPLE_NAME, line no: 25, 0.84, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.84, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Multimap,SIMPLE_NAME, line no: 45, 0.84, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.84, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.84, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.84, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraints,SIMPLE_NAME, line no: 255, 0.84, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getValue,SIMPLE_NAME, line no: 295, 0.84, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getKey,SIMPLE_NAME, line no: 297, 0.84, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,useWildcard,SIMPLE_NAME, line no: 347, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerResolve,SIMPLE_NAME, line no: 348, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveInfo,SIMPLE_NAME, line no: 418, 0.84, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,entry.getKey(),METHOD_INVOCATION, line no: 464, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,boundReference,SIMPLE_NAME, line no: 465, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,entry.getValue(),METHOD_INVOCATION, line no: 465, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,seen,SIMPLE_NAME, line no: 466, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>(){   @Override public JvmTypeReference doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     JvmType type=reference.getType();     if (type instanceof JvmTypeParameter) {       if (type != parameter) {         JvmTypeReference transitive=map.get(type);         if (transitive != null) {           if (seen.add(transitive)) {             try {               return visit(transitive);             }   finally {               seen.remove(transitive);             }           }  else {           }         }       }     }     return reference;   }   @Override public JvmTypeReference doVisitTypeReference(  JvmTypeReference reference){     return reference;   } } .visit(boundReference),METHOD_INVOCATION, line no: 467, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,normalized != null,INFIX_EXPRESSION, line no: 495, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(parameter normalized),METHOD_INVOCATION, line no: 496, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable,SIMPLE_NAME, line no: 502, 0.84, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.isEmpty(),METHOD_INVOCATION, line no: 518, 0.84, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createTemporaryMultimap(),METHOD_INVOCATION, line no: 576, 0.84, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createTemporaryMultimap,SIMPLE_NAME, line no: 576, 0.84, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.84, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declarator,SIMPLE_NAME, line no: 670, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declarator != null,INFIX_EXPRESSION, line no: 672, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes,SIMPLE_NAME, line no: 711, 0.84, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameters,SIMPLE_NAME, line no: 713, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable.getParameters(),METHOD_INVOCATION, line no: 713, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getParameters,SIMPLE_NAME, line no: 713, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameters.size(),METHOD_INVOCATION, line no: 714, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable.isVarArgs(),METHOD_INVOCATION, line no: 715, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isVarArgs,SIMPLE_NAME, line no: 715, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < paramCount && i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < paramCount,INFIX_EXPRESSION, line no: 718, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < argumentTypes.size(),INFIX_EXPRESSION, line no: 718, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes.size(),METHOD_INVOCATION, line no: 718, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getParameterType,SIMPLE_NAME, line no: 719, 0.84, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,int i=argumentTypes.size(),VARIABLE_DECLARATION_EXPRESSION, line no: 725, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable.isVarArgs() && argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes.size() > paramCount,INFIX_EXPRESSION, line no: 731, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,varArgParameterType,SIMPLE_NAME, line no: 732, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameters.get(paramCount).getParameterType(),METHOD_INVOCATION, line no: 732, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameters.get(paramCount),METHOD_INVOCATION, line no: 732, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!(varArgParameterType instanceof JvmGenericArrayTypeReference),PREFIX_EXPRESSION, line no: 733, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(varArgParameterType instanceof JvmGenericArrayTypeReference),PARENTHESIZED_EXPRESSION, line no: 733, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,varArgParameterType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 733, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,varArgComponentType,SIMPLE_NAME, line no: 736, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getComponentType(),METHOD_INVOCATION, line no: 736, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType),PARENTHESIZED_EXPRESSION, line no: 736, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmGenericArrayTypeReference)varArgParameterType,CAST_EXPRESSION, line no: 736, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getComponentType,SIMPLE_NAME, line no: 736, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes.size() == paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,paramCount + 1,INFIX_EXPRESSION, line no: 739, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 826, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getBoundArgument,SIMPLE_NAME, line no: 826, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualContext.getBoundArgument(receiverBound),METHOD_INVOCATION, line no: 827, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.containsKey(declaredBoundParameter),METHOD_INVOCATION, line no: 831, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,containsKey,SIMPLE_NAME, line no: 831, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualConstraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 888, 0.84, 0.84, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 894, 0.84, 0.84, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8333333333333334, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.8333333333333334, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8333333333333334, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.8333333333333334, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8333333333333334, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8333333333333334, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8333333333333334, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.8333333333333334, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.8333333333333334, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.8333333333333334, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.8333333333333334, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8333333333333334, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8333333333333334, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.8333333333333334, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.8333333333333334, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LinkedHashMultimap,SIMPLE_NAME, line no: 42, 0.8333333333333334, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8333333333333334, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.8333333333333334, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.8333333333333334, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8333333333333334, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.8333333333333334, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.8333333333333334, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LinkedHashMultimap.create(2 1),METHOD_INVOCATION, line no: 586, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,create,SIMPLE_NAME, line no: 586, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,2,NUMBER_LITERAL, line no: 586, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 846, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER,CONDITIONAL_EXPRESSION, line no: 847, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8333333333333334, 0.8333333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8333333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8333333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8333333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8333333333333334, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8333333333333334, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8333333333333334, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8333333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8333333333333334, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8333333333333334, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8333333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8333333333333334, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8333333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8333333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8333333333333334, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8333333333333334, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8333333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8333333333333334, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8333333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8333333333333334, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8333333333333334, 0.8333333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8333333333333334, 0.8333333333333334, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8260869565217391, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.8260869565217391, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8260869565217391, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8260869565217391, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8260869565217391, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.8260869565217391, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.8260869565217391, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.8260869565217391, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.8260869565217391, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.8260869565217391, 0.8260869565217391, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8260869565217391, 0.8260869565217391, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8076923076923077, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8076923076923077, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,delegate,SIMPLE_NAME, line no: 74, 0.8076923076923077, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8076923076923077, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8076923076923077, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8076923076923077, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8076923076923077, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8076923076923077, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8076923076923077, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveInfo.reference,QUALIFIED_NAME, line no: 419, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveInfo.kind,QUALIFIED_NAME, line no: 420, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_UPPER,INFIX_EXPRESSION, line no: 421, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,kind == ResolveInfoKind.WC_LOWER,INFIX_EXPRESSION, line no: 436, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8076923076923077, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8076923076923077, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } .visit(param.reference),METHOD_INVOCATION, line no: 926, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Void>(){   @Override public Void doVisitCompoundTypeReference(  JvmCompoundTypeReference reference){     for (    JvmTypeReference component : reference.getReferences())     visit(component);     return null;   }   @Override public Void doVisitGenericArrayTypeReference(  JvmGenericArrayTypeReference reference){     return outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint));   }   @Override public Void doVisitTypeReference(  JvmTypeReference reference){     return null;   }   @Override protected Void handleNullReference(){     return null;   } } ,CLASS_INSTANCE_CREATION, line no: 926, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8076923076923077, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8076923076923077, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.8076923076923077, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8076923076923077, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.8076923076923077, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8076923076923077, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8076923076923077, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8076923076923077, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.8076923076923077, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.8076923076923077, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8076923076923077, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.8076923076923077, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.8076923076923077, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8076923076923077, 0.8076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8076923076923077, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8076923076923077, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.8076923076923077, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8076923076923077, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.8076923076923077, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8076923076923077, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8076923076923077, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.8076923076923077, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.8076923076923077, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.8076923076923077, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.8076923076923077, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8076923076923077, 0.8076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8076923076923077, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8076923076923077, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8076923076923077, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8076923076923077, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8076923076923077, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8076923076923077, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8076923076923077, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8076923076923077, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8076923076923077, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8076923076923077, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8076923076923077, 0.8076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8076923076923077, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8076923076923077, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8076923076923077, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8076923076923077, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8076923076923077, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8076923076923077, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8076923076923077, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8076923076923077, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8076923076923077, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8076923076923077, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8076923076923077, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8076923076923077, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8076923076923077, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8076923076923077, 0.8076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8076923076923077, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8076923076923077, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8076923076923077, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8076923076923077, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8076923076923077, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8076923076923077, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8076923076923077, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8076923076923077, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8076923076923077, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8076923076923077, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8076923076923077, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8076923076923077, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8076923076923077, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8076923076923077, 0.8076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8076923076923077, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8076923076923077, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8076923076923077, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8076923076923077, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8076923076923077, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8076923076923077, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8076923076923077, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8076923076923077, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8076923076923077, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8076923076923077, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8076923076923077, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8076923076923077, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8076923076923077, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8076923076923077, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8076923076923077, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8076923076923077, 0.8076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8076923076923077, 0.8076923076923077, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value,SIMPLE_NAME, line no: 83, 0.8, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.8, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.8, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.8, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.8, 0.8, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.8, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.LOWER param.hint),CLASS_INSTANCE_CREATION, line no: 909, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.8, 0.8, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(reference ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 916, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.8, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.8, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.8, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.8, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,key,SIMPLE_NAME, line no: 83, 0.8, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.8, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.8, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.8, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformant,SIMPLE_NAME, line no: 323, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lower,SIMPLE_NAME, line no: 324, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.8, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.8, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.8, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,constraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 843, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference new ResolveInfo(constraint.getTypeReference() allowWildcardResolutions ? ResolveInfoKind.WC_LOWER : ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 846, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.8, 0.8, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.8, 0.8, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,EcoreUtil2,SIMPLE_NAME, line no: 16, 0.8, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmDelegateTypeReference,SIMPLE_NAME, line no: 20, 0.8, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmMultiTypeReference,SIMPLE_NAME, line no: 26, 0.8, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getReferences,SIMPLE_NAME, line no: 220, 0.8, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameters,SIMPLE_NAME, line no: 231, 0.8, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperBoundSeen,SIMPLE_NAME, line no: 256, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraint instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 258, 0.8, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!upperBoundSeen,PREFIX_EXPRESSION, line no: 265, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildcardAwareGetReference,SIMPLE_NAME, line no: 296, 0.8, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,eContainer,SIMPLE_NAME, line no: 355, 0.8, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typesFactory.createJvmDelegateTypeReference(),METHOD_INVOCATION, line no: 356, 0.8, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createJvmDelegateTypeReference,SIMPLE_NAME, line no: 356, 0.8, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,setDelegate,SIMPLE_NAME, line no: 357, 0.8, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upper,SIMPLE_NAME, line no: 384, 0.8, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(bestResolvedLower.reference upper),METHOD_INVOCATION, line no: 385, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildcardAwareGetReference(bestResolvedLower),METHOD_INVOCATION, line no: 388, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameter,SIMPLE_NAME, line no: 513, 0.8, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declarator.getTypeParameters(),METHOD_INVOCATION, line no: 673, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allUppers,SIMPLE_NAME, line no: 675, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Lists.newArrayList(),METHOD_INVOCATION, line no: 675, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameter.getConstraints(),METHOD_INVOCATION, line no: 676, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allUppers.isEmpty(),METHOD_INVOCATION, line no: 681, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allUppers.size() == 1,INFIX_EXPRESSION, line no: 683, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allUppers.size(),METHOD_INVOCATION, line no: 683, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bound,SIMPLE_NAME, line no: 686, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typesFactory.createJvmMultiTypeReference(),METHOD_INVOCATION, line no: 686, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createJvmMultiTypeReference,SIMPLE_NAME, line no: 686, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upper.eContainer() == null,INFIX_EXPRESSION, line no: 688, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upper.eContainer(),METHOD_INVOCATION, line no: 688, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bound.getReferences(),METHOD_INVOCATION, line no: 689, 0.8, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,delegate.setDelegate(upper),METHOD_INVOCATION, line no: 692, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bound.getReferences().add(delegate),METHOD_INVOCATION, line no: 693, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(typeParameter bound),METHOD_INVOCATION, line no: 696, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declarator.eContainer() != null,INFIX_EXPRESSION, line no: 699, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declarator.eContainer(),METHOD_INVOCATION, line no: 699, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declarator=EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),ASSIGNMENT, line no: 700, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,EcoreUtil2.getContainerOfType(declarator.eContainer() JvmTypeParameterDeclarator.class),METHOD_INVOCATION, line no: 700, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getContainerOfType,SIMPLE_NAME, line no: 700, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmTypeParameterDeclarator.class,TYPE_LITERAL, line no: 700, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualVarArgTypes,SIMPLE_NAME, line no: 752, 0.8, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,varArgType,SIMPLE_NAME, line no: 757, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraint instanceof JvmUpperBound && constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,constraint.getTypeReference() != null,INFIX_EXPRESSION, line no: 804, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!result.containsKey(declaredBoundParameter),PREFIX_EXPRESSION, line no: 831, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.8, 0.8, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredConstraint instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 906, 0.8, 0.8, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7916666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7916666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7916666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.7916666666666666, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7916666666666666, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7916666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7916666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.7916666666666666, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7916666666666666, 0.25, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7916666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ForwardingMultimap,SIMPLE_NAME, line no: 40, 0.7916666666666666, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,key,SIMPLE_NAME, line no: 83, 0.7916666666666666, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7916666666666666, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7916666666666666, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ForwardingMultimap<JvmTypeParameter ResolveInfo>(){   final Multimap<JvmTypeParameter ResolveInfo> delegate=LinkedHashMultimap.create(2 1);   @Override protected Multimap<JvmTypeParameter ResolveInfo> delegate(){     return delegate;   }   @Override public boolean put(  JvmTypeParameter key   ResolveInfo value){     if (value != null) {       if (isRecursive(key value.reference)) {         return false;       }       if (value.reference instanceof JvmParameterizedTypeReference) {         value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint);       }     }     return super.put(key value);   } } ,CLASS_INSTANCE_CREATION, line no: 585, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7916666666666666, 0.7916666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.7916666666666666, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.7916666666666666, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.7916666666666666, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7916666666666666, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.7916666666666666, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.7916666666666666, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.7916666666666666, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.7916666666666666, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.7916666666666666, 0.7916666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.7916666666666666, 0.7916666666666666, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.782608695652174, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.782608695652174, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,request,SIMPLE_NAME, line no: 143, 0.782608695652174, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.782608695652174, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.782608695652174, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.782608695652174, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.782608695652174, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,other,SIMPLE_NAME, line no: 556, 0.782608695652174, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.782608695652174, 0.2608695652173913, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.782608695652174, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.782608695652174, 0.782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.782608695652174, 0.782608695652174, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.7692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.7692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.7692307692307693, 0.34615384615384615, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.7692307692307693, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7692307692307693, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7692307692307693, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7692307692307693, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value.reference,QUALIFIED_NAME, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7692307692307693, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.7692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.7692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.7692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.7692307692307693, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.7692307692307693, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7692307692307693, 0.23076923076923078, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.7692307692307693, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.7692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.7692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.7692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.7692307692307693, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.7692307692307693, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.7692307692307693, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7692307692307693, 0.23076923076923078, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.7692307692307693, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.7692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.7692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.7692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.7692307692307693, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.7692307692307693, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7692307692307693, 0.23076923076923078, 0.0
param,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.7692307692307693, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.7692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.7692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.7692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7692307692307693, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.7692307692307693, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.7692307692307693, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7692307692307693, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.7692307692307693, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7692307692307693, 0.23076923076923078, 0.0
hint,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.7692307692307693, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.LOWER param.hint)),METHOD_INVOCATION, line no: 908, 0.7692307692307693, 0.7692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(reference ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 915, 0.7692307692307693, 0.7692307692307693, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.76, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.76, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.76, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.76, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.76, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.76, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.76, 0.24, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value.reference),METHOD_INVOCATION, line no: 599, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.76, 0.76, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.76, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.76, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.76, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.76, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.76, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.76, 0.76, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.76, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.76, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isRecursive(key value.reference),METHOD_INVOCATION, line no: 594, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isRecursive,SIMPLE_NAME, line no: 594, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerBoundFound=true,ASSIGNMENT, line no: 844, 0.76, 0.76, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.76, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.76, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.76, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.76, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.76, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.76, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.76, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.76, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.76, 0.24, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.76, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.76, 0.76, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmConstructor,SIMPLE_NAME, line no: 18, 0.76, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Predicates,SIMPLE_NAME, line no: 38, 0.76, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Iterables,SIMPLE_NAME, line no: 41, 0.76, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,LoggingTypeArgumentDecorator.isDebugEnabled(),METHOD_INVOCATION, line no: 199, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,LoggingTypeArgumentDecorator,SIMPLE_NAME, line no: 199, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isDebugEnabled,SIMPLE_NAME, line no: 199, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeArguments,SIMPLE_NAME, line no: 232, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.getArguments(),METHOD_INVOCATION, line no: 232, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getArguments,SIMPLE_NAME, line no: 232, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!typeArguments.isEmpty(),PREFIX_EXPRESSION, line no: 233, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeArguments.isEmpty(),METHOD_INVOCATION, line no: 233, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.76, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameters.size(),METHOD_INVOCATION, line no: 234, 0.76, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameters.isEmpty(),METHOD_INVOCATION, line no: 249, 0.76, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer() != null,INFIX_EXPRESSION, line no: 355, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer(),METHOD_INVOCATION, line no: 355, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildCard,SIMPLE_NAME, line no: 360, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeReferences.wildCard(),METHOD_INVOCATION, line no: 360, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperBound,SIMPLE_NAME, line no: 361, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typesFactory.createJvmUpperBound(),METHOD_INVOCATION, line no: 361, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createJvmUpperBound,SIMPLE_NAME, line no: 361, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildCard.getConstraints().add(upperBound),METHOD_INVOCATION, line no: 362, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildCard.getConstraints(),METHOD_INVOCATION, line no: 362, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperBound.setTypeReference(reference),METHOD_INVOCATION, line no: 363, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,setTypeReference,SIMPLE_NAME, line no: 363, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=wildCard,ASSIGNMENT, line no: 364, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=upper,ASSIGNMENT, line no: 386, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=wildcardAwareGetReference(bestResolvedLower),ASSIGNMENT, line no: 388, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=bestResolvedLower.reference,ASSIGNMENT, line no: 396, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,explicitTypeArguments,SIMPLE_NAME, line no: 503, 0.76, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable.getTypeParameters(),METHOD_INVOCATION, line no: 505, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameters.isEmpty() && executable instanceof JvmConstructor,INFIX_EXPRESSION, line no: 506, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable instanceof JvmConstructor,INSTANCEOF_EXPRESSION, line no: 506, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < typeParameters.size() && i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < explicitTypeArguments.size(),INFIX_EXPRESSION, line no: 512, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,explicitTypeArguments.size(),METHOD_INVOCATION, line no: 512, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.76, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.76, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.76, 0.24, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType,SIMPLE_NAME, line no: 577, 0.76, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lastArgumentType,SIMPLE_NAME, line no: 740, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes.get(paramCount),METHOD_INVOCATION, line no: 740, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lastArgumentType != null,INFIX_EXPRESSION, line no: 741, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lastArgumentType instanceof JvmGenericArrayTypeReference,INSTANCEOF_EXPRESSION, line no: 742, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(varArgComponentType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 749, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Lists.newArrayList(Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull())),METHOD_INVOCATION, line no: 752, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Iterables.filter(argumentTypes.subList(paramCount argumentTypes.size()) Predicates.notNull()),METHOD_INVOCATION, line no: 752, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,filter,SIMPLE_NAME, line no: 752, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes.subList(paramCount argumentTypes.size()),METHOD_INVOCATION, line no: 753, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,subList,SIMPLE_NAME, line no: 753, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Predicates.notNull(),METHOD_INVOCATION, line no: 753, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,notNull,SIMPLE_NAME, line no: 753, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!actualVarArgTypes.isEmpty(),PREFIX_EXPRESSION, line no: 754, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualVarArgTypes.isEmpty(),METHOD_INVOCATION, line no: 754, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!primitives.isPrimitive(varArgComponentType),PREFIX_EXPRESSION, line no: 755, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,primitives.isPrimitive(varArgComponentType),METHOD_INVOCATION, line no: 755, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isPrimitive,SIMPLE_NAME, line no: 755, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wrappedVarArgTypes,SIMPLE_NAME, line no: 756, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Lists.newArrayListWithCapacity(actualVarArgTypes.size()),METHOD_INVOCATION, line no: 756, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualVarArgTypes.size(),METHOD_INVOCATION, line no: 756, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,actualVarArgTypes=wrappedVarArgTypes,ASSIGNMENT, line no: 760, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,commonVarArgType,SIMPLE_NAME, line no: 762, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.getCommonSuperType(actualVarArgTypes),METHOD_INVOCATION, line no: 762, 0.76, 0.76, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(varArgComponentType commonVarArgType result true paramCount),METHOD_INVOCATION, line no: 763, 0.76, 0.76, 0.0
outerVisit,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.75, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.75, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.75, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.75, 0.75, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.75, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.75, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,request,SIMPLE_NAME, line no: 143, 0.75, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.75, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.75, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.75, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other,SIMPLE_NAME, line no: 556, 0.75, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.75, 0.25, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.75, 0.75, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.75, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.75, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,request,SIMPLE_NAME, line no: 143, 0.75, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.75, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.75, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.75, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.75, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.75, 0.25, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.75, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.75, 0.75, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.75, 0.75, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.7391304347826086, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,component,SIMPLE_NAME, line no: 220, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,self,SIMPLE_NAME, line no: 238, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7391304347826086, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.7391304347826086, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.7391304347826086, 0.7391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.7391304347826086, 0.7391304347826086, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7307692307692307, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7307692307692307, 0.23076923076923078, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.7307692307692307, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.7307692307692307, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7307692307692307, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7307692307692307, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.7307692307692307, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.7307692307692307, 0.23076923076923078, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.7307692307692307, 0.15384615384615385, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.7307692307692307, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.7307692307692307, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other,SIMPLE_NAME, line no: 556, 0.7307692307692307, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.7307692307692307, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7307692307692307, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7307692307692307, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7307692307692307, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.7307692307692307, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7307692307692307, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7307692307692307, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7307692307692307, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7307692307692307, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7307692307692307, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7307692307692307, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.7307692307692307, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.7307692307692307, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.7307692307692307, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.7307692307692307, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7307692307692307, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.7307692307692307, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.7307692307692307, 0.7307692307692307, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.7307692307692307, 0.7307692307692307, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.72, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.72, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.72, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.72, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.72, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.72, 0.72, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.72, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.72, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.72, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),CLASS_INSTANCE_CREATION, line no: 599, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value.kind,QUALIFIED_NAME, line no: 599, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value.hint,QUALIFIED_NAME, line no: 599, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.72, 0.72, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.72, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.72, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,request,SIMPLE_NAME, line no: 143, 0.72, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.72, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,equals,SIMPLE_NAME, line no: 549, 0.72, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,obj,SIMPLE_NAME, line no: 549, 0.72, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getClass(),METHOD_INVOCATION, line no: 554, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getClass,SIMPLE_NAME, line no: 554, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,obj.getClass(),METHOD_INVOCATION, line no: 554, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other,SIMPLE_NAME, line no: 556, 0.72, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.reference,QUALIFIED_NAME, line no: 562, 0.72, 0.24, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.equals(other.reference),METHOD_INVOCATION, line no: 564, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value != null,INFIX_EXPRESSION, line no: 593, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value.reference instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 598, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.put(key value),SUPER_METHOD_INVOCATION, line no: 602, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.72, 0.72, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.72, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.72, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.72, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.72, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.72, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.72, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.72, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getDimensions,SIMPLE_NAME, line no: 743, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.72, 0.72, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lazyTypeArgumentContextProvider,SIMPLE_NAME, line no: 56, 0.72, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,initialize,SIMPLE_NAME, line no: 143, 0.72, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,request,SIMPLE_NAME, line no: 143, 0.72, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this,THIS_EXPRESSION, line no: 184, 0.72, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lazyTypeArgumentContextProvider.get(),METHOD_INVOCATION, line no: 198, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.initialize(request this),METHOD_INVOCATION, line no: 202, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < typeArguments.size() && i < typeParameters.size(),INFIX_EXPRESSION, line no: 234, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,i < typeArguments.size(),INFIX_EXPRESSION, line no: 234, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeArguments.size(),METHOD_INVOCATION, line no: 234, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argument,SIMPLE_NAME, line no: 235, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeArguments.get(i),METHOD_INVOCATION, line no: 235, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argument != null,INFIX_EXPRESSION, line no: 236, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameters.get(i),METHOD_INVOCATION, line no: 237, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 422, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmUpperBound,INSTANCEOF_EXPRESSION, line no: 422, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INSTANCEOF_EXPRESSION, line no: 422, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer().eContainer(),METHOD_INVOCATION, line no: 422, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound && reference.eContainer().eContainer() instanceof JvmWildcardTypeReference,INFIX_EXPRESSION, line no: 437, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.eContainer() instanceof JvmLowerBound,INSTANCEOF_EXPRESSION, line no: 437, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerBound,SIMPLE_NAME, line no: 446, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typesFactory.createJvmLowerBound(),METHOD_INVOCATION, line no: 446, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,createJvmLowerBound,SIMPLE_NAME, line no: 446, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildCard.getConstraints().add(lowerBound),METHOD_INVOCATION, line no: 447, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerBound.setTypeReference(reference),METHOD_INVOCATION, line no: 448, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,explicitTypeArguments.get(i),METHOD_INVOCATION, line no: 514, 0.72, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(typeParameters.get(i) explicitTypeArguments.get(i)),METHOD_INVOCATION, line no: 516, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.72, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,expectedType,SIMPLE_NAME, line no: 575, 0.72, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(declaredType expectedType result false -1),METHOD_INVOCATION, line no: 577, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,-1,PREFIX_EXPRESSION, line no: 577, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new AbstractTypeReferenceVisitor.InheritanceAware<Boolean>(){   @Override protected Boolean handleNullReference(){     return true;   }   @Override public Boolean doVisitTypeReference(  JvmTypeReference reference){     return false;   }   @Override public Boolean doVisitWildcardTypeReference(  JvmWildcardTypeReference reference){     for (    JvmTypeConstraint constraint : reference.getConstraints()) {       if (visit(constraint.getTypeReference()))       return true;     }     return false;   }   @Override public Boolean doVisitParameterizedTypeReference(  JvmParameterizedTypeReference reference){     return param == reference.getType();   } } .visit(reference),METHOD_INVOCATION, line no: 609, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions() == ((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),INFIX_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)lastArgumentType),PARENTHESIZED_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmGenericArrayTypeReference)lastArgumentType,CAST_EXPRESSION, line no: 743, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmGenericArrayTypeReference)varArgParameterType).getDimensions(),METHOD_INVOCATION, line no: 743, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(varArgParameterType lastArgumentType result true paramCount),METHOD_INVOCATION, line no: 744, 0.72, 0.72, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.72, 0.72, 0.0
outerVisit,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.7083333333333334, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,self,SIMPLE_NAME, line no: 238, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.7083333333333334, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7083333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.7083333333333334, 0.7083333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.7083333333333334, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,component,SIMPLE_NAME, line no: 220, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,self,SIMPLE_NAME, line no: 238, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.7083333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.7083333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.7083333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.7083333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.7083333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.7083333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.7083333333333334, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.7083333333333334, 0.7083333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.7083333333333334, 0.7083333333333334, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6956521739130435, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6956521739130435, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6956521739130435, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6956521739130435, 0.6956521739130435, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6956521739130435, 0.6956521739130435, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.6923076923076923, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.6923076923076923, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.6923076923076923, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.6923076923076923, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.6923076923076923, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.6923076923076923, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.6923076923076923, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,value=new ResolveInfo(primitives.asWrapperTypeIfPrimitive(value.reference) value.kind value.hint),ASSIGNMENT, line no: 599, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.6923076923076923, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.6923076923076923, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.6923076923076923, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.6923076923076923, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.6923076923076923, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.6923076923076923, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.6923076923076923, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.6923076923076923, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.6923076923076923, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
param,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.6923076923076923, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,reference.getReferences(),METHOD_INVOCATION, line no: 220, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.6923076923076923, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
hint,SIMPLE_NAME, line no: 889,reference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6923076923076923, 0.6923076923076923, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.68, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.68, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.68, 0.68, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.68, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.68, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.68, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.68, 0.68, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new ResolveInfo(reference.getComponentType() param.kind param.hint),CLASS_INSTANCE_CREATION, line no: 935, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.68, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,self,SIMPLE_NAME, line no: 238, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.68, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference == null,INFIX_EXPRESSION, line no: 544, 0.68, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this == obj,INFIX_EXPRESSION, line no: 550, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,obj == null,INFIX_EXPRESSION, line no: 552, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getClass() != obj.getClass(),INFIX_EXPRESSION, line no: 554, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(ResolveInfo)obj,CAST_EXPRESSION, line no: 556, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,hint != other.hint,INFIX_EXPRESSION, line no: 557, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.hint,QUALIFIED_NAME, line no: 557, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind != other.kind,INFIX_EXPRESSION, line no: 559, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.kind,QUALIFIED_NAME, line no: 559, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!reference.equals(other.reference),PREFIX_EXPRESSION, line no: 564, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.68, 0.68, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.68, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.68, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.68, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.68, 0.68, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,IInitializableTypeArgumentContext,SIMPLE_NAME, line no: 141, 0.68, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,component,SIMPLE_NAME, line no: 220, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,self,SIMPLE_NAME, line no: 238, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argument instanceof JvmParameterizedTypeReference,INSTANCEOF_EXPRESSION, line no: 239, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!self,PREFIX_EXPRESSION, line no: 242, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,superTypes,SIMPLE_NAME, line no: 271, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmDeclaredType)type).getSuperTypes(),METHOD_INVOCATION, line no: 271, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmDeclaredType)type),PARENTHESIZED_EXPRESSION, line no: 271, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmDeclaredType)type,CAST_EXPRESSION, line no: 271, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getSuperTypes,SIMPLE_NAME, line no: 271, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,superType,SIMPLE_NAME, line no: 272, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getOnlyElement,SIMPLE_NAME, line no: 294, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,singleResolveInfo,SIMPLE_NAME, line no: 295, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wildcardAwareGetReference(singleResolveInfo),METHOD_INVOCATION, line no: 296, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Iterables.getOnlyElement(boundTo),METHOD_INVOCATION, line no: 303, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.68, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(reference upper),METHOD_INVOCATION, line no: 399, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,type != parameter,INFIX_EXPRESSION, line no: 472, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,transitive,SIMPLE_NAME, line no: 473, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.get(type),METHOD_INVOCATION, line no: 473, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,transitive != null,INFIX_EXPRESSION, line no: 474, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeArgument,SIMPLE_NAME, line no: 514, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameter != null && typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameter != null,INFIX_EXPRESSION, line no: 515, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeArgument != null,INFIX_EXPRESSION, line no: 515, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameterType,SIMPLE_NAME, line no: 719, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentType,SIMPLE_NAME, line no: 720, 0.68, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentType != null && parameterType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameterType != null,INFIX_EXPRESSION, line no: 721, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.68, 0.68, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.68, 0.68, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6666666666666666, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6666666666666666, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6666666666666666, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6666666666666666, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6666666666666666, 0.6666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6666666666666666, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6666666666666666, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6666666666666666, 0.6666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6666666666666666, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6666666666666666, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6666666666666666, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6666666666666666, 0.6666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6666666666666666, 0.6666666666666666, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6538461538461539, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6538461538461539, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6538461538461539, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6538461538461539, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6538461538461539, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6538461538461539, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,delegate.setDelegate(reference),METHOD_INVOCATION, line no: 357, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,outerVisit(declaredReference.getComponentType() new ResolveInfo(reference.getComponentType() param.kind param.hint)),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,declaredReference.getComponentType(),METHOD_INVOCATION, line no: 935, 0.6538461538461539, 0.6538461538461539, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.6521739130434783, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6521739130434783, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.6521739130434783, 0.6521739130434783, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6521739130434783, 0.6521739130434783, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.64, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.64, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.64, 0.64, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.64, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.64, 0.64, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Collections.<JvmTypeParameter JvmTypeReference>emptyMap(),METHOD_INVOCATION, line no: 821, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.64, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.64, 0.64, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.64, 0.64, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.64, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,singleElement,SIMPLE_NAME, line no: 294, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Iterables.getOnlyElement(map.entries()),METHOD_INVOCATION, line no: 294, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,map.entries(),METHOD_INVOCATION, line no: 294, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,entries,SIMPLE_NAME, line no: 294, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,singleElement.getValue(),METHOD_INVOCATION, line no: 295, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() reference),METHOD_INVOCATION, line no: 297, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,singletonMap,SIMPLE_NAME, line no: 297, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,singleElement.getKey(),METHOD_INVOCATION, line no: 297, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Iterables.getOnlyElement(map.entrySet()),METHOD_INVOCATION, line no: 459, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Collections.singletonMap(singleElement.getKey() singleElement.getValue()),METHOD_INVOCATION, line no: 460, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getDeclaringType,SIMPLE_NAME, line no: 507, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameters.get(i).getParameterType(),METHOD_INVOCATION, line no: 719, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,parameters.get(i),METHOD_INVOCATION, line no: 719, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argumentTypes.get(i),METHOD_INVOCATION, line no: 720, 0.64, 0.64, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.64, 0.64, 0.0
outerVisit,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.625, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.625, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.625, 0.625, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.625, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.625, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.625, 0.625, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.625, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.625, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.625, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.625, 0.625, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.625, 0.625, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6153846153846154, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6153846153846154, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6153846153846154, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,info.reference,QUALIFIED_NAME, line no: 316, 0.6153846153846154, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lower.reference,QUALIFIED_NAME, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6153846153846154, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6153846153846154, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6153846153846154, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6153846153846154, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6153846153846154, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6153846153846154, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6153846153846154, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
UPPER,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6153846153846154, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6153846153846154, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
param,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6153846153846154, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getTypeForName,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,Object,SIMPLE_NAME, line no: 266, 0.6153846153846154, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(info.reference lower.reference),METHOD_INVOCATION, line no: 325, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,lowers.add(info),METHOD_INVOCATION, line no: 339, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,reference=delegate,ASSIGNMENT, line no: 358, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,executable.getDeclaringType(),METHOD_INVOCATION, line no: 507, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6153846153846154, 0.6153846153846154, 0.0
hint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6153846153846154, 0.6153846153846154, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6086956521739131, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.6086956521739131, 0.6086956521739131, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.6086956521739131, 0.6086956521739131, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.6, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.6, 0.6, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.6, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.6, 0.6, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),CLASS_INSTANCE_CREATION, line no: 821, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.6, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.6, 0.6, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.6, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,hashCode,SIMPLE_NAME, line no: 539, 0.6, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.6, 0.6, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.6, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.6, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaringType,SIMPLE_NAME, line no: 507, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,kind.hashCode(),METHOD_INVOCATION, line no: 543, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference.hashCode(),METHOD_INVOCATION, line no: 544, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.6, 0.6, 0.0
param.hint,QUALIFIED_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.6, 0.6, 0.0
outerVisit,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5833333333333334, 0.5833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,PrimitiveAwareMap,SIMPLE_NAME, line no: 73, 0.5833333333333334, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new PrimitiveAwareMap(){   @Override public JvmTypeReference put(  JvmTypeParameter key   JvmTypeReference value){     if (isRecursive(key value)) {       return null;     }     return super.put(key getWithObjectUpperBoundIfNecessary(value));   } } ,CLASS_INSTANCE_CREATION, line no: 635, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5833333333333334, 0.5833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5833333333333334, 0.5833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5833333333333334, 0.5833333333333334, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
UPPER,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,lowerIndex=i,ASSIGNMENT, line no: 338, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
param,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,Object.class,TYPE_LITERAL, line no: 266, 0.5769230769230769, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(info.reference lower.reference),PREFIX_EXPRESSION, line no: 325, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,lowerIndex == Integer.MAX_VALUE,INFIX_EXPRESSION, line no: 337, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,lowerResolve.reference,QUALIFIED_NAME, line no: 349, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,seen.add(transitive),METHOD_INVOCATION, line no: 475, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,declaringType instanceof JvmTypeParameterDeclarator,INSTANCEOF_EXPRESSION, line no: 508, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class declarator),METHOD_INVOCATION, line no: 682, 0.5769230769230769, 0.5769230769230769, 0.0
hint,SIMPLE_NAME, line no: 889,declaredContext=new TypeArgumentContext(Collections.<JvmTypeParameter JvmTypeReference>emptyMap() typeReferences typesFactory rawTypeHelper),ASSIGNMENT, line no: 821, 0.5769230769230769, 0.5769230769230769, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5652173913043478, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5652173913043478, 0.5652173913043478, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5652173913043478, 0.5652173913043478, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5652173913043478, 0.5652173913043478, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5652173913043478, 0.5652173913043478, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5652173913043478, 0.5652173913043478, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5652173913043478, 0.5652173913043478, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.56, 0.56, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.56, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.56, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.56, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.56, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.56, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.56, 0.56, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.56, 0.56, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,prime,SIMPLE_NAME, line no: 540, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result=prime * result + hint,ASSIGNMENT, line no: 542, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,prime * result + hint,INFIX_EXPRESSION, line no: 542, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.56, 0.56, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,31,NUMBER_LITERAL, line no: 540, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,prime * result,INFIX_EXPRESSION, line no: 542, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result=prime * result + ((kind == null) ? 0 : kind.hashCode()),ASSIGNMENT, line no: 543, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,prime * result + ((kind == null) ? 0 : kind.hashCode()),INFIX_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((kind == null) ? 0 : kind.hashCode()),PARENTHESIZED_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(kind == null) ? 0 : kind.hashCode(),CONDITIONAL_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(kind == null),PARENTHESIZED_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,kind == null,INFIX_EXPRESSION, line no: 543, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result=prime * result + ((reference == null) ? 0 : reference.hashCode()),ASSIGNMENT, line no: 544, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,prime * result + ((reference == null) ? 0 : reference.hashCode()),INFIX_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((reference == null) ? 0 : reference.hashCode()),PARENTHESIZED_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(reference == null) ? 0 : reference.hashCode(),CONDITIONAL_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(reference == null),PARENTHESIZED_EXPRESSION, line no: 544, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.56, 0.56, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.56, 0.56, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5416666666666666, 0.5416666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5416666666666666, 0.5416666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5416666666666666, 0.5416666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5416666666666666, 0.5416666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5416666666666666, 0.5416666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5416666666666666, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5416666666666666, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5416666666666666, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5416666666666666, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5416666666666666, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5416666666666666, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5416666666666666, 0.5416666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5416666666666666, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5416666666666666, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5416666666666666, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5416666666666666, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5416666666666666, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5416666666666666, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5416666666666666, 0.5416666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5416666666666666, 0.5416666666666666, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5384615384615384, 0.5384615384615384, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5384615384615384, 0.5384615384615384, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5384615384615384, 0.5384615384615384, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5384615384615384, 0.5384615384615384, 0.0
param,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,upperBoundSeen=true,ASSIGNMENT, line no: 259, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,visit(constraint.getTypeReference()),METHOD_INVOCATION, line no: 260, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,typeReferences.getTypeForName(Object.class type),METHOD_INVOCATION, line no: 266, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(boundParameter info.reference),METHOD_INVOCATION, line no: 316, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,conformanceComputer.isConformant(lowerResolve.reference reference),METHOD_INVOCATION, line no: 349, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(typeParameter typeReferences.getTypeForName(Object.class declarator)),METHOD_INVOCATION, line no: 682, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,allUppers.get(0),METHOD_INVOCATION, line no: 684, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(varArgType),METHOD_INVOCATION, line no: 758, 0.5384615384615384, 0.5384615384615384, 0.0
hint,SIMPLE_NAME, line no: 889,visit(component param),METHOD_INVOCATION, line no: 779, 0.5384615384615384, 0.5384615384615384, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.5217391304347826, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.5217391304347826, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.5217391304347826, 0.5217391304347826, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,join,SIMPLE_NAME, line no: 91, 0.5217391304347826, 0.5217391304347826, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.5217391304347826, 0.5217391304347826, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.5217391304347826, 0.5217391304347826, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.5217391304347826, 0.5217391304347826, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.5217391304347826, 0.5217391304347826, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.52, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.52, 0.52, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.52, 0.52, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.52, 0.52, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.52, 0.52, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.52, 0.52, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.52, 0.52, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.52, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.52, 0.52, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.52, 0.52, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.52, 0.52, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.52, 0.52, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.52, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.52, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.52, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.52, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.52, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.52, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.52, 0.52, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.52, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.52, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.52, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.52, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.52, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.52, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.52, 0.52, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.52, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.52, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.52, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.52, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.52, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.52, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.52, 0.52, 0.0
param.hint,QUALIFIED_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.52, 0.52, 0.0
outerVisit,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.5, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.5, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.5, 0.5, 0.0
outerVisit,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.5, 0.5, 0.0
outerVisit,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.5, 0.5, 0.0
outerVisit,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.5, 0.5, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.5, 0.5, 0.0
outerVisit,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.5, 0.5, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.5, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.5, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.5, 0.5, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,join,SIMPLE_NAME, line no: 91, 0.5, 0.5, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.5, 0.5, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.5, 0.5, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.5, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.5, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.5, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.5, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,join,SIMPLE_NAME, line no: 91, 0.5, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.5, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.5, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.5, 0.5, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.5, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
UPPER,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
param,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,visit(component),METHOD_INVOCATION, line no: 221, 0.5, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,visit(typeReferences.getTypeForName(Object.class type)),METHOD_INVOCATION, line no: 266, 0.5, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,done=true,ASSIGNMENT, line no: 317, 0.5, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,!conformanceComputer.isConformant(lowerResolve.reference reference),PREFIX_EXPRESSION, line no: 349, 0.5, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(typeParameter allUppers.get(0)),METHOD_INVOCATION, line no: 684, 0.5, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,bound.getReferences().add(upper),METHOD_INVOCATION, line no: 689, 0.5, 0.5, 0.0
hint,SIMPLE_NAME, line no: 889,wrappedVarArgTypes.add(primitives.asWrapperTypeIfPrimitive(varArgType)),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.48, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.48, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.48, 0.48, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.48, 0.48, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.48, 0.48, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.48, 0.48, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.48, 0.48, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.48, 0.48, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.48, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.48, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.48, 0.48, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.48, 0.48, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.48, 0.48, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.48, 0.48, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.48, 0.48, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.48, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.48, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.48, 0.48, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,join,SIMPLE_NAME, line no: 91, 0.48, 0.48, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.48, 0.48, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.48, 0.48, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.48, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.48, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.48, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.48, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.48, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.48, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.48, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.48, 0.48, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.48, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.48, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.48, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.48, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.48, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.48, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.48, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.48, 0.48, 0.0
param.hint,QUALIFIED_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.48, 0.48, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4782608695652174, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4782608695652174, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4782608695652174, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4782608695652174, 0.21739130434782608, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4782608695652174, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4782608695652174, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4782608695652174, 0.4782608695652174, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.46376811594202894, 0.13043478260869565, 0.3333333333333333
ResolveInfo,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.46153846153846156, 0.46153846153846156, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.46153846153846156, 0.46153846153846156, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.46153846153846156, 0.46153846153846156, 0.0
UPPER,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.46153846153846156, 0.46153846153846156, 0.0
param,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,toStringHelper,SIMPLE_NAME, line no: 75, 0.46153846153846156, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,toString,SIMPLE_NAME, line no: 88, 0.46153846153846156, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,isEmpty(),METHOD_INVOCATION, line no: 89, 0.46153846153846156, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,join,SIMPLE_NAME, line no: 91, 0.46153846153846156, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,uppers.add(info.reference),METHOD_INVOCATION, line no: 331, 0.46153846153846156, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,isRecursive(key value),METHOD_INVOCATION, line no: 638, 0.46153846153846156, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary,SIMPLE_NAME, line no: 643, 0.46153846153846156, 0.46153846153846156, 0.0
hint,SIMPLE_NAME, line no: 889,allUppers.add(constraint.getTypeReference()),METHOD_INVOCATION, line no: 678, 0.46153846153846156, 0.46153846153846156, 0.0
outerVisit,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4583333333333333, 0.4583333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4583333333333333, 0.4583333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4583333333333333, 0.4583333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4583333333333333, 0.20833333333333334, 0.0
outerVisit,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4583333333333333, 0.4583333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4583333333333333, 0.4583333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4583333333333333, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4583333333333333, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4583333333333333, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4583333333333333, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4583333333333333, 0.20833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4583333333333333, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4583333333333333, 0.4583333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4583333333333333, 0.20833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4583333333333333, 0.4583333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.4583333333333333, 0.125, 0.3333333333333333
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4583333333333333, 0.4583333333333333, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.4533333333333333, 0.12, 0.3333333333333333
declaredConstraint,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.44, 0.44, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.44, 0.2, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.44, 0.44, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.44, 0.44, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.44, 0.44, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.44, 0.44, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.44, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.44, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.44, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.44, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.44, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.44, 0.44, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.44, 0.2, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.44, 0.44, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.44, 0.2, 0.0
param.hint,QUALIFIED_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.44, 0.44, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.44, 0.44, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"(",STRING_LITERAL, line no: 91, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.43478260869565216, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.43478260869565216, 0.43478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.43478260869565216, 0.43478260869565216, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4230769230769231, 0.4230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
UPPER,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
UPPER,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
param,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
param,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,super.toString(),SUPER_METHOD_INVOCATION, line no: 90, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,size(),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,toStringHelper.join(delegate),METHOD_INVOCATION, line no: 91, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,TRUE,SIMPLE_NAME, line no: 212, 0.4230769230769231, 0.19230769230769232, 0.0
hint,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,reference=(JvmTypeReference)reference.eContainer().eContainer(),ASSIGNMENT, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmTypeReference)reference.eContainer().eContainer(),CAST_EXPRESSION, line no: 423, 0.4230769230769231, 0.4230769230769231, 0.0
hint,SIMPLE_NAME, line no: 889,getWithObjectUpperBoundIfNecessary(value),METHOD_INVOCATION, line no: 643, 0.4230769230769231, 0.4230769230769231, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4166666666666667, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4166666666666667, 0.4166666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4166666666666667, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4166666666666667, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4166666666666667, 0.4166666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4166666666666667, 0.4166666666666667, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4, 0.4, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,IllegalStateException,SIMPLE_NAME, line no: 244, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4, 0.4, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4, 0.4, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4, 0.4, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.4, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.4, 0.4, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.4, 0.4, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.391304347826087, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.391304347826087, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.391304347826087, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.391304347826087, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.391304347826087, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.391304347826087, 0.391304347826087, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.391304347826087, 0.391304347826087, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,"(" + size() + " elements: {\n\t"+ toStringHelper.join(delegate)+ "\n}",INFIX_EXPRESSION, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,"(",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889," elements: {\n\t",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,"\n}",STRING_LITERAL, line no: 91, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,Boolean.TRUE,QUALIFIED_NAME, line no: 212, 0.38461538461538464, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,argument.getType(),METHOD_INVOCATION, line no: 240, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(param argument),METHOD_INVOCATION, line no: 243, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,visit(superType),METHOD_INVOCATION, line no: 273, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,remove,SIMPLE_NAME, line no: 479, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),METHOD_INVOCATION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,((JvmTypeParameterDeclarator)declaringType),PARENTHESIZED_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,(JvmTypeParameterDeclarator)declaringType,CAST_EXPRESSION, line no: 509, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,super.put(key getWithObjectUpperBoundIfNecessary(value)),SUPER_METHOD_INVOCATION, line no: 643, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType argumentType result true i),METHOD_INVOCATION, line no: 722, 0.38461538461538464, 0.38461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,result.put((JvmTypeParameter)type param),METHOD_INVOCATION, line no: 815, 0.38461538461538464, 0.38461538461538464, 0.0
outerVisit,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.375, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.375, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.375, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.375, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.375, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.375, 0.375, 0.0
outerVisit,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.375, 0.375, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.375, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.375, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.375, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.375, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.375, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.375, 0.375, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.375, 0.375, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.36, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.36, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.36, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.36, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.36, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.36, 0.36, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 244, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.36, 0.36, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.36, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.36, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.36, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.36, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.36, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.36, 0.36, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.36, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.36, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.36, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.36, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.36, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.36, 0.36, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.36, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.36, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.36, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.36, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.36, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.36, 0.36, 0.0
param.hint,QUALIFIED_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.36, 0.36, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.34782608695652173, 0.34782608695652173, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.34782608695652173, 0.34782608695652173, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.34782608695652173, 0.34782608695652173, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.34782608695652173, 0.34782608695652173, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.34782608695652173, 0.34782608695652173, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
UPPER,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
param,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,self=param == argument.getType(),ASSIGNMENT, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,param == argument.getType(),INFIX_EXPRESSION, line no: 240, 0.34615384615384615, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,result.put(param argument) != null,INFIX_EXPRESSION, line no: 243, 0.34615384615384615, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,seen.remove(transitive),METHOD_INVOCATION, line no: 479, 0.34615384615384615, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,typeParameters=((JvmTypeParameterDeclarator)declaringType).getTypeParameters(),ASSIGNMENT, line no: 509, 0.34615384615384615, 0.34615384615384615, 0.0
hint,SIMPLE_NAME, line no: 889,resolveAgainstActualType(parameterType null result true i),METHOD_INVOCATION, line no: 728, 0.34615384615384615, 0.34615384615384615, 0.0
outerVisit,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3333333333333333, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3333333333333333, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3333333333333333, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3333333333333333, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3333333333333333, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3333333333333333, 0.3333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3333333333333333, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3333333333333333, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3333333333333333, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3333333333333333, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3333333333333333, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3333333333333333, 0.3333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3333333333333333, 0.3333333333333333, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.32, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.32, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.32, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.32, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.32, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.32, 0.32, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.32, 0.32, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.32, 0.32, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.32, 0.32, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.32, 0.32, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.32, 0.32, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.32, 0.32, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.32, 0.32, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.32, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.32, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.32, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.32, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.32, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.32, 0.32, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.32, 0.32, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
UPPER,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,this.hint=hint,ASSIGNMENT, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
param,SIMPLE_NAME, line no: 889,this.hint,FIELD_ACCESS, line no: 535, 0.3076923076923077, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.3076923076923077, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,!typeParameters.isEmpty(),PREFIX_EXPRESSION, line no: 249, 0.3076923076923077, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,this.reference=reference,ASSIGNMENT, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,this.reference,FIELD_ACCESS, line no: 533, 0.3076923076923077, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,this.kind=kind,ASSIGNMENT, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
hint,SIMPLE_NAME, line no: 889,this.kind,FIELD_ACCESS, line no: 534, 0.3076923076923077, 0.3076923076923077, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.30434782608695654, 0.30434782608695654, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.30434782608695654, 0.30434782608695654, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.30434782608695654, 0.30434782608695654, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.30434782608695654, 0.30434782608695654, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.30434782608695654, 0.30434782608695654, 0.0
outerVisit,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2916666666666667, 0.2916666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2916666666666667, 0.2916666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.2916666666666667, 0.2916666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2916666666666667, 0.2916666666666667, 0.0
outerVisit,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2916666666666667, 0.2916666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2916666666666667, 0.2916666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2916666666666667, 0.2916666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.2916666666666667, 0.2916666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2916666666666667, 0.2916666666666667, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2916666666666667, 0.2916666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2916666666666667, 0.2916666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2916666666666667, 0.2916666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2916666666666667, 0.2916666666666667, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2916666666666667, 0.2916666666666667, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.28, 0.28, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.28, 0.28, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.28, 0.28, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.28, 0.28, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.28, 0.28, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.28, 0.28, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new LoggingTypeArgumentDecorator(result),CLASS_INSTANCE_CREATION, line no: 200, 0.28, 0.28, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.28, 0.28, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.28, 0.28, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.28, 0.28, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.28, 0.28, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.28, 0.28, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.28, 0.28, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.28, 0.28, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.28, 0.28, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.28, 0.28, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.28, 0.28, 0.0
param.hint,QUALIFIED_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.28, 0.28, 0.0
param.hint,QUALIFIED_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.28, 0.28, 0.0
param.hint,QUALIFIED_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.28, 0.28, 0.0
param.hint,QUALIFIED_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.28, 0.28, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2692307692307692, 0.2692307692307692, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
UPPER,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2692307692307692, 0.2692307692307692, 0.0
UPPER,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
UPPER,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
UPPER,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
param,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2692307692307692, 0.2692307692307692, 0.0
param,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
param,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
param,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
hint,SIMPLE_NAME, line no: 889,primitives.asWrapperTypeIfPrimitive(value),METHOD_INVOCATION, line no: 84, 0.2692307692307692, 0.2692307692307692, 0.0
hint,SIMPLE_NAME, line no: 889,result=new LoggingTypeArgumentDecorator(result),ASSIGNMENT, line no: 200, 0.2692307692307692, 0.2692307692307692, 0.0
hint,SIMPLE_NAME, line no: 889,conformant=false,ASSIGNMENT, line no: 326, 0.2692307692307692, 0.2692307692307692, 0.0
hint,SIMPLE_NAME, line no: 889,useWildcard=false,ASSIGNMENT, line no: 350, 0.2692307692307692, 0.2692307692307692, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.2608695652173913, 0.2608695652173913, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.2608695652173913, 0.2608695652173913, 0.0
outerVisit,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.25, 0.25, 0.0
outerVisit,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.25, 0.25, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.25, 0.25, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.25, 0.25, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.25, 0.25, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.25, 0.25, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.24, 0.24, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.24, 0.24, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.24, 0.24, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.24, 0.24, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.24, 0.24, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.24, 0.24, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.24, 0.24, 0.0
param.hint,QUALIFIED_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.24, 0.24, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.24, 0.24, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.23076923076923078, 0.23076923076923078, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.23076923076923078, 0.23076923076923078, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.23076923076923078, 0.23076923076923078, 0.0
UPPER,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.23076923076923078, 0.23076923076923078, 0.0
param,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
param,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.23076923076923078, 0.23076923076923078, 0.0
hint,SIMPLE_NAME, line no: 889,super.put(key primitives.asWrapperTypeIfPrimitive(value)),SUPER_METHOD_INVOCATION, line no: 84, 0.23076923076923078, 0.23076923076923078, 0.0
hint,SIMPLE_NAME, line no: 889,visit(transitive),METHOD_INVOCATION, line no: 477, 0.23076923076923078, 0.23076923076923078, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.21739130434782608, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.21739130434782608, 0.21739130434782608, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.21739130434782608, 0.21739130434782608, 0.0
outerVisit,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.20833333333333334, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.20833333333333334, 0.20833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.20833333333333334, 0.20833333333333334, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.20833333333333334, 0.20833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.20833333333333334, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.20833333333333334, 0.20833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.20833333333333334, 0.20833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.20833333333333334, 0.20833333333333334, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.20833333333333334, 0.20833333333333334, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.2, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.2, 0.2, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.2, 0.2, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.2, 0.2, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.2, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.2, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.2, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.2, 0.2, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.2, 0.2, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.2, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.2, 0.2, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.2, 0.2, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.2, 0.2, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.2, 0.2, 0.0
param.hint,QUALIFIED_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.2, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.2, 0.2, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.2, 0.2, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.2, 0.2, 0.0
param.hint,QUALIFIED_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.2, 0.2, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.19230769230769232, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.19230769230769232, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.19230769230769232, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
UPPER,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.19230769230769232, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
UPPER,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
UPPER,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
UPPER,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
param,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.19230769230769232, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
param,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
param,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
param,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
hint,SIMPLE_NAME, line no: 889,receiver,SIMPLE_NAME, line no: 181, 0.19230769230769232, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,other.reference != null,INFIX_EXPRESSION, line no: 562, 0.19230769230769232, 0.19230769230769232, 0.0
hint,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
hint,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.19230769230769232, 0.19230769230769232, 0.0
hint,SIMPLE_NAME, line no: 889,visit(reference parameter),METHOD_INVOCATION, line no: 949, 0.19230769230769232, 0.19230769230769232, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.17391304347826086, 0.17391304347826086, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16666666666666666, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16666666666666666, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16666666666666666, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16666666666666666, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.16666666666666666, 0.16666666666666666, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16666666666666666, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16666666666666666, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16666666666666666, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16666666666666666, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16666666666666666, 0.16666666666666666, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16666666666666666, 0.16666666666666666, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.16, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.16, 0.16, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new IllegalStateException("VarArg methods expect last paramter to be an array type"),CLASS_INSTANCE_CREATION, line no: 734, 0.16, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"VarArg methods expect last paramter to be an array type",STRING_LITERAL, line no: 734, 0.16, 0.16, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16, 0.16, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16, 0.16, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.16, 0.16, 0.0
param.hint,QUALIFIED_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.16, 0.16, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.15384615384615385, 0.15384615384615385, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.15384615384615385, 0.15384615384615385, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.15384615384615385, 0.15384615384615385, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.15384615384615385, 0.15384615384615385, 0.0
UPPER,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,paramCount--,POSTFIX_EXPRESSION, line no: 716, 0.15384615384615385, 0.15384615384615385, 0.0
param,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,this.receiver=receiver,ASSIGNMENT, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,this.receiver,FIELD_ACCESS, line no: 184, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,param == reference.getType(),INFIX_EXPRESSION, line no: 628, 0.15384615384615385, 0.15384615384615385, 0.0
hint,SIMPLE_NAME, line no: 889,doVisitTypeReference(reference),METHOD_INVOCATION, line no: 881, 0.15384615384615385, 0.15384615384615385, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org,SIMPLE_NAME, line no: 8, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,common,SIMPLE_NAME, line no: 8, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,types,SIMPLE_NAME, line no: 8, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,util,SIMPLE_NAME, line no: 8, 0.13043478260869565, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java,SIMPLE_NAME, line no: 10, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com,SIMPLE_NAME, line no: 37, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,google,SIMPLE_NAME, line no: 37, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,base,SIMPLE_NAME, line no: 37, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.13043478260869565, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,on,SIMPLE_NAME, line no: 75, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"]",STRING_LITERAL, line no: 192, 0.13043478260869565, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.13043478260869565, 0.13043478260869565, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.125, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.125, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.125, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,common,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,types,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,util,SIMPLE_NAME, line no: 8, 0.125, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java,SIMPLE_NAME, line no: 10, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,google,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,base,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.125, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,on,SIMPLE_NAME, line no: 75, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"]",STRING_LITERAL, line no: 192, 0.125, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,common,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,types,SIMPLE_NAME, line no: 8, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,util,SIMPLE_NAME, line no: 8, 0.125, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java,SIMPLE_NAME, line no: 10, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,google,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,base,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.125, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,on,SIMPLE_NAME, line no: 75, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"]",STRING_LITERAL, line no: 192, 0.125, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.125, 0.125, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.12, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.12, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.12, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.12, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.12, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.12, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,common,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,types,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,util,SIMPLE_NAME, line no: 8, 0.12, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java,SIMPLE_NAME, line no: 10, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,google,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,base,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.12, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,on,SIMPLE_NAME, line no: 75, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"]",STRING_LITERAL, line no: 192, 0.12, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.12, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.12, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.12, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.12, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.12, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.12, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.12, 0.12, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.11538461538461539, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.11538461538461539, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,eclipse,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,xtext,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,common,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,google,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
UPPER,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
param,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,types,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,util,SIMPLE_NAME, line no: 8, 0.11538461538461539, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,java,SIMPLE_NAME, line no: 10, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,base,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,Joiner,SIMPLE_NAME, line no: 37, 0.11538461538461539, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,collect,SIMPLE_NAME, line no: 39, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,inject,SIMPLE_NAME, line no: 47, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,on,SIMPLE_NAME, line no: 75, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,"]",STRING_LITERAL, line no: 192, 0.11538461538461539, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=" + kind + "  reference="+ reference+ "  hint="+ hint+ "]",INFIX_EXPRESSION, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,"ResolveInfo [kind=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,"  reference=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
hint,SIMPLE_NAME, line no: 889,"  hint=",STRING_LITERAL, line no: 571, 0.11538461538461539, 0.11538461538461539, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08695652173913043, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08695652173913043, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.08695652173913043, 0.08695652173913043, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08333333333333333, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08333333333333333, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08333333333333333, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08333333333333333, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08333333333333333, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08333333333333333, 0.08333333333333333, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08333333333333333, 0.041666666666666664, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,new PrimitiveAwareMap(),CLASS_INSTANCE_CREATION, line no: 415, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.08, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.08, 0.08, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.08, 0.04, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.07692307692307693, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.07692307692307693, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.07692307692307693, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.07692307692307693, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.07692307692307693, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.07692307692307693, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.07692307692307693, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.07692307692307693, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
UPPER,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.07692307692307693, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.07692307692307693, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
param,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.07692307692307693, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types,QUALIFIED_NAME, line no: 8, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,java.util,QUALIFIED_NAME, line no: 10, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmExecutable,SIMPLE_NAME, line no: 21, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,JvmFeature,SIMPLE_NAME, line no: 22, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,TypesFactory,SIMPLE_NAME, line no: 35, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.base,QUALIFIED_NAME, line no: 37, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect,QUALIFIED_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,ForwardingMap,SIMPLE_NAME, line no: 39, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Maps,SIMPLE_NAME, line no: 44, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.inject,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Inject,SIMPLE_NAME, line no: 47, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Provider,SIMPLE_NAME, line no: 48, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider,SIMPLE_NAME, line no: 53, 0.07692307692307693, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,newLinkedHashMap,SIMPLE_NAME, line no: 74, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,MapJoiner,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Joiner.on("\n\t"),METHOD_INVOCATION, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,"\n\t",STRING_LITERAL, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,withKeyValueSeparator,SIMPLE_NAME, line no: 75, 0.07692307692307693, 0.07692307692307693, 0.0
hint,SIMPLE_NAME, line no: 889,Request,SIMPLE_NAME, line no: 95, 0.07692307692307693, 0.038461538461538464, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"=",STRING_LITERAL, line no: 75, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,String,SIMPLE_NAME, line no: 88, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit(declaredConstraint.getTypeReference() new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint)),METHOD_INVOCATION, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.043478260869565216, 0.043478260869565216, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.041666666666666664, 0.041666666666666664, 0.0
outerVisit,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"=",STRING_LITERAL, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,String,SIMPLE_NAME, line no: 88, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"=",STRING_LITERAL, line no: 75, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,String,SIMPLE_NAME, line no: 88, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.041666666666666664, 0.041666666666666664, 0.0
new ResolveInfo(actualConstraint.getTypeReference() ResolveInfoKind.UPPER param.hint),CLASS_INSTANCE_CREATION, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.041666666666666664, 0.041666666666666664, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.04, 0.04, 0.0
declaredConstraint,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.04, 0.04, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"=",STRING_LITERAL, line no: 75, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,String,SIMPLE_NAME, line no: 88, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.04, 0.04, 0.0
actualConstraint.getTypeReference(),METHOD_INVOCATION, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.04, 0.04, 0.0
ResolveInfoKind.UPPER,QUALIFIED_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.04, 0.04, 0.0
param.hint,QUALIFIED_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.04, 0.04, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfo,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
actualConstraint,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
getTypeReference,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
ResolveInfoKind,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
UPPER,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
param,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.util,QUALIFIED_NAME, line no: 8, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,java.util.Collection,QUALIFIED_NAME, line no: 10, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,java.util.Collections,QUALIFIED_NAME, line no: 11, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,java.util.List,QUALIFIED_NAME, line no: 12, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,java.util.Map,QUALIFIED_NAME, line no: 13, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,java.util.Set,QUALIFIED_NAME, line no: 14, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.EcoreUtil2,QUALIFIED_NAME, line no: 16, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmCompoundTypeReference,QUALIFIED_NAME, line no: 17, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmConstructor,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDeclaredType,QUALIFIED_NAME, line no: 19, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmDelegateTypeReference,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmExecutable,QUALIFIED_NAME, line no: 21, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFeature,QUALIFIED_NAME, line no: 22, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmFormalParameter,QUALIFIED_NAME, line no: 23, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmGenericArrayTypeReference,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmLowerBound,QUALIFIED_NAME, line no: 25, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmMultiTypeReference,QUALIFIED_NAME, line no: 26, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmParameterizedTypeReference,QUALIFIED_NAME, line no: 27, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmType,QUALIFIED_NAME, line no: 28, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeConstraint,QUALIFIED_NAME, line no: 29, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameter,QUALIFIED_NAME, line no: 30, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeParameterDeclarator,QUALIFIED_NAME, line no: 31, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmTypeReference,QUALIFIED_NAME, line no: 32, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmUpperBound,QUALIFIED_NAME, line no: 33, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.JvmWildcardTypeReference,QUALIFIED_NAME, line no: 34, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,org.eclipse.xtext.common.types.TypesFactory,QUALIFIED_NAME, line no: 35, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.base.Joiner,QUALIFIED_NAME, line no: 37, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.base.Predicates,QUALIFIED_NAME, line no: 38, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMap,QUALIFIED_NAME, line no: 39, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.ForwardingMultimap,QUALIFIED_NAME, line no: 40, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.Iterables,QUALIFIED_NAME, line no: 41, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.LinkedHashMultimap,QUALIFIED_NAME, line no: 42, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.Lists,QUALIFIED_NAME, line no: 43, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.Maps,QUALIFIED_NAME, line no: 44, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.Multimap,QUALIFIED_NAME, line no: 45, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.common.collect.Sets,QUALIFIED_NAME, line no: 46, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.inject.Inject,QUALIFIED_NAME, line no: 47, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,com.google.inject.Provider,QUALIFIED_NAME, line no: 48, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,LazyTypeArgumentContext,SIMPLE_NAME, line no: 56, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,TypeReferences,SIMPLE_NAME, line no: 59, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,IRawTypeHelper,SIMPLE_NAME, line no: 65, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,TypeConformanceComputer,SIMPLE_NAME, line no: 68, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,Primitives,SIMPLE_NAME, line no: 71, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,Maps.newLinkedHashMap(),METHOD_INVOCATION, line no: 74, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,Joiner.MapJoiner,QUALIFIED_NAME, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,Joiner.on("\n\t").withKeyValueSeparator("="),METHOD_INVOCATION, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,"=",STRING_LITERAL, line no: 75, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,String,SIMPLE_NAME, line no: 88, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getReceiverType,SIMPLE_NAME, line no: 100, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getFeature,SIMPLE_NAME, line no: 105, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getNearestDeclarator,SIMPLE_NAME, line no: 110, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getArgumentTypes,SIMPLE_NAME, line no: 115, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getExplicitTypeArgument,SIMPLE_NAME, line no: 120, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getExpectedType,SIMPLE_NAME, line no: 125, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getDeclaredType,SIMPLE_NAME, line no: 130, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,ITypeArgumentContext,SIMPLE_NAME, line no: 141, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,TypeArgumentContextProvider.Request,QUALIFIED_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,contextProvider,SIMPLE_NAME, line no: 143, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,AbstractRequest,SIMPLE_NAME, line no: 147, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,ReceiverRequest,SIMPLE_NAME, line no: 179, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=" + receiver + "]",INFIX_EXPRESSION, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,"ReceiverRequest [receiver=",STRING_LITERAL, line no: 192, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getTypeArgumentContext,SIMPLE_NAME, line no: 197, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getExplicitArgumentContext,SIMPLE_NAME, line no: 501, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getExpectedTypeContext,SIMPLE_NAME, line no: 575, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getDeclaredBoundsContext,SIMPLE_NAME, line no: 669, 0.038461538461538464, 0.038461538461538464, 0.0
hint,SIMPLE_NAME, line no: 889,getParameterContext,SIMPLE_NAME, line no: 709, 0.038461538461538464, 0.038461538461538464, 0.0
