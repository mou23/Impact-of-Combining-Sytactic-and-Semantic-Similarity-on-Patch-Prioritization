end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,start,SIMPLE_NAME, line no: 84, 2.0, 0.9916317991631799, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,end,SIMPLE_NAME, line no: 85, 2.0, 0.9916317991631799, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,min,SIMPLE_NAME, line no: 85, 2.0, 0.9916317991631799, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,max,SIMPLE_NAME, line no: 96, 2.0, 1.0, 1.0
end,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 2.0, 0.9916666666666667, 1.0
end,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 2.0, 0.9916666666666667, 1.0
end,SIMPLE_NAME, line no: 96,max,SIMPLE_NAME, line no: 96, 2.0, 1.0, 1.0
max,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 2.0, 0.9875518672199171, 1.0
max,SIMPLE_NAME, line no: 96,end,SIMPLE_NAME, line no: 85, 2.0, 0.9875518672199171, 1.0
max,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 2.0, 0.991701244813278, 1.0
end,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 2.0, 0.9875518672199171, 1.0
end,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 2.0, 0.991701244813278, 1.0
end,SIMPLE_NAME, line no: 96,max,SIMPLE_NAME, line no: 96, 2.0, 1.0, 1.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 2.0, 0.09504132231404959, 1.0
getCurrent,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 1.9958847736625516, 0.09053497942386832, 1.0
end,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 1.9958333333333333, 0.9958333333333333, 1.0
end,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 1.9958333333333333, 0.9958333333333333, 1.0
max,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 1.991701244813278, 0.991701244813278, 1.0
max,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 1.991701244813278, 0.991701244813278, 1.0
max,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 1.991701244813278, 0.991701244813278, 1.0
max,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 1.991701244813278, 0.9875518672199171, 1.0
end,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 1.991701244813278, 0.991701244813278, 1.0
end,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 1.991701244813278, 0.991701244813278, 1.0
end,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 1.991701244813278, 0.991701244813278, 1.0
end,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 1.991701244813278, 0.9875518672199171, 1.0
end,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 1.9916666666666667, 0.9916666666666667, 1.0
end,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 1.9916666666666667, 0.9916666666666667, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,length,SIMPLE_NAME, line no: 81, 1.99163179916318, 0.9916317991631799, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 1.99163179916318, 0.9916317991631799, 1.0
actual,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 1.9876543209876543, 0.9794238683127572, 1.0
max,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 1.987551867219917, 0.9875518672199171, 1.0
end,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 1.987551867219917, 0.9875518672199171, 1.0
end,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 1.9875, 0.08333333333333333, 1.0
end,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 1.9875, 0.9875, 1.0
end,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 1.9875, 0.9875, 1.0
actual,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 1.9835390946502058, 0.9835390946502057, 1.0
max,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 1.983402489626556, 0.08298755186721991, 1.0
max,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 1.983402489626556, 0.983402489626556, 1.0
end,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 1.983402489626556, 0.08298755186721991, 1.0
end,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 1.983402489626556, 0.983402489626556, 1.0
actual,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 1.9794238683127572, 0.9794238683127572, 1.0
actual,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 1.9794238683127572, 0.9794238683127572, 1.0
end,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 1.3541666666666667, 0.14166666666666666, 1.0
getCurrent,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 1.353909465020576, 0.13168724279835392, 1.0
max,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 1.3526970954356847, 0.14107883817427386, 1.0
end,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 1.3526970954356847, 0.14107883817427386, 1.0
end,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 1.3458333333333332, 0.3458333333333333, 1.0
max,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 1.3443983402489628, 0.34439834024896265, 1.0
end,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 1.3443983402489628, 0.34439834024896265, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 1.1506276150627615, 0.14225941422594143, 1.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 1.1506276150627615, 0.14225941422594143, 1.0
end,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 1.15, 0.14166666666666666, 1.0
end,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 1.15, 0.14166666666666666, 1.0
max,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 1.1493775933609958, 0.14107883817427386, 1.0
max,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 1.1493775933609958, 0.14107883817427386, 1.0
end,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 1.1493775933609958, 0.14107883817427386, 1.0
end,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 1.1493775933609958, 0.14107883817427386, 1.0
actual,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 1.0781893004115226, 0.07818930041152264, 1.0
end,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 1.0541666666666667, 0.05416666666666667, 1.0
max,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 1.053941908713693, 0.05394190871369295, 1.0
end,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 1.053941908713693, 0.05394190871369295, 1.0
actual,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 1.0246913580246915, 0.02880658436213992, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 1.0041322314049588, 0.004132231404958678, 0.0
getCurrent,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 1.0041152263374487, 0.00411522633744856, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Math,SIMPLE_NAME, line no: 85, 1.0, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 1.0, 0.08786610878661087, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 1.0, 0.09205020920502092, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.09623430962343096, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.09205020920502092, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 1.0, 0.058577405857740586, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.06276150627615062, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 1.0, 1.0, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 1.0, 1.0, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0
end,SIMPLE_NAME, line no: 96,Math,SIMPLE_NAME, line no: 85, 1.0, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.09583333333333334, 0.0
end,SIMPLE_NAME, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.09166666666666666, 0.0
end,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.0625, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,start,SIMPLE_NAME, line no: 84, 1.0, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,end,SIMPLE_NAME, line no: 85, 1.0, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Math,SIMPLE_NAME, line no: 85, 1.0, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,min,SIMPLE_NAME, line no: 85, 1.0, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 1.0, 0.0875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 1.0, 0.09166666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.09583333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.09166666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 1.0, 0.058333333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.0625, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,max,SIMPLE_NAME, line no: 96, 1.0, 1.0, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0
Math,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 1.0, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,end,SIMPLE_NAME, line no: 85, 1.0, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 1.0, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.0954356846473029, 0.0
Math,SIMPLE_NAME, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.0912863070539419, 0.0
Math,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.06224066390041494, 0.0
Math,SIMPLE_NAME, line no: 96,max,SIMPLE_NAME, line no: 96, 1.0, 1.0, 0.0
max,SIMPLE_NAME, line no: 96,Math,SIMPLE_NAME, line no: 85, 1.0, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.0954356846473029, 0.0
max,SIMPLE_NAME, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.0912863070539419, 0.0
max,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.06224066390041494, 0.0
end,SIMPLE_NAME, line no: 96,Math,SIMPLE_NAME, line no: 85, 1.0, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.0954356846473029, 0.0
end,SIMPLE_NAME, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.0912863070539419, 0.0
end,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.06224066390041494, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 1.0, 0.0912863070539419, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.0954356846473029, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 1.0, 0.0912863070539419, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 1.0, 0.058091286307053944, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.06224066390041494, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9793388429752066, 0.0
actual,SIMPLE_NAME, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.09465020576131687, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9794238683127572, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual,SIMPLE_NAME, line no: 87, 1.0, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getCurrent,SIMPLE_NAME, line no: 91, 1.0, 0.09504132231404959, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 1.0, 0.06198347107438017, 0.0
actual,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 0.9958847736625515, 0.09053497942386832, 0.0
actual,SIMPLE_NAME, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 0.9958847736625515, 0.09053497942386832, 0.0
actual,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 0.9958847736625515, 0.06172839506172839, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 0.9958847736625515, 0.09053497942386832, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 0.9958847736625515, 0.06172839506172839, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.9958677685950413, 0.08677685950413223, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getStopIndex,SIMPLE_NAME, line no: 91, 0.9958677685950413, 0.09090909090909091, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.9958677685950413, 0.05785123966942149, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getStartIndex,SIMPLE_NAME, line no: 92, 0.9958677685950413, 0.06198347107438017, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 0.9958677685950413, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,end,SIMPLE_NAME, line no: 85, 0.9958677685950413, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Math,SIMPLE_NAME, line no: 85, 0.9958677685950413, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 0.9958677685950413, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.9958677685950413, 0.08677685950413223, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 0.9958677685950413, 0.09090909090909091, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.9958677685950413, 0.05785123966942149, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,max,SIMPLE_NAME, line no: 96, 0.9958677685950413, 0.9958677685950413, 0.0
Math,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.995850622406639, 0.08713692946058091, 0.0
Math,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 0.995850622406639, 0.0912863070539419, 0.0
Math,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.995850622406639, 0.058091286307053944, 0.0
Math,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.995850622406639, 0.995850622406639, 0.0
Math,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.995850622406639, 0.995850622406639, 0.0
max,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.995850622406639, 0.08713692946058091, 0.0
max,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 0.995850622406639, 0.0912863070539419, 0.0
max,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.995850622406639, 0.058091286307053944, 0.0
max,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.995850622406639, 0.995850622406639, 0.0
max,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.995850622406639, 0.995850622406639, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.995850622406639, 0.08713692946058091, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 0.995850622406639, 0.0912863070539419, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.995850622406639, 0.058091286307053944, 0.0
end,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.995850622406639, 0.995850622406639, 0.0
end,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.995850622406639, 0.995850622406639, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,start,SIMPLE_NAME, line no: 84, 0.995850622406639, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,end,SIMPLE_NAME, line no: 85, 0.995850622406639, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Math,SIMPLE_NAME, line no: 85, 0.995850622406639, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,min,SIMPLE_NAME, line no: 85, 0.995850622406639, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.995850622406639, 0.995850622406639, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,max,SIMPLE_NAME, line no: 96, 0.995850622406639, 0.995850622406639, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.995850622406639, 0.995850622406639, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.9958333333333333, 0.0875, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent(),METHOD_INVOCATION, line no: 91, 0.9958333333333333, 0.09166666666666666, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.9958333333333333, 0.058333333333333334, 0.0
end,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.9958333333333333, 0.9958333333333333, 0.0
end,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.9958333333333333, 0.9958333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.9958333333333333, 0.9958333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.9958333333333333, 0.9958333333333333, 0.0
actual,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9917695473251029, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9917695473251029, 0.09053497942386832, 0.0
actual,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 0.9917695473251029, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,end,SIMPLE_NAME, line no: 85, 0.9917695473251029, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,Math,SIMPLE_NAME, line no: 85, 0.9917695473251029, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 0.9917695473251029, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.9917695473251029, 0.08641975308641975, 0.0
actual,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.9917695473251029, 0.05761316872427984, 0.0
actual,SIMPLE_NAME, line no: 96,max,SIMPLE_NAME, line no: 96, 0.9917695473251029, 0.9917695473251029, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9917695473251029, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9917695473251029, 0.09053497942386832, 0.0
getCurrent,SIMPLE_NAME, line no: 96,start,SIMPLE_NAME, line no: 84, 0.9917695473251029, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,end,SIMPLE_NAME, line no: 85, 0.9917695473251029, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Math,SIMPLE_NAME, line no: 85, 0.9917695473251029, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,min,SIMPLE_NAME, line no: 85, 0.9917695473251029, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 91, 0.9917695473251029, 0.08641975308641975, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 92, 0.9917695473251029, 0.05761316872427984, 0.0
getCurrent,SIMPLE_NAME, line no: 96,max,SIMPLE_NAME, line no: 96, 0.9917695473251029, 0.9917695473251029, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9917355371900827, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9917355371900827, 0.08677685950413223, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9917355371900827, 0.09090909090909091, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,start,SIMPLE_NAME, line no: 84, 0.9917355371900827, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,end,SIMPLE_NAME, line no: 85, 0.9917355371900827, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Math,SIMPLE_NAME, line no: 85, 0.9917355371900827, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,min,SIMPLE_NAME, line no: 85, 0.9917355371900827, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.9917355371900827, 0.9917355371900827, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,max,SIMPLE_NAME, line no: 96, 0.9917355371900827, 0.9917355371900827, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.9917355371900827, 0.9917355371900827, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.9917355371900827, 0.06198347107438017, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9917355371900827, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9917355371900827, 0.09090909090909091, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.9917355371900827, 0.08677685950413223, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.9917355371900827, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.9917355371900827, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.9917355371900827, 0.9917355371900827, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.9917355371900827, 0.9917355371900827, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.9917355371900827, 0.9917355371900827, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.9917355371900827, 0.9917355371900827, 0.0
Math,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.991701244813278, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.991701244813278, 0.06224066390041494, 0.0
Math,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.991701244813278, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.0912863070539419, 0.0
Math,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.08713692946058091, 0.0
Math,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.991701244813278, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.991701244813278, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.991701244813278, 0.991701244813278, 0.0
Math,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.991701244813278, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.991701244813278, 0.06224066390041494, 0.0
max,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.991701244813278, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.0912863070539419, 0.0
max,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.08713692946058091, 0.0
max,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.991701244813278, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.991701244813278, 0.991701244813278, 0.0
max,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.991701244813278, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.991701244813278, 0.06224066390041494, 0.0
end,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.991701244813278, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.0912863070539419, 0.0
end,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.08713692946058091, 0.0
end,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.991701244813278, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,get,SIMPLE_NAME, line no: 51, 0.991701244813278, 0.06224066390041494, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e,SIMPLE_NAME, line no: 55, 0.991701244813278, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.991701244813278, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.991701244813278, 0.08713692946058091, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.0912863070539419, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.991701244813278, 0.08713692946058091, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.991701244813278, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.991701244813278, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.991701244813278, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,next,SIMPLE_NAME, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.991701244813278, 0.991701244813278, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.991701244813278, 0.991701244813278, 0.0
end,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9916666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9916666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9916666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.9916666666666667, 0.0625, 0.0
end,SIMPLE_NAME, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9916666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9916666666666667, 0.09166666666666666, 0.0
end,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.9916666666666667, 0.0875, 0.0
end,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.9916666666666667, 0.9916666666666667, 0.0
end,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9916666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,get,SIMPLE_NAME, line no: 51, 0.9916666666666667, 0.0625, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9916666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9916666666666667, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9916666666666667, 0.0875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9916666666666667, 0.09166666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.9916666666666667, 0.0875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9916666666666667, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,length,SIMPLE_NAME, line no: 81, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.9916666666666667, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,next,SIMPLE_NAME, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.9916666666666667, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9916666666666667, 0.9916666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9916666666666667, 0.9916666666666667, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9916317991631799, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9916317991631799, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9916317991631799, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,get,SIMPLE_NAME, line no: 51, 0.9916317991631799, 0.06276150627615062, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e,SIMPLE_NAME, line no: 55, 0.9916317991631799, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9916317991631799, 0.0794979079497908, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.9916317991631799, 0.08368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9916317991631799, 0.08368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9916317991631799, 0.08786610878661087, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getDocument,SIMPLE_NAME, line no: 62, 0.9916317991631799, 0.09205020920502092, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.9916317991631799, 0.08786610878661087, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,next,SIMPLE_NAME, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9916317991631799, 0.9916317991631799, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.9916317991631799, 0.9916317991631799, 0.0
actual,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.9876543209876543, 0.06172839506172839, 0.0
actual,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9876543209876543, 0.08641975308641975, 0.0
actual,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.9876543209876543, 0.08641975308641975, 0.0
actual,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.9876543209876543, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.9876543209876543, 0.9876543209876543, 0.0
actual,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.9876543209876543, 0.9876543209876543, 0.0
actual,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.9876543209876543, 0.9876543209876543, 0.0
actual,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.9876543209876543, 0.9876543209876543, 0.0
getCurrent,SIMPLE_NAME, line no: 96,get,SIMPLE_NAME, line no: 51, 0.9876543209876543, 0.06172839506172839, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9876543209876543, 0.08641975308641975, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.9876543209876543, 0.08641975308641975, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.9876543209876543, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.9876543209876543, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,next,SIMPLE_NAME, line no: 89, 0.9876543209876543, 0.9876543209876543, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96, 0.9876543209876543, 0.9876543209876543, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Math.min(start actual.getCurrent().getStartIndex()),METHOD_INVOCATION, line no: 99, 0.9876543209876543, 0.9876543209876543, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.9876543209876543, 0.9876543209876543, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,get,SIMPLE_NAME, line no: 51, 0.987603305785124, 0.06198347107438017, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.987603305785124, 0.08264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getLength,SIMPLE_NAME, line no: 62, 0.987603305785124, 0.08677685950413223, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.987603305785124, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getOffset,SIMPLE_NAME, line no: 84, 0.987603305785124, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous,SIMPLE_NAME, line no: 86, 0.987603305785124, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,next,SIMPLE_NAME, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.987603305785124, 0.987603305785124, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getText,SIMPLE_NAME, line no: 103, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.987603305785124, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.987603305785124, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.987603305785124, 0.08677685950413223, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.987603305785124, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.987603305785124, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.987603305785124, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.987603305785124, 0.987603305785124, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.987603305785124, 0.987603305785124, 0.0
Math,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9875518672199171, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9875518672199171, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9875518672199171, 0.08298755186721991, 0.0
Math,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9875518672199171, 0.08713692946058091, 0.0
Math,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
Math,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9875518672199171, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9875518672199171, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9875518672199171, 0.08298755186721991, 0.0
max,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9875518672199171, 0.08713692946058091, 0.0
max,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
max,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9875518672199171, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9875518672199171, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9875518672199171, 0.08298755186721991, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9875518672199171, 0.08713692946058091, 0.0
end,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9875518672199171, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9875518672199171, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,length,SIMPLE_NAME, line no: 81, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.9875518672199171, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9875518672199171, 0.9875518672199171, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9875518672199171, 0.9875518672199171, 0.0
end,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9875, 0.07916666666666666, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9875, 0.08333333333333333, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument(),METHOD_INVOCATION, line no: 62, 0.9875, 0.0875, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9875, 0.9875, 0.0
end,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9875, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9875, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9875, 0.07916666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.9875, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9875, 0.9875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.9875, 0.9875, 0.0
actual,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9835390946502057, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9835390946502057, 0.0823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9835390946502057, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9835390946502057, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.9835390946502057, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9835390946502057, 0.9835390946502057, 0.0
actual,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9835390946502057, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getDocument().getLength(),METHOD_INVOCATION, line no: 62, 0.9835390946502057, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9835390946502057, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,length,SIMPLE_NAME, line no: 81, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getOffset(),METHOD_INVOCATION, line no: 84, 0.9835390946502057, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getLength(),METHOD_INVOCATION, line no: 85, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getDocument().get(),METHOD_INVOCATION, line no: 87, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous.next(),METHOD_INVOCATION, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.next(),METHOD_INVOCATION, line no: 89, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,start=Math.min(start actual.getCurrent().getStartIndex()),ASSIGNMENT, line no: 99, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.9835390946502057, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getText(),METHOD_INVOCATION, line no: 103, 0.9835390946502057, 0.9835390946502057, 0.0
getCurrent,SIMPLE_NAME, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9835390946502057, 0.9835390946502057, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousContent,SIMPLE_NAME, line no: 40, 0.9834710743801653, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousText,SIMPLE_NAME, line no: 80, 0.9834710743801653, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,length,SIMPLE_NAME, line no: 81, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,iterator,SIMPLE_NAME, line no: 86, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,hasNext,SIMPLE_NAME, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,equal,SIMPLE_NAME, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,lengthDiff,SIMPLE_NAME, line no: 103, 0.9834710743801653, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9834710743801653, 0.9834710743801653, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,inSync,SIMPLE_NAME, line no: 105, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9834710743801653, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9834710743801653, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9834710743801653, 0.9834710743801653, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9834710743801653, 0.9834710743801653, 0.0
Math,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.983402489626556, 0.07883817427385892, 0.0
Math,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.983402489626556, 0.08298755186721991, 0.0
Math,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.983402489626556, 0.983402489626556, 0.0
Math,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.983402489626556, 0.07883817427385892, 0.0
max,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.983402489626556, 0.983402489626556, 0.0
max,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.983402489626556, 0.07883817427385892, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.983402489626556, 0.983402489626556, 0.0
end,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.983402489626556, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,String,SIMPLE_NAME, line no: 40, 0.983402489626556, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.983402489626556, 0.07883817427385892, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.983402489626556, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.983402489626556, 0.983402489626556, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.983402489626556, 0.983402489626556, 0.0
actual,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9794238683127572, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9794238683127572, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9794238683127572, 0.9794238683127572, 0.0
actual,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9794238683127572, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9794238683127572, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousContent.get(e.getDocument()),METHOD_INVOCATION, line no: 80, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousText.length(),METHOD_INVOCATION, line no: 81, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Math.min(e.getDocument().getLength() e.getOffset() + e.getLength()),METHOD_INVOCATION, line no: 85, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getOffset() + e.getLength(),INFIX_EXPRESSION, line no: 85, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,iterator(previousText),METHOD_INVOCATION, line no: 86, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,iterator(e.getDocument().get()),METHOD_INVOCATION, line no: 87, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous.hasNext(),METHOD_INVOCATION, line no: 89, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.hasNext(),METHOD_INVOCATION, line no: 89, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,equal(previous.next() actual.next()),METHOD_INVOCATION, line no: 89, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getText().length(),METHOD_INVOCATION, line no: 103, 0.9794238683127572, 0.9794238683127572, 0.0
getCurrent,SIMPLE_NAME, line no: 96,inSync(previous actual lengthDiff),METHOD_INVOCATION, line no: 105, 0.9794238683127572, 0.9794238683127572, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Region,SIMPLE_NAME, line no: 21, 0.9793388429752066, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,String,SIMPLE_NAME, line no: 40, 0.9793388429752066, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9793388429752066, 0.07851239669421488, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.9793388429752066, 0.08264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,TokenIterator,SIMPLE_NAME, line no: 86, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9793388429752066, 0.9793388429752066, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9793388429752066, 0.07851239669421488, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.9793388429752066, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9793388429752066, 0.9793388429752066, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.9793388429752066, 0.9793388429752066, 0.0
actual,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9753086419753086, 0.07818930041152264, 0.0
actual,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.9753086419753086, 0.0823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9753086419753086, 0.9753086419753086, 0.0
actual,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Region(0 e.getDocument().getLength()),CLASS_INSTANCE_CREATION, line no: 62, 0.9753086419753086, 0.07818930041152264, 0.0
getCurrent,SIMPLE_NAME, line no: 96,0,NUMBER_LITERAL, line no: 62, 0.9753086419753086, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getDocument().getLength() == 0,INFIX_EXPRESSION, line no: 76, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Region(0 0),CLASS_INSTANCE_CREATION, line no: 77, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousText.length() == 0,INFIX_EXPRESSION, line no: 81, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next()),INFIX_EXPRESSION, line no: 89, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getText().length() - e.getLength(),INFIX_EXPRESSION, line no: 103, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,!inSync(previous actual lengthDiff),PREFIX_EXPRESSION, line no: 105, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Region(start end - start),CLASS_INSTANCE_CREATION, line no: 125, 0.9753086419753086, 0.9753086419753086, 0.0
getCurrent,SIMPLE_NAME, line no: 96,end - start,INFIX_EXPRESSION, line no: 125, 0.9753086419753086, 0.9753086419753086, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.3598326359832636, 0.13389121338912133, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35833333333333334, 0.13333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35833333333333334, 0.13333333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35684647302904565, 0.13278008298755187, 0.0
max,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35684647302904565, 0.13278008298755187, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35684647302904565, 0.13278008298755187, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35684647302904565, 0.13278008298755187, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.35564853556485354, 0.14225941422594143, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.35564853556485354, 0.35564853556485354, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35537190082644626, 0.1322314049586777, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35537190082644626, 0.1322314049586777, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.3541666666666667, 0.3541666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.3541666666666667, 0.14166666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.3541666666666667, 0.3541666666666667, 0.0
actual,SIMPLE_NAME, line no: 96,previous.getCurrent(),METHOD_INVOCATION, line no: 108, 0.35390946502057613, 0.13168724279835392, 0.0
Math,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.35269709543568467, 0.14107883817427386, 0.0
Math,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.35269709543568467, 0.35269709543568467, 0.0
max,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.35269709543568467, 0.35269709543568467, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.35269709543568467, 0.35269709543568467, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.35269709543568467, 0.14107883817427386, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.35269709543568467, 0.35269709543568467, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.3514644351464435, 0.13807531380753138, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.3514644351464435, 0.3514644351464435, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.3512396694214876, 0.14049586776859505, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.3512396694214876, 0.3512396694214876, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.3512396694214876, 0.14049586776859505, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.3512396694214876, 0.3512396694214876, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.35, 0.1375, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.35, 0.35, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.35, 0.1375, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.35, 0.35, 0.0
actual,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.3497942386831276, 0.13991769547325103, 0.0
actual,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.3497942386831276, 0.3497942386831276, 0.0
getCurrent,SIMPLE_NAME, line no: 96,1,NUMBER_LITERAL, line no: 111, 0.3497942386831276, 0.13991769547325103, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex(),METHOD_INVOCATION, line no: 117, 0.3497942386831276, 0.3497942386831276, 0.0
Math,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.34854771784232363, 0.13692946058091288, 0.0
Math,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.34854771784232363, 0.34854771784232363, 0.0
max,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.34854771784232363, 0.13692946058091288, 0.0
max,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.34854771784232363, 0.34854771784232363, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.34854771784232363, 0.13692946058091288, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.34854771784232363, 0.34854771784232363, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.34854771784232363, 0.13692946058091288, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.34854771784232363, 0.34854771784232363, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.3472803347280335, 0.3472803347280335, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.3472803347280335, 0.3472803347280335, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.3472803347280335, 0.3472803347280335, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.34710743801652894, 0.13636363636363635, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.34710743801652894, 0.34710743801652894, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.34710743801652894, 0.13636363636363635, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.34710743801652894, 0.34710743801652894, 0.0
end,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.3458333333333333, 0.3458333333333333, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.3458333333333333, 0.3458333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.3458333333333333, 0.3458333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.3458333333333333, 0.3458333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.3458333333333333, 0.3458333333333333, 0.0
actual,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.345679012345679, 0.13580246913580246, 0.0
actual,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.345679012345679, 0.345679012345679, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1,INFIX_EXPRESSION, line no: 111, 0.345679012345679, 0.13580246913580246, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff,INFIX_EXPRESSION, line no: 117, 0.345679012345679, 0.345679012345679, 0.0
Math,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34439834024896265, 0.34439834024896265, 0.0
Math,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.34439834024896265, 0.34439834024896265, 0.0
Math,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34439834024896265, 0.34439834024896265, 0.0
max,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34439834024896265, 0.34439834024896265, 0.0
max,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34439834024896265, 0.34439834024896265, 0.0
end,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34439834024896265, 0.34439834024896265, 0.0
end,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34439834024896265, 0.34439834024896265, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34439834024896265, 0.34439834024896265, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.34439834024896265, 0.34439834024896265, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34439834024896265, 0.34439834024896265, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34297520661157027, 0.34297520661157027, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.34297520661157027, 0.34297520661157027, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34297520661157027, 0.34297520661157027, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34297520661157027, 0.34297520661157027, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.34297520661157027, 0.34297520661157027, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34297520661157027, 0.34297520661157027, 0.0
actual,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34156378600823045, 0.34156378600823045, 0.0
actual,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.34156378600823045, 0.34156378600823045, 0.0
actual,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34156378600823045, 0.34156378600823045, 0.0
getCurrent,SIMPLE_NAME, line no: 96,!actual.hasNext(),PREFIX_EXPRESSION, line no: 107, 0.34156378600823045, 0.34156378600823045, 0.0
getCurrent,SIMPLE_NAME, line no: 96,end=actual.getCurrent().getStopIndex() + 1,ASSIGNMENT, line no: 114, 0.34156378600823045, 0.34156378600823045, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex(),INFIX_EXPRESSION, line no: 117, 0.34156378600823045, 0.34156378600823045, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16317991631799164, 0.0041841004184100415, 0.0
end,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.1625, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.1625, 0.004166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16182572614107885, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16182572614107885, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16182572614107885, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16182572614107885, 0.004149377593360996, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16115702479338842, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16115702479338842, 0.004132231404958678, 0.0
actual,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16049382716049382, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,partition,SIMPLE_NAME, line no: 55, 0.16049382716049382, 0.00411522633744856, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.1589958158995816, 0.0041841004184100415, 0.0
end,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15833333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15833333333333333, 0.004166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15767634854771784, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15767634854771784, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15767634854771784, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15767634854771784, 0.004149377593360996, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15702479338842976, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15702479338842976, 0.004132231404958678, 0.0
actual,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15637860082304528, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,documentPartitioningChanged,SIMPLE_NAME, line no: 55, 0.15637860082304528, 0.00411522633744856, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15481171548117154, 0.15481171548117154, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15481171548117154, 0.15481171548117154, 0.0
end,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15416666666666667, 0.15416666666666667, 0.0
end,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15416666666666667, 0.15416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15416666666666667, 0.15416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15416666666666667, 0.15416666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
Math,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
max,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
max,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
end,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
end,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15352697095435686, 0.15352697095435686, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15289256198347106, 0.15289256198347106, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15289256198347106, 0.15289256198347106, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.15289256198347106, 0.15289256198347106, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.15289256198347106, 0.15289256198347106, 0.0
actual,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.1522633744855967, 0.1522633744855967, 0.0
actual,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.1522633744855967, 0.1522633744855967, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Exception,SIMPLE_NAME, line no: 60, 0.1522633744855967, 0.1522633744855967, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e1,SIMPLE_NAME, line no: 60, 0.1522633744855967, 0.1522633744855967, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.15, 0.14166666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.15, 0.14166666666666666, 0.0
Math,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.14937759336099585, 0.14107883817427386, 0.0
Math,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.14937759336099585, 0.14107883817427386, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.14937759336099585, 0.14107883817427386, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.14937759336099585, 0.14107883817427386, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.1487603305785124, 0.14049586776859505, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.1487603305785124, 0.14049586776859505, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.1487603305785124, 0.14049586776859505, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.1487603305785124, 0.14049586776859505, 0.0
actual,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.14814814814814814, 0.13991769547325103, 0.0
actual,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.14814814814814814, 0.13991769547325103, 0.0
getCurrent,SIMPLE_NAME, line no: 96,prevIndex,SIMPLE_NAME, line no: 136, 0.14814814814814814, 0.13991769547325103, 0.0
getCurrent,SIMPLE_NAME, line no: 96,startIndex,SIMPLE_NAME, line no: 137, 0.14814814814814814, 0.13991769547325103, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14644351464435146, 0.14644351464435146, 0.0
end,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14583333333333334, 0.14583333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14583333333333334, 0.14583333333333334, 0.0
Math,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14522821576763487, 0.14522821576763487, 0.0
max,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14522821576763487, 0.14522821576763487, 0.0
end,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14522821576763487, 0.14522821576763487, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14522821576763487, 0.14522821576763487, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.1446280991735537, 0.1446280991735537, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.1446280991735537, 0.1446280991735537, 0.0
actual,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.1440329218106996, 0.1440329218106996, 0.0
getCurrent,SIMPLE_NAME, line no: 96,prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.1440329218106996, 0.1440329218106996, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14225941422594143, 0.1297071129707113, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14225941422594143, 0.14225941422594143, 0.0
end,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14166666666666666, 0.12916666666666668, 0.0
end,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14166666666666666, 0.14166666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14166666666666666, 0.12916666666666668, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14166666666666666, 0.14166666666666666, 0.0
Math,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14107883817427386, 0.12863070539419086, 0.0
Math,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14107883817427386, 0.14107883817427386, 0.0
max,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14107883817427386, 0.12863070539419086, 0.0
max,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14107883817427386, 0.14107883817427386, 0.0
end,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14107883817427386, 0.12863070539419086, 0.0
end,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14107883817427386, 0.14107883817427386, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14107883817427386, 0.12863070539419086, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14107883817427386, 0.14107883817427386, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14049586776859505, 0.128099173553719, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14049586776859505, 0.14049586776859505, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.14049586776859505, 0.128099173553719, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.14049586776859505, 0.14049586776859505, 0.0
actual,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.13991769547325103, 0.12757201646090535, 0.0
actual,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.13991769547325103, 0.13991769547325103, 0.0
getCurrent,SIMPLE_NAME, line no: 96,equal(previous.getCurrent() actual.getCurrent()),METHOD_INVOCATION, line no: 108, 0.13991769547325103, 0.12757201646090535, 0.0
getCurrent,SIMPLE_NAME, line no: 96,equal && prevIndex == startIndex,INFIX_EXPRESSION, line no: 138, 0.13991769547325103, 0.13991769547325103, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13389121338912133, 0.13389121338912133, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13333333333333333, 0.13333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13333333333333333, 0.13333333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13278008298755187, 0.13278008298755187, 0.0
max,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13278008298755187, 0.13278008298755187, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13278008298755187, 0.13278008298755187, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13278008298755187, 0.13278008298755187, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.1322314049586777, 0.1322314049586777, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.1322314049586777, 0.1322314049586777, 0.0
actual,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13168724279835392, 0.13168724279835392, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() + 1 - start,INFIX_EXPRESSION, line no: 111, 0.13168724279835392, 0.13168724279835392, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.1297071129707113, 0.1297071129707113, 0.0
end,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12916666666666668, 0.12916666666666668, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12916666666666668, 0.12916666666666668, 0.0
Math,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12863070539419086, 0.12863070539419086, 0.0
max,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12863070539419086, 0.12863070539419086, 0.0
end,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12863070539419086, 0.12863070539419086, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12863070539419086, 0.12863070539419086, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.128099173553719, 0.128099173553719, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.128099173553719, 0.128099173553719, 0.0
actual,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12757201646090535, 0.12757201646090535, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Region(start actual.getCurrent().getStopIndex() + 1 - start),CLASS_INSTANCE_CREATION, line no: 111, 0.12757201646090535, 0.12757201646090535, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11715481171548117, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11715481171548117, 0.11715481171548117, 0.0
end,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11666666666666667, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11666666666666667, 0.11666666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11666666666666667, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11666666666666667, 0.11666666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11618257261410789, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11618257261410789, 0.11618257261410789, 0.0
max,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11618257261410789, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11618257261410789, 0.11618257261410789, 0.0
end,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11618257261410789, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11618257261410789, 0.11618257261410789, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11618257261410789, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11618257261410789, 0.11618257261410789, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11570247933884298, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11570247933884298, 0.11570247933884298, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11570247933884298, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11570247933884298, 0.11570247933884298, 0.0
actual,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11522633744855967, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11522633744855967, 0.11522633744855967, 0.0
getCurrent,SIMPLE_NAME, line no: 96,token,SIMPLE_NAME, line no: 181, 0.11522633744855967, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getType,SIMPLE_NAME, line no: 182, 0.11522633744855967, 0.11522633744855967, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.11297071129707113, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.11297071129707113, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.11297071129707113, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.11297071129707113, 0.11297071129707113, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.11297071129707113, 0.11297071129707113, 0.0
end,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.1125, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.1125, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.1125, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.1125, 0.1125, 0.0
end,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.1125, 0.1125, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.1125, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.1125, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.1125, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.1125, 0.1125, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.1125, 0.1125, 0.0
Math,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.11203319502074689, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.11203319502074689, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.11203319502074689, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
Math,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
max,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.11203319502074689, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.11203319502074689, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.11203319502074689, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
max,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
end,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.11203319502074689, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.11203319502074689, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.11203319502074689, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
end,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.11203319502074689, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.11203319502074689, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.11203319502074689, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.11203319502074689, 0.11203319502074689, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.1115702479338843, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.1115702479338843, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.1115702479338843, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.1115702479338843, 0.1115702479338843, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.1115702479338843, 0.1115702479338843, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.1115702479338843, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.1115702479338843, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.1115702479338843, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.1115702479338843, 0.1115702479338843, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.1115702479338843, 0.1115702479338843, 0.0
actual,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.1111111111111111, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.1111111111111111, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.1111111111111111, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.1111111111111111, 0.1111111111111111, 0.0
actual,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.1111111111111111, 0.1111111111111111, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Token,SIMPLE_NAME, line no: 15, 0.1111111111111111, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,lexer,SIMPLE_NAME, line no: 39, 0.1111111111111111, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,nextToken,SIMPLE_NAME, line no: 164, 0.1111111111111111, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,token.getType(),METHOD_INVOCATION, line no: 182, 0.1111111111111111, 0.1111111111111111, 0.0
getCurrent,SIMPLE_NAME, line no: 96,EOF,SIMPLE_NAME, line no: 182, 0.1111111111111111, 0.1111111111111111, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.1087866108786611, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.1087866108786611, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,null,NULL_LITERAL, line no: 179, 0.1087866108786611, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.1087866108786611, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.1087866108786611, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.1087866108786611, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.1087866108786611, 0.1087866108786611, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.1087866108786611, 0.1087866108786611, 0.0
end,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.10833333333333334, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.10833333333333334, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.10833333333333334, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.10833333333333334, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.10833333333333334, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.10833333333333334, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.10833333333333334, 0.10833333333333334, 0.0
end,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.10833333333333334, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,null,NULL_LITERAL, line no: 179, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.10833333333333334, 0.10833333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.10833333333333334, 0.10833333333333334, 0.0
Math,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.1078838174273859, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.1078838174273859, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.1078838174273859, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
Math,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.1078838174273859, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
max,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.1078838174273859, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
end,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.1078838174273859, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,null,NULL_LITERAL, line no: 179, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.1078838174273859, 0.1078838174273859, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.10743801652892562, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,null,NULL_LITERAL, line no: 179, 0.10743801652892562, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.10743801652892562, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.10743801652892562, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.10743801652892562, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.10743801652892562, 0.10743801652892562, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.10743801652892562, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.10743801652892562, 0.10743801652892562, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.10743801652892562, 0.10743801652892562, 0.0
actual,SIMPLE_NAME, line no: 96,CommonToken,SIMPLE_NAME, line no: 14, 0.10699588477366255, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.10699588477366255, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.10699588477366255, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.10699588477366255, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.10699588477366255, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.10699588477366255, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.10699588477366255, 0.10699588477366255, 0.0
actual,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,nextToken != null,INFIX_EXPRESSION, line no: 179, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,null,NULL_LITERAL, line no: 179, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,true,BOOLEAN_LITERAL, line no: 180, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,lexer.nextToken(),METHOD_INVOCATION, line no: 181, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,token.getType() == Token.EOF,INFIX_EXPRESSION, line no: 182, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Token.EOF,QUALIFIED_NAME, line no: 182, 0.10699588477366255, 0.10699588477366255, 0.0
getCurrent,SIMPLE_NAME, line no: 96,nextToken=token,ASSIGNMENT, line no: 185, 0.10699588477366255, 0.10699588477366255, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.10460251046025104, 0.10460251046025104, 0.0
end,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.10416666666666667, 0.10416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.10416666666666667, 0.10416666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.1037344398340249, 0.1037344398340249, 0.0
max,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.1037344398340249, 0.1037344398340249, 0.0
end,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.1037344398340249, 0.1037344398340249, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.1037344398340249, 0.1037344398340249, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.10330578512396695, 0.10330578512396695, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.10330578512396695, 0.10330578512396695, 0.0
actual,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.102880658436214, 0.102880658436214, 0.0
getCurrent,SIMPLE_NAME, line no: 96,(CommonToken)lexer.nextToken(),CAST_EXPRESSION, line no: 181, 0.102880658436214, 0.102880658436214, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.100418410041841, 0.100418410041841, 0.0
end,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.1, 0.1, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.1, 0.1, 0.0
Math,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.0995850622406639, 0.0995850622406639, 0.0
max,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.0995850622406639, 0.0995850622406639, 0.0
end,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.0995850622406639, 0.0995850622406639, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.0995850622406639, 0.0995850622406639, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.09917355371900827, 0.09917355371900827, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.09917355371900827, 0.09917355371900827, 0.0
actual,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.09876543209876543, 0.09876543209876543, 0.0
getCurrent,SIMPLE_NAME, line no: 96,!previous.hasNext(),PREFIX_EXPRESSION, line no: 118, 0.09876543209876543, 0.09876543209876543, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08786610878661087, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08786610878661087, 0.08786610878661087, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08786610878661087, 0.0041841004184100415, 0.0
end,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.0875, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.0875, 0.0875, 0.0
end,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.0875, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.0875, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.0875, 0.0875, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,string,SIMPLE_NAME, line no: 154, 0.0875, 0.004166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08713692946058091, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08713692946058091, 0.08713692946058091, 0.0
Math,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08713692946058091, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08713692946058091, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08713692946058091, 0.08713692946058091, 0.0
max,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08713692946058091, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08713692946058091, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08713692946058091, 0.08713692946058091, 0.0
end,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08713692946058091, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08713692946058091, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08713692946058091, 0.08713692946058091, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08713692946058091, 0.004149377593360996, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08677685950413223, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08677685950413223, 0.08677685950413223, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08677685950413223, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08677685950413223, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08677685950413223, 0.08677685950413223, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08677685950413223, 0.004132231404958678, 0.0
actual,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08641975308641975, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08641975308641975, 0.08641975308641975, 0.0
actual,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08641975308641975, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,ANTLRStringStream,SIMPLE_NAME, line no: 13, 0.08641975308641975, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getMessage,SIMPLE_NAME, line no: 61, 0.08641975308641975, 0.08641975308641975, 0.0
getCurrent,SIMPLE_NAME, line no: 96,string,SIMPLE_NAME, line no: 154, 0.08641975308641975, 0.00411522633744856, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08368200836820083, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08368200836820083, 0.08368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08368200836820083, 0.08368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08368200836820083, 0.08368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08368200836820083, 0.0794979079497908, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08368200836820083, 0.08368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08368200836820083, 0.08368200836820083, 0.0
end,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08333333333333333, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08333333333333333, 0.08333333333333333, 0.0
end,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08333333333333333, 0.08333333333333333, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08333333333333333, 0.08333333333333333, 0.0
end,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08333333333333333, 0.07916666666666666, 0.0
end,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08333333333333333, 0.08333333333333333, 0.0
end,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08333333333333333, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08333333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08333333333333333, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08333333333333333, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08333333333333333, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08333333333333333, 0.07916666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08333333333333333, 0.08333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08333333333333333, 0.08333333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08298755186721991, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
Math,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
Math,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08298755186721991, 0.08298755186721991, 0.0
Math,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08298755186721991, 0.07883817427385892, 0.0
Math,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
Math,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
max,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08298755186721991, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
max,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
max,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08298755186721991, 0.08298755186721991, 0.0
max,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08298755186721991, 0.07883817427385892, 0.0
max,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
max,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
end,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08298755186721991, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
end,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
end,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08298755186721991, 0.08298755186721991, 0.0
end,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08298755186721991, 0.07883817427385892, 0.0
end,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
end,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08298755186721991, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08298755186721991, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08298755186721991, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08298755186721991, 0.07883817427385892, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08298755186721991, 0.08298755186721991, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08264462809917356, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08264462809917356, 0.08264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08264462809917356, 0.08264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08264462809917356, 0.08264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08264462809917356, 0.07851239669421488, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08264462809917356, 0.08264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08264462809917356, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.08264462809917356, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.08264462809917356, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.08264462809917356, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.08264462809917356, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.08264462809917356, 0.07851239669421488, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.08264462809917356, 0.08264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.08264462809917356, 0.08264462809917356, 0.0
actual,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.0823045267489712, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.0823045267489712, 0.0823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.0823045267489712, 0.0823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.0823045267489712, 0.0823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.0823045267489712, 0.07818930041152264, 0.0
actual,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.0823045267489712, 0.0823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.0823045267489712, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,log,SIMPLE_NAME, line no: 37, 0.0823045267489712, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,error,SIMPLE_NAME, line no: 61, 0.0823045267489712, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e1.getMessage(),METHOD_INVOCATION, line no: 61, 0.0823045267489712, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,actual.getCurrent().getStopIndex() >= start,INFIX_EXPRESSION, line no: 91, 0.0823045267489712, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,l,SIMPLE_NAME, line no: 155, 0.0823045267489712, 0.07818930041152264, 0.0
getCurrent,SIMPLE_NAME, line no: 96,setCharStream,SIMPLE_NAME, line no: 156, 0.0823045267489712, 0.0823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new ANTLRStringStream(string),CLASS_INSTANCE_CREATION, line no: 156, 0.0823045267489712, 0.0823045267489712, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.0794979079497908, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.0794979079497908, 0.0794979079497908, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.0794979079497908, 0.0794979079497908, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.0794979079497908, 0.0794979079497908, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.0794979079497908, 0.0794979079497908, 0.0
end,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07916666666666666, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07916666666666666, 0.07916666666666666, 0.0
end,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07916666666666666, 0.07916666666666666, 0.0
end,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07916666666666666, 0.07916666666666666, 0.0
end,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07916666666666666, 0.07916666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07916666666666666, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07916666666666666, 0.07916666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07916666666666666, 0.07916666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07916666666666666, 0.07916666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07916666666666666, 0.07916666666666666, 0.0
Math,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07883817427385892, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07883817427385892, 0.07883817427385892, 0.0
Math,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07883817427385892, 0.07883817427385892, 0.0
Math,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07883817427385892, 0.07883817427385892, 0.0
Math,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07883817427385892, 0.07883817427385892, 0.0
max,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07883817427385892, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07883817427385892, 0.07883817427385892, 0.0
max,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07883817427385892, 0.07883817427385892, 0.0
max,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07883817427385892, 0.07883817427385892, 0.0
max,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07883817427385892, 0.07883817427385892, 0.0
end,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07883817427385892, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07883817427385892, 0.07883817427385892, 0.0
end,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07883817427385892, 0.07883817427385892, 0.0
end,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07883817427385892, 0.07883817427385892, 0.0
end,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07883817427385892, 0.07883817427385892, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07883817427385892, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07883817427385892, 0.07883817427385892, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07883817427385892, 0.07883817427385892, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07883817427385892, 0.07883817427385892, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07883817427385892, 0.07883817427385892, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07851239669421488, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07851239669421488, 0.07851239669421488, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07851239669421488, 0.07851239669421488, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07851239669421488, 0.07851239669421488, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07851239669421488, 0.07851239669421488, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07851239669421488, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07851239669421488, 0.07851239669421488, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07851239669421488, 0.07851239669421488, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07851239669421488, 0.07851239669421488, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07851239669421488, 0.07851239669421488, 0.0
actual,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07818930041152264, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07818930041152264, 0.07818930041152264, 0.0
actual,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07818930041152264, 0.07818930041152264, 0.0
actual,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07818930041152264, 0.07818930041152264, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Lexer,SIMPLE_NAME, line no: 23, 0.07818930041152264, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,log.error(e1.getMessage() e1),METHOD_INVOCATION, line no: 61, 0.07818930041152264, 0.07818930041152264, 0.0
getCurrent,SIMPLE_NAME, line no: 96,lexer.get(),METHOD_INVOCATION, line no: 155, 0.07818930041152264, 0.07818930041152264, 0.0
getCurrent,SIMPLE_NAME, line no: 96,l.setCharStream(new ANTLRStringStream(string)),METHOD_INVOCATION, line no: 156, 0.07818930041152264, 0.07818930041152264, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new TokenIterator(l),CLASS_INSTANCE_CREATION, line no: 157, 0.07818930041152264, 0.07818930041152264, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07112970711297072, 0.07112970711297072, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07083333333333333, 0.07083333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07083333333333333, 0.07083333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07053941908713693, 0.07053941908713693, 0.0
max,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07053941908713693, 0.07053941908713693, 0.0
end,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07053941908713693, 0.07053941908713693, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07053941908713693, 0.07053941908713693, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07024793388429752, 0.07024793388429752, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.07024793388429752, 0.07024793388429752, 0.0
actual,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.06995884773662552, 0.06995884773662552, 0.0
getCurrent,SIMPLE_NAME, line no: 96,e.getDocument().getLength() - start,INFIX_EXPRESSION, line no: 119, 0.06995884773662552, 0.06995884773662552, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06694560669456066, 0.06694560669456066, 0.0
end,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06666666666666667, 0.06666666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06666666666666667, 0.06666666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06639004149377593, 0.06639004149377593, 0.0
max,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06639004149377593, 0.06639004149377593, 0.0
end,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06639004149377593, 0.06639004149377593, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06639004149377593, 0.06639004149377593, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06611570247933884, 0.06611570247933884, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06611570247933884, 0.06611570247933884, 0.0
actual,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06584362139917696, 0.06584362139917696, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Region(start e.getDocument().getLength() - start),CLASS_INSTANCE_CREATION, line no: 119, 0.06584362139917696, 0.06584362139917696, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06276150627615062, 0.0041841004184100415, 0.0
end,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.0625, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,document,SIMPLE_NAME, line no: 49, 0.0625, 0.004166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06224066390041494, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06224066390041494, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06224066390041494, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06224066390041494, 0.004149377593360996, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06198347107438017, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06198347107438017, 0.004132231404958678, 0.0
actual,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06172839506172839, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,document,SIMPLE_NAME, line no: 49, 0.06172839506172839, 0.00411522633744856, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058577405857740586, 0.058577405857740586, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058577405857740586, 0.058577405857740586, 0.0
end,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058333333333333334, 0.058333333333333334, 0.0
end,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058333333333333334, 0.058333333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058333333333333334, 0.058333333333333334, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058333333333333334, 0.058333333333333334, 0.0
Math,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
Math,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
max,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
max,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
end,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
end,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,put,SIMPLE_NAME, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.058091286307053944, 0.058091286307053944, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,put,SIMPLE_NAME, line no: 51, 0.05785123966942149, 0.05785123966942149, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.05785123966942149, 0.05785123966942149, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.05785123966942149, 0.05785123966942149, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.05785123966942149, 0.05785123966942149, 0.0
actual,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.05761316872427984, 0.05761316872427984, 0.0
actual,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.05761316872427984, 0.05761316872427984, 0.0
getCurrent,SIMPLE_NAME, line no: 96,put,SIMPLE_NAME, line no: 51, 0.05761316872427984, 0.05761316872427984, 0.0
getCurrent,SIMPLE_NAME, line no: 96,document.get(),METHOD_INVOCATION, line no: 51, 0.05761316872427984, 0.05761316872427984, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05439330543933055, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05439330543933055, 0.05439330543933055, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.05439330543933055, 0.05439330543933055, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05439330543933055, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05439330543933055, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05439330543933055, 0.05439330543933055, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05439330543933055, 0.05439330543933055, 0.0
end,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05416666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05416666666666667, 0.05416666666666667, 0.0
end,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05416666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05416666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05416666666666667, 0.05416666666666667, 0.0
end,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05416666666666667, 0.05416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05416666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05416666666666667, 0.05416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.05416666666666667, 0.05416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05416666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05416666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05416666666666667, 0.05416666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05416666666666667, 0.05416666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05394190871369295, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05394190871369295, 0.05394190871369295, 0.0
Math,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.05394190871369295, 0.05394190871369295, 0.0
Math,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05394190871369295, 0.05394190871369295, 0.0
Math,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05394190871369295, 0.05394190871369295, 0.0
max,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05394190871369295, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05394190871369295, 0.05394190871369295, 0.0
max,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05394190871369295, 0.05394190871369295, 0.0
max,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05394190871369295, 0.05394190871369295, 0.0
end,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05394190871369295, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05394190871369295, 0.05394190871369295, 0.0
end,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05394190871369295, 0.05394190871369295, 0.0
end,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05394190871369295, 0.05394190871369295, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05394190871369295, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05394190871369295, 0.05394190871369295, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.05394190871369295, 0.05394190871369295, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05394190871369295, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05394190871369295, 0.05394190871369295, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05394190871369295, 0.05394190871369295, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05371900826446281, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05371900826446281, 0.05371900826446281, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.05371900826446281, 0.05371900826446281, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05371900826446281, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05371900826446281, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05371900826446281, 0.05371900826446281, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05371900826446281, 0.05371900826446281, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.05371900826446281, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.05371900826446281, 0.05371900826446281, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.05371900826446281, 0.05371900826446281, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.05371900826446281, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.05371900826446281, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.05371900826446281, 0.05371900826446281, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.05371900826446281, 0.05371900826446281, 0.0
actual,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.053497942386831275, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.053497942386831275, 0.053497942386831275, 0.0
actual,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.053497942386831275, 0.053497942386831275, 0.0
actual,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.053497942386831275, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.053497942386831275, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.053497942386831275, 0.053497942386831275, 0.0
actual,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.053497942386831275, 0.053497942386831275, 0.0
getCurrent,SIMPLE_NAME, line no: 96,setDocument,SIMPLE_NAME, line no: 49, 0.053497942386831275, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousContent.put(document document.get()),METHOD_INVOCATION, line no: 51, 0.053497942386831275, 0.053497942386831275, 0.0
getCurrent,SIMPLE_NAME, line no: 96,start=actual.getCurrent().getStartIndex(),ASSIGNMENT, line no: 92, 0.053497942386831275, 0.053497942386831275, 0.0
getCurrent,SIMPLE_NAME, line no: 96,t1,SIMPLE_NAME, line no: 146, 0.053497942386831275, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,t2,SIMPLE_NAME, line no: 146, 0.053497942386831275, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,hasNext(),METHOD_INVOCATION, line no: 191, 0.053497942386831275, 0.053497942386831275, 0.0
getCurrent,SIMPLE_NAME, line no: 96,IllegalStateException,SIMPLE_NAME, line no: 195, 0.053497942386831275, 0.053497942386831275, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.0502092050209205, 0.0502092050209205, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.0502092050209205, 0.04602510460251046, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.0502092050209205, 0.0502092050209205, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.0502092050209205, 0.0502092050209205, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.0502092050209205, 0.0502092050209205, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.0502092050209205, 0.0502092050209205, 0.0
end,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.05, 0.05, 0.0
end,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.05, 0.04583333333333333, 0.0
end,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.05, 0.05, 0.0
end,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.05, 0.05, 0.0
end,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.05, 0.05, 0.0
end,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.05, 0.05, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.05, 0.05, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.05, 0.04583333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.05, 0.05, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.05, 0.05, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.05, 0.05, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.05, 0.05, 0.0
Math,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.04979253112033195, 0.04979253112033195, 0.0
Math,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.04979253112033195, 0.04564315352697095, 0.0
Math,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
Math,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
Math,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
Math,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.04979253112033195, 0.04979253112033195, 0.0
max,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.04979253112033195, 0.04979253112033195, 0.0
max,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.04979253112033195, 0.04564315352697095, 0.0
max,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
max,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
max,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
max,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.04979253112033195, 0.04979253112033195, 0.0
end,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.04979253112033195, 0.04979253112033195, 0.0
end,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.04979253112033195, 0.04564315352697095, 0.0
end,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
end,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
end,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
end,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.04979253112033195, 0.04979253112033195, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.04979253112033195, 0.04979253112033195, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.04979253112033195, 0.04564315352697095, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.04979253112033195, 0.04979253112033195, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.04979253112033195, 0.04979253112033195, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.049586776859504134, 0.049586776859504134, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.049586776859504134, 0.045454545454545456, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.049586776859504134, 0.049586776859504134, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.049586776859504134, 0.049586776859504134, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.049586776859504134, 0.049586776859504134, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.049586776859504134, 0.049586776859504134, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.049586776859504134, 0.049586776859504134, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.049586776859504134, 0.045454545454545456, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.049586776859504134, 0.049586776859504134, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.049586776859504134, 0.049586776859504134, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.049586776859504134, 0.049586776859504134, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.049586776859504134, 0.049586776859504134, 0.0
actual,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.04938271604938271, 0.04938271604938271, 0.0
actual,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.04938271604938271, 0.04526748971193416, 0.0
actual,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.04938271604938271, 0.04938271604938271, 0.0
actual,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.04938271604938271, 0.04938271604938271, 0.0
actual,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.04938271604938271, 0.04938271604938271, 0.0
actual,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.04938271604938271, 0.04938271604938271, 0.0
getCurrent,SIMPLE_NAME, line no: 96,super.setDocument(document),SUPER_METHOD_INVOCATION, line no: 50, 0.04938271604938271, 0.04938271604938271, 0.0
getCurrent,SIMPLE_NAME, line no: 96,fDocument,SIMPLE_NAME, line no: 64, 0.04938271604938271, 0.04526748971193416, 0.0
getCurrent,SIMPLE_NAME, line no: 96,t1.getText(),METHOD_INVOCATION, line no: 147, 0.04938271604938271, 0.04938271604938271, 0.0
getCurrent,SIMPLE_NAME, line no: 96,equals,SIMPLE_NAME, line no: 147, 0.04938271604938271, 0.04938271604938271, 0.0
getCurrent,SIMPLE_NAME, line no: 96,t2.getText(),METHOD_INVOCATION, line no: 147, 0.04938271604938271, 0.04938271604938271, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new IllegalStateException(),CLASS_INSTANCE_CREATION, line no: 195, 0.04938271604938271, 0.04938271604938271, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04602510460251046, 0.04602510460251046, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04602510460251046, 0.04602510460251046, 0.0
end,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04583333333333333, 0.04583333333333333, 0.0
end,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04583333333333333, 0.04583333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04583333333333333, 0.04583333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04583333333333333, 0.04583333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04564315352697095, 0.04564315352697095, 0.0
Math,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04564315352697095, 0.04564315352697095, 0.0
max,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04564315352697095, 0.04564315352697095, 0.0
max,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04564315352697095, 0.04564315352697095, 0.0
end,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04564315352697095, 0.04564315352697095, 0.0
end,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04564315352697095, 0.04564315352697095, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04564315352697095, 0.04564315352697095, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04564315352697095, 0.04564315352697095, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.045454545454545456, 0.045454545454545456, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.045454545454545456, 0.045454545454545456, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.045454545454545456, 0.045454545454545456, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.045454545454545456, 0.045454545454545456, 0.0
actual,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04526748971193416, 0.04526748971193416, 0.0
actual,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04526748971193416, 0.04526748971193416, 0.0
getCurrent,SIMPLE_NAME, line no: 96,fDocument.get(),METHOD_INVOCATION, line no: 64, 0.04526748971193416, 0.04526748971193416, 0.0
getCurrent,SIMPLE_NAME, line no: 96,t1.getText().equals(t2.getText()),METHOD_INVOCATION, line no: 147, 0.04526748971193416, 0.04526748971193416, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04184100418410042, 0.04184100418410042, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04184100418410042, 0.04184100418410042, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04184100418410042, 0.0041841004184100415, 0.0
end,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.041666666666666664, 0.041666666666666664, 0.0
end,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.041666666666666664, 0.041666666666666664, 0.0
end,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.041666666666666664, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.041666666666666664, 0.041666666666666664, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.041666666666666664, 0.041666666666666664, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,current,SIMPLE_NAME, line no: 165, 0.041666666666666664, 0.004166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04149377593360996, 0.04149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04149377593360996, 0.04149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04149377593360996, 0.04149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04149377593360996, 0.04149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04149377593360996, 0.04149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04149377593360996, 0.04149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04149377593360996, 0.04149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04149377593360996, 0.04149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04149377593360996, 0.004149377593360996, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04132231404958678, 0.04132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04132231404958678, 0.04132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.04132231404958678, 0.04132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.04132231404958678, 0.04132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.04132231404958678, 0.004132231404958678, 0.0
actual,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.0411522633744856, 0.0411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.0411522633744856, 0.0411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.0411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,previousContent.put(fDocument fDocument.get()),METHOD_INVOCATION, line no: 64, 0.0411522633744856, 0.0411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Region(end 0),CLASS_INSTANCE_CREATION, line no: 109, 0.0411522633744856, 0.0411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,current,SIMPLE_NAME, line no: 165, 0.0411522633744856, 0.00411522633744856, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.03765690376569038, 0.03765690376569038, 0.0
end,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.0375, 0.0375, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.0375, 0.0375, 0.0
Math,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.03734439834024896, 0.03734439834024896, 0.0
max,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.03734439834024896, 0.03734439834024896, 0.0
end,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.03734439834024896, 0.03734439834024896, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.03734439834024896, 0.03734439834024896, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.0371900826446281, 0.0371900826446281, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.0371900826446281, 0.0371900826446281, 0.0
actual,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.037037037037037035, 0.037037037037037035, 0.0
getCurrent,SIMPLE_NAME, line no: 96,current=nextToken,ASSIGNMENT, line no: 192, 0.037037037037037035, 0.037037037037037035, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03347280334728033, 0.03347280334728033, 0.0
end,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03333333333333333, 0.03333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03333333333333333, 0.03333333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03319502074688797, 0.03319502074688797, 0.0
max,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03319502074688797, 0.03319502074688797, 0.0
end,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03319502074688797, 0.03319502074688797, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03319502074688797, 0.03319502074688797, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03305785123966942, 0.03305785123966942, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03305785123966942, 0.03305785123966942, 0.0
actual,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03292181069958848, 0.03292181069958848, 0.0
getCurrent,SIMPLE_NAME, line no: 96,cache,SIMPLE_NAME, line no: 59, 0.03292181069958848, 0.03292181069958848, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029288702928870293, 0.029288702928870293, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029288702928870293, 0.029288702928870293, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029288702928870293, 0.029288702928870293, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029288702928870293, 0.029288702928870293, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029288702928870293, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029288702928870293, 0.029288702928870293, 0.0
end,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029166666666666667, 0.029166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029166666666666667, 0.029166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029166666666666667, 0.029166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029166666666666667, 0.029166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029166666666666667, 0.029166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029166666666666667, 0.029166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029166666666666667, 0.029166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029166666666666667, 0.029166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029166666666666667, 0.029166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029166666666666667, 0.029166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
Math,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
Math,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
Math,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029045643153526972, 0.029045643153526972, 0.0
Math,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029045643153526972, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029045643153526972, 0.029045643153526972, 0.0
max,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
max,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
max,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
max,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029045643153526972, 0.029045643153526972, 0.0
max,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029045643153526972, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029045643153526972, 0.029045643153526972, 0.0
end,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
end,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
end,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
end,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029045643153526972, 0.029045643153526972, 0.0
end,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029045643153526972, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029045643153526972, 0.029045643153526972, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.029045643153526972, 0.029045643153526972, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.029045643153526972, 0.029045643153526972, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,from,SIMPLE_NAME, line no: 70, 0.029045643153526972, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.029045643153526972, 0.029045643153526972, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.028925619834710745, 0.028925619834710745, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.028925619834710745, 0.028925619834710745, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.028925619834710745, 0.028925619834710745, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.028925619834710745, 0.028925619834710745, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,from,SIMPLE_NAME, line no: 70, 0.028925619834710745, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.028925619834710745, 0.028925619834710745, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.028925619834710745, 0.028925619834710745, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.028925619834710745, 0.028925619834710745, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.028925619834710745, 0.028925619834710745, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.028925619834710745, 0.028925619834710745, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.028925619834710745, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.028925619834710745, 0.028925619834710745, 0.0
actual,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.02880658436213992, 0.02880658436213992, 0.0
actual,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.02880658436213992, 0.02880658436213992, 0.0
actual,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.02880658436213992, 0.02880658436213992, 0.0
actual,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.02880658436213992, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.02880658436213992, 0.02880658436213992, 0.0
getCurrent,SIMPLE_NAME, line no: 96,this.lexer=lexer,ASSIGNMENT, line no: 45, 0.02880658436213992, 0.02880658436213992, 0.0
getCurrent,SIMPLE_NAME, line no: 96,this.lexer,FIELD_ACCESS, line no: 45, 0.02880658436213992, 0.02880658436213992, 0.0
getCurrent,SIMPLE_NAME, line no: 96,this,THIS_EXPRESSION, line no: 45, 0.02880658436213992, 0.02880658436213992, 0.0
getCurrent,SIMPLE_NAME, line no: 96,cache.get(e),METHOD_INVOCATION, line no: 59, 0.02880658436213992, 0.02880658436213992, 0.0
getCurrent,SIMPLE_NAME, line no: 96,from,SIMPLE_NAME, line no: 70, 0.02880658436213992, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,computeTextChangeRegion,SIMPLE_NAME, line no: 71, 0.02880658436213992, 0.02880658436213992, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.02510460251046025, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.02510460251046025, 0.02510460251046025, 0.0
end,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.025, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.025, 0.025, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.025, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.025, 0.025, 0.0
Math,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024896265560165973, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024896265560165973, 0.024896265560165973, 0.0
max,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024896265560165973, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024896265560165973, 0.024896265560165973, 0.0
end,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024896265560165973, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024896265560165973, 0.024896265560165973, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024896265560165973, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024896265560165973, 0.024896265560165973, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024793388429752067, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024793388429752067, 0.024793388429752067, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024793388429752067, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024793388429752067, 0.024793388429752067, 0.0
actual,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024691358024691357, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024691358024691357, 0.024691358024691357, 0.0
getCurrent,SIMPLE_NAME, line no: 96,scanner,SIMPLE_NAME, line no: 43, 0.024691358024691357, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,computeTextChangeRegion(from),METHOD_INVOCATION, line no: 71, 0.024691358024691357, 0.024691358024691357, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02092050209205021, 0.02092050209205021, 0.0
end,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.020833333333333332, 0.020833333333333332, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.020833333333333332, 0.020833333333333332, 0.0
Math,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02074688796680498, 0.02074688796680498, 0.0
max,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02074688796680498, 0.02074688796680498, 0.0
end,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02074688796680498, 0.02074688796680498, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02074688796680498, 0.02074688796680498, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02066115702479339, 0.02066115702479339, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.02066115702479339, 0.02066115702479339, 0.0
actual,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.0205761316872428, 0.0205761316872428, 0.0
getCurrent,SIMPLE_NAME, line no: 96,nextToken=null,ASSIGNMENT, line no: 197, 0.0205761316872428, 0.0205761316872428, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016736401673640166, 0.016736401673640166, 0.0
end,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016666666666666666, 0.016666666666666666, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016666666666666666, 0.016666666666666666, 0.0
Math,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016597510373443983, 0.016597510373443983, 0.0
max,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016597510373443983, 0.016597510373443983, 0.0
end,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016597510373443983, 0.016597510373443983, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.016597510373443983, 0.016597510373443983, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.01652892561983471, 0.01652892561983471, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.01652892561983471, 0.01652892561983471, 0.0
actual,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.01646090534979424, 0.01646090534979424, 0.0
getCurrent,SIMPLE_NAME, line no: 96,UnsupportedOperationException,SIMPLE_NAME, line no: 202, 0.01646090534979424, 0.01646090534979424, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012552301255230125, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012552301255230125, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012552301255230125, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012552301255230125, 0.012552301255230125, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012552301255230125, 0.012552301255230125, 0.0
end,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.0125, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.0125, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.0125, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.0125, 0.0125, 0.0
end,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.0125, 0.0125, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.0125, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.0125, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.0125, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.0125, 0.0125, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.0125, 0.0125, 0.0
Math,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012448132780082987, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012448132780082987, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012448132780082987, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012448132780082987, 0.012448132780082987, 0.0
Math,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012448132780082987, 0.012448132780082987, 0.0
max,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012448132780082987, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012448132780082987, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012448132780082987, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012448132780082987, 0.012448132780082987, 0.0
max,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012448132780082987, 0.012448132780082987, 0.0
end,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012448132780082987, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012448132780082987, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012448132780082987, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012448132780082987, 0.012448132780082987, 0.0
end,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012448132780082987, 0.012448132780082987, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012448132780082987, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012448132780082987, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012448132780082987, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012448132780082987, 0.012448132780082987, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012448132780082987, 0.012448132780082987, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012396694214876033, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012396694214876033, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012396694214876033, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012396694214876033, 0.012396694214876033, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012396694214876033, 0.012396694214876033, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012396694214876033, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012396694214876033, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012396694214876033, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012396694214876033, 0.012396694214876033, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012396694214876033, 0.012396694214876033, 0.0
actual,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012345679012345678, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012345679012345678, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012345679012345678, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012345679012345678, 0.012345679012345678, 0.0
actual,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012345679012345678, 0.012345679012345678, 0.0
getCurrent,SIMPLE_NAME, line no: 96,DocumentEvent,SIMPLE_NAME, line no: 17, 0.012345679012345678, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,IRegion,SIMPLE_NAME, line no: 19, 0.012345679012345678, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Function,SIMPLE_NAME, line no: 26, 0.012345679012345678, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,false,BOOLEAN_LITERAL, line no: 183, 0.012345679012345678, 0.012345679012345678, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new UnsupportedOperationException(),CLASS_INSTANCE_CREATION, line no: 202, 0.012345679012345678, 0.012345679012345678, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008368200836820083, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008368200836820083, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008368200836820083, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008368200836820083, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008368200836820083, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008368200836820083, 0.008368200836820083, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008368200836820083, 0.008368200836820083, 0.0
end,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008333333333333333, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008333333333333333, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008333333333333333, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008333333333333333, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008333333333333333, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008333333333333333, 0.008333333333333333, 0.0
end,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008333333333333333, 0.008333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008333333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008333333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008333333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008333333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008333333333333333, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008333333333333333, 0.008333333333333333, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008333333333333333, 0.008333333333333333, 0.0
Math,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008298755186721992, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008298755186721992, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008298755186721992, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008298755186721992, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008298755186721992, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008298755186721992, 0.008298755186721992, 0.0
Math,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008298755186721992, 0.008298755186721992, 0.0
max,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008298755186721992, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008298755186721992, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008298755186721992, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008298755186721992, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008298755186721992, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008298755186721992, 0.008298755186721992, 0.0
max,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008298755186721992, 0.008298755186721992, 0.0
end,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008298755186721992, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008298755186721992, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008298755186721992, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008298755186721992, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008298755186721992, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008298755186721992, 0.008298755186721992, 0.0
end,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008298755186721992, 0.008298755186721992, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008298755186721992, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008298755186721992, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008298755186721992, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008298755186721992, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008298755186721992, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008298755186721992, 0.008298755186721992, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008298755186721992, 0.008298755186721992, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008264462809917356, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008264462809917356, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008264462809917356, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008264462809917356, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008264462809917356, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008264462809917356, 0.008264462809917356, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008264462809917356, 0.008264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.008264462809917356, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.008264462809917356, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.008264462809917356, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.008264462809917356, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.008264462809917356, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.008264462809917356, 0.008264462809917356, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.008264462809917356, 0.008264462809917356, 0.0
actual,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.00823045267489712, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.00823045267489712, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.00823045267489712, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.00823045267489712, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.00823045267489712, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.00823045267489712, 0.00823045267489712, 0.0
actual,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.00823045267489712, 0.00823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,WeakHashMap,SIMPLE_NAME, line no: 11, 0.00823045267489712, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Logger,SIMPLE_NAME, line no: 16, 0.00823045267489712, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,IDocument,SIMPLE_NAME, line no: 18, 0.00823045267489712, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,SimpleCache,SIMPLE_NAME, line no: 24, 0.00823045267489712, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,XtextDamagerRepairer,SIMPLE_NAME, line no: 35, 0.00823045267489712, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getLogger,SIMPLE_NAME, line no: 37, 0.00823045267489712, 0.00823045267489712, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ,CLASS_INSTANCE_CREATION, line no: 68, 0.00823045267489712, 0.00823045267489712, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,org,SIMPLE_NAME, line no: 8, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,core,SIMPLE_NAME, line no: 8, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,java,SIMPLE_NAME, line no: 10, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,util,SIMPLE_NAME, line no: 10, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,text,SIMPLE_NAME, line no: 17, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,com,SIMPLE_NAME, line no: 26, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,google,SIMPLE_NAME, line no: 26, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,common,SIMPLE_NAME, line no: 26, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,base,SIMPLE_NAME, line no: 26, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.0041841004184100415, 0.0041841004184100415, 0.0
end=Math.max(end actual.getCurrent().getStopIndex()),ASSIGNMENT, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.0041841004184100415, 0.0041841004184100415, 0.0
end,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004166666666666667, 0.004166666666666667, 0.0
end,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004166666666666667, 0.004166666666666667, 0.0
Math.max(end actual.getCurrent().getStopIndex()),METHOD_INVOCATION, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004166666666666667, 0.004166666666666667, 0.0
Math,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004149377593360996, 0.004149377593360996, 0.0
Math,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004149377593360996, 0.004149377593360996, 0.0
max,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004149377593360996, 0.004149377593360996, 0.0
end,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent().getStopIndex(),METHOD_INVOCATION, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004149377593360996, 0.004149377593360996, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004132231404958678, 0.004132231404958678, 0.0
actual.getCurrent(),METHOD_INVOCATION, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.004132231404958678, 0.004132231404958678, 0.0
getStopIndex,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.004132231404958678, 0.004132231404958678, 0.0
actual,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.00411522633744856, 0.00411522633744856, 0.0
actual,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,org,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,eclipse,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,xtext,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,ui,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,core,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,editor,SIMPLE_NAME, line no: 8, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,java,SIMPLE_NAME, line no: 10, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,util,SIMPLE_NAME, line no: 10, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Iterator,SIMPLE_NAME, line no: 10, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,antlr,SIMPLE_NAME, line no: 13, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,runtime,SIMPLE_NAME, line no: 13, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,apache,SIMPLE_NAME, line no: 16, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,log4j,SIMPLE_NAME, line no: 16, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,jface,SIMPLE_NAME, line no: 17, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,text,SIMPLE_NAME, line no: 17, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,ITypedRegion,SIMPLE_NAME, line no: 20, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,rules,SIMPLE_NAME, line no: 22, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,ITokenScanner,SIMPLE_NAME, line no: 22, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,parser,SIMPLE_NAME, line no: 23, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,com,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,google,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,common,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,base,SIMPLE_NAME, line no: 26, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,inject,SIMPLE_NAME, line no: 27, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Inject,SIMPLE_NAME, line no: 27, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Provider,SIMPLE_NAME, line no: 28, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,AbstractDamagerRepairer,SIMPLE_NAME, line no: 35, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Logger.getLogger(XtextDamagerRepairer.class),METHOD_INVOCATION, line no: 37, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,XtextDamagerRepairer.class,TYPE_LITERAL, line no: 37, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new WeakHashMap<IDocument String>(),CLASS_INSTANCE_CREATION, line no: 40, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,Override,SIMPLE_NAME, line no: 48, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,getDamageRegion,SIMPLE_NAME, line no: 55, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,new SimpleCache<DocumentEvent IRegion>(new Function<DocumentEvent IRegion>(){   public IRegion apply(  DocumentEvent from){     return computeTextChangeRegion(from);   }   private IRegion computeTextChangeRegion(  final DocumentEvent e){     if (e.getDocument().getLength() == 0)     return new Region(0 0);     String previousText=previousContent.get(e.getDocument());     if (previousText.length() == 0)     return new Region(0 e.getDocument().getLength());     int start=e.getOffset();     int end=Math.min(e.getDocument().getLength() e.getOffset() + e.getLength());     TokenIterator previous=iterator(previousText);     TokenIterator actual=iterator(e.getDocument().get());     while (previous.hasNext() && actual.hasNext() && equal(previous.next() actual.next())) {       if (actual.getCurrent().getStopIndex() >= start) {         start=actual.getCurrent().getStartIndex();         break;       }     }     end=Math.max(end actual.getCurrent().getStopIndex());     start=Math.min(start actual.getCurrent().getStartIndex());     int lengthDiff=e.getText().length() - e.getLength();     while (!inSync(previous actual lengthDiff)) {       if (!actual.hasNext()) {         if (equal(previous.getCurrent() actual.getCurrent())) {           return new Region(end 0);         }         return new Region(start actual.getCurrent().getStopIndex() + 1 - start);       }       end=actual.getCurrent().getStopIndex() + 1;       actual.next();       while (previous.getCurrent().getStartIndex() + lengthDiff < actual.getCurrent().getStartIndex()) {         if (!previous.hasNext()) {           return new Region(start e.getDocument().getLength() - start);         }         previous.next();       }     }     return new Region(start end - start);   }   /**   * @param previous  * @param actual  * @param lengthDiff  * @return  */   private boolean inSync(  TokenIterator previous   TokenIterator actual   int lengthDiff){     boolean equal=equal(previous.getCurrent() actual.getCurrent());     int prevIndex=previous.getCurrent().getStartIndex() + lengthDiff;     int startIndex=actual.getCurrent().getStartIndex();     return equal && prevIndex == startIndex;   }   /**   * @param t1  * @param t2  * @return  */   private boolean equal(  CommonToken t1   CommonToken t2){     return t1.getText().equals(t2.getText());   }   /**   * @param string  * @return  */   private TokenIterator iterator(  String string){     Lexer l=lexer.get();     l.setCharStream(new ANTLRStringStream(string));     return new TokenIterator(l);   } } ),CLASS_INSTANCE_CREATION, line no: 68, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,apply,SIMPLE_NAME, line no: 70, 0.00411522633744856, 0.00411522633744856, 0.0
getCurrent,SIMPLE_NAME, line no: 96,remove,SIMPLE_NAME, line no: 201, 0.00411522633744856, 0.00411522633744856, 0.0
