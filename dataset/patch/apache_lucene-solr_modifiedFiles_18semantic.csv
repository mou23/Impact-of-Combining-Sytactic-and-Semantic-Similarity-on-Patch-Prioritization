new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 2.0, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 2.0, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 2.0, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 2.0, 1.0, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,String,SIMPLE_NAME, line no: 69, 2.0, 0.1111111111111111, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name,SIMPLE_NAME, line no: 74, 2.0, 0.1111111111111111, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ord",STRING_LITERAL, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"literal",STRING_LITERAL, line no: 104, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"rord",STRING_LITERAL, line no: 110, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"top",STRING_LITERAL, line no: 117, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"linear",STRING_LITERAL, line no: 125, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"recip",STRING_LITERAL, line no: 134, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"scale",STRING_LITERAL, line no: 144, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"div",STRING_LITERAL, line no: 153, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"map",STRING_LITERAL, line no: 161, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"abs",STRING_LITERAL, line no: 173, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sum",STRING_LITERAL, line no: 190, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"add",STRING_LITERAL, line no: 197, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"product",STRING_LITERAL, line no: 199, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"mul",STRING_LITERAL, line no: 206, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sub",STRING_LITERAL, line no: 208, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"vector",STRING_LITERAL, line no: 226, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"query",STRING_LITERAL, line no: 232, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"boost",STRING_LITERAL, line no: 244, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"joindf",STRING_LITERAL, line no: 253, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f0,SIMPLE_NAME, line no: 256, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,qf,SIMPLE_NAME, line no: 257, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"geodist",STRING_LITERAL, line no: 262, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"hsin",STRING_LITERAL, line no: 264, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"geohash",STRING_LITERAL, line no: 317, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"strdist",STRING_LITERAL, line no: 327, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"field",STRING_LITERAL, line no: 352, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"rad",STRING_LITERAL, line no: 362, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"deg",STRING_LITERAL, line no: 368, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"log",STRING_LITERAL, line no: 386, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ln",STRING_LITERAL, line no: 392, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"exp",STRING_LITERAL, line no: 398, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sin",STRING_LITERAL, line no: 404, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cos",STRING_LITERAL, line no: 410, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"tan",STRING_LITERAL, line no: 416, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"asin",STRING_LITERAL, line no: 422, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"acos",STRING_LITERAL, line no: 428, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"atan",STRING_LITERAL, line no: 434, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sinh",STRING_LITERAL, line no: 440, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cosh",STRING_LITERAL, line no: 446, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"tanh",STRING_LITERAL, line no: 452, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ceil",STRING_LITERAL, line no: 458, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"floor",STRING_LITERAL, line no: 464, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"rint",STRING_LITERAL, line no: 470, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"pow",STRING_LITERAL, line no: 476, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"hypot",STRING_LITERAL, line no: 482, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"atan2",STRING_LITERAL, line no: 488, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"max",STRING_LITERAL, line no: 494, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"min",STRING_LITERAL, line no: 501, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"dist",STRING_LITERAL, line no: 518, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ms",STRING_LITERAL, line no: 527, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"pi",STRING_LITERAL, line no: 530, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"e",STRING_LITERAL, line no: 536, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ttf",STRING_LITERAL, line no: 559, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sttf",STRING_LITERAL, line no: 568, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"idf",STRING_LITERAL, line no: 570, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"tf",STRING_LITERAL, line no: 586, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"norm",STRING_LITERAL, line no: 594, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"true",STRING_LITERAL, line no: 616, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"false",STRING_LITERAL, line no: 623, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"exists",STRING_LITERAL, line no: 630, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"not",STRING_LITERAL, line no: 647, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"and",STRING_LITERAL, line no: 665, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"or",STRING_LITERAL, line no: 684, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"xor",STRING_LITERAL, line no: 703, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"if",STRING_LITERAL, line no: 725, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"def",STRING_LITERAL, line no: 736, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"NOW",STRING_LITERAL, line no: 841, 2.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,first,SIMPLE_NAME, line no: 858, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,second,SIMPLE_NAME, line no: 859, 2.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 2.0, 1.0, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 2.0, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 2.0, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 2.0, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 2.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 2.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 2.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 2.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 2.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 2.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 1.9, 0.7, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 1.9, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 1.9, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 1.9, 0.8, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,field,SIMPLE_NAME, line no: 100, 1.8888888888888888, 0.6666666666666666, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 1.8888888888888888, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 1.8888888888888888, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distClass,SIMPLE_NAME, line no: 333, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"jw",STRING_LITERAL, line no: 336, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"edit",STRING_LITERAL, line no: 338, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ngram",STRING_LITERAL, line no: 340, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 1.8888888888888888, 0.6666666666666666, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 1.8888888888888888, 0.6666666666666666, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,val,SIMPLE_NAME, line no: 548, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg,SIMPLE_NAME, line no: 839, 1.8888888888888888, 0.1111111111111111, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,toString,SIMPLE_NAME, line no: 979, 1.8888888888888888, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 1.8888888888888888, 0.8888888888888888, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 1.875, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 1.875, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 1.875, 0.875, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 1.875, 0.875, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 1.875, 0.625, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 1.875, 0.625, 1.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 1.8, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 1.8, 0.3, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 1.8, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 1.8, 0.8, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseId,SIMPLE_NAME, line no: 100, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,description,SIMPLE_NAME, line no: 951, 1.7777777777777777, 0.1111111111111111, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,")",STRING_LITERAL, line no: 952, 1.7777777777777777, 0.3333333333333333, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"(",STRING_LITERAL, line no: 1107, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107," ",STRING_LITERAL, line no: 1107, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107," request=",STRING_LITERAL, line no: 1229, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"null",STRING_LITERAL, line no: 1229, 1.7777777777777777, 0.7777777777777778, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 1.75, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 1.75, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 1.75, 0.75, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 1.75, 0.75, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 1.7, 0.7, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 1.6666666666666665, 0.6666666666666666, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 1.6, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 1.6, 0.1, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 1.6, 0.6, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 1.6, 0.6, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source,SIMPLE_NAME, line no: 85, 1.5555555555555556, 0.1111111111111111, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest,SIMPLE_NAME, line no: 85, 1.5555555555555556, 0.1111111111111111, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,text,SIMPLE_NAME, line no: 762, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 1.5555555555555556, 0.5555555555555556, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 1.5, 0.5, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.5, 1.0, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.5, 1.0, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.5, 1.0, 0.5, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 1.5, 0.5, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 1.5, 0.5, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 1.5, 0.5, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 1.3888888888888888, 0.7777777777777778, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 1.375, 0.75, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.3333333333333333, 1.0, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"const(",STRING_LITERAL, line no: 952, 1.3333333333333333, 0.3333333333333333, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 1.3, 0.3, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 1.3, 0.3, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.25, 1.0, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.25, 1.0, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.222222222222222, 0.8888888888888888, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 1.222222222222222, 0.8888888888888888, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 1.222222222222222, 0.8888888888888888, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.2083333333333333, 0.875, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 1.2083333333333333, 0.875, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 1.2083333333333333, 0.875, 0.3333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.2, 1.0, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.2, 1.0, 0.2, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.2, 1.0, 0.2, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 1.2, 0.2, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 1.2, 0.2, 1.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.1666666666666667, 1.0, 0.16666666666666666, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 1.1666666666666665, 0.6666666666666666, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.1428571428571428, 1.0, 0.14285714285714285, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.1428571428571428, 1.0, 0.14285714285714285, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.1428571428571428, 1.0, 0.14285714285714285, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.1428571428571428, 1.0, 0.14285714285714285, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.1388888888888888, 0.8888888888888888, 0.25, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.125, 1.0, 0.125, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.125, 1.0, 0.125, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 1.125, 0.625, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 1.125, 0.875, 0.25, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.125, 1.0, 0.125, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.125, 1.0, 0.125, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.0833333333333333, 1.0, 0.08333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0833333333333333, 1.0, 0.08333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.0833333333333333, 1.0, 0.08333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0833333333333333, 1.0, 0.08333333333333333, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,String,SIMPLE_NAME, line no: 69, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name,SIMPLE_NAME, line no: 74, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source,SIMPLE_NAME, line no: 85, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ord",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,field,SIMPLE_NAME, line no: 100, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"literal",STRING_LITERAL, line no: 104, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rord",STRING_LITERAL, line no: 110, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"top",STRING_LITERAL, line no: 117, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"linear",STRING_LITERAL, line no: 125, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"recip",STRING_LITERAL, line no: 134, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"scale",STRING_LITERAL, line no: 144, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,min,SIMPLE_NAME, line no: 148, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"div",STRING_LITERAL, line no: 153, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"map",STRING_LITERAL, line no: 161, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,target,SIMPLE_NAME, line no: 167, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,def,SIMPLE_NAME, line no: 168, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,null,NULL_LITERAL, line no: 168, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"abs",STRING_LITERAL, line no: 173, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func,SIMPLE_NAME, line no: 184, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sum",STRING_LITERAL, line no: 190, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"add",STRING_LITERAL, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"product",STRING_LITERAL, line no: 199, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"mul",STRING_LITERAL, line no: 206, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sub",STRING_LITERAL, line no: 208, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"vector",STRING_LITERAL, line no: 226, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"query",STRING_LITERAL, line no: 232, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 1.0, 0.5, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"boost",STRING_LITERAL, line no: 244, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"joindf",STRING_LITERAL, line no: 253, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f0,SIMPLE_NAME, line no: 256, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,qf,SIMPLE_NAME, line no: 257, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"geodist",STRING_LITERAL, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"hsin",STRING_LITERAL, line no: 264, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"geohash",STRING_LITERAL, line no: 317, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"strdist",STRING_LITERAL, line no: 327, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 1.0, 0.5, 0.5, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"field",STRING_LITERAL, line no: 352, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rad",STRING_LITERAL, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"deg",STRING_LITERAL, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"log",STRING_LITERAL, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ln",STRING_LITERAL, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"exp",STRING_LITERAL, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sin",STRING_LITERAL, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cos",STRING_LITERAL, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tan",STRING_LITERAL, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"asin",STRING_LITERAL, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"acos",STRING_LITERAL, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"atan",STRING_LITERAL, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sinh",STRING_LITERAL, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cosh",STRING_LITERAL, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tanh",STRING_LITERAL, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ceil",STRING_LITERAL, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"floor",STRING_LITERAL, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rint",STRING_LITERAL, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"pow",STRING_LITERAL, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"hypot",STRING_LITERAL, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"atan2",STRING_LITERAL, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"max",STRING_LITERAL, line no: 494, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"min",STRING_LITERAL, line no: 501, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"dist",STRING_LITERAL, line no: 518, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,power,SIMPLE_NAME, line no: 521, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ms",STRING_LITERAL, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"pi",STRING_LITERAL, line no: 530, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"e",STRING_LITERAL, line no: 536, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,val,SIMPLE_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ttf",STRING_LITERAL, line no: 559, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sttf",STRING_LITERAL, line no: 568, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"idf",STRING_LITERAL, line no: 570, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tf",STRING_LITERAL, line no: 586, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"norm",STRING_LITERAL, line no: 594, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"true",STRING_LITERAL, line no: 616, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"false",STRING_LITERAL, line no: 623, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"exists",STRING_LITERAL, line no: 630, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"not",STRING_LITERAL, line no: 647, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"and",STRING_LITERAL, line no: 665, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"or",STRING_LITERAL, line no: 684, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"xor",STRING_LITERAL, line no: 703, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"if",STRING_LITERAL, line no: 725, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"def",STRING_LITERAL, line no: 736, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.0, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"NOW",STRING_LITERAL, line no: 841, 1.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first,SIMPLE_NAME, line no: 858, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,second,SIMPLE_NAME, line no: 859, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.0, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 1.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.0, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 1.0, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 1.0, 1.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,min,SIMPLE_NAME, line no: 148, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,target,SIMPLE_NAME, line no: 167, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,def,SIMPLE_NAME, line no: 168, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,null,NULL_LITERAL, line no: 168, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,func,SIMPLE_NAME, line no: 184, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,power,SIMPLE_NAME, line no: 521, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.0, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getString,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 1.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp,SIMPLE_NAME, line no: 66, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 1.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 1.0, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 1.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 1.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 1.0, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 1.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 1.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 1.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.9444444444444444, 0.4444444444444444, 0.5, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.9444444444444444, 0.4444444444444444, 0.5, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.9, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.9, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.9, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 0.9, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.9, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.9, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.9, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.9, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.9, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.9, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.9, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.9, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.9, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.9, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.9, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.9, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.9, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.9, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.9, 0.9, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,List,SIMPLE_NAME, line no: 193, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,one,SIMPLE_NAME, line no: 275, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,two,SIMPLE_NAME, line no: 276, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.8888888888888888, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,req,SIMPLE_NAME, line no: 347, 0.8888888888888888, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f,SIMPLE_NAME, line no: 357, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.8888888888888888, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.8888888888888888, 0.5555555555555556, 0.3333333333333333, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.8888888888888888, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,context,SIMPLE_NAME, line no: 956, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.8888888888888888, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.8888888888888888, 0.8888888888888888, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,List,SIMPLE_NAME, line no: 193, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one,SIMPLE_NAME, line no: 275, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,two,SIMPLE_NAME, line no: 276, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.875, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.875, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,req,SIMPLE_NAME, line no: 347, 0.875, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.875, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f,SIMPLE_NAME, line no: 357, 0.875, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.875, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.875, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.875, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,E,SIMPLE_NAME, line no: 539, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.875, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context,SIMPLE_NAME, line no: 956, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.875, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.875, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.8333333333333333, 0.5, 0.3333333333333333, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.8, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.8, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.8, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.8, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.8, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.8, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.8, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.8, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.8, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.8, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.8, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.8, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.8, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.8, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.8, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.8, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.8, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.8, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.8, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.8, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.8, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.8, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.8, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.8, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.8, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.8, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.8, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.8, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.8, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.8, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.8, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.8, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.8, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.8, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.8, 0.8, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,p,SIMPLE_NAME, line no: 74, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,put,SIMPLE_NAME, line no: 75, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,get,SIMPLE_NAME, line no: 86, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,add,SIMPLE_NAME, line no: 281, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,log,SIMPLE_NAME, line no: 395, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,E,SIMPLE_NAME, line no: 539, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,length,SIMPLE_NAME, line no: 764, 0.7777777777777778, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,df,SIMPLE_NAME, line no: 833, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o,SIMPLE_NAME, line no: 991, 0.7777777777777778, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,other,SIMPLE_NAME, line no: 993, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.7777777777777778, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.7777777777777778, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.7777777777777778, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.7777777777777778, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.7555555555555555, 0.5555555555555556, 0.2, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p,SIMPLE_NAME, line no: 74, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,put,SIMPLE_NAME, line no: 75, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,get,SIMPLE_NAME, line no: 86, 0.75, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,add,SIMPLE_NAME, line no: 281, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,log,SIMPLE_NAME, line no: 395, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,length,SIMPLE_NAME, line no: 764, 0.75, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df,SIMPLE_NAME, line no: 833, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.75, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description,SIMPLE_NAME, line no: 951, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,")",STRING_LITERAL, line no: 952, 0.75, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o,SIMPLE_NAME, line no: 991, 0.75, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other,SIMPLE_NAME, line no: 993, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.75, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.75, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107," ",STRING_LITERAL, line no: 1107, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.75, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.75, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.7, 0.5, 0.2, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.7, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.7, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.7, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.7, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.7, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.7, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.7, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.7, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.7, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.7, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.7, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.7, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.7, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.7, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.7, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.7, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.7, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.7, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.7, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.7, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.7, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.7, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.7, 0.7, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.6666666666666666, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.6666666666666666, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.6666666666666666, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.6666666666666666, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.6666666666666666, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.6666666666666666, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.625, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.625, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.625, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.625, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.625, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.625, 0.125, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.6, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.6, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.6, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.6, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.6, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.6, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.6, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.6, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.6, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.6, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.6, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.6, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.6, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.6, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.6, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.6, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.6, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.6, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.6, 0.6, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,term,SIMPLE_NAME, line no: 760, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i,SIMPLE_NAME, line no: 774, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.5555555555555556, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.5555555555555556, 0.1111111111111111, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term,SIMPLE_NAME, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,text,SIMPLE_NAME, line no: 762, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i,SIMPLE_NAME, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.5, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.5, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.5, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.5, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.5, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.5, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.5, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.5, 0.5, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.5, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.5, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.5, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.5, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.5, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.5, 0.5, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.5, 0.1, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.4444444444444444, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.4444444444444444, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.4444444444444444, 0.4444444444444444, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.4, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.4, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.4, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.4, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.4, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.4, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.4, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.4, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.4, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.4, 0.4, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.375, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.375, 0.375, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.3, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.3, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.3, 0.3, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.25, 0.25, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.25, 0.25, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.25, 0.25, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.25, 0.25, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.25, 0.25, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.25, 0.25, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.2222222222222222, 0.2222222222222222, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.2222222222222222, 0.2222222222222222, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.2222222222222222, 0.2222222222222222, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.2222222222222222, 0.2222222222222222, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.2222222222222222, 0.2222222222222222, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.2222222222222222, 0.2222222222222222, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.2, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.2, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.2, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.2, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.2, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.2, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.2, 0.2, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.2, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.2, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.2, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.2, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.2, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.2, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.2, 0.2, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.2, 0.2, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.2, 0.2, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.2, 0.2, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.2, 0.2, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org,SIMPLE_NAME, line no: 17, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,search,SIMPLE_NAME, line no: 17, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,index,SIMPLE_NAME, line no: 19, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,function,SIMPLE_NAME, line no: 21, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,util,SIMPLE_NAME, line no: 37, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,common,SIMPLE_NAME, line no: 39, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,request,SIMPLE_NAME, line no: 41, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java,SIMPLE_NAME, line no: 47, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,io,SIMPLE_NAME, line no: 47, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,init,SIMPLE_NAME, line no: 58, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,args,SIMPLE_NAME, line no: 58, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.125, 0.125, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.125, 0.125, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org,SIMPLE_NAME, line no: 17, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,search,SIMPLE_NAME, line no: 17, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,index,SIMPLE_NAME, line no: 19, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,function,SIMPLE_NAME, line no: 21, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,util,SIMPLE_NAME, line no: 37, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,common,SIMPLE_NAME, line no: 39, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,request,SIMPLE_NAME, line no: 41, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,io,SIMPLE_NAME, line no: 47, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,init,SIMPLE_NAME, line no: 58, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,args,SIMPLE_NAME, line no: 58, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.1111111111111111, 0.1111111111111111, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.1, 0.1, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.0, 0.0
