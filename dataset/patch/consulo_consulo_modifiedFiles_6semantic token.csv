FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 2.625, 1.0, 1.0, 0.0, 0.625
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 2.5795454545454546, 0.9545454545454546, 1.0, 0.0, 0.625
i >= minFragment,INFIX_EXPRESSION, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 2.5047619047619047, 0.9047619047619048, 1.0, 0.0, 0.6
TextRange,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 2.5, 1.0, 1.0, 0.0, 0.5
nameIndex,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 2.5, 1.0, 1.0, 0.0, 0.5
nameIndex,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 2.5, 1.0, 1.0, 0.0, 0.5
TextRange,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 2.4583333333333335, 0.9583333333333334, 1.0, 0.0, 0.5
i,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 2.4130434782608696, 0.782608695652174, 1.0, 0.0, 0.5
i,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 2.409090909090909, 0.7727272727272727, 1.0, 0.0, 0.5
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 2.3939393939393936, 1.0, 0.6666666666666666, 0.0, 0.7272727272727273
i,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 2.369565217391304, 0.8695652173913043, 1.0, 0.0, 0.5
i,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 2.3636363636363638, 0.8636363636363636, 1.0, 0.0, 0.5
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 2.346320346320346, 0.9523809523809523, 0.6666666666666666, 0.0, 0.7272727272727273
minFragment,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 2.3333333333333335, 1.0, 1.0, 0.0, 0.3333333333333333
nameIndex,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 2.3333333333333335, 1.0, 1.0, 0.0, 0.3333333333333333
nameIndex,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 2.3333333333333335, 0.043478260869565216, 1.0, 0.0, 0.3333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 2.2727272727272725, 1.0, 1.0, 0.0, 0.2727272727272727
i,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 2.25, 1.0, 1.0, 0.0, 0.25
i,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 2.25, 1.0, 1.0, 0.0, 0.25
minFragment,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 2.25, 1.0, 1.0, 0.0, 0.25
i,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 2.25, 1.0, 1.0, 0.0, 0.25
i,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 2.25, 1.0, 1.0, 0.0, 0.25
nameIndex,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 2.2222222222222223, 1.0, 1.0, 0.0, 0.2222222222222222
emptyList,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 2.2028985507246377, 0.30434782608695654, 1.0, 0.0, 0.3333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 2.2, 0.36363636363636365, 1.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 2.2, 0.045454545454545456, 1.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 2.2, 1.0, 1.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 2.2, 0.9565217391304348, 1.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 2.2, 1.0, 1.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 2.2, 1.0, 1.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 2.2, 1.0, 1.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 2.176470588235294, 1.0, 1.0, 0.0, 0.17647058823529413
nameIndex,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 2.1666666666666665, 1.0, 1.0, 0.0, 0.16666666666666666
TextRange,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 2.1630434782608696, 0.9130434782608695, 1.0, 0.0, 0.25
nameIndex,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 2.1594202898550727, 0.8260869565217391, 1.0, 0.0, 0.3333333333333333
emptyList,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 2.1565217391304348, 0.9565217391304348, 1.0, 0.0, 0.2
TextRange,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 2.1565217391304348, 0.9565217391304348, 1.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 2.142857142857143, 1.0, 1.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 2.128205128205128, 1.0, 0.6666666666666666, 0.0, 0.46153846153846156
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 2.128205128205128, 1.0, 0.6666666666666666, 0.0, 0.46153846153846156
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 2.125, 0.38095238095238093, 1.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 2.125, 0.875, 1.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 2.121212121212121, 1.0, 0.6666666666666666, 0.0, 0.45454545454545453
TextRange,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 2.1166666666666667, 0.9166666666666666, 1.0, 0.0, 0.2
minFragment,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 2.1136363636363638, 0.8636363636363636, 1.0, 0.0, 0.25
minFragment,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.111111111111111, 1.0, 1.0, 0.0, 0.1111111111111111
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,from,SIMPLE_NAME, line no: 54, 2.1, 0.045454545454545456, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,range,SIMPLE_NAME, line no: 73, 2.1, 1.0, 1.0, 0.0, 0.1
nameIndex,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 2.1, 1.0, 1.0, 0.0, 0.1
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 2.090909090909091, 0.4, 1.0, 0.0, 0.09090909090909091
minFragment,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0833333333333335, 1.0, 1.0, 0.0, 0.08333333333333333
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 2.08, 1.0, 1.0, 0.0, 0.08
minFragment,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 2.076923076923077, 1.0, 1.0, 0.0, 0.07692307692307693
nameIndex,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 2.076923076923077, 1.0, 1.0, 0.0, 0.07692307692307693
nameIndex,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 2.0695652173913044, 0.8695652173913043, 1.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,prepend,SIMPLE_NAME, line no: 57, 2.0625, 0.7142857142857143, 1.0, 0.0, 0.0625
from,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 2.0565217391304347, 0.9565217391304348, 1.0, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 2.0555555555555554, 1.0, 0.6666666666666666, 0.0, 0.3888888888888889
nameIndex,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 2.05175983436853, 0.9565217391304348, 1.0, 0.0, 0.09523809523809523
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,prepend,SIMPLE_NAME, line no: 57, 2.0454545454545454, 0.7, 1.0, 0.0, 0.045454545454545456
minFragment,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0416666666666665, 1.0, 1.0, 0.0, 0.041666666666666664
nameIndex,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0416666666666665, 1.0, 1.0, 0.0, 0.041666666666666664
minFragment,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 2.04, 1.0, 1.0, 0.0, 0.04
nameIndex,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 2.04, 1.0, 1.0, 0.0, 0.04
emptyList,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 2.0380434782608696, 0.9130434782608695, 1.0, 0.0, 0.125
from,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 2.0380434782608696, 0.9130434782608695, 1.0, 0.0, 0.125
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 2.0303030303030303, 0.9090909090909091, 0.6666666666666666, 0.0, 0.45454545454545453
prepend,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 2.0170454545454546, 0.9545454545454546, 1.0, 0.0, 0.0625
prepend,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 2.0090909090909093, 0.9090909090909091, 1.0, 0.0, 0.1
nameIndex,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 2.007905138339921, 0.8260869565217391, 1.0, 0.0, 0.18181818181818182
i >= minFragment,INFIX_EXPRESSION, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 2.0, 1.0, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 2.0, 1.0, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,space,SIMPLE_NAME, line no: 157, 2.0, 0.9523809523809523, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 2.0, 0.9523809523809523, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 2.0, 1.0, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 2.0, 0.7727272727272727, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 2.0, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 2.0, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 2.0, 0.9090909090909091, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 2.0, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 2.0, 0.045454545454545456, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 2.0, 0.045454545454545456, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 2.0, 0.9545454545454546, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 2.0, 0.7727272727272727, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 2.0, 0.7727272727272727, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 2.0, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 2.0, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 2.0, 0.9090909090909091, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 2.0, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 2.0, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 2.0, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 2.0, 0.9545454545454546, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 2.0, 1.0, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 2.0, 1.0, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 2.0, 0.36363636363636365, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,first,SIMPLE_NAME, line no: 70, 2.0, 1.0, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 2.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 2.0, 1.0, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 2.0, 0.043478260869565216, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 2.0, 1.0, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 2.0, 0.9130434782608695, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 2.0, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 2.0, 0.782608695652174, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 2.0, 0.9130434782608695, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 2.0, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 2.0, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 2.0, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 2.0, 0.9565217391304348, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 2.0, 1.0, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.9824561403508771, 1.0, 0.6666666666666666, 0.0, 0.3157894736842105
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.9695652173913043, 0.8695652173913043, 1.0, 0.0, 0.1
i,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.9695652173913043, 0.8695652173913043, 1.0, 0.0, 0.1
i,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.9636363636363638, 0.8636363636363636, 1.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.9636363636363638, 0.045454545454545456, 0.0, 0.0, 0.1
emptyList,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 1.960474308300395, 0.8695652173913043, 1.0, 0.0, 0.09090909090909091
TextRange,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.9583333333333335, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.9583333333333335, 0.9583333333333334, 1.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 1.9565217391304348, 0.6521739130434783, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.9565217391304348, 0.9565217391304348, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.9545454545454546, 0.9545454545454546, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.9545454545454546, 0.8636363636363636, 1.0, 0.0, 0.09090909090909091
minFragment,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.9545454545454546, 0.9545454545454546, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,prepend,SIMPLE_NAME, line no: 57, 1.9545454545454546, 0.6818181818181818, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 1.9545454545454546, 0.045454545454545456, 1.0, 0.0, 0.5
prepend,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 1.9545454545454546, 0.9090909090909091, 1.0, 0.0, 0.045454545454545456
prepend,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.9545454545454546, 0.9545454545454546, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 1.9523809523809523, 0.7619047619047619, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 1.9523809523809523, 0.5238095238095238, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 1.9523809523809523, 0.14285714285714285, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.9318181818181817, 0.6818181818181818, 1.0, 0.0, 0.25
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.9196428571428572, 0.047619047619047616, 0.0, 0.0, 0.0625
nameIndex,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.91699604743083, 0.8260869565217391, 1.0, 0.0, 0.09090909090909091
i,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.91699604743083, 0.8260869565217391, 1.0, 0.0, 0.09090909090909091
emptyList,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 1.9130434782608696, 0.043478260869565216, 1.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 1.9130434782608696, 0.782608695652174, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.9130434782608696, 0.043478260869565216, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.9130434782608696, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 1.9130434782608696, 0.9130434782608695, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.9090909090909092, 0.045454545454545456, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 1.9090909090909092, 0.7727272727272727, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.9090909090909092, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ranges,SIMPLE_NAME, line no: 54, 1.9090909090909092, 0.045454545454545456, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 1.9090909090909092, 0.045454545454545456, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 1.9090909090909092, 0.3181818181818182, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,head,SIMPLE_NAME, line no: 55, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,getHead,SIMPLE_NAME, line no: 55, 1.9090909090909092, 0.9090909090909091, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 1.9047619047619047, 0.7619047619047619, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ranges,SIMPLE_NAME, line no: 54, 1.9047619047619047, 0.047619047619047616, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.9021739130434783, 0.6521739130434783, 1.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ranges,SIMPLE_NAME, line no: 54, 1.9, 0.05, 1.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.8954545454545455, 0.05, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.8934782608695653, 0.85, 1.0, 0.0, 0.043478260869565216
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 1.8816425120772948, 0.8260869565217391, 1.0, 0.0, 0.05555555555555555
TextRange,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 1.875, 0.875, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.875, 0.875, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 1.875, 0.875, 1.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.8695652173913042, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 1.8695652173913042, 0.30434782608695654, 1.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.8695652173913042, 0.8260869565217391, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 1.8695652173913042, 0.6956521739130435, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 1.8695652173913042, 0.782608695652174, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 1.8695652173913042, 0.043478260869565216, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 1.8695652173913042, 0.6956521739130435, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 1.8695652173913042, 0.782608695652174, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 1.8695652173913042, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 1.8695652173913042, 0.8695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 1.8636363636363638, 0.6363636363636364, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 1.8636363636363638, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 1.8636363636363638, 0.6363636363636364, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 1.8636363636363638, 0.045454545454545456, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 1.8636363636363638, 0.3181818181818182, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.8636363636363638, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 1.8636363636363638, 0.3181818181818182, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.8636363636363638, 0.8636363636363636, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 1.8571428571428572, 0.047619047619047616, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 1.8571428571428572, 0.5238095238095238, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 1.8571428571428572, 0.8571428571428571, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 1.8571428571428572, 0.3333333333333333, 1.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 1.85, 0.35, 1.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.8484848484848484, 1.0, 0.6666666666666666, 0.0, 0.18181818181818182
nameIndex,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 1.8352402745995422, 0.782608695652174, 1.0, 0.0, 0.05263157894736842
TextRange,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.8260869565217392, 0.8260869565217391, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,next,SIMPLE_NAME, line no: 116, 1.8181818181818183, 0.8181818181818182, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 1.8095238095238095, 0.8095238095238095, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 1.8095238095238095, 0.8095238095238095, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.8095238095238095, 0.8095238095238095, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.8060200668896322, 0.6521739130434783, 1.0, 0.0, 0.15384615384615385
i,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.8041958041958042, 0.7272727272727273, 1.0, 0.0, 0.07692307692307693
i >= minFragment,INFIX_EXPRESSION, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 1.800865800865801, 0.9523809523809523, 0.6666666666666666, 0.0, 0.18181818181818182
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.797101449275362, 1.0, 0.6666666666666666, 0.0, 0.13043478260869565
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.7916666666666667, 1.0, 0.5, 0.0, 0.2916666666666667
TextRange,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 1.7916666666666665, 0.7916666666666666, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 1.7916666666666665, 0.7916666666666666, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 1.7826086956521738, 0.782608695652174, 1.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 1.7753623188405798, 0.6086956521739131, 1.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.7727272727272727, 0.7727272727272727, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.7727272727272727, 0.7727272727272727, 1.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 1.7619047619047619, 0.7619047619047619, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.7619047619047619, 0.9545454545454546, 0.3333333333333333, 0.0, 0.42857142857142855
TextRange,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 1.7500000000000002, 0.5833333333333334, 1.0, 0.0, 0.16666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.75, 1.0, 0.3333333333333333, 0.0, 0.4166666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 1.7484848484848485, 0.9, 0.6666666666666666, 0.0, 0.18181818181818182
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.74, 1.0, 0.5, 0.0, 0.24
emptyList,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.7391304347826086, 0.7391304347826086, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.7333333333333334, 1.0, 0.3333333333333333, 0.0, 0.4
i,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.7290969899665551, 0.6521739130434783, 1.0, 0.0, 0.07692307692307693
minFragment,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.7272727272727273, 0.7272727272727273, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,getTail,SIMPLE_NAME, line no: 57, 1.7272727272727273, 0.7272727272727273, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 1.7272727272727273, 0.7272727272727273, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.7181818181818183, 0.8181818181818182, 0.5, 0.0, 0.4
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,getTail,SIMPLE_NAME, line no: 57, 1.7142857142857144, 0.7142857142857143, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.7083333333333333, 1.0, 0.3333333333333333, 0.0, 0.375
prepend,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 1.703030303030303, 0.6363636363636364, 1.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,getTail,SIMPLE_NAME, line no: 57, 1.7, 0.7, 1.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 1.6956521739130435, 0.6956521739130435, 1.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 1.6956521739130435, 0.6956521739130435, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 1.6920289855072463, 0.6086956521739131, 1.0, 0.0, 0.08333333333333333
minFragment,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.6818181818181817, 0.6818181818181818, 1.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 1.6818181818181817, 0.6818181818181818, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.6666666666666667, 1.0, 0.5, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.6666666666666665, 1.0, 0.3333333333333333, 0.0, 0.3333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 1.6590909090909092, 0.4090909090909091, 0.6666666666666666, 0.0, 0.5833333333333334
emptyList,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 1.6521739130434783, 0.6521739130434783, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 1.6521739130434783, 0.6521739130434783, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.6521739130434783, 0.6521739130434783, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 1.6521739130434783, 0.6521739130434783, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.6428571428571428, 0.8571428571428571, 0.5, 0.0, 0.2857142857142857
prepend,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 1.6363636363636362, 0.6363636363636364, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.6333333333333333, 0.9523809523809523, 0.3333333333333333, 0.0, 0.3
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 1.6288515406162465, 0.9523809523809523, 0.5, 0.0, 0.17647058823529413
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.6274509803921569, 1.0, 0.3333333333333333, 0.0, 0.29411764705882354
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.625, 1.0, 0.0, 0.0, 0.625
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 1.6212121212121213, 0.9545454545454546, 0.5, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.619047619047619, 1.0, 0.3333333333333333, 0.0, 0.2857142857142857
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.6111111111111112, 1.0, 0.5, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.6111111111111112, 1.0, 0.3333333333333333, 0.0, 0.2777777777777778
emptyList,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 1.608695652173913, 0.6086956521739131, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.6071428571428572, 1.0, 0.25, 0.0, 0.35714285714285715
i >= minFragment,INFIX_EXPRESSION, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 1.6047619047619046, 0.7619047619047619, 0.5, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 1.6032608695652173, 0.4782608695652174, 1.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 1.6011904761904763, 0.047619047619047616, 1.0, 0.0, 0.125
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 1.596969696969697, 0.8636363636363636, 0.4, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 1.5909090909090908, 0.05, 1.0, 0.0, 0.09090909090909091
i,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 1.5909090909090908, 0.5909090909090909, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 1.5909090909090908, 0.5909090909090909, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.5833333333333333, 1.0, 0.25, 0.0, 0.3333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 1.5795454545454546, 0.9545454545454546, 0.0, 0.0, 0.625
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.5773809523809523, 1.0, 0.2857142857142857, 0.0, 0.2916666666666667
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 1.5681818181818183, 0.8181818181818182, 0.5, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 1.5681818181818183, 0.8181818181818182, 0.3333333333333333, 0.0, 0.4166666666666667
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.5681818181818183, 0.8181818181818182, 0.3333333333333333, 0.0, 0.4166666666666667
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 1.5658263305322127, 0.42857142857142855, 0.6666666666666666, 0.0, 0.47058823529411764
i >= minFragment,INFIX_EXPRESSION, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 1.5571428571428572, 0.8571428571428571, 0.5, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 1.5547619047619048, 0.9047619047619048, 0.4, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 1.5541125541125542, 0.8636363636363636, 0.3333333333333333, 0.0, 0.35714285714285715
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.5507246376811594, 1.0, 0.3333333333333333, 0.0, 0.21739130434782608
i,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 1.5454545454545454, 0.5454545454545454, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 1.5454545454545454, 0.5454545454545454, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 1.5454545454545454, 0.045454545454545456, 1.0, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 1.5454545454545454, 0.9090909090909091, 0.0, 0.0, 0.6363636363636364
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.5449735449735449, 1.0, 0.2857142857142857, 0.0, 0.25925925925925924
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 1.5318181818181817, 0.6818181818181818, 0.5, 0.0, 0.35
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.5303030303030303, 0.8636363636363636, 0.3333333333333333, 0.0, 0.3333333333333333
prepend,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 1.5202020202020203, 0.4090909090909091, 1.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.519047619047619, 1.0, 0.2857142857142857, 0.0, 0.23333333333333334
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.5092592592592593, 1.0, 0.25, 0.0, 0.25925925925925924
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 1.5062656641604009, 0.8571428571428571, 0.3333333333333333, 0.0, 0.3157894736842105
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 1.5045454545454546, 0.9545454545454546, 0.25, 0.0, 0.3
i >= minFragment,INFIX_EXPRESSION, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.5, 1.0, 0.0, 0.0, 0.5
i,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 1.5, 0.5, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.5, 0.9545454545454546, 0.0, 0.0, 0.5
minFragment,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 1.5, 0.5, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.5, 1.0, 0.25, 0.0, 0.25
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.5, 1.0, 0.25, 0.0, 0.25
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.5, 1.0, 0.25, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 1.5, 0.7727272727272727, 0.5, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.5, 1.0, 0.3333333333333333, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.5, 0.043478260869565216, 0.0, 0.0, 0.5
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.4859943977591037, 0.8095238095238095, 0.5, 0.0, 0.17647058823529413
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 1.4835164835164836, 0.7142857142857143, 0.5, 0.0, 0.2692307692307692
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 1.4826839826839828, 0.8636363636363636, 0.3333333333333333, 0.0, 0.2857142857142857
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.4807692307692308, 0.95, 0.25, 0.0, 0.23076923076923078
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.4807692307692308, 1.0, 0.25, 0.0, 0.23076923076923078
nameIndex,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 1.4782608695652173, 0.4782608695652174, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 1.4782608695652173, 0.4782608695652174, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 1.4782608695652173, 0.4782608695652174, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.4777777777777779, 1.0, 0.2, 0.0, 0.2777777777777778
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 1.4772727272727273, 0.7272727272727273, 0.3333333333333333, 0.0, 0.4166666666666667
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 1.4761904761904763, 0.8095238095238095, 0.5, 0.0, 0.16666666666666666
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.476190476190476, 1.0, 0.3333333333333333, 0.0, 0.14285714285714285
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.476190476190476, 1.0, 0.3333333333333333, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.4722222222222223, 1.0, 0.25, 0.0, 0.2222222222222222
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.4722222222222223, 0.85, 0.4, 0.0, 0.2222222222222222
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.4682539682539684, 0.8571428571428571, 0.3333333333333333, 0.0, 0.2777777777777778
nameIndex,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 1.4673913043478262, 0.21739130434782608, 1.0, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 1.4636363636363636, 0.3181818181818182, 0.0, 0.0, 0.6
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 1.4635854341736694, 0.8095238095238095, 0.5, 0.0, 0.058823529411764705
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.4632034632034632, 0.7727272727272727, 0.3333333333333333, 0.0, 0.35714285714285715
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.463157894736842, 1.0, 0.2, 0.0, 0.2631578947368421
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.4583333333333333, 1.0, 0.25, 0.0, 0.20833333333333334
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.456896551724138, 1.0, 0.25, 0.0, 0.20689655172413793
nameIndex,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 1.4565217391304348, 0.9565217391304348, 0.0, 0.0, 0.5
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.4545454545454546, 1.0, 0.0, 0.0, 0.45454545454545453
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 1.4545454545454546, 0.8636363636363636, 0.5, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 1.4481792717086834, 0.7619047619047619, 0.3333333333333333, 0.0, 0.35294117647058826
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.4475524475524475, 0.9090909090909091, 0.0, 0.0, 0.5384615384615384
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.4444444444444444, 1.0, 0.25, 0.0, 0.19444444444444445
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.4444444444444444, 1.0, 0.3333333333333333, 0.0, 0.1111111111111111
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.4393939393939394, 0.7727272727272727, 0.5, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.4375, 1.0, 0.25, 0.0, 0.1875
emptyList,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 1.434782608695652, 0.043478260869565216, 1.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 1.4333333333333333, 0.9, 0.3333333333333333, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 1.4331501831501832, 0.9523809523809523, 0.25, 0.0, 0.23076923076923078
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.432748538011696, 1.0, 0.2222222222222222, 0.0, 0.21052631578947367
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.4285714285714286, 0.8571428571428571, 0.3333333333333333, 0.0, 0.23809523809523808
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.4285714285714286, 1.0, 0.0, 0.0, 0.42857142857142855
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.4253246753246755, 0.8181818181818182, 0.25, 0.0, 0.35714285714285715
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.4224137931034484, 1.0, 0.25, 0.0, 0.1724137931034483
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 1.4222488038277512, 0.9090909090909091, 0.25, 0.0, 0.2631578947368421
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.4214285714285715, 1.0, 0.25, 0.0, 0.17142857142857143
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 1.4206349206349205, 0.8095238095238095, 0.3333333333333333, 0.0, 0.2777777777777778
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.4166666666666667, 1.0, 0.16666666666666666, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.4166666666666665, 1.0, 0.3333333333333333, 0.0, 0.08333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.416577540106952, 0.8181818181818182, 0.2, 0.0, 0.35294117647058826
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 1.415966386554622, 0.8571428571428571, 0.5, 0.0, 0.058823529411764705
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 1.4137681159420288, 0.95, 0.3333333333333333, 0.0, 0.13043478260869565
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.4102564102564101, 0.9090909090909091, 0.3333333333333333, 0.0, 0.07692307692307693
minFragment,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 1.4090909090909092, 0.9090909090909091, 0.0, 0.0, 0.5
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.4083333333333332, 1.0, 0.2, 0.0, 0.20833333333333334
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.405128205128205, 1.0, 0.2, 0.0, 0.20512820512820512
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.4, 1.0, 0.2, 0.0, 0.2
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.4, 1.0, 0.2, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.4, 1.0, 0.2, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.4, 1.0, 0.2, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.4, 1.0, 0.2, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.4, 1.0, 0.2, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.3928571428571428, 0.8095238095238095, 0.3333333333333333, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.3923076923076922, 1.0, 0.2, 0.0, 0.19230769230769232
emptyList,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 1.391304347826087, 0.391304347826087, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 1.3904761904761904, 0.8571428571428571, 0.3333333333333333, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.3893048128342247, 0.6363636363636364, 0.4, 0.0, 0.35294117647058826
i >= minFragment,INFIX_EXPRESSION, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 1.3869047619047619, 0.7619047619047619, 0.5, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.3859649122807016, 0.9523809523809523, 0.3333333333333333, 0.0, 0.05263157894736842
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.3846153846153846, 1.0, 0.0, 0.0, 0.38461538461538464
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.3833333333333333, 1.0, 0.25, 0.0, 0.13333333333333333
TextRange,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 1.3804347826086956, 0.13043478260869565, 1.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.3781512605042017, 1.0, 0.14285714285714285, 0.0, 0.23529411764705882
TextRange,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 1.375, 0.125, 1.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.375, 1.0, 0.0, 0.0, 0.375
from,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 1.3695652173913042, 0.043478260869565216, 0.0, 0.0, 0.5
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 1.36875, 0.75, 0.4, 0.0, 0.21875
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.3666666666666667, 1.0, 0.16666666666666666, 0.0, 0.2
i,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 1.3636363636363638, 0.36363636363636365, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 1.3636363636363638, 0.36363636363636365, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.3636363636363638, 1.0, 0.0, 0.0, 0.36363636363636365
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 1.3636363636363635, 0.9090909090909091, 0.0, 0.0, 0.45454545454545453
i >= minFragment,INFIX_EXPRESSION, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 1.3626373626373625, 0.9523809523809523, 0.3333333333333333, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 1.3618881118881119, 0.7272727272727273, 0.25, 0.0, 0.38461538461538464
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.3612121212121213, 0.9545454545454546, 0.16666666666666666, 0.0, 0.24
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.3583333333333332, 0.9, 0.25, 0.0, 0.20833333333333334
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.3578947368421053, 1.0, 0.2, 0.0, 0.15789473684210525
i >= minFragment,INFIX_EXPRESSION, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.3571428571428572, 0.7142857142857143, 0.5, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.3571428571428572, 0.8571428571428571, 0.25, 0.0, 0.25
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 1.3547619047619046, 0.9047619047619048, 0.25, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.3529411764705883, 1.0, 0.0, 0.0, 0.35294117647058826
i,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 1.3522727272727273, 0.22727272727272727, 1.0, 0.0, 0.125
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.35, 1.0, 0.25, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.3492063492063493, 0.9047619047619048, 0.0, 0.0, 0.4444444444444444
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 1.3492063492063493, 0.9047619047619048, 0.3333333333333333, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 1.3478260869565217, 0.34782608695652173, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 1.3478260869565217, 0.34782608695652173, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.3452380952380953, 1.0, 0.25, 0.0, 0.09523809523809523
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.3428571428571427, 1.0, 0.2, 0.0, 0.14285714285714285
i,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 1.3423913043478262, 0.21739130434782608, 1.0, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 1.34, 0.85, 0.25, 0.0, 0.24
i >= minFragment,INFIX_EXPRESSION, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 1.338345864661654, 0.9523809523809523, 0.3333333333333333, 0.0, 0.05263157894736842
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 1.3375, 0.95, 0.2, 0.0, 0.1875
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.3333333333333335, 1.0, 0.16666666666666666, 0.0, 0.16666666666666666
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.3333333333333333, 1.0, 0.25, 0.0, 0.08333333333333333
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.3333333333333333, 1.0, 0.25, 0.0, 0.08333333333333333
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.3333333333333333, 1.0, 0.25, 0.0, 0.08333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 1.3333333333333333, 1.0, 0.0, 0.0, 0.3333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.3333333333333333, 1.0, 0.0, 0.0, 0.3333333333333333
nameIndex,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.3333333333333333, 0.043478260869565216, 0.0, 0.0, 0.3333333333333333
null,NULL_LITERAL, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.3333333333333333, 1.0, 0.0, 0.0, 0.3333333333333333
null,NULL_LITERAL, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.3333333333333333, 0.8095238095238095, 0.0, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.327956989247312, 1.0, 0.16666666666666666, 0.0, 0.16129032258064516
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.327536231884058, 0.6666666666666666, 0.4, 0.0, 0.2608695652173913
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.3214285714285714, 0.95, 0.14285714285714285, 0.0, 0.22857142857142856
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.3205128205128207, 1.0, 0.16666666666666666, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.3205128205128207, 1.0, 0.16666666666666666, 0.0, 0.15384615384615385
i,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 1.3181818181818181, 0.3181818181818182, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 1.3181818181818181, 0.3181818181818182, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.3180124223602485, 0.8571428571428571, 0.2, 0.0, 0.2608695652173913
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 1.3165266106442577, 0.9047619047619048, 0.0, 0.0, 0.4117647058823529
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 1.3163636363636364, 0.6363636363636364, 0.4, 0.0, 0.28
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.3125960061443933, 0.9523809523809523, 0.16666666666666666, 0.0, 0.1935483870967742
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 1.3108695652173914, 0.8, 0.25, 0.0, 0.2608695652173913
nameIndex,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 1.3043478260869565, 0.30434782608695654, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 1.3043478260869565, 0.30434782608695654, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.3, 1.0, 0.0, 0.0, 0.3
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.3, 1.0, 0.0, 0.0, 0.3
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 1.2978260869565217, 0.45, 0.5, 0.0, 0.34782608695652173
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 1.2937062937062938, 0.9090909090909091, 0.0, 0.0, 0.38461538461538464
nameIndex,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 1.2934782608695652, 0.043478260869565216, 1.0, 0.0, 0.25
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 1.29247311827957, 0.6666666666666666, 0.4, 0.0, 0.22580645161290322
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.2923076923076924, 0.9, 0.2, 0.0, 0.19230769230769232
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.2909090909090908, 1.0, 0.2, 0.0, 0.09090909090909091
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.2857142857142856, 1.0, 0.0, 0.0, 0.2857142857142857
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 1.2857142857142856, 0.0, 1.0, 0.0, 0.2857142857142857
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.2857142857142856, 1.0, 0.0, 0.0, 0.2857142857142857
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.2857142857142856, 1.0, 0.0, 0.0, 0.2857142857142857
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 1.2857142857142856, 0.0, 1.0, 0.0, 0.2857142857142857
nameIndex,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.2857142857142856, 1.0, 0.0, 0.0, 0.2857142857142857
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.2851851851851852, 0.85, 0.25, 0.0, 0.18518518518518517
nameIndex,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.2826086956521738, 0.782608695652174, 0.0, 0.0, 0.5
i >= minFragment,INFIX_EXPRESSION, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 1.2813852813852813, 0.8571428571428571, 0.3333333333333333, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.28, 1.0, 0.0, 0.0, 0.28
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 1.2797619047619047, 0.3333333333333333, 0.0, 0.0, 0.375
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 1.2768115942028986, 0.8, 0.3333333333333333, 0.0, 0.043478260869565216
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 1.275062656641604, 0.7619047619047619, 0.25, 0.0, 0.2631578947368421
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.2740740740740741, 1.0, 0.2, 0.0, 0.07407407407407407
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 1.2738927738927739, 0.8636363636363636, 0.3333333333333333, 0.0, 0.07692307692307693
i >= minFragment,INFIX_EXPRESSION, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 1.2738095238095237, 0.8571428571428571, 0.3333333333333333, 0.0, 0.08333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.2727272727272727, 1.0, 0.0, 0.0, 0.2727272727272727
prepend,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 1.2727272727272727, 0.2727272727272727, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.2727272727272727, 1.0, 0.0, 0.0, 0.2727272727272727
i >= minFragment,INFIX_EXPRESSION, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.2673992673992673, 0.8571428571428571, 0.3333333333333333, 0.0, 0.07692307692307693
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.2669172932330828, 0.7142857142857143, 0.5, 0.0, 0.05263157894736842
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.2666666666666666, 1.0, 0.0, 0.0, 0.26666666666666666
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.2637681159420289, 0.8, 0.3333333333333333, 0.0, 0.13043478260869565
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.263157894736842, 1.0, 0.0, 0.0, 0.2631578947368421
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.263157894736842, 1.0, 0.0, 0.0, 0.2631578947368421
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 1.2612903225806453, 0.9, 0.2, 0.0, 0.16129032258064516
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.2608695652173914, 1.0, 0.0, 0.0, 0.2608695652173913
emptyList,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 1.2608695652173914, 0.2608695652173913, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.2592592592592593, 1.0, 0.0, 0.0, 0.25925925925925924
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.2587412587412585, 0.6818181818181818, 0.5, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 1.2583333333333333, 0.8, 0.3333333333333333, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 1.2583333333333333, 0.8, 0.25, 0.0, 0.20833333333333334
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 1.2538461538461538, 0.85, 0.25, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 1.25, 0.8, 0.2, 0.0, 0.25
i >= minFragment,INFIX_EXPRESSION, line no: 214,i,SIMPLE_NAME, line no: 41, 1.25, 0.7619047619047619, 0.0, 0.0, 0.25
i,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.25, 0.9545454545454546, 0.0, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.25, 1.0, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.25, 1.0, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.25, 1.0, 0.0, 0.0, 0.25
nameIndex,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.25, 1.0, 0.0, 0.0, 0.25
i,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.25, 0.8695652173913043, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 1.2482517482517483, 0.8636363636363636, 0.0, 0.0, 0.38461538461538464
from,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 1.2463768115942029, 0.9130434782608695, 0.0, 0.0, 0.3333333333333333
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 1.2428571428571429, 0.8095238095238095, 0.3333333333333333, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.2424242424242424, 0.9090909090909091, 0.0, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.2423076923076923, 0.8, 0.25, 0.0, 0.19230769230769232
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 1.2402298850574711, 0.7, 0.3333333333333333, 0.0, 0.20689655172413793
i >= minFragment,INFIX_EXPRESSION, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 1.238095238095238, 0.7619047619047619, 0.3333333333333333, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.2352941176470589, 1.0, 0.0, 0.0, 0.23529411764705882
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.2333333333333334, 0.9, 0.0, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.2307692307692308, 1.0, 0.0, 0.0, 0.23076923076923078
minFragment,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 1.2272727272727273, 0.22727272727272727, 1.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 1.2268115942028985, 0.85, 0.3333333333333333, 0.0, 0.043478260869565216
i >= minFragment,INFIX_EXPRESSION, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.226190476190476, 0.8095238095238095, 0.3333333333333333, 0.0, 0.08333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.2258064516129032, 1.0, 0.0, 0.0, 0.22580645161290322
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 1.2240896358543418, 0.7142857142857143, 0.3333333333333333, 0.0, 0.17647058823529413
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.2235632183908045, 0.85, 0.16666666666666666, 0.0, 0.20689655172413793
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 1.2225225225225225, 0.7, 0.3333333333333333, 0.0, 0.1891891891891892
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.2222222222222223, 1.0, 0.0, 0.0, 0.2222222222222222
nameIndex,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.2222222222222223, 1.0, 0.0, 0.0, 0.2222222222222222
nameIndex,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.2222222222222223, 1.0, 0.0, 0.0, 0.2222222222222222
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 1.2207792207792207, 0.8636363636363636, 0.0, 0.0, 0.35714285714285715
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.2207792207792207, 0.8636363636363636, 0.0, 0.0, 0.35714285714285715
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 1.2174185463659148, 0.8095238095238095, 0.25, 0.0, 0.15789473684210525
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.2142857142857142, 1.0, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.2142857142857142, 1.0, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.2142857142857142, 1.0, 0.0, 0.0, 0.21428571428571427
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.2142857142857142, 1.0, 0.0, 0.0, 0.21428571428571427
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 1.2135854341736694, 0.9047619047619048, 0.25, 0.0, 0.058823529411764705
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.2121212121212122, 1.0, 0.0, 0.0, 0.21212121212121213
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 1.2113095238095237, 0.8571428571428571, 0.16666666666666666, 0.0, 0.1875
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.2105263157894737, 1.0, 0.0, 0.0, 0.21052631578947367
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.2095238095238094, 1.0, 0.14285714285714285, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.206896551724138, 1.0, 0.0, 0.0, 0.20689655172413793
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 1.2045454545454546, 0.9545454545454546, 0.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 1.2043478260869565, 0.9, 0.0, 0.0, 0.30434782608695654
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 1.2007518796992482, 0.9, 0.14285714285714285, 0.0, 0.15789473684210525
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.2, 1.0, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.2, 1.0, 0.0, 0.0, 0.2
i >= minFragment,INFIX_EXPRESSION, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.2, 1.0, 0.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.2, 1.0, 0.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.2, 1.0, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.2, 0.045454545454545456, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.2, 1.0, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.2, 1.0, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.2, 1.0, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.2, 0.045454545454545456, 0.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.2, 1.0, 0.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.2, 1.0, 0.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.2, 0.9565217391304348, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.196969696969697, 0.8636363636363636, 0.0, 0.0, 0.3333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.196969696969697, 0.8636363636363636, 0.0, 0.0, 0.3333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.195887445887446, 0.8095238095238095, 0.25, 0.0, 0.13636363636363635
null,NULL_LITERAL, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 1.1904761904761905, 0.8571428571428571, 0.0, 0.0, 0.3333333333333333
null,NULL_LITERAL, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 1.1904761904761905, 0.8571428571428571, 0.0, 0.0, 0.3333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.1875, 1.0, 0.0, 0.0, 0.1875
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 1.1853146853146854, 0.9545454545454546, 0.0, 0.0, 0.23076923076923078
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.1818181818181819, 1.0, 0.0, 0.0, 0.18181818181818182
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.1818181818181819, 1.0, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.1818181818181819, 1.0, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 1.1818181818181819, 0.6818181818181818, 0.3333333333333333, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.1818181818181819, 1.0, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.181060606060606, 0.7727272727272727, 0.2, 0.0, 0.20833333333333334
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 1.1781874039938556, 0.8095238095238095, 0.14285714285714285, 0.0, 0.22580645161290322
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.1764705882352942, 1.0, 0.0, 0.0, 0.17647058823529413
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.1764705882352942, 0.9545454545454546, 0.0, 0.0, 0.17647058823529413
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.1761904761904762, 0.8095238095238095, 0.2, 0.0, 0.16666666666666666
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.1739130434782608, 1.0, 0.0, 0.0, 0.17391304347826086
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 1.1727272727272728, 0.35, 0.0, 0.0, 0.2727272727272727
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.1713286713286712, 0.8636363636363636, 0.0, 0.0, 0.3076923076923077
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.1713286713286712, 0.8636363636363636, 0.0, 0.0, 0.3076923076923077
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.1713286713286712, 0.8636363636363636, 0.0, 0.0, 0.3076923076923077
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.1713286713286712, 0.8636363636363636, 0.0, 0.0, 0.3076923076923077
i >= minFragment,INFIX_EXPRESSION, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 1.1706349206349207, 0.8095238095238095, 0.25, 0.0, 0.1111111111111111
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 1.17003367003367, 0.8181818181818182, 0.16666666666666666, 0.0, 0.18518518518518517
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 1.1688311688311688, 0.9545454545454546, 0.0, 0.0, 0.21428571428571427
i >= minFragment,INFIX_EXPRESSION, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.1666666666666667, 1.0, 0.125, 0.0, 0.041666666666666664
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.1666666666666667, 0.9565217391304348, 0.0, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.1666666666666667, 1.0, 0.0, 0.0, 0.16666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 1.1655844155844155, 0.7727272727272727, 0.25, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.1612903225806452, 1.0, 0.0, 0.0, 0.16129032258064516
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.16, 1.0, 0.0, 0.0, 0.16
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.16, 1.0, 0.0, 0.0, 0.16
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.16, 1.0, 0.0, 0.0, 0.16
i,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 1.1590909090909092, 0.9090909090909091, 0.0, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.1578947368421053, 1.0, 0.0, 0.0, 0.15789473684210525
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.1578947368421053, 1.0, 0.0, 0.0, 0.15789473684210525
TextRange,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.1565217391304348, 0.9565217391304348, 0.0, 0.0, 0.2
nameIndex,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 1.1565217391304348, 0.9565217391304348, 0.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 1.1547619047619047, 0.7619047619047619, 0.14285714285714285, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 1.1545454545454545, 0.9545454545454546, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 1.1545454545454545, 0.9545454545454546, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.1538461538461537, 1.0, 0.0, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.1538461538461537, 1.0, 0.0, 0.0, 0.15384615384615385
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.1538461538461537, 1.0, 0.0, 0.0, 0.15384615384615385
nameIndex,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.1538461538461537, 1.0, 0.0, 0.0, 0.15384615384615385
nameIndex,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.1538461538461537, 1.0, 0.0, 0.0, 0.15384615384615385
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.1515151515151516, 0.8181818181818182, 0.0, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.15, 1.0, 0.0, 0.0, 0.15
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.15, 1.0, 0.0, 0.0, 0.15
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.15, 1.0, 0.0, 0.0, 0.15
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.15, 1.0, 0.0, 0.0, 0.15
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.1481481481481481, 1.0, 0.1111111111111111, 0.0, 0.037037037037037035
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 1.1463536463536463, 0.7727272727272727, 0.14285714285714285, 0.0, 0.23076923076923078
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.1443850267379678, 0.9090909090909091, 0.0, 0.0, 0.23529411764705882
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.1428571428571428, 1.0, 0.0, 0.0, 0.14285714285714285
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.1428571428571428, 1.0, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.1428571428571428, 1.0, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.1428571428571428, 1.0, 0.0, 0.0, 0.14285714285714285
nameIndex,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.1428571428571428, 1.0, 0.0, 0.0, 0.14285714285714285
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.1428571428571428, 1.0, 0.0, 0.0, 0.14285714285714285
null,NULL_LITERAL, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 1.1428571428571428, 0.6666666666666666, 0.0, 0.0, 0.3333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 1.1420454545454546, 0.9545454545454546, 0.0, 0.0, 0.1875
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 1.1420454545454546, 0.9545454545454546, 0.0, 0.0, 0.1875
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.1403743315508021, 0.7727272727272727, 0.25, 0.0, 0.11764705882352941
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.1398601398601398, 0.9090909090909091, 0.0, 0.0, 0.23076923076923078
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.1398601398601398, 0.9090909090909091, 0.0, 0.0, 0.23076923076923078
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.1388888888888888, 1.0, 0.0, 0.0, 0.1388888888888889
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 1.1355263157894737, 0.8, 0.125, 0.0, 0.21052631578947367
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 1.1345238095238095, 0.8095238095238095, 0.2, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 1.1341991341991342, 0.9523809523809523, 0.0, 0.0, 0.18181818181818182
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.1333333333333333, 1.0, 0.0, 0.0, 0.13333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.1333333333333333, 1.0, 0.0, 0.0, 0.13333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 1.1304347826086956, 0.75, 0.25, 0.0, 0.13043478260869565
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.1304347826086956, 1.0, 0.0, 0.0, 0.13043478260869565
from,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 1.1304347826086956, 0.13043478260869565, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.1303030303030304, 0.8636363636363636, 0.0, 0.0, 0.26666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.1303030303030304, 0.8636363636363636, 0.0, 0.0, 0.26666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 1.1303030303030304, 0.8636363636363636, 0.0, 0.0, 0.26666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 1.1303030303030304, 0.8636363636363636, 0.0, 0.0, 0.26666666666666666
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 1.1302521008403361, 0.9047619047619048, 0.16666666666666666, 0.0, 0.058823529411764705
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.129032258064516, 1.0, 0.0, 0.0, 0.12903225806451613
i >= minFragment,INFIX_EXPRESSION, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 1.1285714285714286, 0.8571428571428571, 0.2, 0.0, 0.07142857142857142
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.125, 1.0, 0.0, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.125, 1.0, 0.0, 0.0, 0.125
i,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.125, 1.0, 0.0, 0.0, 0.125
i,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.125, 1.0, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.125, 0.047619047619047616, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.125, 0.047619047619047616, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.125, 1.0, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.125, 1.0, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.125, 1.0, 0.0, 0.0, 0.125
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.125, 1.0, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.125, 1.0, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.125, 1.0, 0.0, 0.0, 0.125
i,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.125, 1.0, 0.0, 0.0, 0.125
i,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.125, 1.0, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.1233766233766234, 0.9090909090909091, 0.0, 0.0, 0.21428571428571427
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.1233766233766234, 0.9090909090909091, 0.0, 0.0, 0.21428571428571427
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 1.1233333333333333, 0.75, 0.3333333333333333, 0.0, 0.04
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 1.1203007518796992, 0.8571428571428571, 0.0, 0.0, 0.2631578947368421
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 1.12, 0.8, 0.2, 0.0, 0.12
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.1196428571428572, 0.8571428571428571, 0.2, 0.0, 0.0625
i,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 1.1195652173913042, 0.8695652173913043, 0.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.1176470588235294, 1.0, 0.0, 0.0, 0.11764705882352941
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.1176470588235294, 1.0, 0.0, 0.0, 0.11764705882352941
TextRange,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.1166666666666667, 0.9166666666666666, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.1153846153846154, 1.0, 0.0, 0.0, 0.11538461538461539
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 1.1141891891891893, 0.8, 0.125, 0.0, 0.1891891891891892
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 1.1136363636363638, 0.8636363636363636, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 1.1136363636363638, 0.8636363636363636, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 1.1136363636363638, 0.8636363636363636, 0.0, 0.0, 0.25
TextRange,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.1130434782608696, 0.9130434782608695, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 1.1122994652406417, 0.8181818181818182, 0.0, 0.0, 0.29411764705882354
nameIndex,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.1118012422360248, 0.8260869565217391, 0.0, 0.0, 0.2857142857142857
i,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.1111111111111112, 1.0, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 1.1102756892230576, 0.9523809523809523, 0.0, 0.0, 0.15789473684210525
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.1090909090909091, 0.9090909090909091, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.1071428571428572, 0.8, 0.2, 0.0, 0.10714285714285714
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.1071428571428572, 0.8571428571428571, 0.0, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.1071428571428572, 1.0, 0.0, 0.0, 0.10714285714285714
minFragment,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.106060606060606, 0.7727272727272727, 0.0, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.1055555555555556, 0.8, 0.16666666666666666, 0.0, 0.1388888888888889
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.103448275862069, 1.0, 0.0, 0.0, 0.10344827586206896
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 1.103030303030303, 0.6363636363636364, 0.0, 0.0, 0.4666666666666667
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 1.1023809523809522, 0.9523809523809523, 0.0, 0.0, 0.15
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 1.1003787878787878, 0.45454545454545453, 0.3333333333333333, 0.0, 0.3125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 1.1, 0.85, 0.0, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,range,SIMPLE_NAME, line no: 73, 1.1, 1.0, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.1, 1.0, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,i,SIMPLE_NAME, line no: 41, 1.1, 0.7727272727272727, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,name,SIMPLE_NAME, line no: 62, 1.1, 0.045454545454545456, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.1, 1.0, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.1, 1.0, 0.0, 0.0, 0.1
nameIndex,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 1.0993788819875776, 0.9565217391304348, 0.0, 0.0, 0.14285714285714285
nameIndex,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 1.0993788819875776, 0.6521739130434783, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 1.0974025974025974, 0.9545454545454546, 0.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 1.0974025974025974, 0.6818181818181818, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 1.0970695970695972, 0.9047619047619048, 0.0, 0.0, 0.19230769230769232
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.096774193548387, 1.0, 0.0, 0.0, 0.0967741935483871
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0952380952380953, 1.0, 0.0, 0.0, 0.09523809523809523
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0952380952380953, 1.0, 0.0, 0.0, 0.09523809523809523
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 1.0952380952380951, 0.9523809523809523, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.0952380952380951, 0.8571428571428571, 0.0, 0.0, 0.23809523809523808
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 1.0944055944055944, 0.3181818181818182, 0.0, 0.0, 0.23076923076923078
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 1.093939393939394, 0.22727272727272727, 0.6666666666666666, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.09375, 1.0, 0.0, 0.0, 0.09375
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 1.0928571428571427, 0.95, 0.0, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0909090909090908, 0.05, 0.0, 0.0, 0.09090909090909091
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0909090909090908, 0.05, 0.0, 0.0, 0.09090909090909091
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
i >= minFragment,INFIX_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
i,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 1.0909090909090908, 0.09090909090909091, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 1.0909090909090908, 0.09090909090909091, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0909090909090908, 0.045454545454545456, 0.0, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0909090909090908, 0.045454545454545456, 0.0, 0.0, 0.09090909090909091
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 1.0909090909090908, 0.8636363636363636, 0.0, 0.0, 0.22727272727272727
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0909090909090908, 1.0, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 1.0887445887445888, 0.9523809523809523, 0.0, 0.0, 0.13636363636363635
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 1.087878787878788, 0.9545454545454546, 0.0, 0.0, 0.13333333333333333
nameIndex,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 1.0869565217391304, 0.08695652173913043, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 1.0869565217391304, 0.08695652173913043, 1.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 1.0858585858585859, 0.8636363636363636, 0.0, 0.0, 0.2222222222222222
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 1.0849802371541502, 0.9545454545454546, 0.0, 0.0, 0.13043478260869565
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 1.084848484848485, 0.8181818181818182, 0.0, 0.0, 0.26666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 1.0844155844155843, 0.7272727272727273, 0.14285714285714285, 0.0, 0.21428571428571427
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
i,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
nameIndex,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
i,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0833333333333333, 1.0, 0.0, 0.0, 0.08333333333333333
nameIndex,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 1.0815217391304348, 0.9565217391304348, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 1.0815217391304348, 0.9565217391304348, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0810810810810811, 1.0, 0.0, 0.0, 0.08108108108108109
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 1.0810276679841897, 0.8636363636363636, 0.0, 0.0, 0.21739130434782608
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 1.0810276679841897, 0.8636363636363636, 0.0, 0.0, 0.21739130434782608
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.0793650793650793, 0.8571428571428571, 0.0, 0.0, 0.2222222222222222
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.0786749482401656, 0.9047619047619048, 0.0, 0.0, 0.17391304347826086
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 1.0779904306220094, 0.7727272727272727, 0.2, 0.0, 0.10526315789473684
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0769230769230769, 1.0, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0769230769230769, 0.7727272727272727, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0769230769230769, 1.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0769230769230769, 0.7727272727272727, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0769230769230769, 1.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0769230769230769, 1.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0769230769230769, 0.9545454545454546, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0769230769230769, 1.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0769230769230769, 1.0, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 1.076470588235294, 0.9, 0.0, 0.0, 0.17647058823529413
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 1.076470588235294, 0.9, 0.0, 0.0, 0.17647058823529413
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.0757575757575757, 0.9090909090909091, 0.0, 0.0, 0.16666666666666666
TextRange,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.075, 0.875, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.074074074074074, 1.0, 0.0, 0.0, 0.07407407407407407
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 1.071969696969697, 0.8636363636363636, 0.0, 0.0, 0.20833333333333334
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0714285714285714, 1.0, 0.0, 0.0, 0.07142857142857142
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0714285714285714, 1.0, 0.0, 0.0, 0.07142857142857142
i >= minFragment,INFIX_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0714285714285714, 1.0, 0.0, 0.0, 0.07142857142857142
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0714285714285714, 1.0, 0.0, 0.0, 0.07142857142857142
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 1.0714285714285714, 0.8571428571428571, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 1.0714285714285714, 0.8571428571428571, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 1.0714285714285714, 0.8571428571428571, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 1.0714285714285714, 0.8571428571428571, 0.0, 0.0, 0.21428571428571427
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0714285714285714, 0.9545454545454546, 0.0, 0.0, 0.07142857142857142
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 1.0699999999999998, 0.95, 0.0, 0.0, 0.12
nameIndex,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 1.0695652173913044, 0.8695652173913043, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 1.0681818181818183, 0.8181818181818182, 0.0, 0.0, 0.25
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 1.0681818181818183, 0.8181818181818182, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 1.0681818181818183, 0.8181818181818182, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 1.0681818181818183, 0.8181818181818182, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 1.0681818181818183, 0.8181818181818182, 0.0, 0.0, 0.25
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 1.0681818181818183, 0.8181818181818182, 0.0, 0.0, 0.25
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.0676691729323307, 0.8571428571428571, 0.0, 0.0, 0.21052631578947367
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.0676691729323307, 0.8571428571428571, 0.0, 0.0, 0.21052631578947367
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0666666666666667, 1.0, 0.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0666666666666667, 1.0, 0.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 1.0666666666666667, 0.8, 0.16666666666666666, 0.0, 0.1
i >= minFragment,INFIX_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0666666666666667, 1.0, 0.0, 0.0, 0.06666666666666667
nameIndex,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0666666666666667, 1.0, 0.0, 0.0, 0.06666666666666667
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 1.0656565656565657, 0.9545454545454546, 0.0, 0.0, 0.1111111111111111
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 1.0653846153846154, 0.95, 0.0, 0.0, 0.11538461538461539
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.064516129032258, 1.0, 0.0, 0.0, 0.06451612903225806
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 1.064039408866995, 0.8571428571428571, 0.0, 0.0, 0.20689655172413793
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.0636363636363637, 0.8636363636363636, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 1.0636363636363637, 0.8636363636363636, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 1.0636363636363637, 0.8636363636363636, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.0636363636363637, 0.8636363636363636, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 1.0636363636363637, 0.8636363636363636, 0.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.06265664160401, 0.9047619047619048, 0.0, 0.0, 0.15789473684210525
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0625, 1.0, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0625, 0.8095238095238095, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,from,SIMPLE_NAME, line no: 54, 1.0625, 0.047619047619047616, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0625, 0.047619047619047616, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0625, 1.0, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0625, 1.0, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 1.0616883116883118, 0.9545454545454546, 0.0, 0.0, 0.10714285714285714
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.0612903225806452, 0.9, 0.0, 0.0, 0.16129032258064516
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 1.0611111111111111, 0.95, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0588235294117647, 0.047619047619047616, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0588235294117647, 1.0, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0588235294117647, 0.047619047619047616, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0588235294117647, 1.0, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0588235294117647, 1.0, 0.0, 0.0, 0.058823529411764705
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0588235294117647, 1.0, 0.0, 0.0, 0.058823529411764705
nameIndex,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0588235294117647, 1.0, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.0586080586080586, 0.9047619047619048, 0.0, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 1.0571428571428572, 0.95, 0.0, 0.0, 0.10714285714285714
FList,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 1.056521739130435, 0.9565217391304348, 0.0, 0.0, 0.1
i,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 1.056521739130435, 0.9565217391304348, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 1.0562770562770563, 0.8181818181818182, 0.0, 0.0, 0.23809523809523808
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 1.05625, 0.9, 0.0, 0.0, 0.15625
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0555555555555556, 1.0, 0.0, 0.0, 0.05555555555555555
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.054978354978355, 0.8095238095238095, 0.2, 0.0, 0.045454545454545456
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.0547619047619048, 0.9047619047619048, 0.0, 0.0, 0.15
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0526315789473684, 0.8095238095238095, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0526315789473684, 1.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0526315789473684, 0.9523809523809523, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0526315789473684, 1.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0526315789473684, 1.0, 0.0, 0.0, 0.05263157894736842
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0526315789473684, 1.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 1.0523809523809524, 0.7142857142857143, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.051948051948052, 0.9090909090909091, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 1.051948051948052, 0.9090909090909091, 0.0, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 1.0515151515151515, 0.9, 0.0, 0.0, 0.15151515151515152
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 1.0511363636363638, 0.8636363636363636, 0.0, 0.0, 0.1875
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.0511363636363638, 0.8636363636363636, 0.0, 0.0, 0.1875
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 1.0511363636363638, 0.8636363636363636, 0.0, 0.0, 0.1875
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.05, 0.9523809523809523, 0.0, 0.0, 0.05
nameIndex,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.05, 1.0, 0.0, 0.0, 0.05
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 1.0494505494505495, 0.8571428571428571, 0.0, 0.0, 0.19230769230769232
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 1.048951048951049, 0.8181818181818182, 0.0, 0.0, 0.23076923076923078
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 1.048951048951049, 0.8181818181818182, 0.0, 0.0, 0.23076923076923078
nameIndex,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.0483091787439613, 0.8260869565217391, 0.0, 0.0, 0.2222222222222222
i >= minFragment,INFIX_EXPRESSION, line no: 214,matches,SIMPLE_NAME, line no: 133, 1.0476190476190477, 0.047619047619047616, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0476190476190477, 1.0, 0.0, 0.0, 0.047619047619047616
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0476190476190477, 1.0, 0.0, 0.0, 0.047619047619047616
i,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0476190476190477, 1.0, 0.0, 0.0, 0.047619047619047616
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 1.0476190476190474, 0.8571428571428571, 0.0, 0.0, 0.19047619047619047
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 1.0476190476190474, 0.23809523809523808, 0.6666666666666666, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 1.0476190476190474, 0.8571428571428571, 0.0, 0.0, 0.19047619047619047
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 1.0476190476190474, 0.8571428571428571, 0.0, 0.0, 0.19047619047619047
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 1.0476190476190474, 0.8571428571428571, 0.0, 0.0, 0.19047619047619047
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 1.0474308300395256, 0.9565217391304348, 0.0, 0.0, 0.09090909090909091
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0454545454545454, 0.8, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,from,SIMPLE_NAME, line no: 54, 1.0454545454545454, 0.05, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,null,NULL_LITERAL, line no: 56, 1.0454545454545454, 0.9, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0454545454545454, 0.05, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0454545454545454, 1.0, 0.0, 0.0, 0.045454545454545456
i,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 1.0454545454545454, 0.045454545454545456, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 1.0454545454545454, 0.045454545454545456, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 1.0454545454545454, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 1.0454545454545454, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 1.0454545454545454, 0.045454545454545456, 1.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 1.0454545454545454, 0.045454545454545456, 1.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.0454545454545454, 0.8636363636363636, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.0454545454545454, 0.8636363636363636, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 1.0454545454545454, 0.8181818181818182, 0.0, 0.0, 0.22727272727272727
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0434782608695652, 0.05, 0.0, 0.0, 0.043478260869565216
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0434782608695652, 1.0, 0.0, 0.0, 0.043478260869565216
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0434782608695652, 1.0, 0.0, 0.0, 0.043478260869565216
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0434782608695652, 0.05, 0.0, 0.0, 0.043478260869565216
nameIndex,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 1.0434782608695652, 0.043478260869565216, 1.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 1.0434782608695652, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 1.0434782608695652, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 1.0434782608695652, 0.043478260869565216, 1.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 1.0434782608695652, 0.043478260869565216, 1.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 1.0423280423280423, 0.8571428571428571, 0.0, 0.0, 0.18518518518518517
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 1.0423076923076924, 0.85, 0.0, 0.0, 0.19230769230769232
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 1.0423076923076924, 0.85, 0.0, 0.0, 0.19230769230769232
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0416666666666667, 1.0, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0416666666666667, 1.0, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0416666666666667, 0.85, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0416666666666667, 1.0, 0.0, 0.0, 0.041666666666666664
i,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0416666666666667, 1.0, 0.0, 0.0, 0.041666666666666664
i,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0416666666666667, 1.0, 0.0, 0.0, 0.041666666666666664
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 1.0401069518716577, 0.8636363636363636, 0.0, 0.0, 0.17647058823529413
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.04, 0.8, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.04, 1.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.04, 0.95, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.04, 1.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.04, 1.0, 0.0, 0.0, 0.04
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 1.0393939393939393, 0.7727272727272727, 0.0, 0.0, 0.26666666666666666
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0384615384615385, 0.95, 0.0, 0.0, 0.038461538461538464
i >= minFragment,INFIX_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0384615384615385, 1.0, 0.0, 0.0, 0.038461538461538464
TextRange,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 1.0380434782608696, 0.9130434782608695, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 1.0380434782608696, 0.9130434782608695, 0.0, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.0379310344827586, 0.9, 0.0, 0.0, 0.13793103448275862
i >= minFragment,INFIX_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.037037037037037, 1.0, 0.0, 0.0, 0.037037037037037035
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.037037037037037, 1.0, 0.0, 0.0, 0.037037037037037035
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 1.0367965367965368, 0.47619047619047616, 0.3333333333333333, 0.0, 0.22727272727272727
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 1.0366300366300365, 0.8571428571428571, 0.0, 0.0, 0.1794871794871795
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 1.036541889483066, 0.4090909090909091, 0.3333333333333333, 0.0, 0.29411764705882354
FList,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 1.036231884057971, 0.30434782608695654, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 1.0357142857142856, 0.8571428571428571, 0.0, 0.0, 0.17857142857142858
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 1.0355731225296443, 0.8181818181818182, 0.0, 0.0, 0.21739130434782608
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 1.0355731225296443, 0.8181818181818182, 0.0, 0.0, 0.21739130434782608
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 1.0351851851851852, 0.85, 0.0, 0.0, 0.18518518518518517
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 1.034965034965035, 0.7272727272727273, 0.0, 0.0, 0.3076923076923077
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0344827586206897, 1.0, 0.0, 0.0, 0.034482758620689655
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 1.0324675324675325, 0.8181818181818182, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 1.0324675324675325, 0.8181818181818182, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.0324675324675325, 0.8181818181818182, 0.0, 0.0, 0.21428571428571427
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 1.0324675324675325, 0.8181818181818182, 0.0, 0.0, 0.21428571428571427
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 1.0318181818181817, 0.85, 0.0, 0.0, 0.18181818181818182
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 1.0314685314685315, 0.9545454545454546, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.03125, 1.0, 0.0, 0.0, 0.03125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 1.0303030303030303, 0.8636363636363636, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 1.0303030303030303, 0.8636363636363636, 0.0, 0.0, 0.16666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 1.0303030303030303, 0.8636363636363636, 0.0, 0.0, 0.16666666666666666
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 1.0287081339712918, 0.8181818181818182, 0.0, 0.0, 0.21052631578947367
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 1.0285714285714285, 0.8571428571428571, 0.0, 0.0, 0.17142857142857143
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 1.0269230769230768, 0.75, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 1.0269151138716357, 0.8095238095238095, 0.0, 0.0, 0.21739130434782608
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 1.026470588235294, 0.85, 0.0, 0.0, 0.17647058823529413
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 1.026470588235294, 0.85, 0.0, 0.0, 0.17647058823529413
nameIndex,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 1.0260869565217392, 0.8260869565217391, 0.0, 0.0, 0.2
i,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 1.0260869565217392, 0.8260869565217391, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 1.0252525252525253, 0.6363636363636364, 0.0, 0.0, 0.3888888888888889
nameIndex,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 1.0248447204968945, 0.7391304347826086, 0.0, 0.0, 0.2857142857142857
i >= minFragment,INFIX_EXPRESSION, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 1.0238095238095237, 0.8571428571428571, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 1.0238095238095237, 0.8571428571428571, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 1.0236363636363637, 0.8636363636363636, 0.0, 0.0, 0.16
nameIndex,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 1.0234113712374582, 0.8260869565217391, 0.0, 0.0, 0.15384615384615385
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 1.0215311004784688, 0.8636363636363636, 0.0, 0.0, 0.15789473684210525
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 1.0214285714285714, 0.85, 0.0, 0.0, 0.17142857142857143
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 1.0212121212121212, 0.6818181818181818, 0.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 1.02, 0.9, 0.0, 0.0, 0.12
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 1.0181818181818183, 0.8181818181818182, 0.0, 0.0, 0.2
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 1.0181818181818183, 0.8181818181818182, 0.0, 0.0, 0.2
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 1.0174825174825175, 0.8636363636363636, 0.0, 0.0, 0.15384615384615385
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 1.0174825174825175, 0.8636363636363636, 0.0, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.0166666666666666, 0.85, 0.0, 0.0, 0.16666666666666666
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 1.0153846153846153, 0.9, 0.0, 0.0, 0.11538461538461539
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 1.0144927536231885, 0.6666666666666666, 0.0, 0.0, 0.34782608695652173
from,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 1.0130434782608695, 0.9130434782608695, 0.0, 0.0, 0.1
TextRange,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 1.0124223602484472, 0.8695652173913043, 0.0, 0.0, 0.14285714285714285
nameIndex,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 1.0124223602484472, 0.8695652173913043, 0.0, 0.0, 0.14285714285714285
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 1.0119047619047619, 0.7619047619047619, 0.2, 0.0, 0.05
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 1.010989010989011, 0.8571428571428571, 0.0, 0.0, 0.15384615384615385
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 1.01010101010101, 0.45454545454545453, 0.3333333333333333, 0.0, 0.2222222222222222
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 1.01, 0.85, 0.0, 0.0, 0.16
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 1.01, 0.85, 0.0, 0.0, 0.16
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 1.0095238095238095, 0.8095238095238095, 0.0, 0.0, 0.2
i,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 1.009090909090909, 0.9090909090909091, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 1.0064935064935066, 0.8636363636363636, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 1.0064935064935066, 0.8636363636363636, 0.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 1.0064935064935066, 0.8636363636363636, 0.0, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 1.00625, 0.85, 0.0, 0.0, 0.15625
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 1.0056818181818183, 0.8181818181818182, 0.0, 0.0, 0.1875
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 1.0056818181818183, 0.8181818181818182, 0.0, 0.0, 0.1875
nameIndex,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 1.0048309178743962, 0.782608695652174, 0.0, 0.0, 0.2222222222222222
from,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 1.0039525691699605, 0.9130434782608695, 0.0, 0.0, 0.09090909090909091
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 1.0028985507246377, 0.8695652173913043, 0.0, 0.0, 0.13333333333333333
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 1.0028985507246377, 0.8695652173913043, 0.0, 0.0, 0.13333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 1.0018315018315018, 0.8095238095238095, 0.0, 0.0, 0.19230769230769232
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.55, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.95, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.95, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5238095238095238, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 1.0, 0.9090909090909091, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5238095238095238, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 1.0, 0.6666666666666666, 0.0, 0.0, 0.3333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 1.0, 0.8571428571428571, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 1.0, 0.8571428571428571, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,from,SIMPLE_NAME, line no: 54, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 1.0, 0.8636363636363636, 0.0, 0.0, 0.13636363636363635
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 1.0, 0.8636363636363636, 0.0, 0.0, 0.13636363636363635
FList,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 1.0, 0.34782608695652173, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 1.0, 0.875, 0.0, 0.0, 0.125
emptyList,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,from,SIMPLE_NAME, line no: 54, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 1.0, 0.36363636363636365, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9545454545454546, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 1.0, 0.34782608695652173, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 1.0, 0.0, 1.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 1.0, 0.34782608695652173, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.4782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 1.0, 0.34782608695652173, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 1.0, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 1.0, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 1.0, 0.34782608695652173, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,TextRange,SIMPLE_NAME, line no: 18, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,CharArrayCharSequence,SIMPLE_NAME, line no: 21, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i,SIMPLE_NAME, line no: 41, 1.0, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,0,NUMBER_LITERAL, line no: 41, 1.0, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 1.0, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,length,SIMPLE_NAME, line no: 44, 1.0, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character,SIMPLE_NAME, line no: 45, 1.0, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 1.0, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name,SIMPLE_NAME, line no: 62, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,iterable,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Integer,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,seq,SIMPLE_NAME, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,p,SIMPLE_NAME, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,1,NUMBER_LITERAL, line no: 69, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,first,SIMPLE_NAME, line no: 70, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,integral,SIMPLE_NAME, line no: 72, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,range,SIMPLE_NAME, line no: 73, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,2,NUMBER_LITERAL, line no: 78, 1.0, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,charAt,SIMPLE_NAME, line no: 80, 1.0, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214," *",STRING_LITERAL, line no: 97, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,20,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,30,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,1000,NUMBER_LITERAL, line no: 109, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 1.0, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,space,SIMPLE_NAME, line no: 157, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,ALL,SIMPLE_NAME, line no: 197, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 1.0, 1.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 1.0, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.9981481481481481, 0.85, 0.0, 0.0, 0.14814814814814814
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.9981481481481481, 0.85, 0.0, 0.0, 0.14814814814814814
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.9981481481481481, 0.85, 0.0, 0.0, 0.14814814814814814
null,NULL_LITERAL, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9978354978354977, 0.9523809523809523, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.9970588235294118, 0.85, 0.0, 0.0, 0.14705882352941177
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.9963414634146341, 0.85, 0.0, 0.0, 0.14634146341463414
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.9946524064171124, 0.8181818181818182, 0.0, 0.0, 0.17647058823529413
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.9946524064171124, 0.8181818181818182, 0.0, 0.0, 0.17647058823529413
TextRange,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.9945652173913043, 0.8695652173913043, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.9945652173913043, 0.8695652173913043, 0.0, 0.0, 0.125
from,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.9945652173913043, 0.8695652173913043, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9945652173913043, 0.8695652173913043, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.9945652173913043, 0.8695652173913043, 0.0, 0.0, 0.125
i,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.9945652173913043, 0.8695652173913043, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.9926686217008798, 0.8636363636363636, 0.0, 0.0, 0.12903225806451613
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9924242424242424, 0.9090909090909091, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.9913419913419914, 0.8095238095238095, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.9901185770750988, 0.7727272727272727, 0.0, 0.0, 0.21739130434782608
i,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.9886363636363636, 0.8636363636363636, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.9886363636363636, 0.8636363636363636, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.9886363636363636, 0.8636363636363636, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.9886363636363636, 0.8636363636363636, 0.0, 0.0, 0.125
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.9886363636363636, 0.8636363636363636, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.9880952380952381, 0.8095238095238095, 0.0, 0.0, 0.17857142857142858
i,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.9848484848484849, 0.8181818181818182, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.9848484848484849, 0.8181818181818182, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.9848484848484849, 0.8181818181818182, 0.0, 0.0, 0.16666666666666666
from,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9844720496894409, 0.9130434782608695, 0.0, 0.0, 0.07142857142857142
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9844720496894409, 0.9130434782608695, 0.0, 0.0, 0.07142857142857142
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.9833333333333334, 0.9, 0.0, 0.0, 0.08333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.9833333333333333, 0.85, 0.0, 0.0, 0.13333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.9819376026272578, 0.8095238095238095, 0.0, 0.0, 0.1724137931034483
nameIndex,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.9806763285024154, 0.8695652173913043, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.9806763285024154, 0.8695652173913043, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.9806763285024154, 0.8695652173913043, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.9806763285024154, 0.8695652173913043, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.9806763285024154, 0.8695652173913043, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9805194805194805, 0.9090909090909091, 0.0, 0.0, 0.07142857142857142
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.9805194805194805, 0.9090909090909091, 0.0, 0.0, 0.07142857142857142
nameIndex,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9797101449275362, 0.9130434782608695, 0.0, 0.0, 0.06666666666666667
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.9792960662525879, 0.42857142857142855, 0.3333333333333333, 0.0, 0.21739130434782608
i,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.9772727272727273, 0.7272727272727273, 0.0, 0.0, 0.25
TextRange,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.9761904761904763, 0.8333333333333334, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.9761904761904762, 0.47619047619047616, 0.3333333333333333, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.9761904761904762, 0.8095238095238095, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.9761904761904762, 0.8095238095238095, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.9760765550239234, 0.8181818181818182, 0.0, 0.0, 0.15789473684210525
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.9760765550239234, 0.8181818181818182, 0.0, 0.0, 0.15789473684210525
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.9760765550239234, 0.8181818181818182, 0.0, 0.0, 0.15789473684210525
FList,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 0.9755434782608695, 0.9130434782608695, 0.0, 0.0, 0.0625
from,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 0.9755434782608695, 0.9130434782608695, 0.0, 0.0, 0.0625
i,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 0.9755434782608695, 0.9130434782608695, 0.0, 0.0, 0.0625
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.975, 0.85, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.9748283752860412, 0.8695652173913043, 0.0, 0.0, 0.10526315789473684
i,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.9747474747474747, 0.8636363636363636, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.9747474747474747, 0.8636363636363636, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.9727272727272727, 0.7727272727272727, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.9724137931034483, 0.8, 0.0, 0.0, 0.1724137931034483
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.9720279720279721, 0.8181818181818182, 0.0, 0.0, 0.15384615384615385
i,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 0.9715909090909091, 0.9090909090909091, 0.0, 0.0, 0.0625
TextRange,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.9695652173913043, 0.8695652173913043, 0.0, 0.0, 0.1
TextRange,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.9695652173913043, 0.8695652173913043, 0.0, 0.0, 0.1
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.9695652173913043, 0.8695652173913043, 0.0, 0.0, 0.1
nameIndex,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.9695652173913043, 0.8695652173913043, 0.0, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.9695238095238096, 0.8095238095238095, 0.0, 0.0, 0.16
i,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.968944099378882, 0.8260869565217391, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.9682539682539681, 0.8571428571428571, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.9682539682539681, 0.8571428571428571, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.9681818181818183, 0.8181818181818182, 0.0, 0.0, 0.15
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.9676470588235294, 0.85, 0.0, 0.0, 0.11764705882352941
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.9674185463659148, 0.8095238095238095, 0.0, 0.0, 0.15789473684210525
nameIndex,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.9644268774703557, 0.782608695652174, 0.0, 0.0, 0.18181818181818182
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.9632034632034632, 0.7727272727272727, 0.0, 0.0, 0.19047619047619047
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.9624060150375939, 0.8571428571428571, 0.0, 0.0, 0.10526315789473684
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.961111111111111, 0.85, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.9610389610389611, 0.8181818181818182, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.9610389610389611, 0.8181818181818182, 0.0, 0.0, 0.14285714285714285
TextRange,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.9604743083003953, 0.8695652173913043, 0.0, 0.0, 0.09090909090909091
TextRange,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9604743083003953, 0.8695652173913043, 0.0, 0.0, 0.09090909090909091
nameIndex,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9604743083003953, 0.8695652173913043, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9603174603174603, 0.9047619047619048, 0.0, 0.0, 0.05555555555555555
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.9595238095238096, 0.8095238095238095, 0.0, 0.0, 0.15
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.9588744588744589, 0.8181818181818182, 0.0, 0.0, 0.09523809523809523
TextRange,SIMPLE_NAME, line no: 214,StringUtil,SIMPLE_NAME, line no: 19, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,CharArrayUtil,SIMPLE_NAME, line no: 22, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil,SIMPLE_NAME, line no: 28, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern,SIMPLE_NAME, line no: 34, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions,SIMPLE_NAME, line no: 35, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i,SIMPLE_NAME, line no: 41, 0.9583333333333334, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,0,NUMBER_LITERAL, line no: 41, 0.9583333333333334, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern.length,QUALIFIED_NAME, line no: 44, 0.9583333333333334, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,length,SIMPLE_NAME, line no: 44, 0.9583333333333334, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character,SIMPLE_NAME, line no: 45, 0.9583333333333334, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,null,NULL_LITERAL, line no: 56, 0.9583333333333334, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getStartOffset,SIMPLE_NAME, line no: 56, 0.9583333333333334, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name,SIMPLE_NAME, line no: 62, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterable,SIMPLE_NAME, line no: 63, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingFragments(name),METHOD_INVOCATION, line no: 63, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingFragments,SIMPLE_NAME, line no: 63, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterable == null,INFIX_EXPRESSION, line no: 64, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Integer.MIN_VALUE,QUALIFIED_NAME, line no: 64, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Integer,SIMPLE_NAME, line no: 64, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,MIN_VALUE,SIMPLE_NAME, line no: 64, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragmentCount,SIMPLE_NAME, line no: 66, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingCase,SIMPLE_NAME, line no: 67, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,seq,SIMPLE_NAME, line no: 68, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,new CharArrayCharSequence(myPattern),CLASS_INSTANCE_CREATION, line no: 68, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p,SIMPLE_NAME, line no: 69, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-1,PREFIX_EXPRESSION, line no: 69, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,1,NUMBER_LITERAL, line no: 69, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,integral,SIMPLE_NAME, line no: 72, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,first == null,INFIX_EXPRESSION, line no: 74, 0.9583333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.9583333333333334, 0.8333333333333334, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,2,NUMBER_LITERAL, line no: 78, 0.9583333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.9583333333333334, 0.8333333333333334, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,charAt,SIMPLE_NAME, line no: 80, 0.9583333333333334, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,skipCount,SIMPLE_NAME, line no: 97, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,CharArrayUtil.shiftForward(myPattern 0 " *"),METHOD_INVOCATION, line no: 97, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,shiftForward,SIMPLE_NAME, line no: 97, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214," *",STRING_LITERAL, line no: 97, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart,SIMPLE_NAME, line no: 98, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length && name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 99, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart < name.length() && commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 99, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart < name.length(),INFIX_EXPRESSION, line no: 99, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.length(),METHOD_INVOCATION, line no: 99, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart + skipCount < myPattern.length,INFIX_EXPRESSION, line no: 100, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart + skipCount,INFIX_EXPRESSION, line no: 100, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(commonStart) == myPattern[commonStart + skipCount],INFIX_EXPRESSION, line no: 101, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(commonStart),METHOD_INVOCATION, line no: 101, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[commonStart + skipCount],ARRAY_ACCESS, line no: 101, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startIndex,SIMPLE_NAME, line no: 105, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,first.getStartOffset(),METHOD_INVOCATION, line no: 105, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prefixMatching,SIMPLE_NAME, line no: 106, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isStartMatch(name startIndex),METHOD_INVOCATION, line no: 106, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isStartMatch,SIMPLE_NAME, line no: 106, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,middleWordStart,SIMPLE_NAME, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex) && !NameUtil.isWordStart(name startIndex - 1),INFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0 && NameUtil.isWordStart(name startIndex),INFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching && startIndex > 0,INFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!prefixMatching,PREFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startIndex > 0,INFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex),METHOD_INVOCATION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWordStart,SIMPLE_NAME, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name startIndex - 1),PREFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name startIndex - 1),METHOD_INVOCATION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startIndex - 1,INFIX_EXPRESSION, line no: 107, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000 - integral,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex + (prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30 - startIndex,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20 + commonStart * 30,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount + matchingCase * 20,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,-fragmentCount,PREFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingCase * 20,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,20,NUMBER_LITERAL, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart * 30,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,30,NUMBER_LITERAL, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0) * 1000,INFIX_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(prefixMatching ? 2 : middleWordStart ? 1 : 0),PARENTHESIZED_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prefixMatching ? 2 : middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,middleWordStart ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,1000,NUMBER_LITERAL, line no: 109, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex,SIMPLE_NAME, line no: 143, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex,SIMPLE_NAME, line no: 143, 0.9583333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 0.9583333333333334, 0.3333333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space,SIMPLE_NAME, line no: 157, 0.9583333333333334, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar,SIMPLE_NAME, line no: 157, 0.9583333333333334, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex - 1,INFIX_EXPRESSION, line no: 157, 0.9583333333333334, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex],ARRAY_ACCESS, line no: 172, 0.9583333333333334, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),CONDITIONAL_EXPRESSION, line no: 174, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex nameIndex),METHOD_INVOCATION, line no: 174, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfWordStart,SIMPLE_NAME, line no: 174, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p nameIndex + 1),METHOD_INVOCATION, line no: 174, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfIgnoreCase,SIMPLE_NAME, line no: 174, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + 1,INFIX_EXPRESSION, line no: 174, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(name nameIndex),METHOD_INVOCATION, line no: 178, 0.9583333333333334, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!isFirstCharMatching(name nameIndex myPattern[patternIndex]),PREFIX_EXPRESSION, line no: 189, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isFirstCharMatching(name nameIndex myPattern[patternIndex]),METHOD_INVOCATION, line no: 189, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isFirstCharMatching,SIMPLE_NAME, line no: 189, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,minFragment,SIMPLE_NAME, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex) ? 2 : 1,CONDITIONAL_EXPRESSION, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*') && Character.isLetterOrDigit(name.charAt(nameIndex)) && !NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 '*'),METHOD_INVOCATION, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,'*',CHARACTER_LITERAL, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isLetterOrDigit(name.charAt(nameIndex)),METHOD_INVOCATION, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isLetterOrDigit,SIMPLE_NAME, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(nameIndex),METHOD_INVOCATION, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(name nameIndex),PREFIX_EXPRESSION, line no: 193, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length && StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),INFIX_EXPRESSION, line no: 195, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i < name.length() && patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 195, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i < name.length(),INFIX_EXPRESSION, line no: 195, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex + i,INFIX_EXPRESSION, line no: 195, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex + i < myPattern.length,INFIX_EXPRESSION, line no: 196, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex + i,INFIX_EXPRESSION, line no: 196, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(myPattern[patternIndex + i] name.charAt(nameIndex + i) myOptions != ALL),METHOD_INVOCATION, line no: 197, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,charsEqual,SIMPLE_NAME, line no: 197, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i],ARRAY_ACCESS, line no: 197, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(nameIndex + i),METHOD_INVOCATION, line no: 197, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions != ALL,INFIX_EXPRESSION, line no: 197, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ALL,SIMPLE_NAME, line no: 197, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex + i >= myPattern.length,INFIX_EXPRESSION, line no: 213, 0.9583333333333334, 0.9583333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i >= minFragment,INFIX_EXPRESSION, line no: 214, 0.9583333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.9576719576719577, 0.8095238095238095, 0.0, 0.0, 0.14814814814814814
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.9573934837092732, 0.9047619047619048, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.9571428571428571, 0.8571428571428571, 0.0, 0.0, 0.1
FList,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9565217391304348, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9565217391304348, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9565217391304348, 0.13043478260869565, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9565217391304348, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9565217391304348, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9565217391304348, 0.13043478260869565, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9565217391304348, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9565217391304348, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9565217391304348, 0.13043478260869565, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9565217391304348, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9565217391304348, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9565217391304348, 0.13043478260869565, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9565217391304348, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9565217391304348, 0.4782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9565217391304348, 0.13043478260869565, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9565217391304348, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9565217391304348, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9565217391304348, 0.13043478260869565, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9565217391304348, 0.6521739130434783, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9565217391304348, 0.9565217391304348, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.95625, 0.8, 0.0, 0.0, 0.15625
i,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 0.9545454545454546, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9545454545454546, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9545454545454546, 0.5, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9545454545454546, 0.13636363636363635, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9545454545454546, 0.6363636363636364, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9545454545454546, 0.7272727272727273, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 0.9545454545454546, 0.36363636363636365, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,FList,SIMPLE_NAME, line no: 20, 0.9545454545454546, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9545454545454546, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9545454545454546, 0.5, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9545454545454546, 0.13636363636363635, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9545454545454546, 0.6363636363636364, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9545454545454546, 0.7272727272727273, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 0.9545454545454546, 0.36363636363636365, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9545454545454546, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9545454545454546, 0.5, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9545454545454546, 0.13636363636363635, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.9545454545454546, 0.8181818181818182, 0.0, 0.0, 0.13636363636363635
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9545454545454546, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9545454545454546, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9545454545454546, 0.13636363636363635, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9545454545454546, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9545454545454546, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9545454545454546, 0.5, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9545454545454546, 0.13636363636363635, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9545454545454546, 0.6818181818181818, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9545454545454546, 0.9545454545454546, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.9545454545454546, 0.045454545454545456, 0.0, 0.0, 0.09090909090909091
i,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9545454545454545, 0.9090909090909091, 0.0, 0.0, 0.045454545454545456
i >= minFragment,INFIX_EXPRESSION, line no: 214,FList,SIMPLE_NAME, line no: 20, 0.9523809523809523, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,from,SIMPLE_NAME, line no: 54, 0.9523809523809523, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9523809523809523, 0.6666666666666666, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9523809523809523, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 0.9523809523809523, 0.38095238095238093, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9523809523809523, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9523809523809523, 0.5238095238095238, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9523809523809523, 0.14285714285714285, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.9523809523809523, 0.8095238095238095, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,FList,SIMPLE_NAME, line no: 20, 0.9523809523809523, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9523809523809523, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9523809523809523, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9523809523809523, 0.14285714285714285, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,from,SIMPLE_NAME, line no: 54, 0.9523809523809523, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9523809523809523, 0.6666666666666666, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9523809523809523, 0.7142857142857143, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,emptyList,SIMPLE_NAME, line no: 149, 0.9523809523809523, 0.38095238095238093, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 0.9523809523809523, 0.9523809523809523, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.9510869565217391, 0.8260869565217391, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.9510869565217391, 0.8260869565217391, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9502164502164502, 0.9047619047619048, 0.0, 0.0, 0.045454545454545456
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.95, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.95, 0.55, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.95, 0.15, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.95, 0.95, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.9495652173913043, 0.8695652173913043, 0.0, 0.0, 0.08
i,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.9492753623188406, 0.782608695652174, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.9486166007905139, 0.8181818181818182, 0.0, 0.0, 0.13043478260869565
i >= minFragment,INFIX_EXPRESSION, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.948051948051948, 0.8571428571428571, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.948051948051948, 0.8571428571428571, 0.0, 0.0, 0.09090909090909091
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.9470588235294118, 0.8, 0.0, 0.0, 0.14705882352941177
nameIndex,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.9464882943143813, 0.8695652173913043, 0.0, 0.0, 0.07692307692307693
i,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.9464882943143813, 0.8260869565217391, 0.0, 0.0, 0.07692307692307693
nameIndex,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.9456521739130435, 0.6956521739130435, 0.0, 0.0, 0.25
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.9434523809523809, 0.7142857142857143, 0.16666666666666666, 0.0, 0.0625
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.9431818181818182, 0.8181818181818182, 0.0, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.9428571428571428, 0.8, 0.0, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.9428571428571428, 0.8, 0.0, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9416666666666667, 0.9, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9416666666666667, 0.9, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9416666666666667, 0.9, 0.0, 0.0, 0.041666666666666664
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.9409937888198757, 0.8695652173913043, 0.0, 0.0, 0.07142857142857142
i,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.9405594405594406, 0.8636363636363636, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.9405594405594406, 0.8636363636363636, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.9405594405594406, 0.8636363636363636, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.9405594405594406, 0.8636363636363636, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.9405594405594406, 0.8636363636363636, 0.0, 0.0, 0.07692307692307693
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.9404761904761905, 0.8571428571428571, 0.0, 0.0, 0.08333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.9400000000000001, 0.9, 0.0, 0.0, 0.04
nameIndex,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.9371980676328502, 0.8260869565217391, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.9371980676328502, 0.8260869565217391, 0.0, 0.0, 0.1111111111111111
TextRange,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.936231884057971, 0.8695652173913043, 0.0, 0.0, 0.06666666666666667
nameIndex,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.936231884057971, 0.8695652173913043, 0.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9357142857142857, 0.9, 0.0, 0.0, 0.03571428571428571
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.9345238095238095, 0.47619047619047616, 0.3333333333333333, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.9333333333333333, 0.85, 0.0, 0.0, 0.08333333333333333
TextRange,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.9333333333333333, 0.8333333333333334, 0.0, 0.0, 0.1
TextRange,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.9333333333333333, 0.8333333333333334, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.9327272727272727, 0.7727272727272727, 0.0, 0.0, 0.16
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.9304812834224598, 0.6363636363636364, 0.0, 0.0, 0.29411764705882354
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.9299999999999999, 0.85, 0.0, 0.0, 0.08
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.9295238095238095, 0.8095238095238095, 0.0, 0.0, 0.12
i,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.9292929292929293, 0.8181818181818182, 0.0, 0.0, 0.1111111111111111
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.9290322580645162, 0.8, 0.0, 0.0, 0.12903225806451613
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.9285714285714286, 0.5, 0.25, 0.0, 0.17857142857142858
null,NULL_LITERAL, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9285714285714285, 0.8571428571428571, 0.0, 0.0, 0.07142857142857142
TextRange,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.928388746803069, 0.8695652173913043, 0.0, 0.0, 0.058823529411764705
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.926923076923077, 0.85, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9261363636363636, 0.8636363636363636, 0.0, 0.0, 0.0625
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.9261363636363636, 0.8636363636363636, 0.0, 0.0, 0.0625
nameIndex,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.9260869565217391, 0.8260869565217391, 0.0, 0.0, 0.1
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.9258620689655173, 0.65, 0.0, 0.0, 0.27586206896551724
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.9251207729468599, 0.8695652173913043, 0.0, 0.0, 0.05555555555555555
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.925, 0.8, 0.0, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.925, 0.8, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.9242424242424243, 0.8333333333333334, 0.0, 0.0, 0.09090909090909091
TextRange,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9242424242424243, 0.8333333333333334, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.9234449760765551, 0.8181818181818182, 0.0, 0.0, 0.10526315789473684
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.9214285714285714, 0.85, 0.0, 0.0, 0.07142857142857142
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.9212121212121213, 0.8, 0.0, 0.0, 0.12121212121212122
i >= minFragment,INFIX_EXPRESSION, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.920952380952381, 0.7142857142857143, 0.16666666666666666, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.92, 0.8, 0.0, 0.0, 0.12
nameIndex,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.9169960474308301, 0.8260869565217391, 0.0, 0.0, 0.09090909090909091
TextRange,SIMPLE_NAME, line no: 214,isWildcard,SIMPLE_NAME, line no: 42, 0.9166666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isUpperCase,SIMPLE_NAME, line no: 45, 0.9166666666666666, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,true,BOOLEAN_LITERAL, line no: 46, 0.9166666666666666, 0.125, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prepend,SIMPLE_NAME, line no: 57, 0.9166666666666666, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex < 0,INFIX_EXPRESSION, line no: 144, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!isWildcard(patternIndex),PREFIX_EXPRESSION, line no: 147, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard(patternIndex),METHOD_INVOCATION, line no: 147, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex == myPattern.length,INFIX_EXPRESSION, line no: 148, 0.9166666666666666, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex - 1 ' '),METHOD_INVOCATION, line no: 157, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,' ',CHARACTER_LITERAL, line no: 157, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex=space ? indexOfWordStart(name patternIndex nameIndex) : StringUtil.indexOfIgnoreCase(name p nameIndex + 1),ASSIGNMENT, line no: 174, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p) || NameUtil.isWordStart(name nameIndex),INFIX_EXPRESSION, line no: 178, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!Character.isUpperCase(p),PREFIX_EXPRESSION, line no: 178, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(p),METHOD_INVOCATION, line no: 178, 0.9166666666666666, 0.9166666666666666, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.9159663865546218, 0.047619047619047616, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.9155844155844155, 0.7727272727272727, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.9155844155844155, 0.7727272727272727, 0.0, 0.0, 0.14285714285714285
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.9153846153846155, 0.8, 0.0, 0.0, 0.11538461538461539
FList,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9150197628458497, 0.8695652173913043, 0.0, 0.0, 0.045454545454545456
from,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9150197628458497, 0.8695652173913043, 0.0, 0.0, 0.045454545454545456
i,SIMPLE_NAME, line no: 214,i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214, 0.9150197628458497, 0.8695652173913043, 0.0, 0.0, 0.045454545454545456
FList,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9130434782608695, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9130434782608695, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9130434782608695, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9130434782608695, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9130434782608695, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9130434782608695, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9130434782608695, 0.9130434782608695, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.9125874125874125, 0.6818181818181818, 0.0, 0.0, 0.23076923076923078
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.9125874125874125, 0.6818181818181818, 0.0, 0.0, 0.23076923076923078
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.9111111111111112, 0.8, 0.0, 0.0, 0.1111111111111111
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.9092592592592592, 0.65, 0.0, 0.0, 0.25925925925925924
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.9090909090909092, 0.8181818181818182, 0.0, 0.0, 0.09090909090909091
i,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9090909090909091, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9090909090909091, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.9090909090909091, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9090909090909091, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9090909090909091, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.9090909090909091, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.9090909090909091, 0.7727272727272727, 0.0, 0.0, 0.13636363636363635
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9090909090909091, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9090909090909091, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9090909090909091, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9090909090909091, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9090909090909091, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9090909090909091, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9090909090909091, 0.9090909090909091, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.9047619047619048, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.9047619047619048, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9047619047619048, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.9047619047619048, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.9047619047619048, 0.9047619047619048, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.9030100334448161, 0.8260869565217391, 0.0, 0.0, 0.07692307692307693
from,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.9028985507246376, 0.8695652173913043, 0.0, 0.0, 0.03333333333333333
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.9025974025974025, 0.8571428571428571, 0.0, 0.0, 0.045454545454545456
i,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.9021739130434783, 0.6521739130434783, 0.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.9, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,head,SIMPLE_NAME, line no: 55, 0.9, 0.9, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.9, 0.9, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.9, 0.9, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.9, 0.8333333333333334, 0.0, 0.0, 0.06666666666666667
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.8996865203761756, 0.7272727272727273, 0.0, 0.0, 0.1724137931034483
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8967741935483872, 0.8, 0.0, 0.0, 0.0967741935483871
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.8961038961038961, 0.6818181818181818, 0.0, 0.0, 0.21428571428571427
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.8961038961038961, 0.6818181818181818, 0.0, 0.0, 0.21428571428571427
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8951048951048952, 0.8181818181818182, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8951048951048952, 0.8181818181818182, 0.0, 0.0, 0.07692307692307693
i,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.893719806763285, 0.782608695652174, 0.0, 0.0, 0.1111111111111111
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8934782608695652, 0.05, 0.0, 0.0, 0.043478260869565216
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.8927272727272727, 0.7727272727272727, 0.0, 0.0, 0.12
TextRange,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8921568627450981, 0.8333333333333334, 0.0, 0.0, 0.058823529411764705
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8916666666666666, 0.85, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8916666666666666, 0.7, 0.0, 0.0, 0.041666666666666664
nameIndex,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8885869565217391, 0.8260869565217391, 0.0, 0.0, 0.0625
i >= minFragment,INFIX_EXPRESSION, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8874458874458874, 0.8571428571428571, 0.0, 0.0, 0.030303030303030304
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.8863636363636364, 0.6363636363636364, 0.0, 0.0, 0.25
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8857142857142857, 0.85, 0.0, 0.0, 0.03571428571428571
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.8833333333333333, 0.5, 0.25, 0.0, 0.13333333333333333
TextRange,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8826086956521739, 0.782608695652174, 0.0, 0.0, 0.1
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.8809523809523809, 0.47619047619047616, 0.3333333333333333, 0.0, 0.07142857142857142
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.8761904761904762, 0.47619047619047616, 0.3333333333333333, 0.0, 0.06666666666666667
TextRange,SIMPLE_NAME, line no: 214,i++,POSTFIX_EXPRESSION, line no: 42, 0.875, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.875, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.875, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head != null && head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head != null,INFIX_EXPRESSION, line no: 56, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragments != null,INFIX_EXPRESSION, line no: 114, 0.875, 0.875, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[patternIndex + i]),METHOD_INVOCATION, line no: 198, 0.875, 0.875, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.8735177865612649, 0.782608695652174, 0.0, 0.0, 0.09090909090909091
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.8724137931034482, 0.45, 0.25, 0.0, 0.1724137931034483
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8708133971291867, 0.8181818181818182, 0.0, 0.0, 0.05263157894736842
FList,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8695652173913043, 0.6956521739130435, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8695652173913043, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8695652173913043, 0.6086956521739131, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8695652173913043, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.8695652173913043, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8695652173913043, 0.6956521739130435, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8695652173913043, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8695652173913043, 0.6086956521739131, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8695652173913043, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8695652173913043, 0.6956521739130435, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8695652173913043, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8695652173913043, 0.6086956521739131, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8695652173913043, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.8695652173913043, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8695652173913043, 0.6956521739130435, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8695652173913043, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8695652173913043, 0.6086956521739131, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8695652173913043, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.8695652173913043, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8695652173913043, 0.4782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8695652173913043, 0.6086956521739131, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8695652173913043, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8695652173913043, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.8695652173913043, 0.30434782608695654, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8695652173913043, 0.6086956521739131, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8695652173913043, 0.8695652173913043, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.868421052631579, 0.5, 0.0, 0.0, 0.3684210526315789
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8683473389355743, 0.8095238095238095, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8650793650793651, 0.8095238095238095, 0.0, 0.0, 0.05555555555555555
i,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8636363636363636, 0.5, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8636363636363636, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8636363636363636, 0.6818181818181818, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8636363636363636, 0.5, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8636363636363636, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8636363636363636, 0.6818181818181818, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8636363636363636, 0.7272727272727273, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8636363636363636, 0.5, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8636363636363636, 0.6363636363636364, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8636363636363636, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8636363636363636, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8636363636363636, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8636363636363636, 0.6363636363636364, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8636363636363636, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8636363636363636, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8636363636363636, 0.7272727272727273, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8636363636363636, 0.5, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8636363636363636, 0.3181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8636363636363636, 0.6363636363636364, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8636363636363636, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8636363636363636, 0.8636363636363636, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.8611111111111112, 0.25, 0.5, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.8595238095238096, 0.47619047619047616, 0.3333333333333333, 0.0, 0.05
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.8593073593073592, 0.45454545454545453, 0.3333333333333333, 0.0, 0.07142857142857142
i >= minFragment,INFIX_EXPRESSION, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8571428571428571, 0.6666666666666666, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8571428571428571, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8571428571428571, 0.7142857142857143, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8571428571428571, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8571428571428571, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8571428571428571, 0.7142857142857143, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8571428571428571, 0.5238095238095238, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8571428571428571, 0.6666666666666666, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8571428571428571, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,false,BOOLEAN_LITERAL, line no: 51, 0.8571428571428571, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,ranges,SIMPLE_NAME, line no: 54, 0.8571428571428571, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,head,SIMPLE_NAME, line no: 55, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,ranges.getHead(),METHOD_INVOCATION, line no: 55, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,getHead,SIMPLE_NAME, line no: 55, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,head.getStartOffset() == from + length,INFIX_EXPRESSION, line no: 56, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,head.getStartOffset(),METHOD_INVOCATION, line no: 56, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,from + length,INFIX_EXPRESSION, line no: 56, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,ranges.prepend(TextRange.from(from length)),METHOD_INVOCATION, line no: 59, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,TextRange.from(from length),METHOD_INVOCATION, line no: 59, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,fragments,SIMPLE_NAME, line no: 113, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.8571428571428571, 0.3333333333333333, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8571428571428571, 0.8571428571428571, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8560606060606061, 0.7727272727272727, 0.0, 0.0, 0.08333333333333333
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.8528138528138528, 0.7619047619047619, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.8522727272727273, 0.7272727272727273, 0.0, 0.0, 0.125
nameIndex,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.8521739130434782, 0.6521739130434783, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.85, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.85, 0.7, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,len,SIMPLE_NAME, line no: 77, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.85, 0.55, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.85, 0.85, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.85, 0.85, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.85, 0.75, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8496503496503496, 0.7727272727272727, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8434782608695652, 0.8, 0.0, 0.0, 0.043478260869565216
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8416666666666667, 0.8, 0.0, 0.0, 0.041666666666666664
minFragment,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.8383838383838385, 0.7272727272727273, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8352402745995424, 0.782608695652174, 0.0, 0.0, 0.05263157894736842
TextRange,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8333333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8333333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8333333333333334, 0.6666666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8333333333333334, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8333333333333334, 0.2916666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FList.emptyList(),METHOD_INVOCATION, line no: 149, 0.8333333333333334, 0.2916666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordStart(myPattern[patternIndex - 2]),METHOD_INVOCATION, line no: 159, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 2],ARRAY_ACCESS, line no: 159, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex - 2,INFIX_EXPRESSION, line no: 159, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges != null,INFIX_EXPRESSION, line no: 167, 0.8333333333333334, 0.5833333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i < minFragment,INFIX_EXPRESSION, line no: 199, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex + i] != name.charAt(nameIndex + i),INFIX_EXPRESSION, line no: 202, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8333333333333334, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.8333333333333334, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8333333333333334, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8333333333333334, 0.8333333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.832608695652174, 0.782608695652174, 0.0, 0.0, 0.05
i,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.8315508021390374, 0.7727272727272727, 0.0, 0.0, 0.058823529411764705
i >= minFragment,INFIX_EXPRESSION, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.8285714285714285, 0.42857142857142855, 0.3333333333333333, 0.0, 0.06666666666666667
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8282828282828283, 0.7727272727272727, 0.0, 0.0, 0.05555555555555555
FList,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8260869565217391, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8260869565217391, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8260869565217391, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8260869565217391, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8260869565217391, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8260869565217391, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8260869565217391, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8260869565217391, 0.8260869565217391, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.8245614035087718, 0.6666666666666666, 0.0, 0.0, 0.15789473684210525
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8227272727272728, 0.7727272727272727, 0.0, 0.0, 0.05
nameIndex,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.822463768115942, 0.7391304347826086, 0.0, 0.0, 0.08333333333333333
i,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8181818181818182, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8181818181818182, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8181818181818182, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8181818181818182, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8181818181818182, 0.8181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.8166666666666667, 0.6666666666666666, 0.0, 0.0, 0.15
nameIndex,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.8132992327365729, 0.6956521739130435, 0.0, 0.0, 0.11764705882352941
i >= minFragment,INFIX_EXPRESSION, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8095238095238095, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8095238095238095, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8095238095238095, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,options,SIMPLE_NAME, line no: 38, 0.8095238095238095, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myHasHumps,SIMPLE_NAME, line no: 36, 0.8095238095238095, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,getEndOffset,SIMPLE_NAME, line no: 57, 0.8095238095238095, 0.6666666666666666, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,len,SIMPLE_NAME, line no: 77, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,range.getLength(),METHOD_INVOCATION, line no: 77, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,getLength,SIMPLE_NAME, line no: 77, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,integral+=range.getStartOffset() * len + len * (len - 1) / 2,ASSIGNMENT, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,range.getStartOffset() * len + len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,range.getStartOffset() * len,INFIX_EXPRESSION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,range.getStartOffset(),METHOD_INVOCATION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,len * (len - 1) / 2,INFIX_EXPRESSION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,len * (len - 1),INFIX_EXPRESSION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,(len - 1),PARENTHESIZED_EXPRESSION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,len - 1,INFIX_EXPRESSION, line no: 78, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,int i=range.getStartOffset(),VARIABLE_DECLARATION_EXPRESSION, line no: 79, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i < range.getEndOffset(),INFIX_EXPRESSION, line no: 79, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,range.getEndOffset(),METHOD_INVOCATION, line no: 79, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,fragmentCount++,POSTFIX_EXPRESSION, line no: 89, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isWordSeparator,SIMPLE_NAME, line no: 125, 0.8095238095238095, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchWildcards,SIMPLE_NAME, line no: 139, 0.8095238095238095, 0.3333333333333333, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWordStart,SIMPLE_NAME, line no: 203, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchWildcards(name patternIndex + i nextWordStart),METHOD_INVOCATION, line no: 204, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isWildcard(patternIndex + i),METHOD_INVOCATION, line no: 218, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i--,POSTFIX_EXPRESSION, line no: 231, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startFrom,SIMPLE_NAME, line no: 249, 0.8095238095238095, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,p == '.' || NameUtil.isWordSeparator(p),INFIX_EXPRESSION, line no: 251, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,p == '.',INFIX_EXPRESSION, line no: 251, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,'.',CHARACTER_LITERAL, line no: 251, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordSeparator(p),METHOD_INVOCATION, line no: 251, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startFrom >= name.length() || myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 254, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startFrom >= name.length(),INFIX_EXPRESSION, line no: 254, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myHasHumps && Character.isLowerCase(p) && !(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),INFIX_EXPRESSION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isLowerCase(p),METHOD_INVOCATION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isLowerCase,SIMPLE_NAME, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PREFIX_EXPRESSION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,(patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1])),PARENTHESIZED_EXPRESSION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex > 0 && NameUtil.isWordSeparator(myPattern[patternIndex - 1]),INFIX_EXPRESSION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex > 0,INFIX_EXPRESSION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordSeparator(myPattern[patternIndex - 1]),METHOD_INVOCATION, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[patternIndex - 1],ARRAY_ACCESS, line no: 255, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.nextWord(name nextWordStart),METHOD_INVOCATION, line no: 260, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWord,SIMPLE_NAME, line no: 260, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.charsEqualIgnoreCase(p name.charAt(nextWordStart)),METHOD_INVOCATION, line no: 264, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,charsEqualIgnoreCase,SIMPLE_NAME, line no: 264, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.charAt(nextWordStart),METHOD_INVOCATION, line no: 264, 0.8095238095238095, 0.8095238095238095, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.8068181818181818, 0.6818181818181818, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.8038095238095239, 0.5238095238095238, 0.0, 0.0, 0.28
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.8, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.8, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,options,SIMPLE_NAME, line no: 38, 0.8, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,c,SIMPLE_NAME, line no: 80, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,next,SIMPLE_NAME, line no: 116, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.8, 0.8, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.8, 0.8, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.8, 0.75, 0.0, 0.0, 0.05
TextRange,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.7916666666666666, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,c,SIMPLE_NAME, line no: 80, 0.7916666666666666, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),INFIX_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,space && nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex != name.length(),INFIX_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,(patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2])),PARENTHESIZED_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]),INFIX_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 2,INFIX_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordStart(myPattern[patternIndex - 2]),PREFIX_EXPRESSION, line no: 159, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,indexOfWordStart(name patternIndex + i nameIndex + i),METHOD_INVOCATION, line no: 203, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=NameUtil.nextWord(name nextWordStart),ASSIGNMENT, line no: 260, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart >= name.length(),INFIX_EXPRESSION, line no: 261, 0.7916666666666666, 0.7916666666666666, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.7884615384615384, 0.5, 0.25, 0.0, 0.038461538461538464
FList,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.782608695652174, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.782608695652174, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.782608695652174, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.782608695652174, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.782608695652174, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.782608695652174, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.782608695652174, 0.782608695652174, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.7758064516129033, 0.55, 0.0, 0.0, 0.22580645161290322
i,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.7727272727272727, 0.7272727272727273, 0.0, 0.0, 0.045454545454545456
i,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,options,SIMPLE_NAME, line no: 38, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,options,SIMPLE_NAME, line no: 38, 0.7727272727272727, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.7727272727272727, 0.7727272727272727, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.77, 0.65, 0.0, 0.0, 0.12
TextRange,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.7681159420289855, 0.043478260869565216, 0.0, 0.0, 0.3333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.7653846153846154, 0.65, 0.0, 0.0, 0.11538461538461539
i >= minFragment,INFIX_EXPRESSION, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.761904761904762, 0.42857142857142855, 0.25, 0.0, 0.08333333333333333
i >= minFragment,INFIX_EXPRESSION, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.7619047619047619, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.7619047619047619, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,options,SIMPLE_NAME, line no: 38, 0.7619047619047619, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214," ()",STRING_LITERAL, line no: 223, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Iterator,SIMPLE_NAME, line no: 26, 0.7619047619047619, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,pattern,SIMPLE_NAME, line no: 38, 0.7619047619047619, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,options,SIMPLE_NAME, line no: 38, 0.7619047619047619, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.trimEnd(pattern "* ").toCharArray(),METHOD_INVOCATION, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.trimEnd(pattern "* "),METHOD_INVOCATION, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,trimEnd,SIMPLE_NAME, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,"* ",STRING_LITERAL, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,toCharArray,SIMPLE_NAME, line no: 40, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isWildcard(i),METHOD_INVOCATION, line no: 42, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,c,SIMPLE_NAME, line no: 80, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,name.charAt(i),METHOD_INVOCATION, line no: 80, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.indexOf(seq c p + 1 myPattern.length false),METHOD_INVOCATION, line no: 81, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,indexOf,SIMPLE_NAME, line no: 81, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,p + 1,INFIX_EXPRESSION, line no: 81, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isUpperCase(myPattern[p]) || i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isUpperCase(myPattern[p]),METHOD_INVOCATION, line no: 85, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[p],ARRAY_ACCESS, line no: 85, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i == range.getStartOffset(),INFIX_EXPRESSION, line no: 85, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,iterator,SIMPLE_NAME, line no: 115, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,fragments.iterator(),METHOD_INVOCATION, line no: 115, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!iterator.hasNext() || isStartMatch(name iterator.next().getStartOffset()),INFIX_EXPRESSION, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!iterator.hasNext(),PREFIX_EXPRESSION, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,iterator.hasNext(),METHOD_INVOCATION, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,hasNext,SIMPLE_NAME, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isStartMatch(name iterator.next().getStartOffset()),METHOD_INVOCATION, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,iterator.next().getStartOffset(),METHOD_INVOCATION, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,iterator.next(),METHOD_INVOCATION, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,next,SIMPLE_NAME, line no: 116, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.7619047619047619, 0.7619047619047619, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.7587412587412588, 0.6818181818181818, 0.0, 0.0, 0.07692307692307693
i,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.7544757033248082, 0.6956521739130435, 0.0, 0.0, 0.058823529411764705
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.75, 0.75, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214," ()",STRING_LITERAL, line no: 223, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,options,SIMPLE_NAME, line no: 38, 0.75, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions=options,ASSIGNMENT, line no: 39, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern=StringUtil.trimEnd(pattern "* ").toCharArray(),ASSIGNMENT, line no: 40, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i < myPattern.length,INFIX_EXPRESSION, line no: 44, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps=false,ASSIGNMENT, line no: 51, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.75, 0.041666666666666664, 0.0, 0.0, 0.3333333333333333
TextRange,SIMPLE_NAME, line no: 214,p=StringUtil.indexOf(seq c p + 1 myPattern.length false),ASSIGNMENT, line no: 81, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,p < 0,INFIX_EXPRESSION, line no: 82, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),METHOD_INVOCATION, line no: 237, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER && nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == FIRST_LETTER,INFIX_EXPRESSION, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,FIRST_LETTER,SIMPLE_NAME, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex > 0,INFIX_EXPRESSION, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myOptions == NONE,INFIX_EXPRESSION, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NONE,SIMPLE_NAME, line no: 238, 0.75, 0.75, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.7430830039525692, 0.6521739130434783, 0.0, 0.0, 0.09090909090909091
TextRange,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.7420289855072464, 0.6086956521739131, 0.0, 0.0, 0.13333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.7402597402597402, 0.45454545454545453, 0.0, 0.0, 0.2857142857142857
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.7402597402597402, 0.45454545454545453, 0.0, 0.0, 0.2857142857142857
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.7398119122257053, 0.6363636363636364, 0.0, 0.0, 0.10344827586206896
FList,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7391304347826086, 0.7391304347826086, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.7316017316017316, 0.6363636363636364, 0.0, 0.0, 0.09523809523809523
from,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.7282608695652174, 0.4782608695652174, 0.0, 0.0, 0.25
i,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.7272727272727273, 0.7272727272727273, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.7166666666666667, 0.5833333333333334, 0.0, 0.0, 0.13333333333333333
i >= minFragment,INFIX_EXPRESSION, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214," ()",STRING_LITERAL, line no: 223, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214," ()",STRING_LITERAL, line no: 223, 0.7142857142857143, 0.7142857142857143, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchFragment,SIMPLE_NAME, line no: 151, 0.7083333333333334, 0.7083333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex < name.length() && StringUtil.charsEqual(p name.charAt(nameIndex) myOptions == FIRST_LETTER && nameIndex > 0 || myOptions == NONE),INFIX_EXPRESSION, line no: 237, 0.7083333333333334, 0.7083333333333334, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nameIndex < name.length(),INFIX_EXPRESSION, line no: 237, 0.7083333333333334, 0.7083333333333334, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.7, 0.7, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6981481481481482, 0.55, 0.0, 0.0, 0.14814814814814814
i,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6976284584980237, 0.6521739130434783, 0.0, 0.0, 0.045454545454545456
FList,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6956521739130435, 0.6956521739130435, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6825396825396826, 0.5714285714285714, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6818181818181818, 0.6818181818181818, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.6782608695652175, 0.4782608695652174, 0.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.6761904761904762, 0.47619047619047616, 0.0, 0.0, 0.2
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.6761904761904762, 0.47619047619047616, 0.0, 0.0, 0.2
from,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.6753623188405797, 0.6086956521739131, 0.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.67, 0.55, 0.0, 0.0, 0.12
i >= minFragment,INFIX_EXPRESSION, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchFragment(name patternIndex nameIndex),METHOD_INVOCATION, line no: 151, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),METHOD_INVOCATION, line no: 223, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,containsAnyChar,SIMPLE_NAME, line no: 223, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214," ()",STRING_LITERAL, line no: 223, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6601731601731602, 0.5238095238095238, 0.0, 0.0, 0.13636363636363635
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.6590909090909092, 0.4090909090909091, 0.0, 0.0, 0.25
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6547619047619048, 0.5714285714285714, 0.0, 0.0, 0.08333333333333333
i,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.6545454545454545, 0.45454545454545453, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.6538461538461539, 0.5, 0.0, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.6538461538461539, 0.5, 0.0, 0.0, 0.15384615384615385
FList,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6521739130434783, 0.6521739130434783, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6428571428571428, 0.5, 0.0, 0.0, 0.14285714285714285
i,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6363636363636364, 0.6363636363636364, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,getTail,SIMPLE_NAME, line no: 57, 0.6363636363636364, 0.6363636363636364, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6363636363636364, 0.6363636363636364, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6363636363636364, 0.6363636363636364, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6363636363636364, 0.6363636363636364, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.6363636363636364, 0.6363636363636364, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.6349206349206349, 0.5238095238095238, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.6347826086956522, 0.43478260869565216, 0.0, 0.0, 0.2
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.6333333333333334, 0.55, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.6304347826086957, 0.5, 0.0, 0.0, 0.13043478260869565
TextRange,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.625, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.625, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 124, 0.625, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,i < startIndex,INFIX_EXPRESSION, line no: 124, 0.625, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=indexOfWordStart(name patternIndex + i nameIndex + i),ASSIGNMENT, line no: 222, 0.625, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!myHasHumps && StringUtil.containsAnyChar(name " ()" nameIndex + i nextWordStart),INFIX_EXPRESSION, line no: 223, 0.625, 0.625, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!myHasHumps,PREFIX_EXPRESSION, line no: 223, 0.625, 0.625, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6238095238095238, 0.5238095238095238, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.6212121212121212, 0.45454545454545453, 0.0, 0.0, 0.16666666666666666
nameIndex,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6211180124223603, 0.4782608695652174, 0.0, 0.0, 0.14285714285714285
i >= minFragment,INFIX_EXPRESSION, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,head.getEndOffset(),METHOD_INVOCATION, line no: 57, 0.6190476190476191, 0.6190476190476191, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6176470588235294, 0.5, 0.0, 0.0, 0.11764705882352941
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.6176470588235294, 0.5, 0.0, 0.0, 0.11764705882352941
nameIndex,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.6135265700483092, 0.391304347826087, 0.0, 0.0, 0.2222222222222222
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.6124401913875598, 0.45454545454545453, 0.0, 0.0, 0.15789473684210525
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.6103896103896104, 0.42857142857142855, 0.0, 0.0, 0.18181818181818182
FList,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.6086956521739131, 0.6086956521739131, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.6032608695652174, 0.4782608695652174, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.5965909090909092, 0.4090909090909091, 0.0, 0.0, 0.1875
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.5928571428571429, 0.45, 0.0, 0.0, 0.14285714285714285
i,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.5909090909090909, 0.5909090909090909, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.5909090909090909, 0.5909090909090909, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.5909090909090909, 0.5909090909090909, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ranges.getTail().prepend(new TextRange(from head.getEndOffset())),METHOD_INVOCATION, line no: 57, 0.5909090909090909, 0.5909090909090909, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,ranges.getTail(),METHOD_INVOCATION, line no: 57, 0.5909090909090909, 0.5909090909090909, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,new TextRange(from head.getEndOffset()),CLASS_INSTANCE_CREATION, line no: 57, 0.5909090909090909, 0.5909090909090909, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5900000000000001, 0.55, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5857142857142857, 0.55, 0.0, 0.0, 0.03571428571428571
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.5804195804195804, 0.2727272727272727, 0.0, 0.0, 0.3076923076923077
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.5795454545454546, 0.45454545454545453, 0.0, 0.0, 0.125
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.5795454545454546, 0.45454545454545453, 0.0, 0.0, 0.125
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.579004329004329, 0.23809523809523808, 0.25, 0.0, 0.09090909090909091
nameIndex,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5782608695652174, 0.4782608695652174, 0.0, 0.0, 0.1
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5769230769230769, 0.5, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5769230769230769, 0.5, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5769230769230769, 0.5, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5764411027568923, 0.5238095238095238, 0.0, 0.0, 0.05263157894736842
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5714285714285714, 0.5714285714285714, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5714285714285714, 0.5714285714285714, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5714285714285714, 0.5714285714285714, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5692640692640693, 0.5238095238095238, 0.0, 0.0, 0.045454545454545456
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.5669856459330144, 0.4090909090909091, 0.0, 0.0, 0.15789473684210525
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5666666666666667, 0.5, 0.0, 0.0, 0.06666666666666667
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5625, 0.5, 0.0, 0.0, 0.0625
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.5458937198067633, 0.43478260869565216, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.5458937198067633, 0.43478260869565216, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.5454545454545454, 0.45454545454545453, 0.0, 0.0, 0.09090909090909091
i,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5454545454545454, 0.5454545454545454, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.5454545454545454, 0.045454545454545456, 0.0, 0.0, 0.09090909090909091
TextRange,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.5434782608695652, 0.043478260869565216, 0.0, 0.0, 0.5
TextRange,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.5416666666666666, 0.041666666666666664, 0.0, 0.0, 0.5
from,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.5407608695652174, 0.4782608695652174, 0.0, 0.0, 0.0625
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.5378787878787878, 0.45454545454545453, 0.0, 0.0, 0.08333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.5324675324675324, 0.3181818181818182, 0.0, 0.0, 0.21428571428571427
i,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.525691699604743, 0.43478260869565216, 0.0, 0.0, 0.09090909090909091
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5238095238095238, 0.5238095238095238, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.5202020202020202, 0.4090909090909091, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.5202020202020202, 0.4090909090909091, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.5181159420289855, 0.43478260869565216, 0.0, 0.0, 0.08333333333333333
i,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.5181159420289855, 0.43478260869565216, 0.0, 0.0, 0.08333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.51, 0.35, 0.0, 0.0, 0.16
i,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.5024154589371981, 0.391304347826087, 0.0, 0.0, 0.1111111111111111
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.5, 0.5, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.5, 0.5, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.5, 0.5, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.5, 0.5, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5, 0.5, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.5, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.5, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.5, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.5, 0.5, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.5, 0.5, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.49624060150375937, 0.2857142857142857, 0.0, 0.0, 0.21052631578947367
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.49242424242424243, 0.4090909090909091, 0.0, 0.0, 0.08333333333333333
TextRange,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.491304347826087, 0.391304347826087, 0.0, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.4833333333333333, 0.3333333333333333, 0.0, 0.0, 0.15
nameIndex,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.48221343873517786, 0.391304347826087, 0.0, 0.0, 0.09090909090909091
FList,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.4782608695652174, 0.4782608695652174, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.47619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.47619047619047616, 0.47619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.47619047619047616, 0.47619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.47619047619047616, 0.47619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.47619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.47619047619047616, 0.47619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.47619047619047616, 0.3333333333333333, 0.0, 0.0, 0.14285714285714285
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.47619047619047616, 0.47619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.47619047619047616, 0.47619047619047616, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.475, 0.375, 0.0, 0.0, 0.1
i,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.4746376811594203, 0.391304347826087, 0.0, 0.0, 0.08333333333333333
nameIndex,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.4682274247491639, 0.391304347826087, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.4645161290322581, 0.4, 0.0, 0.0, 0.06451612903225806
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.45999999999999996, 0.3, 0.0, 0.0, 0.16
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 0 || patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4583333333333333, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex < 0,INFIX_EXPRESSION, line no: 245, 0.4583333333333333, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex >= myPattern.length,INFIX_EXPRESSION, line no: 245, 0.4583333333333333, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[patternIndex] == c,INFIX_EXPRESSION, line no: 246, 0.4583333333333333, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,StringUtil.indexOfIgnoreCase(name p startFrom + 1),METHOD_INVOCATION, line no: 252, 0.4583333333333333, 0.4583333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,startFrom + 1,INFIX_EXPRESSION, line no: 252, 0.4583333333333333, 0.4583333333333333, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.45454545454545453, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.45454545454545453, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.45454545454545453, 0.45454545454545453, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.45151515151515154, 0.3181818181818182, 0.0, 0.0, 0.13333333333333333
FList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.43478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.43478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.43478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,prependRange,SIMPLE_NAME, line no: 54, 0.43478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.43478260869565216, 0.43478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.42934782608695654, 0.30434782608695654, 0.0, 0.0, 0.125
i >= minFragment,INFIX_EXPRESSION, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.42857142857142855, 0.42857142857142855, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.42857142857142855, 0.42857142857142855, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.42857142857142855, 0.42857142857142855, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.42857142857142855, 0.42857142857142855, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Character.isUpperCase(myPattern[i]),METHOD_INVOCATION, line no: 45, 0.4166666666666667, 0.4166666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myPattern[i],ARRAY_ACCESS, line no: 45, 0.4166666666666667, 0.4166666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.isWordSeparator(name.charAt(i)),METHOD_INVOCATION, line no: 125, 0.4166666666666667, 0.4166666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' '),METHOD_INVOCATION, line no: 242, 0.4166666666666667, 0.4166666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex '*'),METHOD_INVOCATION, line no: 242, 0.4166666666666667, 0.4166666666666667, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.41558441558441556, 0.2727272727272727, 0.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.41558441558441556, 0.2727272727272727, 0.0, 0.0, 0.14285714285714285
i,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.4090909090909091, 0.4090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.4090909090909091, 0.4090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.4090909090909091, 0.4090909090909091, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.4090909090909091, 0.4090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.4090909090909091, 0.4090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.4090909090909091, 0.4090909090909091, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.4088235294117647, 0.35, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.406060606060606, 0.2727272727272727, 0.0, 0.0, 0.13333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.4, 0.4, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,prependRange(ranges nameIndex i),METHOD_INVOCATION, line no: 206, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.391304347826087, 0.391304347826087, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.3858695652173913, 0.2608695652173913, 0.0, 0.0, 0.125
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.3857142857142857, 0.2857142857142857, 0.0, 0.0, 0.1
i >= minFragment,INFIX_EXPRESSION, line no: 214,String,SIMPLE_NAME, line no: 38, 0.38095238095238093, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.38095238095238093, 0.38095238095238093, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.38095238095238093, 0.38095238095238093, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.38095238095238093, 0.38095238095238093, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.38095238095238093, 0.38095238095238093, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.38095238095238093, 0.38095238095238093, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.38095238095238093, 0.38095238095238093, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.3769230769230769, 0.3, 0.0, 0.0, 0.07692307692307693
TextRange,SIMPLE_NAME, line no: 214,!NameUtil.isWordSeparator(name.charAt(i)),PREFIX_EXPRESSION, line no: 125, 0.375, 0.375, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,isPatternChar(patternIndex ' ') || isPatternChar(patternIndex '*'),INFIX_EXPRESSION, line no: 242, 0.375, 0.375, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3727272727272727, 0.2727272727272727, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3727272727272727, 0.2727272727272727, 0.0, 0.0, 0.1
i,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.36363636363636365, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.36363636363636365, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.36363636363636365, 0.36363636363636365, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3626373626373626, 0.2857142857142857, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3625, 0.3, 0.0, 0.0, 0.0625
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,String,SIMPLE_NAME, line no: 38, 0.35, 0.05, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.34782608695652173, 0.34782608695652173, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,String,SIMPLE_NAME, line no: 38, 0.3333333333333333, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.3333333333333333, 0.08333333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,c == myPattern[p] ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 86, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,c == myPattern[p],INFIX_EXPRESSION, line no: 86, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,String,SIMPLE_NAME, line no: 38, 0.3333333333333333, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,String,SIMPLE_NAME, line no: 38, 0.3181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.3181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,String,SIMPLE_NAME, line no: 38, 0.3181818181818182, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.3181818181818182, 0.3181818181818182, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.30434782608695654, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.30434782608695654, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.30434782608695654, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.30434782608695654, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.30434782608695654, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,String,SIMPLE_NAME, line no: 38, 0.30434782608695654, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.30434782608695654, 0.30434782608695654, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.3, 0.3, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.3, 0.3, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.3, 0.3, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.3, 0.3, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.3, 0.3, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingCase+=c == myPattern[p] ? 1 : 0,ASSIGNMENT, line no: 86, 0.2916666666666667, 0.2916666666666667, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingFragments(name) != null,INFIX_EXPRESSION, line no: 134, 0.2916666666666667, 0.2916666666666667, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2857142857142857, 0.2857142857142857, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.2608695652173913, 0.2608695652173913, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchWildcards(name 0 0),METHOD_INVOCATION, line no: 139, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=" + new String(myPattern) + "  myOptions="+ myOptions+ '}',INFIX_EXPRESSION, line no: 272, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"MinusculeMatcher{" + "myPattern=",INFIX_EXPRESSION, line no: 272, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"MinusculeMatcher{",STRING_LITERAL, line no: 272, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"myPattern=",STRING_LITERAL, line no: 273, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,new String(myPattern),CLASS_INSTANCE_CREATION, line no: 273, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,"  myOptions=",STRING_LITERAL, line no: 274, 0.25, 0.25, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,'}',CHARACTER_LITERAL, line no: 275, 0.25, 0.25, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.23809523809523808, 0.23809523809523808, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.22727272727272727, 0.22727272727272727, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.22727272727272727, 0.22727272727272727, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.21969696969696967, 0.13636363636363635, 0.0, 0.0, 0.08333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.21969696969696967, 0.13636363636363635, 0.0, 0.0, 0.08333333333333333
FList,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.21739130434782608, 0.21739130434782608, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.21739130434782608, 0.21739130434782608, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.21739130434782608, 0.21739130434782608, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.21739130434782608, 0.21739130434782608, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.21428571428571427, 0.0, 0.0, 0.0, 0.21428571428571427
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.21428571428571427, 0.0, 0.0, 0.0, 0.21428571428571427
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=nameIndex + i,ASSIGNMENT, line no: 219, 0.20833333333333334, 0.20833333333333334, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.1984126984126984, 0.14285714285714285, 0.0, 0.0, 0.05555555555555555
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.19166666666666665, 0.15, 0.0, 0.0, 0.041666666666666664
FList,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.16666666666666666, 0.0, 0.0, 0.0, 0.16666666666666666
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.16666666666666666, 0.0, 0.0, 0.0, 0.16666666666666666
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.16666666666666666, 0.0, 0.0, 0.0, 0.16666666666666666
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.15384615384615385, 0.0, 0.0, 0.0, 0.15384615384615385
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.15384615384615385, 0.0, 0.0, 0.0, 0.15384615384615385
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.15, 0.15, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.15, 0.0, 0.0, 0.0, 0.15
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,text,SIMPLE_NAME, line no: 19, 0.14545454545454545, 0.045454545454545456, 0.0, 0.0, 0.1
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,text,SIMPLE_NAME, line no: 19, 0.14545454545454545, 0.045454545454545456, 0.0, 0.0, 0.1
i >= minFragment,INFIX_EXPRESSION, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.14285714285714285, 0.14285714285714285, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.14285714285714285, 0.14285714285714285, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.14285714285714285, 0.14285714285714285, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
nameIndex,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.14285714285714285, 0.0, 0.0, 0.0, 0.14285714285714285
null,NULL_LITERAL, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.14285714285714285, 0.14285714285714285, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.14285714285714285, 0.14285714285714285, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13636363636363635, 0.13636363636363635, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.13333333333333333, 0.0, 0.0, 0.0, 0.13333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.13333333333333333, 0.0, 0.0, 0.0, 0.13333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.13333333333333333, 0.0, 0.0, 0.0, 0.13333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.13333333333333333, 0.0, 0.0, 0.0, 0.13333333333333333
FList,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,first=range,ASSIGNMENT, line no: 75, 0.13043478260869565, 0.13043478260869565, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.12878787878787878, 0.045454545454545456, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.125, 0.0, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.125, 0.0, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.125, 0.0, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,myHasHumps=true,ASSIGNMENT, line no: 46, 0.125, 0.125, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.125, 0.0, 0.0, 0.0, 0.125
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.125, 0.0, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.125, 0.0, 0.0, 0.0, 0.125
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.125, 0.0, 0.0, 0.0, 0.125
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.11538461538461539, 0.0, 0.0, 0.0, 0.11538461538461539
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.1111111111111111, 0.0, 0.0, 0.0, 0.1111111111111111
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.1111111111111111, 0.0, 0.0, 0.0, 0.1111111111111111
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.1111111111111111, 0.0, 0.0, 0.0, 0.1111111111111111
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,text,SIMPLE_NAME, line no: 19, 0.11011904761904762, 0.047619047619047616, 0.0, 0.0, 0.0625
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.10526315789473684, 0.0, 0.0, 0.0, 0.10526315789473684
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.10526315789473684, 0.0, 0.0, 0.0, 0.10526315789473684
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.10317460317460317, 0.047619047619047616, 0.0, 0.0, 0.05555555555555555
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.1, 0.1, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.1, 0.0, 0.0, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.1, 0.0, 0.0, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.1, 0.0, 0.0, 0.0, 0.1
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.1, 0.0, 0.0, 0.0, 0.1
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,text,SIMPLE_NAME, line no: 19, 0.09545454545454546, 0.05, 0.0, 0.0, 0.045454545454545456
i >= minFragment,INFIX_EXPRESSION, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.09523809523809523, 0.09523809523809523, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.09523809523809523, 0.0, 0.0, 0.0, 0.09523809523809523
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.09523809523809523, 0.0, 0.0, 0.0, 0.09523809523809523
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.09523809523809523, 0.09523809523809523, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.09523809523809523, 0.09523809523809523, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.09166666666666667, 0.05, 0.0, 0.0, 0.041666666666666664
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.09090909090909091, 0.0, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.09090909090909091, 0.0, 0.0, 0.0, 0.09090909090909091
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.09090909090909091, 0.09090909090909091, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.09090909090909091, 0.09090909090909091, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.09090909090909091, 0.09090909090909091, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.08695652173913043, 0.08695652173913043, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.08695652173913043, 0.08695652173913043, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.08695652173913043, 0.08695652173913043, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.08695652173913043, 0.08695652173913043, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
TextRange,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.08333333333333333, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.08333333333333333, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,nextWordStart=-1,ASSIGNMENT, line no: 224, 0.08333333333333333, 0.08333333333333333, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.08333333333333333, 0.0, 0.0, 0.0, 0.08333333333333333
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.08, 0.0, 0.0, 0.0, 0.08
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.08, 0.0, 0.0, 0.0, 0.08
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.07692307692307693, 0.0, 0.0, 0.0, 0.07692307692307693
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.07407407407407407, 0.0, 0.0, 0.0, 0.07407407407407407
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.07407407407407407, 0.0, 0.0, 0.0, 0.07407407407407407
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.07142857142857142, 0.0, 0.0, 0.0, 0.07142857142857142
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.06666666666666667, 0.0, 0.0, 0.0, 0.06666666666666667
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.06666666666666667, 0.0, 0.0, 0.0, 0.06666666666666667
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.06666666666666667, 0.0, 0.0, 0.0, 0.06666666666666667
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.06666666666666667, 0.0, 0.0, 0.0, 0.06666666666666667
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.06451612903225806, 0.0, 0.0, 0.0, 0.06451612903225806
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.058823529411764705, 0.0, 0.0, 0.0, 0.058823529411764705
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.05555555555555555, 0.0, 0.0, 0.0, 0.05555555555555555
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.05555555555555555, 0.0, 0.0, 0.0, 0.05555555555555555
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.05555555555555555, 0.0, 0.0, 0.0, 0.05555555555555555
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.05263157894736842, 0.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.05263157894736842, 0.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.05263157894736842, 0.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.05263157894736842, 0.0, 0.0, 0.0, 0.05263157894736842
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.05263157894736842, 0.0, 0.0, 0.0, 0.05263157894736842
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com,SIMPLE_NAME, line no: 16, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,util,SIMPLE_NAME, line no: 18, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,org,SIMPLE_NAME, line no: 24, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,java,SIMPLE_NAME, line no: 26, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.05, 0.05, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.05, 0.05, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.05, 0.0, 0.0, 0.0, 0.05
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.05, 0.0, 0.0, 0.0, 0.05
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.05, 0.0, 0.0, 0.0, 0.05
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.05, 0.0, 0.0, 0.0, 0.05
i >= minFragment,INFIX_EXPRESSION, line no: 214,com,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,util,SIMPLE_NAME, line no: 18, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,text,SIMPLE_NAME, line no: 19, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,org,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,java,SIMPLE_NAME, line no: 26, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.047619047619047616, 0.0, 0.0, 0.0, 0.047619047619047616
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,com,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,util,SIMPLE_NAME, line no: 18, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,org,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,java,SIMPLE_NAME, line no: 26, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,util,SIMPLE_NAME, line no: 18, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,text,SIMPLE_NAME, line no: 19, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,org,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,java,SIMPLE_NAME, line no: 26, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.047619047619047616, 0.047619047619047616, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,com,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,util,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,org,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,java,SIMPLE_NAME, line no: 26, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,com,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,util,SIMPLE_NAME, line no: 18, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,org,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,java,SIMPLE_NAME, line no: 26, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.045454545454545456, 0.045454545454545456, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,text,SIMPLE_NAME, line no: 19, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Matcher,SIMPLE_NAME, line no: 23, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,MatchingCaseSensitivity,SIMPLE_NAME, line no: 28, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.043478260869565216, 0.043478260869565216, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.041666666666666664, 0.0, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.041666666666666664, 0.0, 0.0, 0.0, 0.041666666666666664
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.041666666666666664, 0.0, 0.0, 0.0, 0.041666666666666664
TextRange,SIMPLE_NAME, line no: 214,com,SIMPLE_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,intellij,SIMPLE_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,psi,SIMPLE_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,codeStyle,SIMPLE_NAME, line no: 16, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,openapi,SIMPLE_NAME, line no: 18, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,util,SIMPLE_NAME, line no: 18, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,containers,SIMPLE_NAME, line no: 20, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org,SIMPLE_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,jetbrains,SIMPLE_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,annotations,SIMPLE_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Nullable,SIMPLE_NAME, line no: 24, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,java,SIMPLE_NAME, line no: 26, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,MinusculeMatcher,SIMPLE_NAME, line no: 33, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matchingDegree,SIMPLE_NAME, line no: 62, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,commonStart++,POSTFIX_EXPRESSION, line no: 102, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,Override,SIMPLE_NAME, line no: 132, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,matches,SIMPLE_NAME, line no: 133, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,patternIndex++,POSTFIX_EXPRESSION, line no: 155, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,toString,SIMPLE_NAME, line no: 271, 0.041666666666666664, 0.041666666666666664, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.04, 0.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.04, 0.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.04, 0.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.04, 0.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.04, 0.0, 0.0, 0.0, 0.04
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.038461538461538464, 0.0, 0.0, 0.0, 0.038461538461538464
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.038461538461538464, 0.0, 0.0, 0.0, 0.038461538461538464
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.038461538461538464, 0.0, 0.0, 0.0, 0.038461538461538464
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.037037037037037035, 0.0, 0.0, 0.0, 0.037037037037037035
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment ? FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)) : null,CONDITIONAL_EXPRESSION, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
i >= minFragment,INFIX_EXPRESSION, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
minFragment,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex i)),METHOD_INVOCATION, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
FList.<TextRange>emptyList(),METHOD_INVOCATION, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
FList,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
emptyList,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
prepend,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange.from(nameIndex i),METHOD_INVOCATION, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
TextRange,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
from,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
nameIndex,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
i,SIMPLE_NAME, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.psi.codeStyle,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.psi,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij,QUALIFIED_NAME, line no: 16, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.openapi.util.TextRange,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.openapi.util,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.openapi,QUALIFIED_NAME, line no: 18, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.openapi.util.text.StringUtil,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.openapi.util.text,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util.containers.FList,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util.containers,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util.text.CharArrayCharSequence,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util.text,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util.text.CharArrayUtil,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.util.text.Matcher,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,org.jetbrains.annotations.Nullable,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,org.jetbrains.annotations,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,org.jetbrains,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,java.util.Iterator,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,java.util,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.psi.codeStyle.NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,com.intellij.psi.codeStyle.NameUtil,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,NameUtil.MatchingCaseSensitivity,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,@Override,MARKER_ANNOTATION, line no: 132, 0.0, 0.0, 0.0, 0.0, 0.0
null,NULL_LITERAL, line no: 214,@Nullable,MARKER_ANNOTATION, line no: 137, 0.0, 0.0, 0.0, 0.0, 0.0
