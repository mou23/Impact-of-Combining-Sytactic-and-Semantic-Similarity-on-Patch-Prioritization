fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.7142857142857143, 0.6666666666666666, 1.0, 0.5714285714285714, 0.7142857142857143
LiteralValueSource,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 0.6666666666666666, 0.1, 0.0, 0.6111111111111112, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.625, 0.5555555555555556, 0.0, 0.5625, 0.625
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.625, 0.6666666666666666, 1.0, 0.391304347826087, 0.625
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.625, 0.8888888888888888, 0.0, 0.5, 0.625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.6, 1.0, 1.0, 0.3684210526315789, 0.6
fp.getString(),METHOD_INVOCATION, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.6, 0.8888888888888888, 1.0, 0.3684210526315789, 0.6
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.5833333333333334, 1.0, 1.0, 0.5263157894736842, 0.5833333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.5454545454545454, 0.75, 1.0, 0.3684210526315789, 0.5454545454545454
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.5384615384615384, 1.0, 1.0, 0.5833333333333334, 0.5384615384615384
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.5384615384615384, 0.75, 0.5, 0.47368421052631576, 0.5384615384615384
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.5384615384615384, 1.0, 1.0, 0.47368421052631576, 0.5384615384615384
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.5, 0.5, 0.0, 0.5, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.5, 0.75, 1.0, 0.39473684210526316, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.5, 1.0, 1.0, 0.5, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.5, 1.0, 0.5, 0.47368421052631576, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.5, 1.0, 0.5, 0.5, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 0.5, 0.1, 0.0, 0.6111111111111112, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 0.5, 0.7, 0.0, 0.6666666666666666, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.5, 1.0, 0.0, 0.6666666666666666, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.5, 1.0, 0.0, 0.7222222222222222, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 0.5, 1.0, 0.0, 0.7222222222222222, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.5, 0.9, 0.0, 0.6666666666666666, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 0.5, 0.7, 0.0, 0.6666666666666666, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.5, 1.0, 0.0, 0.6666666666666666, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 0.5, 0.7, 0.0, 0.6666666666666666, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 0.5, 0.7, 0.0, 0.7222222222222222, 0.5
LiteralValueSource,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 0.5, 0.7, 0.0, 0.7222222222222222, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.5, 0.7777777777777778, 1.0, 0.42857142857142855, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.5, 0.7777777777777778, 1.0, 0.4666666666666667, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.5, 0.7777777777777778, 1.0, 0.5714285714285714, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.5, 0.8888888888888888, 1.0, 0.375, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.5, 0.5555555555555556, 1.0, 0.5, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.5, 0.5555555555555556, 0.0, 0.2777777777777778, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.5, 0.6666666666666666, 0.5, 0.2558139534883721, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.5, 0.7777777777777778, 0.0, 0.5, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.5, 0.5555555555555556, 0.0, 0.42857142857142855, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.5, 0.7777777777777778, 0.0, 0.42857142857142855, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.5, 0.7777777777777778, 0.0, 0.42857142857142855, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.5, 0.8888888888888888, 0.0, 0.34375, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.5, 1.0, 0.0, 0.5, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.5, 1.0, 0.0, 0.5, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.5, 0.7777777777777778, 0.0, 0.42857142857142855, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.5, 0.7777777777777778, 0.0, 0.4, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.5, 0.7777777777777778, 0.0, 0.4117647058823529, 0.5
getString,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 0.5, 0.1, 1.0, 0.6666666666666666, 0.5
getString,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.5, 0.6, 0.0, 0.3333333333333333, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.46153846153846156, 0.5, 0.0, 0.47368421052631576, 0.46153846153846156
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.46153846153846156, 0.5, 0.0, 0.47368421052631576, 0.46153846153846156
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.45454545454545453, 1.0, 0.0, 0.5, 0.45454545454545453
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.45454545454545453, 0.625, 1.0, 0.21052631578947367, 0.45454545454545453
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.45454545454545453, 0.7777777777777778, 0.5, 0.3125, 0.45454545454545453
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.4444444444444444, 0.7777777777777778, 1.0, 0.38095238095238093, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.4444444444444444, 0.7777777777777778, 1.0, 0.38095238095238093, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.4444444444444444, 0.7777777777777778, 1.0, 0.38095238095238093, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.4444444444444444, 0.8888888888888888, 1.0, 0.22857142857142856, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.4444444444444444, 0.5555555555555556, 0.0, 0.2916666666666667, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.4444444444444444, 0.8888888888888888, 0.0, 0.36363636363636365, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.4444444444444444, 1.0, 0.5, 0.35294117647058826, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.4444444444444444, 1.0, 0.5, 0.3333333333333333, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.4444444444444444, 0.7777777777777778, 0.0, 0.5555555555555556, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.4444444444444444, 0.6666666666666666, 0.0, 0.28125, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.4444444444444444, 0.7777777777777778, 0.0, 0.35, 0.4444444444444444
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.4375, 0.75, 0.0, 0.4375, 0.4375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.4375, 0.75, 0.0, 0.4375, 0.4375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.43478260869565216, 1.0, 1.0, 0.23030303030303031, 0.43478260869565216
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.42857142857142855, 1.0, 0.0, 0.5, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.42857142857142855, 0.875, 0.0, 0.5, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.42857142857142855, 0.875, 0.0, 0.5, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.42857142857142855, 0.75, 0.0, 0.40476190476190477, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.42857142857142855, 0.75, 0.0, 0.40476190476190477, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.4166666666666667, 0.75, 0.0, 0.5, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.4166666666666667, 0.75, 0.0, 0.5, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.4166666666666667, 0.5, 0.0, 0.23684210526315788, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.4166666666666667, 0.625, 1.0, 0.2894736842105263, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.4166666666666667, 1.0, 0.0, 0.5526315789473685, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.4166666666666667, 1.0, 0.0, 0.5263157894736842, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.4166666666666667, 0.625, 0.0, 0.47368421052631576, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.4166666666666667, 0.625, 0.0, 0.4473684210526316, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.4166666666666667, 0.75, 0.0, 0.5263157894736842, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.4166666666666667, 0.75, 0.0, 0.5263157894736842, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.4166666666666667, 0.875, 0.0, 0.23684210526315788, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.4166666666666667, 0.75, 0.0, 0.39473684210526316, 0.4166666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.4166666666666667, 0.5555555555555556, 0.3333333333333333, 0.23529411764705882, 0.4166666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.4, 0.5, 0.0, 0.30666666666666664, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.4, 0.75, 0.0, 0.5128205128205128, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.4, 0.75, 0.0, 0.5128205128205128, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.4, 0.75, 0.0, 0.4523809523809524, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.4, 0.75, 0.0, 0.4523809523809524, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.4, 0.1, 0.0, 0.5, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 0.4, 0.7, 0.0, 0.6, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 0.4, 1.0, 0.0, 0.6190476190476191, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.4, 0.9, 0.0, 0.5454545454545454, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.4, 1.0, 0.0, 0.6666666666666666, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.4, 1.0, 0.0, 0.6842105263157895, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.4, 0.7, 0.0, 0.6666666666666666, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.4, 0.7, 0.0, 0.6111111111111112, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.4, 0.7, 0.0, 0.6, 0.4
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 0.4, 0.9, 0.0, 0.65, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.4, 0.5555555555555556, 0.0, 0.15789473684210525, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.4, 0.7777777777777778, 1.0, 0.36, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.4, 0.4444444444444444, 0.5, 0.3684210526315789, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.4, 0.5555555555555556, 0.0, 0.24, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.4, 0.5555555555555556, 0.0, 0.24, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.4, 1.0, 0.5, 0.2916666666666667, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.4, 1.0, 0.5, 0.28, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.4, 0.7777777777777778, 0.0, 0.5263157894736842, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.4, 0.7777777777777778, 0.0, 0.5263157894736842, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.4, 0.7777777777777778, 0.0, 0.22580645161290322, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.4, 0.7777777777777778, 0.0, 0.28, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.4, 0.4444444444444444, 0.0, 0.37037037037037035, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.38461538461538464, 1.0, 1.0, 0.20430107526881722, 0.38461538461538464
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.38461538461538464, 0.625, 0.0, 0.5263157894736842, 0.38461538461538464
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.38461538461538464, 0.625, 0.0, 0.5263157894736842, 0.38461538461538464
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.38461538461538464, 1.0, 0.0, 0.5, 0.38461538461538464
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.38461538461538464, 1.0, 0.0, 0.5, 0.38461538461538464
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.38461538461538464, 0.75, 0.0, 0.42857142857142855, 0.38461538461538464
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.38461538461538464, 0.8888888888888888, 0.3333333333333333, 0.20754716981132076, 0.38461538461538464
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.375, 0.125, 0.0, 0.5384615384615384, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.375, 1.0, 0.0, 0.4166666666666667, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.375, 0.5, 0.0, 0.475, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.375, 0.5, 0.0, 0.475, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.375, 0.7777777777777778, 0.0, 0.35714285714285715, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.375, 1.0, 0.0, 0.2857142857142857, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.375, 0.5555555555555556, 0.0, 0.1625, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.375, 0.7777777777777778, 1.0, 0.35714285714285715, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.375, 0.5555555555555556, 0.0, 0.35714285714285715, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.375, 0.5555555555555556, 0.0, 0.35714285714285715, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.375, 0.7777777777777778, 0.0, 0.42857142857142855, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.375, 0.7777777777777778, 0.0, 0.4666666666666667, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.375, 0.7777777777777778, 0.0, 0.4666666666666667, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.375, 0.6666666666666666, 0.0, 0.35, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.3684210526315789, 0.5, 0.0, 0.25, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.3684210526315789, 0.75, 0.0, 0.3888888888888889, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.3684210526315789, 0.75, 0.0, 0.3888888888888889, 0.3684210526315789
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.36363636363636365, 0.625, 0.0, 0.3157894736842105, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.36363636363636365, 0.4444444444444444, 0.5, 0.3181818181818182, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.36363636363636365, 0.8888888888888888, 0.3333333333333333, 0.32, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.36363636363636365, 0.8888888888888888, 0.3333333333333333, 0.34782608695652173, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.36363636363636365, 0.5555555555555556, 0.0, 0.1875, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.36363636363636365, 0.5555555555555556, 0.0, 0.1875, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.36363636363636365, 0.7777777777777778, 0.0, 0.21951219512195122, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.36363636363636365, 0.7777777777777778, 0.0, 0.21951219512195122, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.36363636363636365, 0.8888888888888888, 1.0, 0.22857142857142856, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.36363636363636365, 0.8888888888888888, 0.0, 0.20512820512820512, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.36363636363636365, 0.8888888888888888, 0.0, 0.23529411764705882, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.36363636363636365, 0.8888888888888888, 0.0, 0.23529411764705882, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.35714285714285715, 1.0, 0.0, 0.5263157894736842, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.35714285714285715, 0.75, 0.0, 0.5263157894736842, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.35714285714285715, 0.75, 0.0, 0.5, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.35714285714285715, 0.75, 0.0, 0.5, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.35714285714285715, 0.5, 0.0, 0.34210526315789475, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.35714285714285715, 0.625, 0.5, 0.3488372093023256, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.35714285714285715, 0.875, 0.0, 0.34210526315789475, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.35714285714285715, 0.875, 0.0, 0.358974358974359, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.35714285714285715, 0.75, 0.0, 0.4473684210526316, 0.35714285714285715
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.35294117647058826, 1.0, 0.3333333333333333, 0.4318181818181818, 0.35294117647058826
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.35294117647058826, 1.0, 0.3333333333333333, 0.4444444444444444, 0.35294117647058826
fp.getString(),METHOD_INVOCATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.35294117647058826, 0.5555555555555556, 0.0, 0.15294117647058825, 0.35294117647058826
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.35, 0.5, 0.0, 0.24705882352941178, 0.35
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.3333333333333333, 0.75, 1.0, 0.15789473684210525, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.3333333333333333, 1.0, 0.0, 0.4473684210526316, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.3333333333333333, 0.75, 1.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.3333333333333333, 1.0, 0.0, 0.5263157894736842, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.3333333333333333, 0.75, 1.0, 0.21052631578947367, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.3333333333333333, 0.875, 1.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.3333333333333333, 0.375, 0.0, 0.34210526315789475, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.3333333333333333, 0.375, 0.0, 0.34210526315789475, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.3333333333333333, 0.5, 1.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.3333333333333333, 0.75, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.3333333333333333, 0.75, 0.0, 0.4473684210526316, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.3333333333333333, 1.0, 0.0, 0.5116279069767442, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.3333333333333333, 1.0, 0.0, 0.30120481927710846, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.3333333333333333, 1.0, 0.0, 0.5789473684210527, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.3333333333333333, 1.0, 0.0, 0.30952380952380953, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.3333333333333333, 1.0, 0.0, 0.3709677419354839, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.3333333333333333, 0.5, 0.0, 0.2894736842105263, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.3333333333333333, 0.75, 0.0, 0.2894736842105263, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.3333333333333333, 0.75, 0.0, 0.2894736842105263, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.3333333333333333, 0.75, 0.0, 0.5526315789473685, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.3333333333333333, 1.0, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.3333333333333333, 1.0, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.3333333333333333, 0.875, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.3333333333333333, 0.75, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.3333333333333333, 0.75, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.3333333333333333, 0.75, 0.0, 0.2631578947368421, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.3333333333333333, 0.75, 0.0, 0.2972972972972973, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.3333333333333333, 0.75, 0.0, 0.39473684210526316, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.3333333333333333, 0.75, 0.0, 0.3684210526315789, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.3333333333333333, 0.75, 0.0, 0.34615384615384615, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.3333333333333333, 0.75, 0.0, 0.23684210526315788, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 0.3333333333333333, 0.1, 0.0, 0.2777777777777778, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 0.3333333333333333, 1.0, 0.0, 0.5909090909090909, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.3333333333333333, 0.5, 0.0, 0.4838709677419355, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.3333333333333333, 0.5, 0.0, 0.4838709677419355, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.3333333333333333, 1.0, 0.0, 0.5833333333333334, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.3333333333333333, 0.7, 0.0, 0.5, 0.3333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.3333333333333333, 0.7, 0.0, 0.5714285714285714, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.3333333333333333, 1.0, 1.0, 0.6428571428571429, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.3333333333333333, 0.8888888888888888, 1.0, 0.1875, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.3333333333333333, 0.7777777777777778, 0.0, 0.21428571428571427, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.3333333333333333, 0.7777777777777778, 0.0, 0.21428571428571427, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.3333333333333333, 0.7777777777777778, 0.0, 0.21428571428571427, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.3333333333333333, 0.7777777777777778, 0.0, 0.21428571428571427, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.3333333333333333, 0.7777777777777778, 0.0, 0.2413793103448276, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.3333333333333333, 0.7777777777777778, 0.0, 0.3125, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.3333333333333333, 0.8888888888888888, 0.25, 0.20454545454545456, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.3333333333333333, 0.5555555555555556, 0.0, 0.3157894736842105, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.3333333333333333, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.3333333333333333, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.3333333333333333, 0.8888888888888888, 0.0, 0.1951219512195122, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.3333333333333333, 1.0, 1.0, 0.14035087719298245, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.3333333333333333, 0.6666666666666666, 0.0, 0.2857142857142857, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.3333333333333333, 0.6666666666666666, 0.0, 0.2857142857142857, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.3333333333333333, 0.6666666666666666, 0.0, 0.23529411764705882, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.3333333333333333, 0.7777777777777778, 0.0, 0.23529411764705882, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.3333333333333333, 0.6, 0.0, 0.3333333333333333, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.3333333333333333, 0.1, 0.0, 0.42857142857142855, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.3333333333333333, 0.9, 1.0, 0.6428571428571429, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.3333333333333333, 0.6, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.3333333333333333, 0.7, 0.0, 0.3333333333333333, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.3333333333333333, 0.7, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.3333333333333333, 0.7, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.3333333333333333, 0.8, 0.0, 0.3333333333333333, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.3333333333333333, 0.6, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 0.3333333333333333, 0.1, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.3333333333333333, 0.9, 0.0, 0.3333333333333333, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 0.3333333333333333, 1.0, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.3333333333333333, 0.1, 0.0, 0.3333333333333333, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.3333333333333333, 0.8, 1.0, 0.7777777777777778, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.3333333333333333, 0.1, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.3333333333333333, 0.1, 0.0, 0.5555555555555556, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.3333333333333333, 0.1, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.3333333333333333, 0.1, 0.0, 0.3333333333333333, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.3333333333333333, 0.1, 0.0, 0.4444444444444444, 0.3333333333333333
getString,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.3333333333333333, 0.1, 0.0, 0.3333333333333333, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.3157894736842105, 1.0, 0.0, 0.34285714285714286, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.3157894736842105, 1.0, 0.0, 0.32432432432432434, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.3157894736842105, 1.0, 0.0, 0.34285714285714286, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.3157894736842105, 1.0, 0.0, 0.35714285714285715, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.3157894736842105, 1.0, 0.0, 0.30337078651685395, 0.3157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.3125, 0.75, 0.0, 0.4473684210526316, 0.3125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.3125, 0.75, 0.0, 0.47619047619047616, 0.3125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.3125, 1.0, 0.0, 0.5263157894736842, 0.3125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.3125, 0.5, 0.3333333333333333, 0.3137254901960784, 0.3125
fp.getString(),METHOD_INVOCATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.3125, 0.5555555555555556, 0.2, 0.14634146341463414, 0.3125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.3076923076923077, 1.0, 0.0, 0.4473684210526316, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.3076923076923077, 0.75, 1.0, 0.23684210526315788, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.3076923076923077, 0.75, 1.0, 0.21052631578947367, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.3076923076923077, 0.875, 1.0, 0.42105263157894735, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.3076923076923077, 0.5, 0.0, 0.3157894736842105, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.3076923076923077, 0.875, 0.0, 0.2631578947368421, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.3076923076923077, 1.0, 0.5, 0.23684210526315788, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.3076923076923077, 1.0, 0.5, 0.2631578947368421, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.3076923076923077, 0.75, 0.0, 0.3684210526315789, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.3076923076923077, 0.75, 0.0, 0.3157894736842105, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.3076923076923077, 0.75, 0.0, 0.3684210526315789, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.3076923076923077, 0.625, 0.0, 0.34210526315789475, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.3076923076923077, 0.75, 0.0, 0.2894736842105263, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.3076923076923077, 0.5555555555555556, 0.0, 0.10666666666666667, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.3076923076923077, 0.8888888888888888, 1.0, 0.21428571428571427, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.3076923076923077, 1.0, 0.0, 0.22580645161290322, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.3076923076923077, 1.0, 0.0, 0.22580645161290322, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.3076923076923077, 0.6666666666666666, 0.0, 0.16666666666666666, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.3076923076923077, 0.7777777777777778, 0.0, 0.2631578947368421, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.3076923076923077, 0.6666666666666666, 0.0, 0.14285714285714285, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.3, 1.0, 1.0, 0.47368421052631576, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 0.3, 0.75, 0.0, 0.34210526315789475, 0.3
LiteralValueSource,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.3, 0.8, 1.0, 0.47368421052631576, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.3, 0.7777777777777778, 0.0, 0.2222222222222222, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.3, 0.7777777777777778, 0.0, 0.21052631578947367, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.3, 0.7777777777777778, 0.0, 0.25, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.3, 0.7777777777777778, 0.0, 0.25, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.3, 0.7777777777777778, 0.0, 0.17647058823529413, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.3, 0.7777777777777778, 0.0, 0.2, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.3, 0.5555555555555556, 0.0, 0.2222222222222222, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.3, 0.8888888888888888, 0.0, 0.2222222222222222, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.3, 0.8888888888888888, 0.0, 0.21052631578947367, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.3, 0.7777777777777778, 0.0, 0.2222222222222222, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.3, 0.7777777777777778, 0.0, 0.2857142857142857, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.3, 0.7777777777777778, 0.0, 0.375, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.3, 0.7777777777777778, 0.0, 0.2857142857142857, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.3, 0.6666666666666666, 0.0, 0.25, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.3, 0.7777777777777778, 0.0, 0.22727272727272727, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.3, 0.7777777777777778, 0.0, 0.22727272727272727, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.3, 0.7777777777777778, 0.0, 0.18518518518518517, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.3, 0.4444444444444444, 0.0, 0.22727272727272727, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.2962962962962963, 1.0, 0.5, 0.18032786885245902, 0.2962962962962963
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.2962962962962963, 1.0, 0.5, 0.1783783783783784, 0.2962962962962963
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.29411764705882354, 1.0, 0.0, 0.3037974683544304, 0.29411764705882354
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.29411764705882354, 1.0, 0.0, 0.3076923076923077, 0.29411764705882354
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.29411764705882354, 0.875, 0.3333333333333333, 0.3018867924528302, 0.29411764705882354
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.2916666666666667, 1.0, 0.5, 0.1564245810055866, 0.2916666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.2857142857142857, 1.0, 0.5, 0.1736842105263158, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.2857142857142857, 0.375, 0.0, 0.34210526315789475, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.2857142857142857, 0.375, 0.0, 0.34210526315789475, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.2857142857142857, 0.5, 0.5, 0.2631578947368421, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.2857142857142857, 0.5, 0.0, 0.39473684210526316, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.2857142857142857, 0.5, 0.0, 0.39473684210526316, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.2857142857142857, 0.75, 0.0, 0.3684210526315789, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.2857142857142857, 0.75, 0.0, 0.34210526315789475, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.2857142857142857, 0.75, 0.0, 0.2894736842105263, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.2857142857142857, 0.75, 0.0, 0.2631578947368421, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.2857142857142857, 0.625, 0.0, 0.4, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.2857142857142857, 0.5, 0.0, 0.3157894736842105, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.2857142857142857, 0.9, 0.0, 0.4444444444444444, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.2857142857142857, 0.4, 0.0, 0.5714285714285714, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.2857142857142857, 0.4, 0.0, 0.5714285714285714, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.2857142857142857, 1.0, 0.0, 0.5185185185185185, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.2857142857142857, 0.7, 0.0, 0.5, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.2857142857142857, 0.7, 0.0, 0.46153846153846156, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.2857142857142857, 0.7, 0.0, 0.6, 0.2857142857142857
LiteralValueSource,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.2857142857142857, 0.7, 0.0, 0.6666666666666666, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.2857142857142857, 0.7777777777777778, 1.0, 0.1956521739130435, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.2857142857142857, 0.5555555555555556, 0.0, 0.2857142857142857, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.2857142857142857, 0.5555555555555556, 0.0, 0.175, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.2857142857142857, 0.5555555555555556, 0.0, 0.175, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.2857142857142857, 0.7777777777777778, 0.0, 0.2222222222222222, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.2857142857142857, 0.5555555555555556, 0.0, 0.42857142857142855, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.2857142857142857, 0.7777777777777778, 0.0, 0.21428571428571427, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.2857142857142857, 0.7777777777777778, 0.0, 0.1320754716981132, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.2857142857142857, 0.7777777777777778, 0.0, 0.13725490196078433, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.28125, 1.0, 0.3333333333333333, 0.13178294573643412, 0.28125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.28, 1.0, 1.0, 0.17714285714285713, 0.28
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.28, 1.0, 1.0, 0.1834319526627219, 0.28
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.2727272727272727, 0.875, 0.0, 0.18421052631578946, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.2727272727272727, 0.875, 0.0, 0.2631578947368421, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.2727272727272727, 0.7777777777777778, 0.0, 0.21052631578947367, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.2727272727272727, 0.7777777777777778, 0.0, 0.21052631578947367, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.2727272727272727, 0.6666666666666666, 0.0, 0.16666666666666666, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.2727272727272727, 0.6666666666666666, 0.0, 0.1875, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.2727272727272727, 0.5555555555555556, 0.0, 0.25806451612903225, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.2727272727272727, 0.5555555555555556, 0.0, 0.22727272727272727, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.2727272727272727, 0.7777777777777778, 0.0, 0.2777777777777778, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.2727272727272727, 0.7777777777777778, 0.0, 0.2777777777777778, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.2727272727272727, 0.6666666666666666, 0.0, 0.26666666666666666, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.2727272727272727, 0.6666666666666666, 0.0, 0.2, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.2727272727272727, 0.7777777777777778, 0.0, 0.14285714285714285, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.2727272727272727, 0.5555555555555556, 0.0, 0.2, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.2692307692307692, 1.0, 0.5, 0.15048543689320387, 0.2692307692307692
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.26666666666666666, 1.0, 0.5, 0.165, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.26666666666666666, 0.5, 0.5, 0.2894736842105263, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.26666666666666666, 1.0, 0.5, 0.16751269035532995, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.26666666666666666, 1.0, 0.5, 0.1625615763546798, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.26666666666666666, 0.875, 0.3333333333333333, 0.3157894736842105, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.26666666666666666, 0.875, 0.3333333333333333, 0.2894736842105263, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.26666666666666666, 0.875, 0.0, 0.2631578947368421, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.26666666666666666, 0.75, 0.0, 0.4146341463414634, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.26666666666666666, 0.75, 0.0, 0.4146341463414634, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.26666666666666666, 0.875, 0.0, 0.3684210526315789, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.26666666666666666, 0.875, 0.0, 0.3684210526315789, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.26666666666666666, 0.7777777777777778, 0.0, 0.140625, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.26666666666666666, 0.7777777777777778, 0.0, 0.140625, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.26666666666666666, 1.0, 0.3333333333333333, 0.1590909090909091, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.26666666666666666, 1.0, 0.3333333333333333, 0.15555555555555556, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.2647058823529412, 1.0, 0.3333333333333333, 0.12274368231046931, 0.2647058823529412
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.2608695652173913, 1.0, 1.0, 0.08484848484848485, 0.2608695652173913
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.25925925925925924, 1.0, 0.5, 0.14795918367346939, 0.25925925925925924
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.25925925925925924, 1.0, 0.5, 0.17901234567901234, 0.25925925925925924
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.25925925925925924, 1.0, 0.5, 0.18012422360248448, 0.25925925925925924
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.25806451612903225, 1.0, 0.5, 0.15865384615384615, 0.25806451612903225
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.25806451612903225, 1.0, 0.3333333333333333, 0.15137614678899083, 0.25806451612903225
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.25, 0.75, 0.0, 0.13157894736842105, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.25, 1.0, 0.0, 0.44680851063829785, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.25, 1.0, 0.0, 0.42105263157894735, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.25, 1.0, 0.0, 0.23684210526315788, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.25, 1.0, 1.0, 0.15897435897435896, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.25, 1.0, 0.3333333333333333, 0.13692946058091288, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.25, 0.5, 0.0, 0.3157894736842105, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.25, 0.75, 0.0, 0.34210526315789475, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.25, 1.0, 0.0, 0.38095238095238093, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.25, 0.75, 1.0, 0.18421052631578946, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.25, 1.0, 0.25, 0.09348441926345609, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.25, 1.0, 1.0, 0.16666666666666666, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.25, 0.875, 0.25, 0.3409090909090909, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.25, 0.875, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.25, 0.875, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.25, 0.5, 0.2, 0.25609756097560976, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.25, 0.5, 0.0, 0.18421052631578946, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.25, 0.5, 0.0, 0.21052631578947367, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.25, 0.75, 0.0, 0.21052631578947367, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.25, 0.875, 0.0, 0.24390243902439024, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.25, 0.75, 0.0, 0.23684210526315788, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.25, 0.75, 0.0, 0.21052631578947367, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.25, 0.75, 0.0, 0.3684210526315789, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.25, 0.7, 0.0, 0.5714285714285714, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.25, 0.7, 0.0, 0.52, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.25, 0.7, 0.0, 0.52, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.25, 0.5, 0.0, 0.25757575757575757, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.25, 0.9, 0.0, 0.48148148148148145, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.25, 1.0, 0.0, 0.6111111111111112, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.25, 1.0, 0.0, 0.6111111111111112, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.25, 0.9, 0.0, 0.5, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.25, 0.5, 0.0, 0.5652173913043478, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.25, 0.5, 0.0, 0.5, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.25, 0.7, 0.0, 0.41935483870967744, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.25, 0.7, 0.0, 0.41935483870967744, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.25, 0.7, 0.0, 0.5652173913043478, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.25, 0.7, 0.0, 0.5217391304347826, 0.25
LiteralValueSource,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.25, 0.7, 0.0, 0.4444444444444444, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.25, 0.7777777777777778, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.25, 0.8888888888888888, 0.0, 0.15625, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.25, 0.8888888888888888, 0.0, 0.14705882352941177, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.25, 0.8888888888888888, 0.0, 0.17142857142857143, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.25, 0.5555555555555556, 0.0, 0.3, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.25, 0.7777777777777778, 0.0, 0.13333333333333333, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.25, 0.7777777777777778, 0.0, 0.13333333333333333, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.25, 0.7777777777777778, 0.0, 0.16129032258064516, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.25, 0.7777777777777778, 0.0, 0.1724137931034483, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.25, 0.7777777777777778, 0.0, 0.1724137931034483, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.25, 0.7777777777777778, 0.0, 0.1724137931034483, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.25, 0.7777777777777778, 0.0, 0.13793103448275862, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.25, 0.7777777777777778, 0.0, 0.1724137931034483, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.25, 0.7777777777777778, 0.0, 0.16666666666666666, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.25, 0.7777777777777778, 0.0, 0.13333333333333333, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.25, 0.7777777777777778, 0.0, 0.16666666666666666, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.25, 0.7777777777777778, 0.0, 0.16666666666666666, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.25, 0.7777777777777778, 0.0, 0.13333333333333333, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.25, 0.7777777777777778, 0.0, 0.16666666666666666, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.25, 0.7777777777777778, 0.0, 0.16666666666666666, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.25, 0.7777777777777778, 0.0, 0.16129032258064516, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.25, 0.7777777777777778, 0.0, 0.2, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.25, 0.8888888888888888, 0.0, 0.2857142857142857, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.25, 0.8888888888888888, 0.0, 0.21212121212121213, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.25, 0.8888888888888888, 0.0, 0.2857142857142857, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.25, 0.8888888888888888, 0.0, 0.17391304347826086, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.25, 0.3333333333333333, 0.0, 0.21428571428571427, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.25, 0.7777777777777778, 0.0, 0.16923076923076924, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.25, 0.7777777777777778, 0.0, 0.2857142857142857, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.25, 0.7777777777777778, 0.0, 0.14583333333333334, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.25, 0.7777777777777778, 0.0, 0.1875, 0.25
getString,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.25, 0.6, 0.0, 0.23529411764705882, 0.25
getString,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 0.25, 1.0, 0.0, 0.2727272727272727, 0.25
getString,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 0.25, 0.8, 0.0, 0.35714285714285715, 0.25
getString,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.25, 0.6, 0.0, 0.3076923076923077, 0.25
getString,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.25, 0.7, 0.0, 0.35714285714285715, 0.25
getString,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.25, 0.1, 0.0, 0.5, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.24242424242424243, 1.0, 0.3333333333333333, 0.13865546218487396, 0.24242424242424243
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.24242424242424243, 1.0, 0.5, 0.14537444933920704, 0.24242424242424243
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.2413793103448276, 1.0, 0.5, 0.14035087719298245, 0.2413793103448276
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.2413793103448276, 1.0, 0.25, 0.11379310344827587, 0.2413793103448276
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.2413793103448276, 1.0, 0.25, 0.12087912087912088, 0.2413793103448276
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.2413793103448276, 1.0, 0.3333333333333333, 0.14102564102564102, 0.2413793103448276
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.24, 1.0, 1.0, 0.19333333333333333, 0.24
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.24, 1.0, 1.0, 0.19205298013245034, 0.24
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.23809523809523808, 0.75, 0.0, 0.1865671641791045, 0.23809523809523808
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.23529411764705882, 1.0, 0.0, 0.4146341463414634, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.23529411764705882, 0.625, 0.0, 0.19230769230769232, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.23529411764705882, 1.0, 0.0, 0.3111111111111111, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.23529411764705882, 0.625, 0.0, 0.1774193548387097, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.23529411764705882, 1.0, 0.0, 0.2631578947368421, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.23529411764705882, 1.0, 0.0, 0.2631578947368421, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.23529411764705882, 0.75, 0.0, 0.42105263157894735, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.23333333333333334, 1.0, 0.2, 0.10963455149501661, 0.23333333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.23333333333333334, 1.0, 0.3333333333333333, 0.1297709923664122, 0.23333333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.23333333333333334, 1.0, 0.5, 0.16853932584269662, 0.23333333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.23333333333333334, 1.0, 0.5, 0.17045454545454544, 0.23333333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.23333333333333334, 1.0, 0.25, 0.0921409214092141, 0.23333333333333334
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.23076923076923078, 0.75, 0.0, 0.10526315789473684, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.23076923076923078, 0.75, 0.0, 0.10526315789473684, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.23076923076923078, 0.75, 0.0, 0.07894736842105263, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.23076923076923078, 0.75, 0.0, 0.07894736842105263, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.23076923076923078, 0.5, 0.0, 0.3157894736842105, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.23076923076923078, 1.0, 1.0, 0.18471337579617833, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.23076923076923078, 1.0, 1.0, 0.18354430379746836, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.23076923076923078, 0.75, 0.0, 0.18421052631578946, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.23076923076923078, 0.5, 0.0, 0.3157894736842105, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.23076923076923078, 0.125, 0.0, 0.2894736842105263, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.23076923076923078, 0.75, 0.0, 0.3684210526315789, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.23076923076923078, 0.625, 0.0, 0.15789473684210525, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.23076923076923078, 0.625, 0.0, 0.13157894736842105, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.23076923076923078, 0.625, 0.0, 0.21052631578947367, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.23076923076923078, 0.75, 0.0, 0.3684210526315789, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.23076923076923078, 1.0, 1.0, 0.07526881720430108, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.23076923076923078, 1.0, 0.0, 0.1935483870967742, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.23076923076923078, 0.7777777777777778, 0.0, 0.12195121951219512, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.23076923076923078, 1.0, 0.0, 0.14, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.23076923076923078, 1.0, 0.0, 0.21428571428571427, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.23076923076923078, 0.7777777777777778, 0.0, 0.17142857142857143, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.23076923076923078, 0.7777777777777778, 0.0, 0.17647058823529413, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.23076923076923078, 0.7777777777777778, 0.0, 0.21875, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.23076923076923078, 0.6666666666666666, 0.0, 0.20833333333333334, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.23076923076923078, 0.6666666666666666, 0.0, 0.20833333333333334, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.23076923076923078, 0.7777777777777778, 0.0, 0.15384615384615385, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.23076923076923078, 0.6666666666666666, 0.0, 0.0945945945945946, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.23076923076923078, 0.7777777777777778, 0.0, 0.1346153846153846, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.22580645161290322, 1.0, 0.25, 0.10967741935483871, 0.22580645161290322
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.22580645161290322, 1.0, 0.25, 0.11643835616438356, 0.22580645161290322
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.22580645161290322, 1.0, 0.3333333333333333, 0.13545816733067728, 0.22580645161290322
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.22580645161290322, 1.0, 0.25, 0.11262798634812286, 0.22580645161290322
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.2222222222222222, 0.75, 1.0, 0.2608695652173913, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.2222222222222222, 1.0, 0.2, 0.11913357400722022, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.2222222222222222, 1.0, 0.0, 0.30612244897959184, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.2222222222222222, 0.75, 0.0, 0.3157894736842105, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.2222222222222222, 0.75, 0.0, 0.14285714285714285, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.2222222222222222, 0.75, 0.0, 0.3018867924528302, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.2222222222222222, 0.75, 0.0, 0.29411764705882354, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.2222222222222222, 0.0, 0.0, 0.30434782608695654, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.2222222222222222, 0.5, 0.0, 0.34210526315789475, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.2222222222222222, 0.7, 0.0, 0.48, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.2222222222222222, 0.4, 0.0, 0.48, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.2222222222222222, 0.4, 0.0, 0.48, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.2222222222222222, 0.5, 0.0, 0.43333333333333335, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.2222222222222222, 0.5, 0.0, 0.41935483870967744, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.2222222222222222, 0.9, 0.0, 0.5, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.2222222222222222, 0.9, 0.0, 0.48, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.2222222222222222, 0.9, 0.0, 0.4482758620689655, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.2222222222222222, 0.9, 0.0, 0.4482758620689655, 0.2222222222222222
LiteralValueSource,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.2222222222222222, 0.7, 0.0, 0.3333333333333333, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.2222222222222222, 0.4444444444444444, 0.0, 0.25, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.2222222222222222, 0.7777777777777778, 0.0, 0.25, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.2222222222222222, 0.8888888888888888, 0.0, 0.2857142857142857, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.2222222222222222, 0.8888888888888888, 0.0, 0.5, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.2222222222222222, 0.5555555555555556, 0.0, 0.21428571428571427, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.2222222222222222, 0.5555555555555556, 0.0, 0.21428571428571427, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.2222222222222222, 0.7777777777777778, 0.0, 0.1388888888888889, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.2222222222222222, 0.7777777777777778, 0.0, 0.1388888888888889, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.2222222222222222, 1.0, 0.0, 0.14285714285714285, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.2222222222222222, 1.0, 0.0, 0.14285714285714285, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.2222222222222222, 0.4444444444444444, 0.0, 0.17647058823529413, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.2222222222222222, 0.6666666666666666, 0.0, 0.14285714285714285, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.2222222222222222, 0.6666666666666666, 0.0, 0.14285714285714285, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.2222222222222222, 0.6666666666666666, 0.0, 0.14285714285714285, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.2222222222222222, 0.6666666666666666, 0.0, 0.14285714285714285, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.2222222222222222, 0.7777777777777778, 0.0, 0.08208955223880597, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.21875, 1.0, 0.2, 0.10625, 0.21875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.21875, 1.0, 0.25, 0.11552346570397112, 0.21875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.21875, 1.0, 0.16666666666666666, 0.12658227848101267, 0.21875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.21875, 1.0, 0.16666666666666666, 0.12396694214876033, 0.21875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.21875, 1.0, 0.16666666666666666, 0.1271186440677966, 0.21875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.21428571428571427, 0.375, 0.0, 0.3157894736842105, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.21428571428571427, 0.625, 0.0, 0.34210526315789475, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.21428571428571427, 0.75, 0.0, 0.18421052631578946, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.21428571428571427, 1.0, 1.0, 0.17647058823529413, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.21428571428571427, 1.0, 1.0, 0.1744186046511628, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.21428571428571427, 0.75, 0.0, 0.18421052631578946, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.21428571428571427, 0.875, 0.0, 0.2631578947368421, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.21428571428571427, 0.5, 0.0, 0.2631578947368421, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.21428571428571427, 0.875, 0.0, 0.23684210526315788, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.21428571428571427, 0.875, 0.0, 0.23684210526315788, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.21428571428571427, 0.75, 0.0, 0.23684210526315788, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.21428571428571427, 0.75, 0.0, 0.15789473684210525, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.21428571428571427, 0.625, 0.0, 0.2631578947368421, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.21428571428571427, 0.75, 0.0, 0.21052631578947367, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.21428571428571427, 0.375, 0.0, 0.23684210526315788, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.21428571428571427, 0.7777777777777778, 0.0, 0.13157894736842105, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.21428571428571427, 0.7777777777777778, 0.0, 0.14285714285714285, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.21428571428571427, 0.5555555555555556, 0.0, 0.06153846153846154, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.21428571428571427, 0.7777777777777778, 0.0, 0.11627906976744186, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.21428571428571427, 0.7777777777777778, 0.0, 0.1111111111111111, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.21428571428571427, 0.7777777777777778, 0.0, 0.1111111111111111, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.21428571428571427, 1.0, 0.0, 0.15555555555555556, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.21428571428571427, 0.5555555555555556, 0.0, 0.16, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.21428571428571427, 0.5555555555555556, 0.0, 0.06451612903225806, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.21428571428571427, 0.7777777777777778, 0.0, 0.1794871794871795, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.21428571428571427, 0.7777777777777778, 0.0, 0.1794871794871795, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.21428571428571427, 0.7777777777777778, 0.0, 0.14035087719298245, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.21212121212121213, 1.0, 0.25, 0.10862619808306709, 0.21212121212121213
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.21212121212121213, 1.0, 0.16666666666666666, 0.12448132780082988, 0.21212121212121213
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.21212121212121213, 1.0, 0.16666666666666666, 0.1214574898785425, 0.21212121212121213
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.21052631578947367, 1.0, 0.0, 0.34615384615384615, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.21052631578947367, 1.0, 0.25, 0.0819277108433735, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.21052631578947367, 1.0, 0.2, 0.11409395973154363, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.21052631578947367, 1.0, 0.16666666666666666, 0.10828025477707007, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.21052631578947367, 1.0, 0.25, 0.08521303258145363, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.21052631578947367, 0.625, 0.0, 0.16666666666666666, 0.21052631578947367
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.20689655172413793, 1.0, 1.0, 0.17142857142857143, 0.20689655172413793
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.20689655172413793, 1.0, 1.0, 0.1694915254237288, 0.20689655172413793
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.20588235294117646, 1.0, 0.25, 0.10810810810810811, 0.20588235294117646
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.20588235294117646, 1.0, 0.16666666666666666, 0.11811023622047244, 0.20588235294117646
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.20588235294117646, 1.0, 0.16666666666666666, 0.11363636363636363, 0.20588235294117646
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.20588235294117646, 1.0, 0.16666666666666666, 0.11904761904761904, 0.20588235294117646
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.20512820512820512, 1.0, 0.25, 0.0787037037037037, 0.20512820512820512
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.20512820512820512, 1.0, 0.16666666666666666, 0.07392197125256673, 0.20512820512820512
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.20512820512820512, 1.0, 0.25, 0.081145584725537, 0.20512820512820512
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.20512820512820512, 1.0, 0.25, 0.08542713567839195, 0.20512820512820512
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.2, 0.0, 0.0, 0.32608695652173914, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 0.2, 0.125, 0.0, 0.2894736842105263, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.2, 1.0, 0.0, 0.23684210526315788, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.2, 1.0, 0.5, 0.12598425196850394, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.2, 1.0, 0.5, 0.12403100775193798, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.2, 1.0, 0.16666666666666666, 0.07142857142857142, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.2, 0.75, 0.0, 0.21052631578947367, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.2, 0.75, 0.0, 0.21052631578947367, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.2, 0.875, 0.0, 0.2894736842105263, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.2, 1.0, 0.0, 0.34210526315789475, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.2, 0.375, 0.0, 0.3157894736842105, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.2, 1.0, 0.5, 0.12598425196850394, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.2, 1.0, 0.5, 0.12598425196850394, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.2, 1.0, 0.16666666666666666, 0.10542168674698796, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.2, 1.0, 0.16666666666666666, 0.11450381679389313, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.2, 1.0, 0.16666666666666666, 0.11313868613138686, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.2, 1.0, 0.25, 0.08433734939759036, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.2, 0.75, 0.0, 0.21052631578947367, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.2, 0.75, 0.0, 0.18421052631578946, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.2, 0.5, 0.0, 0.2894736842105263, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.2, 0.5, 0.0, 0.34210526315789475, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.2, 0.75, 0.0, 0.21052631578947367, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.2, 0.75, 0.0, 0.23684210526315788, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.2, 0.75, 0.0, 0.3230769230769231, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.2, 0.625, 0.0, 0.13157894736842105, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.2, 0.625, 0.0, 0.21052631578947367, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.2, 1.0, 0.0, 0.5, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.2, 0.9, 0.0, 0.4482758620689655, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.2, 0.7, 0.0, 0.5, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.2, 0.7, 0.0, 0.4482758620689655, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.2, 0.7, 0.0, 0.4482758620689655, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.2, 0.5, 0.0, 0.375, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.2, 0.5, 0.0, 0.375, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.2, 0.2, 0.0, 0.5, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.2, 0.8, 0.0, 0.37142857142857144, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.2, 0.2, 0.0, 0.3333333333333333, 0.2
LiteralValueSource,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.2, 0.7, 0.0, 0.375, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.2, 0.1111111111111111, 0.0, 0.23076923076923078, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.2, 0.8888888888888888, 0.0, 0.2222222222222222, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.2, 0.8888888888888888, 0.0, 0.2, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.2, 1.0, 0.0, 0.14583333333333334, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.2, 1.0, 0.0, 0.16666666666666666, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.2, 1.0, 0.0, 0.13636363636363635, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.2, 0.3333333333333333, 0.0, 0.19047619047619047, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.2, 0.3333333333333333, 0.0, 0.19047619047619047, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.2, 0.4444444444444444, 0.0, 0.24, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.2, 0.6666666666666666, 0.0, 0.09523809523809523, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.2, 0.6666666666666666, 0.0, 0.09523809523809523, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.2, 1.0, 0.0, 0.14285714285714285, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.2, 1.0, 0.0, 0.17857142857142858, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.2, 1.0, 0.0, 0.15625, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.2, 0.8888888888888888, 0.0, 0.10126582278481013, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.2, 0.8888888888888888, 0.0, 0.10256410256410256, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.2, 0.1111111111111111, 0.0, 0.2631578947368421, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.2, 0.4444444444444444, 0.0, 0.18181818181818182, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.2, 0.7777777777777778, 0.0, 0.2857142857142857, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.2, 0.7777777777777778, 0.0, 0.25, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.2, 0.7777777777777778, 0.0, 0.2777777777777778, 0.2
fp,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.2, 0.8, 0.0, 0.15384615384615385, 0.2
getString,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.2, 0.8, 0.0, 0.23684210526315788, 0.2
getString,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.2, 0.6, 0.0, 0.3, 0.2
getString,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.2, 0.8, 0.0, 0.25, 0.2
getString,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.2, 0.6, 0.0, 0.2857142857142857, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.19444444444444445, 1.0, 0.3333333333333333, 0.10915492957746478, 0.19444444444444445
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.19444444444444445, 1.0, 0.0, 0.12048192771084337, 0.19444444444444445
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.19444444444444445, 1.0, 0.0, 0.12048192771084337, 0.19444444444444445
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.1935483870967742, 1.0, 0.0, 0.1262135922330097, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.1935483870967742, 1.0, 0.3333333333333333, 0.050387596899224806, 0.1935483870967742
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.19230769230769232, 1.0, 0.5, 0.06557377049180328, 0.19230769230769232
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.19230769230769232, 1.0, 0.5, 0.06486486486486487, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.1875, 1.0, 0.0, 0.3684210526315789, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.1875, 0.875, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.1875, 0.875, 0.0, 0.3157894736842105, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.1875, 0.875, 0.0, 0.3157894736842105, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.1875, 0.75, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.1875, 0.75, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.1875, 0.75, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.1875, 0.75, 0.0, 0.2631578947368421, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.1875, 0.75, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.1875, 0.75, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.1875, 0.75, 0.0, 0.2894736842105263, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.1875, 0.875, 0.0, 0.23684210526315788, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.1875, 0.75, 0.0, 0.22916666666666666, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.1875, 0.7777777777777778, 0.0, 0.16666666666666666, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.1875, 0.7777777777777778, 0.0, 0.17307692307692307, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.1875, 0.5555555555555556, 0.0, 0.075, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.18518518518518517, 1.0, 0.5, 0.06315789473684211, 0.18518518518518517
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.18421052631578946, 1.0, 0.16666666666666666, 0.08877284595300261, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.18421052631578946, 1.0, 0.5, 0.11808118081180811, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.18421052631578946, 1.0, 0.5, 0.11469534050179211, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.18421052631578946, 1.0, 0.3333333333333333, 0.10561056105610561, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.18421052631578946, 1.0, 0.5, 0.11808118081180811, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.18421052631578946, 1.0, 0.5, 0.11808118081180811, 0.18421052631578946
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 0.18181818181818182, 0.125, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 0.18181818181818182, 0.75, 0.0, 0.3157894736842105, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.18181818181818182, 1.0, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.18181818181818182, 1.0, 0.0, 0.3684210526315789, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 0.18181818181818182, 1.0, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.18181818181818182, 0.875, 0.0, 0.3157894736842105, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.18181818181818182, 0.5, 0.0, 0.10526315789473684, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.18181818181818182, 1.0, 0.0, 0.3157894736842105, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 0.18181818181818182, 0.75, 0.0, 0.3157894736842105, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 0.18181818181818182, 0.75, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 0.18181818181818182, 0.75, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.18181818181818182, 0.5, 0.0, 0.21052631578947367, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.18181818181818182, 0.75, 0.0, 0.13157894736842105, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.18181818181818182, 0.25, 0.0, 0.15789473684210525, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.18181818181818182, 0.9, 0.0, 0.3870967741935484, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.18181818181818182, 0.8, 0.0, 0.3125, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.18181818181818182, 0.9, 0.0, 0.43333333333333335, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.18181818181818182, 0.7, 0.0, 0.40625, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.18181818181818182, 0.9, 0.0, 0.32558139534883723, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.18181818181818182, 0.7, 0.0, 0.37142857142857144, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.18181818181818182, 0.7, 0.0, 0.38235294117647056, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.18181818181818182, 0.9, 0.0, 0.3684210526315789, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.18181818181818182, 0.9, 0.0, 0.27419354838709675, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.18181818181818182, 0.7, 0.0, 0.35714285714285715, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.18181818181818182, 0.7, 0.0, 0.35714285714285715, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.18181818181818182, 0.7, 0.0, 0.45161290322580644, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.18181818181818182, 0.7, 0.0, 0.37142857142857144, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.18181818181818182, 0.9, 0.0, 0.2631578947368421, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.18181818181818182, 0.7, 0.0, 0.22972972972972974, 0.18181818181818182
LiteralValueSource,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.18181818181818182, 0.7, 0.0, 0.25, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.18181818181818182, 0.8888888888888888, 0.0, 0.15625, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.18181818181818182, 0.7777777777777778, 0.0, 0.24, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.18181818181818182, 0.7777777777777778, 0.0, 0.24, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.18181818181818182, 0.3333333333333333, 0.0, 0.20689655172413793, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.18181818181818182, 0.6666666666666666, 0.0, 0.20689655172413793, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.18181818181818182, 1.0, 0.3333333333333333, 0.04693140794223827, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.18181818181818182, 1.0, 0.0, 0.2222222222222222, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.18181818181818182, 0.8888888888888888, 0.0, 0.19230769230769232, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.18181818181818182, 0.5555555555555556, 0.0, 0.21739130434782608, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.18181818181818182, 0.5555555555555556, 0.0, 0.20833333333333334, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.18181818181818182, 0.8888888888888888, 0.0, 0.47058823529411764, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.18181818181818182, 0.7777777777777778, 0.0, 0.1935483870967742, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.18181818181818182, 0.7777777777777778, 0.0, 0.1935483870967742, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.18181818181818182, 0.4444444444444444, 0.0, 0.15789473684210525, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.18181818181818182, 0.6666666666666666, 0.0, 0.21739130434782608, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.18181818181818182, 0.6666666666666666, 0.0, 0.17391304347826086, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.17647058823529413, 0.75, 0.0, 0.2682926829268293, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.17647058823529413, 1.0, 0.0, 0.26, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.17647058823529413, 1.0, 0.0, 0.3333333333333333, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.17647058823529413, 1.0, 0.0, 0.3409090909090909, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.17647058823529413, 0.75, 0.0, 0.3157894736842105, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.17647058823529413, 0.75, 0.0, 0.23684210526315788, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.17647058823529413, 0.75, 0.0, 0.23684210526315788, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.17647058823529413, 0.75, 0.0, 0.3076923076923077, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.17647058823529413, 0.8888888888888888, 0.0, 0.0963855421686747, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.17647058823529413, 0.8888888888888888, 0.0, 0.09523809523809523, 0.17647058823529413
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.17647058823529413, 0.5555555555555556, 0.0, 0.10526315789473684, 0.17647058823529413
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.175, 1.0, 0.16666666666666666, 0.0875, 0.175
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.17391304347826086, 1.0, 0.5, 0.05027932960893855, 0.17391304347826086
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.1724137931034483, 1.0, 0.5, 0.06, 0.1724137931034483
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.1724137931034483, 1.0, 0.5, 0.06091370558375635, 0.1724137931034483
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.1724137931034483, 1.0, 0.5, 0.059113300492610835, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.16666666666666666, 0.125, 0.0, 0.39473684210526316, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 0.16666666666666666, 0.75, 0.0, 0.34210526315789475, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.16666666666666666, 1.0, 0.125, 0.045, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.16666666666666666, 0.5, 0.0, 0.18421052631578946, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.16666666666666666, 0.75, 0.0, 0.3023255813953488, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.16666666666666666, 0.75, 0.0, 0.28888888888888886, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.16666666666666666, 0.75, 0.0, 0.28888888888888886, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.16666666666666666, 0.75, 0.0, 0.3684210526315789, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 0.16666666666666666, 1.0, 0.0, 0.39473684210526316, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.16666666666666666, 0.875, 0.0, 0.34210526315789475, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.16666666666666666, 1.0, 0.0, 0.3157894736842105, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.16666666666666666, 1.0, 0.0, 0.34210526315789475, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.16666666666666666, 0.75, 0.0, 0.3157894736842105, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.16666666666666666, 0.75, 0.0, 0.2894736842105263, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.16666666666666666, 0.75, 0.0, 0.34210526315789475, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.16666666666666666, 0.5, 0.0, 0.3, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 0.16666666666666666, 0.875, 0.0, 0.34210526315789475, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.16666666666666666, 0.375, 0.0, 0.13157894736842105, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.16666666666666666, 0.75, 0.0, 0.2631578947368421, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.16666666666666666, 0.75, 0.0, 0.15789473684210525, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.16666666666666666, 0.25, 0.0, 0.21052631578947367, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.16666666666666666, 0.7, 0.0, 0.34210526315789475, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.16666666666666666, 0.7, 0.0, 0.30952380952380953, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.16666666666666666, 0.5, 0.0, 0.2, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.16666666666666666, 1.0, 0.0, 0.42857142857142855, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.16666666666666666, 0.9, 0.0, 0.3939393939393939, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.16666666666666666, 0.7, 0.0, 0.65, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.16666666666666666, 0.8, 0.0, 0.30952380952380953, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.16666666666666666, 0.7, 0.0, 0.3333333333333333, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.16666666666666666, 0.7, 0.0, 0.3333333333333333, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.16666666666666666, 0.7, 0.0, 0.30952380952380953, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.16666666666666666, 0.7, 0.0, 0.2857142857142857, 0.16666666666666666
LiteralValueSource,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.16666666666666666, 0.2, 0.0, 0.4444444444444444, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.16666666666666666, 0.0, 0.0, 0.2, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.16666666666666666, 0.1111111111111111, 0.0, 0.14285714285714285, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,String,SIMPLE_NAME, line no: 69, 0.16666666666666666, 0.1111111111111111, 1.0, 0.42857142857142855, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,get,SIMPLE_NAME, line no: 86, 0.16666666666666666, 0.5555555555555556, 0.0, 0.21428571428571427, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.16666666666666666, 1.0, 0.5, 0.057692307692307696, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.16666666666666666, 1.0, 0.0, 0.1, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.16666666666666666, 1.0, 0.0, 0.0945945945945946, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.16666666666666666, 1.0, 1.0, 0.05142857142857143, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.16666666666666666, 0.8888888888888888, 0.0, 0.22727272727272727, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.16666666666666666, 1.0, 0.3333333333333333, 0.05504587155963303, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.16666666666666666, 0.3333333333333333, 0.0, 0.2, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.16666666666666666, 0.3333333333333333, 0.0, 0.2, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.16666666666666666, 1.0, 0.0, 0.21428571428571427, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.16666666666666666, 0.3333333333333333, 0.0, 0.2, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.16666666666666666, 1.0, 0.0, 0.1, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.16666666666666666, 1.0, 0.0, 0.1, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.16666666666666666, 0.8888888888888888, 0.0, 0.0898876404494382, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.16666666666666666, 0.5555555555555556, 0.0, 0.2, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.16666666666666666, 0.5555555555555556, 0.0, 0.1935483870967742, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.16666666666666666, 1.0, 1.0, 0.05917159763313609, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.16666666666666666, 0.7777777777777778, 0.0, 0.13953488372093023, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.16666666666666666, 1.0, 0.0, 0.20689655172413793, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.16666666666666666, 1.0, 0.0, 0.20689655172413793, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.16666666666666666, 0.7777777777777778, 0.0, 0.19047619047619047, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.16666666666666666, 0.6666666666666666, 0.0, 0.09090909090909091, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.16666666666666666, 0.6666666666666666, 0.0, 0.09090909090909091, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.16666666666666666, 0.8, 0.0, 0.16666666666666666, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.16666666666666666, 0.9, 0.0, 0.14285714285714285, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.16666666666666666, 0.8, 0.0, 0.13333333333333333, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.16666666666666666, 0.8, 0.0, 0.15384615384615385, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.16666666666666666, 0.9, 0.0, 0.125, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.16666666666666666, 0.5, 0.0, 0.15384615384615385, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.16666666666666666, 0.7, 0.0, 0.18181818181818182, 0.16666666666666666
getString,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.16666666666666666, 0.9, 0.0, 0.25, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.16326530612244897, 1.0, 0.2, 0.06772908366533864, 0.16326530612244897
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.16129032258064516, 1.0, 0.0, 0.11855670103092783, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.16129032258064516, 1.0, 0.0, 0.14285714285714285, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.16071428571428573, 1.0, 0.125, 0.04506699147381242, 0.16071428571428573
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.16, 1.0, 0.2, 0.06746031746031746, 0.16
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.16, 1.0, 0.2, 0.06563706563706563, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.16, 1.0, 0.5, 0.04854368932038835, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.16, 0.7777777777777778, 0.0, 0.0582010582010582, 0.16
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.15789473684210525, 0.75, 0.0, 0.20634920634920634, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.15789473684210525, 0.75, 0.0, 0.20634920634920634, 0.15789473684210525
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.1568627450980392, 1.0, 0.2, 0.06525911708253358, 0.1568627450980392
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.15625, 1.0, 0.0, 0.10504201680672269, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.15625, 1.0, 0.0, 0.15025906735751296, 0.15625
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.15625, 1.0, 0.3333333333333333, 0.05042016806722689, 0.15625
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.15625, 1.0, 0.5, 0.05286343612334802, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 0.15384615384615385, 1.0, 0.0, 0.34210526315789475, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.15384615384615385, 0.5, 0.0, 0.47368421052631576, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.15384615384615385, 0.5, 0.0, 0.4473684210526316, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.15384615384615385, 1.0, 0.0, 0.3684210526315789, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.15384615384615385, 0.5, 0.0, 0.18421052631578946, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.15384615384615385, 0.5, 0.0, 0.15789473684210525, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.15384615384615385, 1.0, 0.0, 0.10526315789473684, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.15384615384615385, 1.0, 0.0, 0.10526315789473684, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.15384615384615385, 0.5, 0.0, 0.13157894736842105, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.15384615384615385, 0.625, 0.0, 0.05263157894736842, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.15384615384615385, 0.625, 0.0, 0.05263157894736842, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.15384615384615385, 0.625, 0.0, 0.05263157894736842, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.15384615384615385, 0.625, 0.0, 0.05263157894736842, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.15384615384615385, 0.75, 0.0, 0.39473684210526316, 0.15384615384615385
LiteralValueSource,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.15384615384615385, 0.1, 0.0, 0.3333333333333333, 0.15384615384615385
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.15384615384615385, 0.9, 0.0, 0.2916666666666667, 0.15384615384615385
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.15384615384615385, 0.5, 0.0, 0.325, 0.15384615384615385
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.15384615384615385, 0.5, 0.0, 0.325, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.15384615384615385, 1.0, 0.5, 0.04591836734693878, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.15384615384615385, 1.0, 0.0, 0.28, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.15384615384615385, 1.0, 0.0, 0.1724137931034483, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.15384615384615385, 0.7777777777777778, 0.0, 0.21428571428571427, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.15384615384615385, 0.7777777777777778, 0.0, 0.2413793103448276, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.15384615384615385, 0.7777777777777778, 0.0, 0.2413793103448276, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.15384615384615385, 1.0, 0.5, 0.05555555555555555, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.15384615384615385, 1.0, 0.5, 0.055900621118012424, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.15384615384615385, 0.6666666666666666, 0.0, 0.08, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.15384615384615385, 0.6666666666666666, 0.0, 0.08, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.15, 0.75, 0.0, 0.25925925925925924, 0.15
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.15, 0.75, 0.0, 0.2692307692307692, 0.15
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.15, 0.7777777777777778, 0.0, 0.12658227848101267, 0.15
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.14814814814814814, 1.0, 1.0, 0.046153846153846156, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.14814814814814814, 1.0, 0.3333333333333333, 0.04564315352697095, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.14814814814814814, 1.0, 0.25, 0.0339943342776204, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.14814814814814814, 1.0, 1.0, 0.053763440860215055, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.14705882352941177, 1.0, 0.0, 0.13114754098360656, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.14545454545454545, 1.0, 0.14285714285714285, 0.057432432432432436, 0.14545454545454545
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.14285714285714285, 1.0, 0.0, 0.13157894736842105, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.14285714285714285, 1.0, 0.0, 0.21052631578947367, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.14285714285714285, 1.0, 0.0, 0.2894736842105263, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.14285714285714285, 1.0, 0.0, 0.3684210526315789, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.14285714285714285, 1.0, 0.0, 0.2894736842105263, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.14285714285714285, 1.0, 0.14285714285714285, 0.05582922824302135, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.14285714285714285, 0.5, 0.0, 0.2236842105263158, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.14285714285714285, 1.0, 0.0, 0.10970464135021098, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.14285714285714285, 0.5, 0.0, 0.15789473684210525, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.14285714285714285, 0.75, 0.0, 0.10526315789473684, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.14285714285714285, 0.7, 0.0, 0.203125, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.14285714285714285, 0.7, 0.0, 0.203125, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.14285714285714285, 0.9, 0.0, 0.2727272727272727, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.14285714285714285, 0.9, 0.0, 0.26666666666666666, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.14285714285714285, 0.5, 0.0, 0.25, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.14285714285714285, 0.1111111111111111, 0.0, 0.42857142857142855, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.14285714285714285, 1.0, 0.5, 0.043859649122807015, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.14285714285714285, 1.0, 0.25, 0.03793103448275862, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.14285714285714285, 1.0, 0.0, 0.14893617021276595, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.14285714285714285, 1.0, 0.25, 0.040293040293040296, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.14285714285714285, 1.0, 0.0, 0.18421052631578946, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.14285714285714285, 1.0, 0.3333333333333333, 0.04700854700854701, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.14285714285714285, 1.0, 0.0, 0.16666666666666666, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.14285714285714285, 1.0, 0.0, 0.13333333333333333, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.14285714285714285, 1.0, 0.0, 0.13636363636363635, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.14285714285714285, 0.5555555555555556, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.14285714285714285, 0.6666666666666666, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.14285714285714285, 0.6666666666666666, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.14285714285714285, 0.6666666666666666, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.14285714285714285, 0.7777777777777778, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.14285714285714285, 1.0, 0.2, 0.04693140794223827, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.14285714285714285, 1.0, 0.0, 0.13953488372093023, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.14285714285714285, 0.8888888888888888, 0.0, 0.15789473684210525, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.14285714285714285, 1.0, 0.0, 0.05670103092783505, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.14285714285714285, 1.0, 0.0, 0.0967741935483871, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.14285714285714285, 0.5555555555555556, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.14285714285714285, 0.7777777777777778, 0.0, 0.1935483870967742, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getDate,SIMPLE_NAME, line no: 839, 0.14285714285714285, 0.1111111111111111, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.14285714285714285, 0.8888888888888888, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getTime,SIMPLE_NAME, line no: 875, 0.14285714285714285, 1.0, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.14285714285714285, 0.7777777777777778, 0.0, 0.17142857142857143, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.14285714285714285, 0.1111111111111111, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.14285714285714285, 0.7777777777777778, 1.0, 0.5, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.14285714285714285, 0.1111111111111111, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.14285714285714285, 0.1111111111111111, 0.0, 0.35714285714285715, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.14285714285714285, 0.1111111111111111, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.14285714285714285, 0.1111111111111111, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.14285714285714285, 0.1111111111111111, 0.0, 0.2857142857142857, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.14285714285714285, 0.1111111111111111, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.14285714285714285, 1.0, 0.0, 0.06190476190476191, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.14285714285714285, 0.8, 0.0, 0.09523809523809523, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.14285714285714285, 0.8, 0.0, 0.09523809523809523, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.14285714285714285, 0.8, 0.0, 0.09523809523809523, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.14285714285714285, 0.9, 0.0, 0.05714285714285714, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.14285714285714285, 0.6, 0.0, 0.125, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.14285714285714285, 0.7, 0.0, 0.08695652173913043, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.14285714285714285, 0.9, 0.0, 0.1111111111111111, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.14285714285714285, 1.0, 0.0, 0.11764705882352941, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.14285714285714285, 1.0, 0.0, 0.1111111111111111, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.14285714285714285, 0.7, 0.0, 0.2727272727272727, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.14285714285714285, 0.8, 0.0, 0.2727272727272727, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.14285714285714285, 0.8, 0.0, 0.1724137931034483, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.14285714285714285, 0.6, 0.0, 0.2857142857142857, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.14285714285714285, 0.8, 0.0, 0.21428571428571427, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.14285714285714285, 0.8, 0.0, 0.21428571428571427, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.14285714285714285, 1.0, 0.0, 0.3333333333333333, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.14285714285714285, 1.0, 0.0, 0.3333333333333333, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.14285714285714285, 0.8, 0.0, 0.25, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.14285714285714285, 0.8, 0.0, 0.2, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.14285714285714285, 0.8, 0.0, 0.29411764705882354, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.13793103448275862, 1.0, 0.2, 0.036544850498338874, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.13793103448275862, 1.0, 0.0, 0.05339805825242718, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.13793103448275862, 1.0, 0.0, 0.046218487394957986, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.13793103448275862, 1.0, 0.3333333333333333, 0.04198473282442748, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.13793103448275862, 1.0, 0.5, 0.05056179775280899, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.13793103448275862, 1.0, 0.5, 0.05113636363636364, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.13793103448275862, 1.0, 0.0, 0.06217616580310881, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.13793103448275862, 1.0, 0.25, 0.032520325203252036, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.13513513513513514, 1.0, 0.25, 0.03132530120481928, 0.13513513513513514
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.13513513513513514, 1.0, 0.2, 0.0436241610738255, 0.13513513513513514
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.13513513513513514, 1.0, 0.16666666666666666, 0.041401273885350316, 0.13513513513513514
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.13513513513513514, 1.0, 0.25, 0.03258145363408521, 0.13513513513513514
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.13333333333333333, 0.5, 0.0, 0.3333333333333333, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.13333333333333333, 1.0, 0.0, 0.15, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.13333333333333333, 1.0, 0.0, 0.15714285714285714, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.13333333333333333, 1.0, 0.0, 0.15714285714285714, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.13333333333333333, 1.0, 0.0, 0.16058394160583941, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.13333333333333333, 1.0, 0.0, 0.15217391304347827, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.13333333333333333, 1.0, 0.0, 0.15942028985507245, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.13333333333333333, 1.0, 0.0, 0.15217391304347827, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.13333333333333333, 1.0, 0.0, 0.15217391304347827, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.13333333333333333, 1.0, 0.0, 0.15714285714285714, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.13333333333333333, 1.0, 0.0, 0.15714285714285714, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.13333333333333333, 1.0, 0.0, 0.15714285714285714, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.13333333333333333, 1.0, 0.0, 0.15714285714285714, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.13333333333333333, 1.0, 0.0, 0.15, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.13333333333333333, 1.0, 0.0, 0.15, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.13333333333333333, 1.0, 0.0, 0.16428571428571428, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.13333333333333333, 1.0, 0.0, 0.14788732394366197, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.13333333333333333, 1.0, 0.0, 0.17142857142857143, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.13333333333333333, 1.0, 0.0, 0.08753315649867374, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.13333333333333333, 0.5, 0.0, 0.23684210526315788, 0.13333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.13333333333333333, 0.9, 0.0, 0.1566265060240964, 0.13333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.13333333333333333, 0.9, 0.0, 0.15476190476190477, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.13333333333333333, 1.0, 0.25, 0.035483870967741936, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.13333333333333333, 1.0, 0.0, 0.17073170731707318, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.13333333333333333, 1.0, 0.25, 0.03767123287671233, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.13333333333333333, 1.0, 0.3333333333333333, 0.043824701195219126, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.13333333333333333, 1.0, 0.0, 0.15151515151515152, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.13333333333333333, 1.0, 0.25, 0.040955631399317405, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.13157894736842105, 1.0, 0.25, 0.03009259259259259, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.13157894736842105, 1.0, 0.16666666666666666, 0.026694045174537988, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.13157894736842105, 1.0, 0.25, 0.031026252983293555, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.13157894736842105, 1.0, 0.25, 0.032663316582914576, 0.13157894736842105
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.13043478260869565, 0.9, 0.0, 0.10909090909090909, 0.13043478260869565
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.12903225806451613, 1.0, 0.0, 0.1390728476821192, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.12903225806451613, 1.0, 0.0, 0.1456953642384106, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.12903225806451613, 1.0, 0.0, 0.1456953642384106, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.12903225806451613, 1.0, 0.0, 0.14864864864864866, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.12903225806451613, 1.0, 0.0, 0.14093959731543623, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.12903225806451613, 1.0, 0.0, 0.1476510067114094, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.12903225806451613, 1.0, 0.0, 0.14093959731543623, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.12903225806451613, 1.0, 0.0, 0.14093959731543623, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.12903225806451613, 1.0, 0.0, 0.1456953642384106, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.12903225806451613, 1.0, 0.0, 0.1456953642384106, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.12903225806451613, 1.0, 0.0, 0.1456953642384106, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.12903225806451613, 1.0, 0.0, 0.1456953642384106, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.12903225806451613, 1.0, 0.0, 0.1390728476821192, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.12903225806451613, 1.0, 0.0, 0.1390728476821192, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.12903225806451613, 1.0, 0.0, 0.152317880794702, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.12903225806451613, 1.0, 0.0, 0.13725490196078433, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.12903225806451613, 1.0, 0.0, 0.15894039735099338, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.12903225806451613, 1.0, 0.0, 0.1301775147928994, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.12903225806451613, 1.0, 0.0, 0.1329479768786127, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.12903225806451613, 1.0, 0.0, 0.1329479768786127, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.12903225806451613, 1.0, 0.2, 0.034375, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.12903225806451613, 1.0, 0.25, 0.039711191335740074, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.12903225806451613, 1.0, 0.16666666666666666, 0.0379746835443038, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.12903225806451613, 1.0, 0.16666666666666666, 0.0371900826446281, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.12903225806451613, 1.0, 0.16666666666666666, 0.038135593220338986, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.12903225806451613, 1.0, 0.0, 0.05327868852459016, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.1282051282051282, 1.0, 0.0, 0.09774436090225563, 0.1282051282051282
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.1282051282051282, 1.0, 0.16666666666666666, 0.025793650793650792, 0.1282051282051282
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.1282051282051282, 1.0, 0.16666666666666666, 0.0391566265060241, 0.1282051282051282
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.1282051282051282, 1.0, 0.25, 0.03132530120481928, 0.1282051282051282
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.125, 0.0, 0.0, 0.35555555555555557, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.125, 1.0, 0.0, 0.12790697674418605, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.125, 1.0, 0.0, 0.12209302325581395, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.125, 1.0, 0.0, 0.09701492537313433, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.125, 0.75, 0.0, 0.27906976744186046, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.125, 0.75, 0.0, 0.20253164556962025, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.125, 0.75, 0.0, 0.18421052631578946, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.125, 0.625, 0.0, 0.07894736842105263, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.125, 0.625, 0.0, 0.07894736842105263, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.125, 0.9, 0.0, 0.36, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.125, 0.9, 0.0, 0.21428571428571427, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.125, 0.9, 0.0, 0.20270270270270271, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.125, 0.9, 0.0, 0.21428571428571427, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.125, 0.9, 0.0, 0.22857142857142856, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.125, 0.7, 0.0, 0.4482758620689655, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.125, 0.9, 0.0, 0.15730337078651685, 0.125
LiteralValueSource,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.125, 0.7, 0.0, 0.2777777777777778, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.125, 0.0, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.125, 0.0, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.125, 0.0, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.125, 1.0, 0.25, 0.038338658146964855, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.125, 0.5555555555555556, 0.0, 0.23529411764705882, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 0.125, 1.0, 0.0, 0.2727272727272727, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 0.125, 0.7777777777777778, 0.0, 0.35714285714285715, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.125, 1.0, 0.0, 0.07142857142857142, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.125, 1.0, 0.0, 0.07142857142857142, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.125, 0.7777777777777778, 0.0, 0.07142857142857142, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.125, 0.7777777777777778, 0.0, 0.07142857142857142, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.125, 1.0, 0.16666666666666666, 0.03734439834024896, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.125, 0.8888888888888888, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.125, 0.8888888888888888, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.125, 1.0, 0.16666666666666666, 0.03643724696356275, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.125, 1.0, 1.0, 0.06, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.125, 1.0, 1.0, 0.059602649006622516, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.125, 0.5555555555555556, 0.0, 0.2857142857142857, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.125, 1.0, 0.0, 0.046413502109704644, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.125, 0.3333333333333333, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.125, 0.3333333333333333, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.125, 0.3333333333333333, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.125, 0.6666666666666666, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.125, 0.2222222222222222, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.125, 0.3333333333333333, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.125, 0.3333333333333333, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.125, 0.7777777777777778, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.125, 0.7777777777777778, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.125, 0.2222222222222222, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.125, 0.6666666666666666, 0.0, 0.35714285714285715, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.125, 0.1111111111111111, 0.0, 0.42857142857142855, 0.125
fp,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.125, 0.8, 0.0, 0.08, 0.125
fp,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.125, 0.4, 0.0, 0.10526315789473684, 0.125
fp,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.125, 1.0, 0.0, 0.08333333333333333, 0.125
fp,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.125, 1.0, 0.0, 0.08, 0.125
getString,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.125, 0.6, 0.0, 0.1125, 0.125
getString,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.125, 0.6, 0.0, 0.25, 0.125
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.125, 0.7, 0.0, 0.17391304347826086, 0.125
getString,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.125, 0.6, 0.0, 0.16666666666666666, 0.125
getString,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.125, 0.9, 0.0, 0.2222222222222222, 0.125
getString,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.125, 0.9, 0.0, 0.18181818181818182, 0.125
getString,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.125, 1.0, 0.0, 0.29411764705882354, 0.125
getString,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.125, 1.0, 0.0, 0.2777777777777778, 0.125
getString,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.125, 0.8, 1.0, 0.3888888888888889, 0.125
getString,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.125, 0.7, 0.0, 0.15625, 0.125
getString,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.125, 0.8, 0.0, 0.2, 0.125
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.12121212121212122, 1.0, 0.0, 0.12568306010928962, 0.12121212121212122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.12121212121212122, 1.0, 0.0, 0.12021857923497267, 0.12121212121212122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.12121212121212122, 1.0, 0.0, 0.12222222222222222, 0.12121212121212122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.12121212121212122, 1.0, 0.0, 0.125, 0.12121212121212122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.12121212121212122, 1.0, 0.0, 0.125, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.12121212121212122, 1.0, 0.25, 0.037162162162162164, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.12121212121212122, 1.0, 0.16666666666666666, 0.03937007874015748, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.12121212121212122, 1.0, 0.16666666666666666, 0.03787878787878788, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.12121212121212122, 1.0, 0.16666666666666666, 0.03968253968253968, 0.12121212121212122
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.12, 0.875, 0.0, 0.18181818181818182, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.12, 1.0, 1.0, 0.05732484076433121, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.12, 1.0, 1.0, 0.056962025316455694, 0.12
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.11864406779661017, 1.0, 0.08333333333333333, 0.03197158081705151, 0.11864406779661017
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.11764705882352941, 0.625, 0.0, 0.07894736842105263, 0.11764705882352941
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.11764705882352941, 0.625, 0.0, 0.07894736842105263, 0.11764705882352941
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.11764705882352941, 0.7, 0.0, 0.18055555555555555, 0.11764705882352941
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.11764705882352941, 0.7, 0.0, 0.18055555555555555, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.11764705882352941, 1.0, 0.0, 0.17307692307692307, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.11764705882352941, 1.0, 0.5, 0.04330708661417323, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.11764705882352941, 1.0, 0.5, 0.04263565891472868, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.11764705882352941, 1.0, 0.5, 0.04330708661417323, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.11764705882352941, 1.0, 0.5, 0.04330708661417323, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.11764705882352941, 1.0, 0.16666666666666666, 0.03816793893129771, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.11764705882352941, 1.0, 0.16666666666666666, 0.0364963503649635, 0.11764705882352941
getString,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.11764705882352941, 0.6, 0.0, 0.10588235294117647, 0.11764705882352941
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.11666666666666667, 1.0, 0.08333333333333333, 0.03146853146853147, 0.11666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.11538461538461539, 0.9, 0.0, 0.0967741935483871, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.11428571428571428, 1.0, 0.3333333333333333, 0.03873239436619718, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.11428571428571428, 1.0, 0.0, 0.04417670682730924, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.11428571428571428, 1.0, 0.0, 0.04417670682730924, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.11320754716981132, 1.0, 0.125, 0.0175, 0.11320754716981132
LiteralValueSource,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.1111111111111111, 0.9, 0.0, 0.28125, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.1111111111111111, 0.0, 0.0, 0.2, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.1111111111111111, 0.0, 0.0, 0.23529411764705882, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.1111111111111111, 0.0, 0.0, 0.2631578947368421, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.1111111111111111, 1.0, 0.0, 0.06428571428571428, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.1111111111111111, 1.0, 0.0, 0.06569343065693431, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.1111111111111111, 1.0, 0.0, 0.057971014492753624, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.1111111111111111, 1.0, 0.0, 0.06521739130434782, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.1111111111111111, 1.0, 0.0, 0.057971014492753624, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.1111111111111111, 1.0, 0.0, 0.057971014492753624, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.1111111111111111, 1.0, 0.0, 0.06428571428571428, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.1111111111111111, 1.0, 0.0, 0.06428571428571428, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.1111111111111111, 1.0, 0.0, 0.05714285714285714, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.1111111111111111, 1.0, 0.0, 0.06338028169014084, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.1111111111111111, 1.0, 0.0, 0.06428571428571428, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.1111111111111111, 0.7777777777777778, 0.0, 0.25, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.1111111111111111, 0.8888888888888888, 0.0, 0.2222222222222222, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.1111111111111111, 0.8888888888888888, 0.0, 0.2222222222222222, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.1111111111111111, 1.0, 1.0, 0.052941176470588235, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.1111111111111111, 1.0, 1.0, 0.05232558139534884, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.1111111111111111, 1.0, 0.0, 0.041353383458646614, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.1111111111111111, 0.5555555555555556, 0.0, 0.2857142857142857, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.1111111111111111, 0.8888888888888888, 0.0, 0.13333333333333333, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.1111111111111111, 0.3333333333333333, 0.0, 0.18181818181818182, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.1111111111111111, 0.8888888888888888, 0.0, 0.034482758620689655, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.1111111111111111, 0.2222222222222222, 0.0, 0.21428571428571427, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.1111111111111111, 0.6666666666666666, 0.0, 0.17647058823529413, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.1111111111111111, 0.3333333333333333, 0.0, 0.14285714285714285, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.1111111111111111, 0.3333333333333333, 0.0, 0.14285714285714285, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.1111111111111111, 0.2222222222222222, 0.0, 0.16666666666666666, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.1111111111111111, 0.4, 0.0, 0.09090909090909091, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.1111111111111111, 0.6, 0.0, 0.05555555555555555, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.1111111111111111, 0.7, 0.0, 0.046511627906976744, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.1111111111111111, 0.9, 0.0, 0.08, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.1111111111111111, 0.9, 0.0, 0.08695652173913043, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.1111111111111111, 0.9, 0.0, 0.0625, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.1111111111111111, 0.8, 0.0, 0.05714285714285714, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.1111111111111111, 0.0, 0.0, 0.17777777777777778, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.1111111111111111, 0.6, 0.0, 0.10526315789473684, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.1111111111111111, 0.6, 0.0, 0.16, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.1111111111111111, 0.6, 0.0, 0.16, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.1111111111111111, 1.0, 0.0, 0.25, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.1111111111111111, 1.0, 0.0, 0.24, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.1111111111111111, 0.8, 1.0, 0.3684210526315789, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.1111111111111111, 0.8, 1.0, 0.3684210526315789, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.1111111111111111, 0.8, 0.0, 0.12903225806451613, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.1111111111111111, 0.8, 0.0, 0.24, 0.1111111111111111
getString,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.1111111111111111, 0.4, 0.0, 0.2222222222222222, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.10909090909090909, 1.0, 0.125, 0.01705237515225335, 0.10909090909090909
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.10869565217391304, 1.0, 0.0, 0.07267441860465117, 0.10869565217391304
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.10810810810810811, 1.0, 0.16666666666666666, 0.031331592689295036, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.10810810810810811, 1.0, 0.5, 0.04059040590405904, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.10810810810810811, 1.0, 0.5, 0.03942652329749104, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.10810810810810811, 1.0, 0.3333333333333333, 0.036303630363036306, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.10810810810810811, 1.0, 0.5, 0.04059040590405904, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.10810810810810811, 1.0, 0.5, 0.04059040590405904, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.10810810810810811, 1.0, 0.0, 0.041044776119402986, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.10714285714285714, 1.0, 0.0, 0.059602649006622516, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.10714285714285714, 1.0, 0.0, 0.060810810810810814, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.10714285714285714, 1.0, 0.0, 0.053691275167785234, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.10714285714285714, 1.0, 0.0, 0.06040268456375839, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.10714285714285714, 1.0, 0.0, 0.053691275167785234, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.10714285714285714, 1.0, 0.0, 0.053691275167785234, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.10714285714285714, 1.0, 0.0, 0.059602649006622516, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.10714285714285714, 1.0, 0.0, 0.059602649006622516, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.10714285714285714, 1.0, 0.0, 0.052980132450331126, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.10714285714285714, 1.0, 0.0, 0.058823529411764705, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.10714285714285714, 1.0, 0.0, 0.059602649006622516, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.10714285714285714, 1.0, 0.0, 0.047337278106508875, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.10714285714285714, 1.0, 0.0, 0.046242774566473986, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.10714285714285714, 1.0, 0.0, 0.046242774566473986, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.10714285714285714, 1.0, 1.0, 0.05142857142857143, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.10714285714285714, 1.0, 1.0, 0.05649717514124294, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.10416666666666667, 1.0, 0.2, 0.025896414342629483, 0.10416666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.10344827586206896, 1.0, 0.0, 0.046511627906976744, 0.10344827586206896
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.10344827586206896, 1.0, 0.0, 0.046511627906976744, 0.10344827586206896
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.10256410256410256, 1.0, 0.16666666666666666, 0.03, 0.10256410256410256
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.10204081632653061, 1.0, 0.2, 0.025793650793650792, 0.10204081632653061
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.10204081632653061, 1.0, 0.2, 0.025096525096525095, 0.10204081632653061
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.1, 0.125, 0.0, 0.05263157894736842, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,String,SIMPLE_NAME, line no: 69, 0.1, 0.125, 0.0, 0.15789473684210525, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source,SIMPLE_NAME, line no: 85, 0.1, 0.125, 0.0, 0.13157894736842105, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,get,SIMPLE_NAME, line no: 86, 0.1, 0.5, 0.0, 0.07894736842105263, 0.1
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.1, 0.5, 0.0, 0.2, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.1, 0.0, 0.0, 0.18181818181818182, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.1, 0.0, 0.0, 0.21739130434782608, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.1, 0.0, 0.0, 0.2, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.1, 0.0, 0.0, 0.13793103448275862, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.1, 0.0, 0.0, 0.16666666666666666, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.1, 0.0, 0.0, 0.22727272727272727, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.1, 0.0, 0.0, 0.18181818181818182, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.1, 0.0, 0.0, 0.17391304347826086, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.1, 0.0, 0.0, 0.13636363636363635, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.1, 0.0, 0.0, 0.2, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.1, 1.0, 0.0, 0.1724137931034483, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.1, 0.5555555555555556, 0.0, 0.17391304347826086, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.1, 1.0, 0.0, 0.04371584699453552, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.1, 0.6666666666666666, 0.0, 0.12195121951219512, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.1, 1.0, 0.0, 0.04371584699453552, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.1, 0.6666666666666666, 0.0, 0.12195121951219512, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.1, 1.0, 0.0, 0.044444444444444446, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.1, 1.0, 0.0, 0.043478260869565216, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.1, 1.0, 0.0, 0.043478260869565216, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.1, 1.0, 0.2, 0.02495201535508637, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.1, 0.8888888888888888, 0.0, 0.25, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.1, 0.3333333333333333, 0.0, 0.1875, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.1, 0.3333333333333333, 0.0, 0.1875, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.1, 0.6666666666666666, 0.0, 0.16129032258064516, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.1, 0.7777777777777778, 0.0, 0.19047619047619047, 0.1
fp,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.1, 0.8, 0.0, 0.05263157894736842, 0.1
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.1, 0.8, 0.0, 0.041666666666666664, 0.1
fp,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.1, 0.8, 0.0, 0.0625, 0.1
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.1, 0.9, 0.0, 0.045454545454545456, 0.1
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.1, 1.0, 0.0, 0.03508771929824561, 0.1
getString,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.1, 0.6, 0.0, 0.1388888888888889, 0.1
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.1, 0.7, 0.0, 0.13953488372093023, 0.1
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.1, 0.6, 0.0, 0.125, 0.1
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.1, 0.6, 0.0, 0.125, 0.1
getString,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.1, 0.8, 0.0, 0.14634146341463414, 0.1
getString,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.1, 0.8, 0.0, 0.14634146341463414, 0.1
getString,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.1, 0.9, 0.0, 0.21875, 0.1
getString,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.1, 0.9, 0.0, 0.15384615384615385, 0.1
getString,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.1, 0.9, 0.0, 0.17647058823529413, 0.1
getString,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.1, 0.9, 0.0, 0.17647058823529413, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.09302325581395349, 1.0, 0.0, 0.03197674418604651, 0.09302325581395349
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.09259259259259259, 1.0, 0.14285714285714285, 0.02195945945945946, 0.09259259259259259
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.09090909090909091, 0.125, 0.0, 0.15789473684210525, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.09090909090909091, 0.5, 0.0, 0.13157894736842105, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.09090909090909091, 0.5, 0.0, 0.18421052631578946, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.09090909090909091, 0.625, 0.0, 0.07894736842105263, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.09090909090909091, 0.625, 0.0, 0.13157894736842105, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.09090909090909091, 0.625, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.09090909090909091, 0.75, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.09090909090909091, 1.0, 0.0, 0.2894736842105263, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.09090909090909091, 1.0, 0.0, 0.2894736842105263, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.09090909090909091, 0.5, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate,SIMPLE_NAME, line no: 839, 0.09090909090909091, 0.125, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.09090909090909091, 0.875, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getTime,SIMPLE_NAME, line no: 875, 0.09090909090909091, 1.0, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.09090909090909091, 0.125, 0.0, 0.18421052631578946, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.09090909090909091, 0.875, 0.0, 0.21052631578947367, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.09090909090909091, 0.125, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.09090909090909091, 0.125, 0.0, 0.13157894736842105, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.09090909090909091, 0.125, 0.0, 0.13157894736842105, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.09090909090909091, 0.125, 0.0, 0.13157894736842105, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.09090909090909091, 0.125, 0.0, 0.13157894736842105, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.09090909090909091, 0.125, 0.0, 0.07894736842105263, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.09090909090909091, 0.9, 0.0, 0.09497206703910614, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.09090909090909091, 0.9, 0.0, 0.10666666666666667, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.09090909090909091, 0.9, 0.0, 0.10596026490066225, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.09090909090909091, 0.8, 0.0, 0.23076923076923078, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.09090909090909091, 0.0, 0.0, 0.17857142857142858, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.09090909090909091, 0.0, 0.0, 0.17647058823529413, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.09090909090909091, 0.0, 0.0, 0.13513513513513514, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.09090909090909091, 0.0, 0.0, 0.13333333333333333, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.09090909090909091, 0.0, 0.0, 0.13333333333333333, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.09090909090909091, 0.0, 0.0, 0.17647058823529413, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.09090909090909091, 0.0, 0.0, 0.16666666666666666, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.09090909090909091, 0.0, 0.0, 0.14814814814814814, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.09090909090909091, 0.0, 0.0, 0.1794871794871795, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.09090909090909091, 0.0, 0.0, 0.1935483870967742, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.09090909090909091, 0.0, 0.0, 0.18518518518518517, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.09090909090909091, 0.5555555555555556, 0.0, 0.11428571428571428, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.09090909090909091, 1.0, 0.14285714285714285, 0.021346469622331693, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.09090909090909091, 0.6666666666666666, 0.0, 0.15384615384615385, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.09090909090909091, 0.7777777777777778, 0.0, 0.0707070707070707, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.09090909090909091, 0.6666666666666666, 0.0, 0.11538461538461539, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.09090909090909091, 0.8, 0.0, 0.047619047619047616, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.09090909090909091, 0.6, 0.0, 0.0392156862745098, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.09090909090909091, 1.0, 0.0, 0.16666666666666666, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.09090909090909091, 0.8, 0.0, 0.15625, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.09090909090909091, 0.8, 0.0, 0.11904761904761904, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.09090909090909091, 0.8, 0.0, 0.11904761904761904, 0.09090909090909091
getString,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.09090909090909091, 0.9, 0.0, 0.12195121951219512, 0.09090909090909091
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.08695652173913043, 0.9, 0.0, 0.09714285714285714, 0.08695652173913043
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.08695652173913043, 0.9, 0.0, 0.10828025477707007, 0.08695652173913043
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.08695652173913043, 0.9, 0.0, 0.10759493670886076, 0.08695652173913043
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.08695652173913043, 0.9, 0.0, 0.09467455621301775, 0.08695652173913043
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.08695652173913043, 1.0, 0.0, 0.05454545454545454, 0.08695652173913043
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.08333333333333333, 0.0, 0.0, 0.13157894736842105, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.08333333333333333, 0.0, 0.0, 0.10526315789473684, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.08333333333333333, 0.0, 0.0, 0.13157894736842105, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.08333333333333333, 1.0, 0.0, 0.23684210526315788, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.08333333333333333, 0.5, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 0.08333333333333333, 1.0, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.08333333333333333, 1.0, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.08333333333333333, 1.0, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.08333333333333333, 0.875, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.08333333333333333, 0.875, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.08333333333333333, 1.0, 0.0, 0.10526315789473684, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.08333333333333333, 1.0, 0.0, 0.07894736842105263, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.08333333333333333, 0.5, 0.0, 0.18421052631578946, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.08333333333333333, 0.125, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.08333333333333333, 0.375, 0.0, 0.10526315789473684, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.08333333333333333, 0.375, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.08333333333333333, 0.375, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.08333333333333333, 0.75, 0.0, 0.15789473684210525, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.08333333333333333, 0.25, 0.0, 0.07894736842105263, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.08333333333333333, 0.375, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.08333333333333333, 0.375, 0.0, 0.05263157894736842, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.08333333333333333, 0.75, 0.0, 0.10526315789473684, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.08333333333333333, 0.75, 0.0, 0.10526315789473684, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.08333333333333333, 0.625, 0.0, 0.18421052631578946, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.08333333333333333, 0.125, 0.0, 0.18421052631578946, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.08333333333333333, 0.9, 0.0, 0.0825242718446602, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.08333333333333333, 0.9, 0.0, 0.2553191489361702, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.08333333333333333, 0.9, 0.0, 0.2631578947368421, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.08333333333333333, 0.0, 0.0, 0.14285714285714285, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.08333333333333333, 0.0, 0.0, 0.13636363636363635, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.08333333333333333, 0.0, 0.0, 0.13043478260869565, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.08333333333333333, 0.0, 0.0, 0.13157894736842105, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.08333333333333333, 0.0, 0.0, 0.17647058823529413, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.08333333333333333, 0.0, 0.0, 0.11764705882352941, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.0, 0.0, 0.16129032258064516, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.08333333333333333, 0.0, 0.0, 0.15, 0.08333333333333333
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.08333333333333333, 0.8, 0.0, 0.043478260869565216, 0.08333333333333333
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.08333333333333333, 0.9, 0.0, 0.03773584905660377, 0.08333333333333333
fp,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.08333333333333333, 0.8, 0.0, 0.05555555555555555, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.08333333333333333, 0.6, 0.0, 0.06666666666666667, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.08333333333333333, 0.6, 0.0, 0.1568627450980392, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.08333333333333333, 1.0, 0.0, 0.12903225806451613, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.08333333333333333, 1.0, 0.0, 0.12903225806451613, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.08333333333333333, 0.7, 0.0, 0.11904761904761904, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.08333333333333333, 0.8, 1.0, 0.21052631578947367, 0.08333333333333333
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.08333333333333333, 0.7, 0.0, 0.09523809523809523, 0.08333333333333333
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.08, 0.9, 0.0, 0.08673469387755102, 0.08
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.08, 0.9, 0.0, 0.10493827160493827, 0.08
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.08, 0.9, 0.0, 0.10559006211180125, 0.08
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.08, 0.9, 0.0, 0.09411764705882353, 0.08
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.08, 0.9, 0.0, 0.09302325581395349, 0.08
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.07692307692307693, 0.0, 0.0, 0.18421052631578946, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.07692307692307693, 0.0, 0.0, 0.21052631578947367, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.07692307692307693, 0.0, 0.0, 0.23684210526315788, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.07692307692307693, 1.0, 0.0, 0.2631578947368421, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.07692307692307693, 1.0, 0.0, 0.13157894736842105, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.07692307692307693, 1.0, 0.0, 0.13157894736842105, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.07692307692307693, 0.5, 0.0, 0.15789473684210525, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.07692307692307693, 0.875, 0.0, 0.13157894736842105, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.07692307692307693, 0.375, 0.0, 0.15789473684210525, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.07692307692307693, 0.25, 0.0, 0.10526315789473684, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.07692307692307693, 0.625, 0.0, 0.18421052631578946, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.07692307692307693, 0.375, 0.0, 0.07894736842105263, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.07692307692307693, 0.375, 0.0, 0.05263157894736842, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.07692307692307693, 0.9, 0.0, 0.08196721311475409, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.07692307692307693, 0.9, 0.0, 0.2682926829268293, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.07692307692307693, 0.9, 0.0, 0.08717948717948718, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.07692307692307693, 0.9, 0.0, 0.07053941908713693, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.07692307692307693, 0.9, 0.0, 0.0918918918918919, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.07692307692307693, 0.9, 0.0, 0.09714285714285714, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.07692307692307693, 0.9, 0.0, 0.096045197740113, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.07692307692307693, 0.9, 0.0, 0.04815864022662889, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.07692307692307693, 0.9, 0.0, 0.08602150537634409, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.07692307692307693, 0.0, 0.0, 0.13953488372093023, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.07692307692307693, 0.0, 0.0, 0.1276595744680851, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.07692307692307693, 0.0, 0.0, 0.13043478260869565, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.07692307692307693, 0.0, 0.0, 0.11538461538461539, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.07692307692307693, 0.0, 0.0, 0.12244897959183673, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.07692307692307693, 0.0, 0.0, 0.13636363636363635, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.07692307692307693, 0.0, 0.0, 0.10810810810810811, 0.07692307692307693
fp,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.07692307692307693, 1.0, 0.0, 0.045454545454545456, 0.07692307692307693
fp,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.07692307692307693, 1.0, 0.0, 0.044444444444444446, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.07692307692307693, 0.1, 0.0, 0.1794871794871795, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.07692307692307693, 1.0, 0.0, 0.04838709677419355, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.07692307692307693, 0.9, 0.0, 0.1320754716981132, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.07692307692307693, 0.6, 0.0, 0.1, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.07692307692307693, 0.6, 0.0, 0.1, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.07692307692307693, 0.8, 0.0, 0.09433962264150944, 0.07692307692307693
getString,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.07692307692307693, 0.8, 0.0, 0.09803921568627451, 0.07692307692307693
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.07407407407407407, 0.9, 0.0, 0.07456140350877193, 0.07407407407407407
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.07407407407407407, 0.9, 0.0, 0.07894736842105263, 0.07407407407407407
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.07407407407407407, 0.9, 0.0, 0.05862068965517241, 0.07407407407407407
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.07407407407407407, 0.9, 0.0, 0.06227106227106227, 0.07407407407407407
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.07407407407407407, 0.9, 0.0, 0.07264957264957266, 0.07407407407407407
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.07142857142857142, 0.0, 0.0, 0.23684210526315788, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.07142857142857142, 0.0, 0.0, 0.2631578947368421, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.07142857142857142, 0.0, 0.0, 0.2894736842105263, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.07142857142857142, 0.0, 0.0, 0.2894736842105263, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.07142857142857142, 0.0, 0.0, 0.2631578947368421, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.07142857142857142, 0.0, 0.0, 0.2631578947368421, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.07142857142857142, 0.0, 0.0, 0.21052631578947367, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.07142857142857142, 0.0, 0.0, 0.23684210526315788, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.07142857142857142, 0.0, 0.0, 0.21052631578947367, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.07142857142857142, 0.0, 0.0, 0.23684210526315788, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.07142857142857142, 1.0, 0.0, 0.23684210526315788, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.07142857142857142, 0.625, 0.0, 0.23684210526315788, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.07142857142857142, 0.75, 0.0, 0.21951219512195122, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.07142857142857142, 0.75, 0.0, 0.21951219512195122, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.07142857142857142, 0.875, 0.0, 0.15789473684210525, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.07142857142857142, 0.375, 0.0, 0.10526315789473684, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.07142857142857142, 0.375, 0.0, 0.10526315789473684, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.07142857142857142, 0.75, 0.0, 0.21052631578947367, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.07142857142857142, 0.9, 0.0, 0.05647840531561462, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.07142857142857142, 0.9, 0.0, 0.0648854961832061, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.07142857142857142, 0.9, 0.0, 0.09550561797752809, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.07142857142857142, 0.9, 0.0, 0.09659090909090909, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.07142857142857142, 0.9, 0.0, 0.1518987341772152, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.07142857142857142, 0.9, 0.0, 0.15384615384615385, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.07142857142857142, 0.9, 0.0, 0.04607046070460705, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.07142857142857142, 0.0, 0.0, 0.12, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.07142857142857142, 0.0, 0.0, 0.14814814814814814, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.07142857142857142, 0.8, 0.0, 0.109375, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.07142857142857142, 0.8, 0.0, 0.109375, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.07142857142857142, 1.0, 0.0, 0.1590909090909091, 0.07142857142857142
getString,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.07142857142857142, 1.0, 0.0, 0.13333333333333333, 0.07142857142857142
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.06896551724137931, 0.9, 0.0, 0.075, 0.06896551724137931
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.06896551724137931, 0.9, 0.0, 0.054838709677419356, 0.06896551724137931
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.06896551724137931, 0.9, 0.0, 0.05821917808219178, 0.06896551724137931
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.06896551724137931, 0.9, 0.0, 0.06772908366533864, 0.06896551724137931
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.06896551724137931, 0.9, 0.0, 0.05802047781569966, 0.06896551724137931
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.06896551724137931, 0.9, 0.0, 0.08629441624365482, 0.06896551724137931
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.06896551724137931, 0.9, 0.0, 0.08374384236453201, 0.06896551724137931
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.06896551724137931, 1.0, 0.08333333333333333, 0.011545293072824156, 0.06896551724137931
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.06779661016949153, 1.0, 0.08333333333333333, 0.011363636363636364, 0.06779661016949153
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.06666666666666667, 0.0, 0.0, 0.2631578947368421, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.06666666666666667, 0.0, 0.0, 0.34210526315789475, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.06666666666666667, 0.0, 0.0, 0.3157894736842105, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.06666666666666667, 0.0, 0.0, 0.2894736842105263, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.06666666666666667, 0.0, 0.0, 0.2631578947368421, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.06666666666666667, 0.0, 0.0, 0.2894736842105263, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.06666666666666667, 0.0, 0.0, 0.34210526315789475, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.06666666666666667, 0.0, 0.0, 0.2631578947368421, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.06666666666666667, 0.0, 0.0, 0.3333333333333333, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.06666666666666667, 0.0, 0.0, 0.2894736842105263, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.06666666666666667, 0.0, 0.0, 0.2631578947368421, 0.06666666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.06666666666666667, 0.625, 0.0, 0.23684210526315788, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.06666666666666667, 0.9, 0.0, 0.07211538461538461, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.06666666666666667, 0.9, 0.0, 0.053125, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.06666666666666667, 0.9, 0.0, 0.19230769230769232, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.06666666666666667, 0.9, 0.0, 0.061371841155234655, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.06666666666666667, 0.9, 0.0, 0.07339449541284404, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.06666666666666667, 0.9, 0.0, 0.06751054852320675, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.06666666666666667, 0.9, 0.0, 0.06611570247933884, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.06666666666666667, 0.9, 0.0, 0.06779661016949153, 0.06666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.06666666666666667, 0.0, 0.0, 0.10344827586206896, 0.06666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.06666666666666667, 0.0, 0.0, 0.1, 0.06666666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.06666666666666667, 0.0, 0.0, 0.1206896551724138, 0.06666666666666667
fp,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.06666666666666667, 0.6, 0.0, 0.024390243902439025, 0.06666666666666667
getString,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.06666666666666667, 0.8, 1.0, 0.12307692307692308, 0.06666666666666667
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.06451612903225806, 0.9, 0.0, 0.054313099041533544, 0.06451612903225806
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.06451612903225806, 0.9, 0.0, 0.06639004149377593, 0.06451612903225806
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.06451612903225806, 0.9, 0.0, 0.06882591093117409, 0.06451612903225806
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.06451612903225806, 1.0, 0.0, 0.031007751937984496, 0.06451612903225806
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0625, 0.0, 0.0, 0.2857142857142857, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0625, 0.0, 0.0, 0.29545454545454547, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0625, 0.0, 0.0, 0.2826086956521739, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0625, 0.0, 0.0, 0.3157894736842105, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0625, 0.0, 0.0, 0.3157894736842105, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0625, 0.0, 0.0, 0.2894736842105263, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0625, 0.0, 0.0, 0.2631578947368421, 0.0625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0625, 0.0, 0.0, 0.275, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.0625, 0.9, 0.0, 0.057432432432432436, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.0625, 0.9, 0.0, 0.06722689075630252, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.0625, 0.9, 0.0, 0.06589147286821706, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.0625, 0.9, 0.0, 0.07488986784140969, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.0625, 0.9, 0.0, 0.06299212598425197, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.0625, 0.9, 0.0, 0.06060606060606061, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.0625, 0.9, 0.0, 0.06349206349206349, 0.0625
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.0625, 0.6, 0.0, 0.025, 0.0625
getString,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.0625, 0.6, 0.0, 0.0975609756097561, 0.0625
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.06060606060606061, 0.9, 0.0, 0.07086614173228346, 0.06060606060606061
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.06060606060606061, 0.9, 0.0, 0.06976744186046512, 0.06060606060606061
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.06060606060606061, 0.9, 0.0, 0.07086614173228346, 0.06060606060606061
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.06060606060606061, 0.9, 0.0, 0.07086614173228346, 0.06060606060606061
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.06060606060606061, 0.9, 0.0, 0.061068702290076333, 0.06060606060606061
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.06060606060606061, 0.9, 0.0, 0.06204379562043796, 0.06060606060606061
getString,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.06060606060606061, 1.0, 0.0, 0.02888086642599278, 0.06060606060606061
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.058823529411764705, 0.0, 0.0, 0.27906976744186046, 0.058823529411764705
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.058823529411764705, 0.0, 0.0, 0.2765957446808511, 0.058823529411764705
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.058823529411764705, 0.0, 0.0, 0.2692307692307692, 0.058823529411764705
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.058823529411764705, 0.0, 0.0, 0.2857142857142857, 0.058823529411764705
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.058823529411764705, 0.0, 0.0, 0.29545454545454547, 0.058823529411764705
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.058823529411764705, 0.0, 0.0, 0.2631578947368421, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.058823529411764705, 0.9, 0.0, 0.05985915492957746, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.058823529411764705, 0.9, 0.0, 0.061371841155234655, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.058823529411764705, 0.9, 0.0, 0.0642570281124498, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.058823529411764705, 0.9, 0.0, 0.0642570281124498, 0.058823529411764705
fp,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.058823529411764705, 0.6, 0.0, 0.023529411764705882, 0.058823529411764705
getString,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.058823529411764705, 0.8, 0.0, 0.09722222222222222, 0.058823529411764705
getString,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.058823529411764705, 0.8, 0.0, 0.09722222222222222, 0.058823529411764705
getString,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.058823529411764705, 0.8, 1.0, 0.05223880597014925, 0.058823529411764705
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.05714285714285714, 0.9, 0.0, 0.06498194945848375, 0.05714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.05555555555555555, 0.0, 0.0, 0.28, 0.05555555555555555
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.05555555555555555, 0.0, 0.0, 0.24074074074074073, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.05555555555555555, 0.9, 0.0, 0.044386422976501305, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.05555555555555555, 0.9, 0.0, 0.06642066420664207, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.05555555555555555, 0.9, 0.0, 0.06451612903225806, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.05555555555555555, 0.9, 0.0, 0.056105610561056105, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.05555555555555555, 0.9, 0.0, 0.06642066420664207, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.05555555555555555, 0.9, 0.0, 0.06642066420664207, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.05555555555555555, 0.7, 0.0, 0.08955223880597014, 0.05555555555555555
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.05405405405405406, 0.9, 0.0, 0.04096385542168675, 0.05405405405405406
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.05405405405405406, 0.9, 0.0, 0.06040268456375839, 0.05405405405405406
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.05405405405405406, 0.9, 0.0, 0.05732484076433121, 0.05405405405405406
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.05405405405405406, 0.9, 0.0, 0.042606516290726815, 0.05405405405405406
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.05263157894736842, 0.0, 0.0, 0.22413793103448276, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.05263157894736842, 0.0, 0.0, 0.21666666666666667, 0.05263157894736842
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.05263157894736842, 0.0, 0.0, 0.2413793103448276, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.05263157894736842, 0.9, 0.0, 0.0425, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.05263157894736842, 0.9, 0.0, 0.03935185185185185, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.05263157894736842, 0.9, 0.0, 0.03490759753593429, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.05263157894736842, 0.9, 0.0, 0.0405727923627685, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.05263157894736842, 0.9, 0.0, 0.04271356783919598, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.05128205128205128, 0.9, 0.0, 0.03373015873015873, 0.05128205128205128
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.05128205128205128, 0.9, 0.0, 0.05421686746987952, 0.05128205128205128
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.05128205128205128, 0.9, 0.0, 0.04096385542168675, 0.05128205128205128
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.047619047619047616, 1.0, 0.0, 0.0111731843575419, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.047619047619047616, 1.0, 0.0, 0.013333333333333334, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.047619047619047616, 1.0, 0.0, 0.013245033112582781, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.045454545454545456, 1.0, 0.0, 0.011428571428571429, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.045454545454545456, 1.0, 0.0, 0.012738853503184714, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.045454545454545456, 1.0, 0.0, 0.012658227848101266, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.045454545454545456, 1.0, 0.0, 0.011834319526627219, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.043478260869565216, 1.0, 0.0, 0.009708737864077669, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.043478260869565216, 1.0, 0.0, 0.012121212121212121, 0.043478260869565216
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.041666666666666664, 0.9, 0.0, 0.03386454183266932, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.041666666666666664, 1.0, 0.0, 0.01020408163265306, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.041666666666666664, 1.0, 0.0, 0.012345679012345678, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.041666666666666664, 1.0, 0.0, 0.012422360248447204, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.041666666666666664, 1.0, 0.0, 0.011764705882352941, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.041666666666666664, 1.0, 0.0, 0.011627906976744186, 0.041666666666666664
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.041666666666666664, 0.8, 0.0, 0.042328042328042326, 0.041666666666666664
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.04081632653061224, 0.9, 0.0, 0.03373015873015873, 0.04081632653061224
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.04081632653061224, 0.9, 0.0, 0.032818532818532815, 0.04081632653061224
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.04, 0.9, 0.0, 0.03262955854126679, 0.04
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.04, 0.7, 0.0, 0.06349206349206349, 0.04
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.04, 1.0, 0.0, 0.01092896174863388, 0.04
fp,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.04, 1.0, 0.0, 0.010256410256410256, 0.04
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.04, 1.0, 0.0, 0.008298755186721992, 0.04
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.04, 1.0, 0.0, 0.010810810810810811, 0.04
fp,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.04, 1.0, 0.0, 0.011428571428571429, 0.04
fp,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.04, 1.0, 0.0, 0.011299435028248588, 0.04
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.04, 1.0, 0.0, 0.0056657223796034, 0.04
fp,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.04, 1.0, 0.0, 0.010752688172043012, 0.04
getString,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.04, 0.9, 0.0, 0.023872679045092837, 0.04
fp,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.038461538461538464, 1.0, 0.0, 0.008771929824561403, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.038461538461538464, 1.0, 0.0, 0.010752688172043012, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.038461538461538464, 1.0, 0.0, 0.010526315789473684, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.038461538461538464, 1.0, 0.0, 0.006896551724137931, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.038461538461538464, 1.0, 0.0, 0.007326007326007326, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.038461538461538464, 1.0, 0.0, 0.008547008547008548, 0.038461538461538464
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.038461538461538464, 1.0, 0.0, 0.04371584699453552, 0.038461538461538464
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.038461538461538464, 1.0, 0.0, 0.043243243243243246, 0.038461538461538464
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.03773584905660377, 1.0, 0.0, 0.01125, 0.03773584905660377
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.037037037037037035, 0.9, 0.0, 0.02125, 0.037037037037037035
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.037037037037037035, 0.9, 0.0, 0.028716216216216218, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.037037037037037035, 1.0, 0.0, 0.006644518272425249, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.037037037037037035, 1.0, 0.0, 0.007633587786259542, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.037037037037037035, 1.0, 0.0, 0.011235955056179775, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.037037037037037035, 1.0, 0.0, 0.011363636363636364, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.037037037037037035, 1.0, 0.0, 0.005420054200542005, 0.037037037037037035
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.037037037037037035, 1.0, 0.0, 0.042105263157894736, 0.037037037037037035
getString,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.037037037037037035, 1.0, 0.0, 0.041237113402061855, 0.037037037037037035
getString,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.037037037037037035, 1.0, 0.0, 0.04285714285714286, 0.037037037037037035
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.03636363636363636, 0.9, 0.0, 0.027914614121510674, 0.03636363636363636
getString,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.03636363636363636, 1.0, 0.0, 0.010962241169305725, 0.03636363636363636
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.03571428571428571, 0.9, 0.0, 0.020706455542021926, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.03571428571428571, 1.0, 0.0, 0.01, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.03571428571428571, 1.0, 0.0, 0.0064516129032258064, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.03571428571428571, 1.0, 0.0, 0.00684931506849315, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.03571428571428571, 1.0, 0.0, 0.00796812749003984, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.03571428571428571, 1.0, 0.0, 0.006825938566552901, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.03571428571428571, 1.0, 0.0, 0.01015228426395939, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.03571428571428571, 1.0, 0.0, 0.009852216748768473, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.03571428571428571, 1.0, 0.0, 0.038834951456310676, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.03571428571428571, 1.0, 0.0, 0.03361344537815126, 0.03571428571428571
getString,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.03571428571428571, 1.0, 0.0, 0.04145077720207254, 0.03571428571428571
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.03508771929824561, 0.9, 0.0, 0.015985790408525755, 0.03508771929824561
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.034482758620689655, 0.9, 0.0, 0.06796116504854369, 0.034482758620689655
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.034482758620689655, 0.9, 0.0, 0.015734265734265736, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.034482758620689655, 1.0, 0.0, 0.009615384615384616, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.034482758620689655, 1.0, 0.0, 0.00625, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.034482758620689655, 1.0, 0.0, 0.007220216606498195, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.034482758620689655, 1.0, 0.0, 0.009174311926605505, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.034482758620689655, 1.0, 0.0, 0.008438818565400843, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.034482758620689655, 1.0, 0.0, 0.008264462809917356, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.034482758620689655, 1.0, 0.0, 0.00847457627118644, 0.034482758620689655
getString,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.034482758620689655, 1.0, 0.0, 0.04, 0.034482758620689655
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.034482758620689655, 1.0, 0.0, 0.04060913705583756, 0.034482758620689655
getString,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.034482758620689655, 1.0, 0.0, 0.03940886699507389, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.03333333333333333, 1.0, 0.0, 0.006389776357827476, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.03333333333333333, 1.0, 0.0, 0.008298755186721992, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.03333333333333333, 1.0, 0.0, 0.008097165991902834, 0.03333333333333333
getString,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.03333333333333333, 1.0, 0.0, 0.038461538461538464, 0.03333333333333333
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.03333333333333333, 1.0, 0.0, 0.03669724770642202, 0.03333333333333333
getString,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.03333333333333333, 1.0, 0.0, 0.036885245901639344, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.03225806451612903, 1.0, 0.0, 0.006756756756756757, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.03225806451612903, 1.0, 0.0, 0.008403361344537815, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.03225806451612903, 1.0, 0.0, 0.007751937984496124, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.03225806451612903, 1.0, 0.0, 0.00881057268722467, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.03225806451612903, 1.0, 0.0, 0.007874015748031496, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.03225806451612903, 1.0, 0.0, 0.007575757575757576, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.03225806451612903, 1.0, 0.0, 0.007936507936507936, 0.03225806451612903
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.03225806451612903, 1.0, 0.0, 0.03375527426160337, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.03125, 1.0, 0.0, 0.007874015748031496, 0.03125
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.03125, 1.0, 0.0, 0.007751937984496124, 0.03125
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.03125, 1.0, 0.0, 0.007874015748031496, 0.03125
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.03125, 1.0, 0.0, 0.007874015748031496, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.03125, 1.0, 0.0, 0.007633587786259542, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.03125, 1.0, 0.0, 0.0072992700729927005, 0.03125
getString,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.03125, 1.0, 0.0, 0.03361344537815126, 0.03125
getString,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.03125, 1.0, 0.0, 0.03524229074889868, 0.03125
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.030303030303030304, 1.0, 0.0, 0.007042253521126761, 0.030303030303030304
fp,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.030303030303030304, 1.0, 0.0, 0.007220216606498195, 0.030303030303030304
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.029411764705882353, 1.0, 0.0, 0.007220216606498195, 0.029411764705882353
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.029411764705882353, 1.0, 0.0, 0.03614457831325301, 0.029411764705882353
getString,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.029411764705882353, 1.0, 0.0, 0.03614457831325301, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.02857142857142857, 1.0, 0.0, 0.005221932114882507, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.02857142857142857, 1.0, 0.0, 0.007380073800738007, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.02857142857142857, 1.0, 0.0, 0.007168458781362007, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.02857142857142857, 1.0, 0.0, 0.006600660066006601, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.02857142857142857, 1.0, 0.0, 0.007380073800738007, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.02857142857142857, 1.0, 0.0, 0.007380073800738007, 0.02857142857142857
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.02857142857142857, 1.0, 0.0, 0.02888086642599278, 0.02857142857142857
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.02857142857142857, 1.0, 0.0, 0.03007518796992481, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.027777777777777776, 1.0, 0.0, 0.004819277108433735, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.027777777777777776, 1.0, 0.0, 0.006711409395973154, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.027777777777777776, 1.0, 0.0, 0.006369426751592357, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.027777777777777776, 1.0, 0.0, 0.005012531328320802, 0.027777777777777776
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.027777777777777776, 1.0, 0.0, 0.029850746268656716, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.02702702702702703, 1.0, 0.0, 0.005, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.02702702702702703, 1.0, 0.0, 0.004629629629629629, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.02702702702702703, 1.0, 0.0, 0.004106776180698152, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.02702702702702703, 1.0, 0.0, 0.00477326968973747, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.02702702702702703, 1.0, 0.0, 0.005025125628140704, 0.02702702702702703
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.02702702702702703, 1.0, 0.0, 0.01927710843373494, 0.02702702702702703
getString,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.02702702702702703, 1.0, 0.0, 0.026845637583892617, 0.02702702702702703
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.02702702702702703, 1.0, 0.0, 0.025477707006369428, 0.02702702702702703
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.02702702702702703, 1.0, 0.0, 0.020050125313283207, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.02631578947368421, 1.0, 0.0, 0.003968253968253968, 0.02631578947368421
fp,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.02631578947368421, 1.0, 0.0, 0.006024096385542169, 0.02631578947368421
fp,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.02631578947368421, 1.0, 0.0, 0.004819277108433735, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.02631578947368421, 1.0, 0.0, 0.018518518518518517, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.02631578947368421, 1.0, 0.0, 0.01642710472279261, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.02631578947368421, 1.0, 0.0, 0.01909307875894988, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.02631578947368421, 1.0, 0.0, 0.020100502512562814, 0.02631578947368421
getString,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.02564102564102564, 1.0, 0.0, 0.015873015873015872, 0.02564102564102564
getString,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.02564102564102564, 1.0, 0.0, 0.024096385542168676, 0.02564102564102564
getString,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.02564102564102564, 1.0, 0.0, 0.01927710843373494, 0.02564102564102564
getString,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.023809523809523808, 1.0, 0.0, 0.023255813953488372, 0.023809523809523808
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.02127659574468085, 1.0, 0.0, 0.00398406374501992, 0.02127659574468085
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.020833333333333332, 1.0, 0.0, 0.003968253968253968, 0.020833333333333332
fp,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.020833333333333332, 1.0, 0.0, 0.003861003861003861, 0.020833333333333332
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.020833333333333332, 1.0, 0.0, 0.01593625498007968, 0.020833333333333332
fp,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.02040816326530612, 1.0, 0.0, 0.003838771593090211, 0.02040816326530612
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.02040816326530612, 1.0, 0.0, 0.015873015873015872, 0.02040816326530612
getString,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.02040816326530612, 1.0, 0.0, 0.015444015444015444, 0.02040816326530612
getString,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.02, 1.0, 0.0, 0.015355086372360844, 0.02
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.018867924528301886, 1.0, 0.0, 0.0025, 0.018867924528301886
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.018867924528301886, 1.0, 0.0, 0.0033783783783783786, 0.018867924528301886
fp,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.018518518518518517, 1.0, 0.0, 0.003284072249589491, 0.018518518518518517
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.018518518518518517, 1.0, 0.0, 0.013513513513513514, 0.018518518518518517
fp,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.01818181818181818, 1.0, 0.0, 0.00243605359317905, 0.01818181818181818
getString,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.01818181818181818, 1.0, 0.0, 0.013136288998357963, 0.01818181818181818
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.017857142857142856, 1.0, 0.0, 0.0017761989342806395, 0.017857142857142856
fp,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.017543859649122806, 1.0, 0.0, 0.0017482517482517483, 0.017543859649122806
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org,SIMPLE_NAME, line no: 17, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,search,SIMPLE_NAME, line no: 17, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,index,SIMPLE_NAME, line no: 19, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.0, 0.125, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,function,SIMPLE_NAME, line no: 21, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 0.0, 0.125, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.0, 0.125, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 0.0, 0.125, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.0, 0.125, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.0, 0.125, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.0, 0.125, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,util,SIMPLE_NAME, line no: 37, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,common,SIMPLE_NAME, line no: 39, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.0, 0.125, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,request,SIMPLE_NAME, line no: 41, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.0, 0.125, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.0, 0.125, 0.0, 0.2894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java,SIMPLE_NAME, line no: 47, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,io,SIMPLE_NAME, line no: 47, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,init,SIMPLE_NAME, line no: 58, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,args,SIMPLE_NAME, line no: 58, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parse,SIMPLE_NAME, line no: 66, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.0, 0.25, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser,SIMPLE_NAME, line no: 74, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name,SIMPLE_NAME, line no: 74, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p,SIMPLE_NAME, line no: 74, 0.0, 0.125, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,put,SIMPLE_NAME, line no: 75, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.0, 0.125, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias,SIMPLE_NAME, line no: 85, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Override,SIMPLE_NAME, line no: 91, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ord",STRING_LITERAL, line no: 97, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,field,SIMPLE_NAME, line no: 100, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"literal",STRING_LITERAL, line no: 104, 0.0, 1.0, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rord",STRING_LITERAL, line no: 110, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"top",STRING_LITERAL, line no: 117, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"linear",STRING_LITERAL, line no: 125, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,slope,SIMPLE_NAME, line no: 129, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,intercept,SIMPLE_NAME, line no: 130, 0.0, 0.75, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 0.0, 1.0, 0.0, 0.2894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"recip",STRING_LITERAL, line no: 134, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,m,SIMPLE_NAME, line no: 138, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a,SIMPLE_NAME, line no: 139, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b,SIMPLE_NAME, line no: 140, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 0.0, 1.0, 0.0, 0.3157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"scale",STRING_LITERAL, line no: 144, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,min,SIMPLE_NAME, line no: 148, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,max,SIMPLE_NAME, line no: 149, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"div",STRING_LITERAL, line no: 153, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 0.0, 1.0, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"map",STRING_LITERAL, line no: 161, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,target,SIMPLE_NAME, line no: 167, 0.0, 0.75, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,def,SIMPLE_NAME, line no: 168, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.0, 0.75, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,null,NULL_LITERAL, line no: 168, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 0.0, 1.0, 0.0, 0.2631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func,SIMPLE_NAME, line no: 184, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,doc,SIMPLE_NAME, line no: 184, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals,SIMPLE_NAME, line no: 184, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,List,SIMPLE_NAME, line no: 193, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources,SIMPLE_NAME, line no: 193, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,toArray,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,size,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"add",STRING_LITERAL, line no: 197, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"product",STRING_LITERAL, line no: 199, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 0.0, 1.0, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals,SIMPLE_NAME, line no: 220, 0.0, 0.875, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals,SIMPLE_NAME, line no: 220, 0.0, 0.875, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"vector",STRING_LITERAL, line no: 226, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"query",STRING_LITERAL, line no: 232, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,q,SIMPLE_NAME, line no: 236, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.0, 0.75, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal,SIMPLE_NAME, line no: 237, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"geodist",STRING_LITERAL, line no: 262, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parser,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,radius,SIMPLE_NAME, line no: 268, 0.0, 0.875, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.0, 0.875, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,convert,SIMPLE_NAME, line no: 270, 0.0, 0.875, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.0, 0.875, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.0, 0.875, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.0, 0.875, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.0, 0.875, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,one,SIMPLE_NAME, line no: 275, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,two,SIMPLE_NAME, line no: 276, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,add,SIMPLE_NAME, line no: 281, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.0, 0.625, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.0, 0.625, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.0, 0.625, 0.0, 0.29333333333333333, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 0.0, 1.0, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"geohash",STRING_LITERAL, line no: 317, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lat,SIMPLE_NAME, line no: 321, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,lon,SIMPLE_NAME, line no: 322, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 0.0, 1.0, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"strdist",STRING_LITERAL, line no: 327, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,str1,SIMPLE_NAME, line no: 331, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,str2,SIMPLE_NAME, line no: 332, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.0, 0.875, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist,SIMPLE_NAME, line no: 335, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.0, 0.875, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.0, 0.875, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.0, 0.875, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.0, 0.875, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.0, 0.625, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.0, 0.5, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,req,SIMPLE_NAME, line no: 347, 0.0, 0.5, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"field",STRING_LITERAL, line no: 352, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.0, 0.625, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.0, 0.625, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f,SIMPLE_NAME, line no: 357, 0.0, 0.625, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rad",STRING_LITERAL, line no: 362, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"log",STRING_LITERAL, line no: 386, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,log,SIMPLE_NAME, line no: 395, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tan",STRING_LITERAL, line no: 416, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"acos",STRING_LITERAL, line no: 428, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"atan",STRING_LITERAL, line no: 434, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tanh",STRING_LITERAL, line no: 452, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ceil",STRING_LITERAL, line no: 458, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"floor",STRING_LITERAL, line no: 464, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"rint",STRING_LITERAL, line no: 470, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"atan2",STRING_LITERAL, line no: 488, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"max",STRING_LITERAL, line no: 494, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 0.0, 1.0, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"min",STRING_LITERAL, line no: 501, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 0.0, 1.0, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"dist",STRING_LITERAL, line no: 518, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,power,SIMPLE_NAME, line no: 521, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 0.0, 1.0, 0.0, 0.2631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"e",STRING_LITERAL, line no: 536, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,E,SIMPLE_NAME, line no: 539, 0.0, 0.875, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,val,SIMPLE_NAME, line no: 548, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 0.0, 1.0, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 0.0, 1.0, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"norm",STRING_LITERAL, line no: 594, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"true",STRING_LITERAL, line no: 616, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.0, 0.625, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"false",STRING_LITERAL, line no: 623, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.0, 0.625, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"exists",STRING_LITERAL, line no: 630, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 0.0, 1.0, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"not",STRING_LITERAL, line no: 647, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"and",STRING_LITERAL, line no: 665, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 0.0, 1.0, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"or",STRING_LITERAL, line no: 684, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"xor",STRING_LITERAL, line no: 703, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.0, 0.625, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.0, 0.625, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.0, 0.5, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.0, 0.5, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.75, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"if",STRING_LITERAL, line no: 725, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"def",STRING_LITERAL, line no: 736, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.0, 1.0, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.0, 0.875, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.0, 0.875, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.0, 0.875, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.0, 0.875, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.0, 0.875, 0.0, 0.2631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.0, 0.875, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.0, 0.5, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.0, 0.5, 0.0, 0.23684210526315788, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term,SIMPLE_NAME, line no: 760, 0.0, 0.5, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,text,SIMPLE_NAME, line no: 762, 0.0, 0.5, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.0, 0.5, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,length,SIMPLE_NAME, line no: 764, 0.0, 0.5, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.0, 0.5, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.0, 0.125, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.0, 0.125, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.0, 0.5, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i,SIMPLE_NAME, line no: 774, 0.0, 0.5, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.0, 0.5, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.0, 0.5, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.0, 0.5, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.0, 0.625, 0.0, 0.2028985507246377, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.0, 0.75, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.0, 0.75, 0.0, 0.18421052631578946, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df,SIMPLE_NAME, line no: 833, 0.0, 0.125, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.0, 0.25, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Date,SIMPLE_NAME, line no: 839, 0.0, 0.125, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.0, 0.75, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.0, 0.75, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.0, 0.625, 0.0, 0.2153846153846154, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.0, 0.625, 0.0, 0.2033898305084746, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first,SIMPLE_NAME, line no: 858, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,second,SIMPLE_NAME, line no: 859, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.0, 0.875, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.0, 0.75, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 0.0, 1.0, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.0, 0.125, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.0, 0.375, 0.0, 0.05263157894736842, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description,SIMPLE_NAME, line no: 951, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.0, 0.375, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.0, 0.375, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,")",STRING_LITERAL, line no: 952, 0.0, 0.375, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context,SIMPLE_NAME, line no: 956, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.0, 0.875, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.0, 0.5, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.0, 0.5, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o,SIMPLE_NAME, line no: 991, 0.0, 0.125, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other,SIMPLE_NAME, line no: 993, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.0, 0.125, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.0, 0.375, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Function,SIMPLE_NAME, line no: 1049, 0.0, 1.0, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.0, 0.125, 0.0, 0.21052631578947367, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.0, 0.75, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107," ",STRING_LITERAL, line no: 1107, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.0, 0.75, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.0, 0.125, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.0, 0.625, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.0, 0.625, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.0, 0.625, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.0, 0.625, 0.0, 0.02631578947368421, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.0, 0.625, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.0, 0.375, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.0, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.0, 0.375, 0.0, 0.0, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.0, 0.375, 0.0, 0.10526315789473684, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.625, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.0, 0.75, 0.0, 0.32142857142857145, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.0, 0.75, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.0, 0.75, 0.0, 0.15789473684210525, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.0, 0.75, 0.0, 0.07894736842105263, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.0, 0.625, 0.0, 0.13157894736842105, 0.0
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.0, 0.125, 0.0, 0.10526315789473684, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.3181818181818182, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.20930232558139536, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.30434782608695654, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.3157894736842105, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.2127659574468085, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.2647058823529412, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.36, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.20408163265306123, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.1724137931034483, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.22727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.18333333333333332, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.1724137931034483, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.2608695652173913, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.0, 0.1, 0.0, 0.5, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.19230769230769232, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.24324324324324326, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.3103448275862069, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.2631578947368421, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.29411764705882354, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.2647058823529412, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.2, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.0, 0.1, 0.0, 0.3157894736842105, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.1836734693877551, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.20454545454545456, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.25806451612903225, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.3181818181818182, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.2647058823529412, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.3181818181818182, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.21621621621621623, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.25925925925925924, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.2564102564102564, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.30434782608695654, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.36363636363636365, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.2, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.22580645161290322, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.12962962962962962, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.0, 0.1, 0.0, 0.2692307692307692, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.2631578947368421, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 0.0, 0.2, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.0, 0.2, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 0.0, 0.2, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.0, 0.3, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.0, 0.2, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.0, 0.5, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 0.0, 1.0, 0.0, 0.42105263157894735, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 0.0, 1.0, 0.0, 0.34782608695652173, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 0.0, 1.0, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.0, 0.9, 0.0, 0.2, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.0, 0.7, 0.0, 0.13043478260869565, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.0, 0.7, 0.0, 0.19047619047619047, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 0.0, 1.0, 0.0, 0.2857142857142857, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 0.0, 1.0, 0.0, 0.3157894736842105, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.0, 0.7, 0.0, 0.2857142857142857, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.0, 0.7, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.0, 0.9, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 0.0, 1.0, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.0, 0.9, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.0, 0.9, 0.0, 0.06302521008403361, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 0.0, 1.0, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.0, 0.7, 0.0, 0.1951219512195122, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.0, 0.7, 0.0, 0.3684210526315789, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.0, 0.7, 0.0, 0.3684210526315789, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.0, 0.7, 0.0, 0.23809523809523808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.0, 0.4, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.0, 0.8, 0.0, 0.22727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.0, 0.9, 0.0, 0.18, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.0, 0.9, 0.0, 0.2413793103448276, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 0.0, 0.9, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.0, 0.8, 0.0, 0.2, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.0, 0.6, 0.0, 0.13076923076923078, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.0, 0.6, 0.0, 0.14285714285714285, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.0, 0.6, 0.0, 0.21739130434782608, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.0, 0.6, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.0, 0.6, 0.0, 0.22666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.0, 0.9, 0.0, 0.15555555555555556, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.0, 0.9, 0.0, 0.13636363636363635, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 0.0, 1.0, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.0, 0.9, 0.0, 0.21428571428571427, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.0, 0.8, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.0, 0.3, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.0, 0.4, 0.0, 0.28, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.0, 0.8, 0.0, 0.23529411764705882, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.0, 0.3, 0.0, 0.20689655172413793, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.0, 0.4, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.0, 0.8, 0.0, 0.22857142857142856, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.0, 0.4, 0.0, 0.2631578947368421, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.0, 0.6, 0.0, 0.27586206896551724, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.0, 0.7, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.0, 0.5, 0.0, 0.12941176470588237, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.0, 0.5, 0.0, 0.125, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.0, 0.5, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.0, 0.5, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.0, 0.5, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.0, 0.9, 0.0, 0.14285714285714285, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 0.0, 1.0, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.0, 0.6, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.0, 0.6, 0.0, 0.13953488372093023, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.0, 0.6, 0.0, 0.2608695652173913, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.0, 0.9, 0.0, 0.07103825136612021, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.0, 0.9, 0.0, 0.0755813953488372, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.0, 0.7, 0.0, 0.14285714285714285, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.0, 0.7, 0.0, 0.3684210526315789, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.0, 0.7, 0.0, 0.14634146341463414, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.0, 0.9, 0.0, 0.07103825136612021, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.0, 0.9, 0.0, 0.0755813953488372, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.0, 0.7, 0.0, 0.14285714285714285, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.0, 0.7, 0.0, 0.14634146341463414, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.0, 0.9, 0.0, 0.07947019867549669, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.0, 0.7, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.0, 0.9, 0.0, 0.08609271523178808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.0, 0.9, 0.0, 0.09285714285714286, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.0, 0.7, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.0, 0.9, 0.0, 0.07947019867549669, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.0, 0.7, 0.0, 0.25806451612903225, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.0, 0.9, 0.0, 0.08108108108108109, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.0, 0.9, 0.0, 0.08759124087591241, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.0, 0.7, 0.0, 0.27586206896551724, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.0, 0.9, 0.0, 0.08053691275167785, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.0, 0.9, 0.0, 0.07971014492753623, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.0, 0.7, 0.0, 0.3103448275862069, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.0, 0.9, 0.0, 0.08053691275167785, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.0, 0.9, 0.0, 0.08695652173913043, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.0, 0.7, 0.0, 0.27586206896551724, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.0, 0.9, 0.0, 0.087248322147651, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.0, 0.9, 0.0, 0.08695652173913043, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.0, 0.7, 0.0, 0.27586206896551724, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.0, 0.9, 0.0, 0.08053691275167785, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.0, 0.9, 0.0, 0.08695652173913043, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.0, 0.7, 0.0, 0.27586206896551724, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.0, 0.9, 0.0, 0.07947019867549669, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.0, 0.7, 0.0, 0.26666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.0, 0.9, 0.0, 0.08609271523178808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.0, 0.9, 0.0, 0.09285714285714286, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.0, 0.7, 0.0, 0.26666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.0, 0.9, 0.0, 0.07947019867549669, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.0, 0.7, 0.0, 0.26666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.0, 0.9, 0.0, 0.07947019867549669, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.0, 0.7, 0.0, 0.26666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.0, 0.9, 0.0, 0.08609271523178808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.0, 0.7, 0.0, 0.26666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.0, 0.9, 0.0, 0.07947019867549669, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.0, 0.9, 0.0, 0.08571428571428572, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.0, 0.7, 0.0, 0.26666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.0, 0.9, 0.0, 0.08609271523178808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.0, 0.9, 0.0, 0.09285714285714286, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.0, 0.7, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.0, 0.9, 0.0, 0.0784313725490196, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.0, 0.9, 0.0, 0.08450704225352113, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.0, 0.7, 0.0, 0.2903225806451613, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.0, 0.9, 0.0, 0.08609271523178808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.0, 0.9, 0.0, 0.09285714285714286, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.0, 0.7, 0.0, 0.3, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.0, 0.9, 0.0, 0.07777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.0, 0.9, 0.0, 0.07692307692307693, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.0, 0.7, 0.0, 0.23255813953488372, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.0, 0.7, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.0, 0.9, 0.0, 0.07608695652173914, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.0, 0.9, 0.0, 0.08092485549132948, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.0, 0.9, 0.0, 0.07608695652173914, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.0, 0.9, 0.0, 0.08092485549132948, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.0, 0.9, 0.0, 0.15555555555555556, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.20833333333333334, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.0, 0.9, 0.0, 0.14285714285714285, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 0.0, 1.0, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.0, 0.8, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.0, 0.8, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.0, 0.9, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.0, 0.9, 0.0, 0.21875, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 0.0, 0.9, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.0, 0.9, 0.0, 0.07216494845360824, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 0.0, 1.0, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.0, 0.6, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.0, 0.9, 0.0, 0.07253886010362694, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.0, 0.6, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.0, 0.6, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.0, 0.9, 0.0, 0.055970149253731345, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.0, 0.9, 0.0, 0.05639097744360902, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.0, 0.9, 0.0, 0.0436046511627907, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.16, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.0, 0.8, 0.0, 0.1590909090909091, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.0, 0.8, 0.0, 0.24, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.0, 0.8, 0.0, 0.2608695652173913, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.0, 0.8, 0.0, 0.15151515151515152, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.0, 0.8, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.0, 0.8, 0.0, 0.1320754716981132, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.0, 0.8, 0.0, 0.2608695652173913, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.0, 0.5, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.0, 0.5, 0.0, 0.0975609756097561, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.0, 0.5, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.0, 0.5, 0.0, 0.13725490196078433, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.0, 0.5, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.0, 0.5, 0.0, 0.3181818181818182, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.0, 0.5, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.0, 0.5, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.0, 0.5, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.0, 0.5, 0.0, 0.1935483870967742, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.0, 0.5, 0.0, 0.36363636363636365, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.0, 0.5, 0.0, 0.14473684210526316, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.0, 0.5, 0.0, 0.3157894736842105, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.0, 0.5, 0.0, 0.16, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.0, 0.5, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.4444444444444444, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.0, 0.5, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.0, 0.5, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.0, 0.5, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.0, 0.5, 0.0, 0.28, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.0, 0.5, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.0, 0.5, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.0, 0.5, 0.0, 0.28, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.0, 0.8, 0.0, 0.21739130434782608, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.0, 0.6, 0.0, 0.10483870967741936, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.0, 0.6, 0.0, 0.15942028985507245, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.0, 0.8, 0.0, 0.2631578947368421, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.0, 0.7, 0.0, 0.1951219512195122, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.0, 0.7, 0.0, 0.1951219512195122, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.0, 0.7, 0.0, 0.2558139534883721, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.0, 0.2, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.0, 0.1, 0.0, 0.2631578947368421, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.0, 0.3, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 0.0, 0.2, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.0, 0.7, 0.0, 0.10126582278481013, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.0, 0.7, 0.0, 0.14285714285714285, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.0, 0.7, 0.0, 0.11538461538461539, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.0, 0.7, 0.0, 0.1875, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.0, 0.7, 0.0, 0.19444444444444445, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.0, 0.8, 0.0, 0.1875, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.0, 0.8, 0.0, 0.14634146341463414, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.0, 0.8, 0.0, 0.18181818181818182, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.0, 0.6, 0.0, 0.09166666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.0, 0.6, 0.0, 0.12307692307692308, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.0, 0.6, 0.0, 0.13559322033898305, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.0, 0.9, 0.0, 0.12903225806451613, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.0, 0.9, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.0, 0.9, 0.0, 0.12903225806451613, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 0.9, 0.0, 0.125, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 0.9, 0.0, 0.10526315789473684, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 0.9, 0.0, 0.125, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 0.9, 0.0, 0.125, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.0, 0.7, 0.0, 0.2916666666666667, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.0, 0.7, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 0.9, 0.0, 0.125, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.0, 0.7, 0.0, 0.2916666666666667, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.0, 0.7, 0.0, 0.3888888888888889, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 0.0, 0.9, 0.0, 0.125, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.0, 0.9, 0.0, 0.06329113924050633, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.0, 0.7, 0.0, 0.1794871794871795, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.0, 0.1, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.0, 0.4, 0.0, 0.18181818181818182, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.0, 0.4, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.0, 0.4, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.0, 0.4, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.0, 0.3, 0.0, 0.08, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.0, 0.3, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.0, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.0, 0.9, 0.0, 0.04509283819628647, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.0, 0.8, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.0, 0.3, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.10526315789473684, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.13636363636363635, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.0, 0.2, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.0, 0.7, 0.0, 0.1935483870967742, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.0, 0.1, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.0, 0.2, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.0, 0.3, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.0, 0.2, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.0, 0.2, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.0, 0.2, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.0, 0.5, 0.0, 0.20833333333333334, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.0, 0.9, 0.0, 0.06666666666666667, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.0, 0.7, 0.0, 0.15789473684210525, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.0, 0.7, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.0, 0.4, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.0, 0.4, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.0, 0.4, 0.0, 0.05555555555555555, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.0, 0.7, 0.0, 0.08771929824561403, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.0, 0.8, 0.0, 0.2647058823529412, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.0, 0.8, 0.0, 0.2647058823529412, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.0, 0.9, 0.0, 0.06147540983606557, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.0, 0.7, 0.0, 0.23809523809523808, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.0, 0.7, 0.0, 0.13846153846153847, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.0, 0.7, 0.0, 0.3684210526315789, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.0, 0.7, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.0, 0.7, 0.0, 0.3157894736842105, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.0, 0.6, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.0, 0.6, 0.0, 0.2, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.0, 0.7, 0.0, 0.1935483870967742, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.0, 0.7, 0.0, 0.1875, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.0, 0.7, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.0, 0.7, 0.0, 0.2727272727272727, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.0, 0.8, 0.0, 0.12121212121212122, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.0, 0.3, 0.0, 0.058823529411764705, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.0, 0.3, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.0, 0.7, 0.0, 0.16, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.0, 0.7, 0.0, 0.16666666666666666, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.0, 0.6, 0.0, 0.1875, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.6, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.0, 0.7, 0.0, 0.21428571428571427, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.0, 0.7, 0.0, 0.1320754716981132, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.0, 0.7, 0.0, 0.13725490196078433, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.0, 0.7, 0.0, 0.2631578947368421, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.0, 0.7, 0.0, 0.25, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.0, 0.3, 0.0, 0.13636363636363635, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.0, 0.1, 0.0, 0.2777777777777778, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
LiteralValueSource,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.0, 0.4, 0.0, 0.25925925925925924, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,org,SIMPLE_NAME, line no: 17, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,search,SIMPLE_NAME, line no: 17, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,index,SIMPLE_NAME, line no: 19, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.0, 0.1111111111111111, 0.0, 0.15789473684210525, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,function,SIMPLE_NAME, line no: 21, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 0.0, 0.1111111111111111, 0.0, 0.06666666666666667, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.0, 0.1111111111111111, 0.0, 0.21052631578947367, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.0, 0.1111111111111111, 0.0, 0.2222222222222222, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,util,SIMPLE_NAME, line no: 37, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,common,SIMPLE_NAME, line no: 39, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,request,SIMPLE_NAME, line no: 41, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.0, 0.1111111111111111, 0.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.0, 0.1111111111111111, 0.0, 0.19230769230769232, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,java,SIMPLE_NAME, line no: 47, 0.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,io,SIMPLE_NAME, line no: 47, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 0.0, 0.1111111111111111, 0.0, 0.17647058823529413, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,init,SIMPLE_NAME, line no: 58, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,args,SIMPLE_NAME, line no: 58, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parse,SIMPLE_NAME, line no: 66, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 0.0, 0.1111111111111111, 0.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.0, 0.1111111111111111, 0.0, 0.11538461538461539, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.0, 0.2222222222222222, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,addParser,SIMPLE_NAME, line no: 74, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,name,SIMPLE_NAME, line no: 74, 0.0, 0.1111111111111111, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,p,SIMPLE_NAME, line no: 74, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,put,SIMPLE_NAME, line no: 75, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,alias,SIMPLE_NAME, line no: 85, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,source,SIMPLE_NAME, line no: 85, 0.0, 0.1111111111111111, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.0, 0.1111111111111111, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 0.0, 1.0, 1.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 0.0, 1.0, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Override,SIMPLE_NAME, line no: 91, 0.0, 1.0, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 0.0, 0.7777777777777778, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.0, 0.8888888888888888, 0.0, 0.26666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ord",STRING_LITERAL, line no: 97, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,field,SIMPLE_NAME, line no: 100, 0.0, 0.6666666666666666, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.0, 0.7777777777777778, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"literal",STRING_LITERAL, line no: 104, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.0, 0.8888888888888888, 0.0, 0.16666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"rord",STRING_LITERAL, line no: 110, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"top",STRING_LITERAL, line no: 117, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"linear",STRING_LITERAL, line no: 125, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,slope,SIMPLE_NAME, line no: 129, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.0, 0.7777777777777778, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,intercept,SIMPLE_NAME, line no: 130, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 0.0, 1.0, 0.0, 0.2631578947368421, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"recip",STRING_LITERAL, line no: 134, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,m,SIMPLE_NAME, line no: 138, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,a,SIMPLE_NAME, line no: 139, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,b,SIMPLE_NAME, line no: 140, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 0.0, 1.0, 0.0, 0.21739130434782608, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"scale",STRING_LITERAL, line no: 144, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,min,SIMPLE_NAME, line no: 148, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,max,SIMPLE_NAME, line no: 149, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"div",STRING_LITERAL, line no: 153, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 0.0, 1.0, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"map",STRING_LITERAL, line no: 161, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,target,SIMPLE_NAME, line no: 167, 0.0, 0.7777777777777778, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,def,SIMPLE_NAME, line no: 168, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.0, 0.7777777777777778, 0.0, 0.1875, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,null,NULL_LITERAL, line no: 168, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 0.0, 1.0, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 0.0, 1.0, 0.0, 0.3157894736842105, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,func,SIMPLE_NAME, line no: 184, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,doc,SIMPLE_NAME, line no: 184, 0.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vals,SIMPLE_NAME, line no: 184, 0.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,List,SIMPLE_NAME, line no: 193, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources,SIMPLE_NAME, line no: 193, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 0.0, 0.7777777777777778, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,toArray,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,size,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"add",STRING_LITERAL, line no: 197, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"product",STRING_LITERAL, line no: 199, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 0.0, 1.0, 0.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 0.0, 1.0, 0.0, 0.23529411764705882, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,aVals,SIMPLE_NAME, line no: 220, 0.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bVals,SIMPLE_NAME, line no: 220, 0.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"vector",STRING_LITERAL, line no: 226, 0.0, 1.0, 1.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.0, 0.8888888888888888, 0.0, 0.23529411764705882, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"query",STRING_LITERAL, line no: 232, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,q,SIMPLE_NAME, line no: 236, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.0, 0.7777777777777778, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,defVal,SIMPLE_NAME, line no: 237, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 0.0, 1.0, 0.0, 0.1875, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.0, 0.8888888888888888, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.0, 0.7777777777777778, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 0.0, 0.7777777777777778, 1.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.0, 0.7777777777777778, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 0.0, 1.0, 0.0, 0.13636363636363635, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"geodist",STRING_LITERAL, line no: 262, 0.0, 1.0, 1.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.22727272727272727, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parser,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,radius,SIMPLE_NAME, line no: 268, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,convert,SIMPLE_NAME, line no: 270, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.0, 0.8888888888888888, 0.0, 0.1875, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.0, 0.8888888888888888, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.0, 0.8888888888888888, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,one,SIMPLE_NAME, line no: 275, 0.0, 0.8888888888888888, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,two,SIMPLE_NAME, line no: 276, 0.0, 0.8888888888888888, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,add,SIMPLE_NAME, line no: 281, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.0, 0.4444444444444444, 0.0, 0.09090909090909091, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.0, 0.4444444444444444, 0.0, 0.12903225806451613, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.0, 0.4444444444444444, 0.0, 0.12903225806451613, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.0, 0.5555555555555556, 1.0, 0.08, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 0.0, 1.0, 0.0, 0.23529411764705882, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.0, 1.0, 1.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"geohash",STRING_LITERAL, line no: 317, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,lat,SIMPLE_NAME, line no: 321, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,lon,SIMPLE_NAME, line no: 322, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 0.0, 1.0, 0.0, 0.26666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"strdist",STRING_LITERAL, line no: 327, 0.0, 1.0, 1.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,str1,SIMPLE_NAME, line no: 331, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,str2,SIMPLE_NAME, line no: 332, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.0, 0.8888888888888888, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dist,SIMPLE_NAME, line no: 335, 0.0, 0.8888888888888888, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.0, 0.8888888888888888, 0.0, 0.125, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.0, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.0, 0.8888888888888888, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.0, 0.8888888888888888, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.0, 0.6666666666666666, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.0, 0.5555555555555556, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,req,SIMPLE_NAME, line no: 347, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.0, 0.5555555555555556, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"field",STRING_LITERAL, line no: 352, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.0, 0.6666666666666666, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.0, 0.6666666666666666, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,f,SIMPLE_NAME, line no: 357, 0.0, 0.6666666666666666, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"rad",STRING_LITERAL, line no: 362, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.0, 0.6666666666666666, 0.0, 0.05555555555555555, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.0, 0.6666666666666666, 0.0, 0.05555555555555555, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"log",STRING_LITERAL, line no: 386, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,log,SIMPLE_NAME, line no: 395, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"tan",STRING_LITERAL, line no: 416, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"acos",STRING_LITERAL, line no: 428, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"atan",STRING_LITERAL, line no: 434, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"tanh",STRING_LITERAL, line no: 452, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ceil",STRING_LITERAL, line no: 458, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"floor",STRING_LITERAL, line no: 464, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"rint",STRING_LITERAL, line no: 470, 0.0, 1.0, 1.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.0, 0.7777777777777778, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"atan2",STRING_LITERAL, line no: 488, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"max",STRING_LITERAL, line no: 494, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 0.0, 1.0, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"min",STRING_LITERAL, line no: 501, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 0.0, 1.0, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"dist",STRING_LITERAL, line no: 518, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,power,SIMPLE_NAME, line no: 521, 0.0, 0.7777777777777778, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 0.0, 1.0, 0.0, 0.22727272727272727, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.0, 0.7777777777777778, 0.0, 0.18181818181818182, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"e",STRING_LITERAL, line no: 536, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,E,SIMPLE_NAME, line no: 539, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.0, 0.6666666666666666, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 0.0, 0.6666666666666666, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.0, 0.7777777777777778, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.0, 0.8888888888888888, 0.0, 0.16666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,val,SIMPLE_NAME, line no: 548, 0.0, 0.8888888888888888, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.0, 0.8888888888888888, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 0.0, 1.0, 1.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.0, 0.8888888888888888, 0.0, 0.125, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 0.0, 1.0, 1.0, 0.16666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.0, 0.8888888888888888, 0.0, 0.1111111111111111, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.0, 0.8888888888888888, 0.0, 0.15789473684210525, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"norm",STRING_LITERAL, line no: 594, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.0, 0.8888888888888888, 0.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 0.0, 1.0, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.0, 0.6666666666666666, 0.0, 0.17647058823529413, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.0, 0.6666666666666666, 0.0, 0.16666666666666666, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"true",STRING_LITERAL, line no: 616, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.0, 0.6666666666666666, 0.0, 0.15, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.0, 0.5555555555555556, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"false",STRING_LITERAL, line no: 623, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.0, 0.5555555555555556, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"exists",STRING_LITERAL, line no: 630, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"not",STRING_LITERAL, line no: 647, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"and",STRING_LITERAL, line no: 665, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 0.0, 1.0, 0.0, 0.23529411764705882, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"or",STRING_LITERAL, line no: 684, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"xor",STRING_LITERAL, line no: 703, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.0, 0.5555555555555556, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.0, 0.4444444444444444, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.0, 0.4444444444444444, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.6666666666666666, 0.0, 0.08, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.6666666666666666, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.6666666666666666, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"if",STRING_LITERAL, line no: 725, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 0.0, 0.7777777777777778, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 0.0, 0.7777777777777778, 0.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 0.0, 0.7777777777777778, 0.0, 0.25, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 0.0, 1.0, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"def",STRING_LITERAL, line no: 736, 0.0, 1.0, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.0, 0.8888888888888888, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.0, 0.8888888888888888, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.0, 0.8888888888888888, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.0, 0.8888888888888888, 0.0, 0.17391304347826086, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.0, 0.5555555555555556, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.0, 0.5555555555555556, 0.0, 0.13636363636363635, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,term,SIMPLE_NAME, line no: 760, 0.0, 0.5555555555555556, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,text,SIMPLE_NAME, line no: 762, 0.0, 0.5555555555555556, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,length,SIMPLE_NAME, line no: 764, 0.0, 0.5555555555555556, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.0, 0.5555555555555556, 0.0, 0.11764705882352941, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.0, 0.5555555555555556, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i,SIMPLE_NAME, line no: 774, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.0, 0.5555555555555556, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.0, 0.5555555555555556, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.0, 0.5555555555555556, 1.0, 0.07246376811594203, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.0, 0.7777777777777778, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.0, 0.7777777777777778, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,df,SIMPLE_NAME, line no: 833, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.0, 0.2222222222222222, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Date,SIMPLE_NAME, line no: 839, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.0, 0.1111111111111111, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.0, 0.7777777777777778, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.0, 0.7777777777777778, 0.0, 0.3125, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.0, 0.5555555555555556, 0.0, 0.07692307692307693, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.0, 0.5555555555555556, 1.0, 0.0847457627118644, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,first,SIMPLE_NAME, line no: 858, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,second,SIMPLE_NAME, line no: 859, 0.0, 1.0, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 0.0, 1.0, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 0.0, 0.7777777777777778, 0.0, 0.2, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.0, 0.1111111111111111, 0.0, 0.17647058823529413, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.0, 0.3333333333333333, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,description,SIMPLE_NAME, line no: 951, 0.0, 0.1111111111111111, 1.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.0, 0.3333333333333333, 0.0, 0.16, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.0, 0.3333333333333333, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,")",STRING_LITERAL, line no: 952, 0.0, 0.3333333333333333, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,context,SIMPLE_NAME, line no: 956, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.0, 0.1111111111111111, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.0, 0.7777777777777778, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.0, 0.4444444444444444, 0.0, 0.13333333333333333, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.0, 0.4444444444444444, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.0, 0.1111111111111111, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o,SIMPLE_NAME, line no: 991, 0.0, 0.1111111111111111, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,other,SIMPLE_NAME, line no: 993, 0.0, 0.6666666666666666, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.0, 0.3333333333333333, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,Function,SIMPLE_NAME, line no: 1049, 0.0, 0.8888888888888888, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.0, 0.1111111111111111, 0.0, 0.35714285714285715, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.0, 0.7777777777777778, 0.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.0, 0.7777777777777778, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107," ",STRING_LITERAL, line no: 1107, 0.0, 0.7777777777777778, 1.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.0, 0.7777777777777778, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.0, 0.1111111111111111, 0.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.0, 0.3333333333333333, 0.0, 0.058823529411764705, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.0, 0.3333333333333333, 0.0, 0.125, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.6666666666666666, 0.0, 0.21428571428571427, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.0, 0.7777777777777778, 1.0, 0.10714285714285714, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.0, 0.7777777777777778, 1.0, 0.14285714285714285, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.0, 0.7777777777777778, 0.0, 0.15789473684210525, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.0, 0.7777777777777778, 1.0, 0.07142857142857142, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.0, 0.6666666666666666, 0.0, 0.17857142857142858, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.0, 0.5555555555555556, 1.0, 0.2857142857142857, 0.0
fp.getString(),METHOD_INVOCATION, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.0, 0.1111111111111111, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.06666666666666667, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.1, 0.0
fp,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
fp,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.023255813953488372, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.043478260869565216, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.058823529411764705, 0.0
fp,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.03571428571428571, 0.0
fp,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.02127659574468085, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.029411764705882353, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.04, 0.0
fp,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.02040816326530612, 0.0
fp,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.021739130434782608, 0.0
fp,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.017241379310344827, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.022727272727272728, 0.0
fp,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.016666666666666666, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.017241379310344827, 0.0
fp,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.021739130434782608, 0.0
fp,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.019230769230769232, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.02702702702702703, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.034482758620689655, 0.0
fp,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.07142857142857142, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.03333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.041666666666666664, 0.0
fp,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.02631578947368421, 0.0
fp,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.029411764705882353, 0.0
fp,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.029411764705882353, 0.0
fp,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.02, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.03333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.0, 0.1, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.02040816326530612, 0.0
fp,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.022727272727272728, 0.0
fp,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.0, 0.0, 0.0, 0.022222222222222223, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistance,SIMPLE_NAME, line no: 36, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.0, 0.1, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.029411764705882353, 0.0
fp,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.027777777777777776, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.0, 0.1, 0.0, 0.07692307692307693, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.02702702702702703, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.037037037037037035, 0.0
fp,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.02564102564102564, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.043478260869565216, 0.0
fp,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.0, 0.1, 0.0, 0.06666666666666667, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.025, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.018518518518518517, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.037037037037037035, 0.0
fp,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.05, 0.0
fp,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
fp,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.05263157894736842, 0.0
fp,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 0.0, 0.1, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 0.0, 0.1, 1.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,String,SIMPLE_NAME, line no: 69, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.0, 0.1, 0.0, 0.02564102564102564, 0.0
fp,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.0, 0.2, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.0, 0.8, 0.0, 0.02631578947368421, 0.0
fp,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.0, 0.8, 0.0, 0.023809523809523808, 0.0
fp,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.0, 0.8, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.0, 0.6, 0.0, 0.013333333333333334, 0.0
fp,SIMPLE_NAME, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,get,SIMPLE_NAME, line no: 86, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 0.0, 1.0, 0.0, 0.1, 0.0
fp,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 0.0, 0.8, 0.0, 0.0625, 0.0
fp,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 0.0, 0.7, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.0, 0.8, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.0, 0.9, 0.0, 0.04, 0.0
fp,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.0, 0.9, 0.0, 0.03125, 0.0
fp,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 0.0, 0.8, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.0, 0.8, 0.0, 0.1, 0.0
fp,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.0, 1.0, 0.0, 0.02127659574468085, 0.0
fp,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.0, 1.0, 0.0, 0.024390243902439025, 0.0
fp,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 0.0, 1.0, 0.0, 0.043478260869565216, 0.0
fp,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.0, 1.0, 0.0, 0.019230769230769232, 0.0
fp,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 0.0, 1.0, 0.0, 0.047619047619047616, 0.0
fp,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.0, 1.0, 0.0, 0.0048543689320388345, 0.0
fp,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 0.0, 1.0, 0.0, 0.05263157894736842, 0.0
fp,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 0.0, 0.9, 0.0, 0.25, 0.0
fp,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.0, 0.8, 0.0, 0.03571428571428571, 0.0
fp,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.0, 0.8, 0.0, 0.05555555555555555, 0.0
fp,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.0, 0.8, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.05, 0.0
fp,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.0, 1.0, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.0, 1.0, 0.0, 0.004201680672268907, 0.0
fp,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.0, 0.8, 0.0, 0.024390243902439025, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.0, 0.8, 0.0, 0.05263157894736842, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.0, 0.8, 0.0, 0.05263157894736842, 0.0
fp,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.0, 0.8, 0.0, 0.0625, 0.0
fp,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 0.0, 0.8, 0.0, 0.16666666666666666, 0.0
fp,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.0, 0.8, 0.0, 0.25, 0.0
fp,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.0, 1.0, 0.0, 0.03333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.0, 1.0, 0.0, 0.034482758620689655, 0.0
fp,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.0, 1.0, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.0, 0.8, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 0.0, 0.8, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.0, 0.8, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.0, 1.0, 0.0, 0.030303030303030304, 0.0
fp,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.0, 1.0, 0.0, 0.02, 0.0
fp,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.0, 1.0, 0.0, 0.034482758620689655, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
fp,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.0, 0.9, 0.0, 0.08333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.0, 0.8, 0.0, 0.034482758620689655, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.0, 0.8, 0.0, 0.034482758620689655, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.0, 0.5, 0.0, 0.015151515151515152, 0.0
fp,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.0, 0.5, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.0, 0.5, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.0, 0.4, 0.0, 0.04, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.0, 0.4, 0.0, 0.04, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.0, 0.6, 0.0, 0.007692307692307693, 0.0
fp,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.0, 0.6, 0.0, 0.02857142857142857, 0.0
fp,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.0, 0.6, 0.0, 0.043478260869565216, 0.0
fp,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.0, 0.6, 0.0, 0.013333333333333334, 0.0
fp,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.0, 1.0, 0.0, 0.022222222222222223, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.0, 0.6, 0.0, 0.125, 0.0
fp,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getCore,SIMPLE_NAME, line no: 347, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getResourceLoader,SIMPLE_NAME, line no: 347, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StringDistanceFunction,SIMPLE_NAME, line no: 349, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,getReq,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getSchema,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getField,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.0, 0.8, 0.0, 0.18181818181818182, 0.0
fp,SIMPLE_NAME, line no: 107,getType,SIMPLE_NAME, line no: 358, 0.0, 0.8, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,getValueSource,SIMPLE_NAME, line no: 358, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.0, 1.0, 0.0, 0.00546448087431694, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.0, 1.0, 0.0, 0.005813953488372093, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.0, 1.0, 0.0, 0.00546448087431694, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.0, 1.0, 0.0, 0.005813953488372093, 0.0
fp,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.0, 1.0, 0.0, 0.006756756756756757, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.0, 1.0, 0.0, 0.0072992700729927005, 0.0
fp,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.0, 1.0, 0.0, 0.013422818791946308, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.0, 1.0, 0.0, 0.014492753623188406, 0.0
fp,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.0, 0.8, 0.0, 0.034482758620689655, 0.0
fp,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.0, 1.0, 0.0, 0.006711409395973154, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.0, 1.0, 0.0, 0.007246376811594203, 0.0
fp,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.0, 1.0, 0.0, 0.006711409395973154, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.0, 1.0, 0.0, 0.007246376811594203, 0.0
fp,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.0, 1.0, 0.0, 0.006711409395973154, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.0, 1.0, 0.0, 0.007246376811594203, 0.0
fp,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.0, 1.0, 0.0, 0.013071895424836602, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.0, 1.0, 0.0, 0.014084507042253521, 0.0
fp,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.0, 0.8, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.0, 0.8, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.0, 1.0, 0.0, 0.006622516556291391, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.0, 1.0, 0.0, 0.007142857142857143, 0.0
fp,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.0, 1.0, 0.0, 0.011111111111111112, 0.0
fp,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.0, 1.0, 0.0, 0.011834319526627219, 0.0
fp,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.0, 0.8, 0.0, 0.023255813953488372, 0.0
fp,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.0, 1.0, 0.0, 0.010869565217391304, 0.0
fp,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.0, 1.0, 0.0, 0.011560693641618497, 0.0
fp,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.0, 0.8, 0.0, 0.022222222222222223, 0.0
fp,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.0, 0.8, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.0, 1.0, 0.0, 0.005434782608695652, 0.0
fp,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.0, 1.0, 0.0, 0.005780346820809248, 0.0
fp,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getMultiValueSources,SIMPLE_NAME, line no: 512, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 0.0, 0.8, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.0, 1.0, 0.0, 0.02040816326530612, 0.0
fp,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.0, 1.0, 0.0, 0.25, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.0, 0.7, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 0.0, 0.7, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.0, 0.9, 0.0, 0.012048192771084338, 0.0
fp,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
fp,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.05555555555555555, 0.0
fp,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 0.0, 1.0, 0.0, 0.06666666666666667, 0.0
fp,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.0, 0.9, 0.0, 0.011235955056179775, 0.0
fp,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
fp,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 0.0, 1.0, 0.0, 0.05555555555555555, 0.0
fp,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.0, 0.9, 0.0, 0.02631578947368421, 0.0
fp,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.0, 1.0, 0.0, 0.03125, 0.0
fp,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
fp,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.0, 0.9, 0.0, 0.012658227848101266, 0.0
fp,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 0.0, 1.0, 0.0, 0.1, 0.0
fp,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.0, 0.9, 0.0, 0.011904761904761904, 0.0
fp,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.0, 1.0, 0.0, 0.25, 0.0
fp,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.0, 0.9, 0.0, 0.01282051282051282, 0.0
fp,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.0, 0.9, 0.0, 0.038461538461538464, 0.0
fp,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.0, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.0, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.0, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.0, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.0, 0.5, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.0, 0.5, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.0, 1.0, 0.0, 0.005154639175257732, 0.0
fp,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 0.0, 1.0, 0.0, 0.05555555555555555, 0.0
fp,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.0, 1.0, 0.0, 0.010362694300518135, 0.0
fp,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.0, 1.0, 0.0, 0.0037313432835820895, 0.0
fp,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.0, 1.0, 0.0, 0.0037593984962406013, 0.0
fp,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.0, 1.0, 0.0, 0.0029069767441860465, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.0, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.0, 0.5, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 0.0, 1.0, 0.0, 0.25, 0.0
fp,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 0.0, 0.8, 0.0, 0.07692307692307693, 0.0
fp,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 0.0, 0.8, 0.0, 0.0625, 0.0
fp,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.0, 1.0, 0.0, 0.016129032258064516, 0.0
fp,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 0.0, 1.0, 0.0, 0.1, 0.0
fp,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.0, 0.9, 0.0, 0.030303030303030304, 0.0
fp,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.0, 0.9, 0.0, 0.07142857142857142, 0.0
fp,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
fp,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.0, 0.9, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldTypeNoEx,SIMPLE_NAME, line no: 752, 0.0, 0.9, 0.0, 0.0625, 0.0
fp,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.0, 0.9, 0.0, 0.1, 0.0
fp,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.0, 0.9, 0.0, 0.058823529411764705, 0.0
fp,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.0, 0.9, 0.0, 0.043478260869565216, 0.0
fp,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldQuery,SIMPLE_NAME, line no: 758, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFieldOrNull,SIMPLE_NAME, line no: 758, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.0, 0.6, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getTerm,SIMPLE_NAME, line no: 760, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.0, 0.6, 0.0, 0.03225806451612903, 0.0
fp,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.0, 0.6, 0.0, 0.08333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.0, 0.6, 0.0, 0.013157894736842105, 0.0
fp,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.0, 0.6, 0.0, 0.02, 0.0
fp,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.08333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.0, 0.6, 0.0, 0.008064516129032258, 0.0
fp,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.0, 0.6, 0.0, 0.014492753623188406, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.0, 0.8, 0.0, 0.023809523809523808, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.0, 0.8, 0.0, 0.023809523809523808, 0.0
fp,SIMPLE_NAME, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.0, 0.8, 0.0, 0.023255813953488372, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.0, 0.1, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.0, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDate,SIMPLE_NAME, line no: 839, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.0, 0.8, 0.0, 0.0625, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.0, 0.9, 0.0, 0.04878048780487805, 0.0
fp,SIMPLE_NAME, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,getClass,SIMPLE_NAME, line no: 850, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.0, 0.6, 0.0, 0.008333333333333333, 0.0
fp,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.0, 0.6, 0.0, 0.015384615384615385, 0.0
fp,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.0, 0.6, 0.0, 0.01694915254237288, 0.0
fp,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 0.0, 1.0, 0.0, 0.2, 0.0
fp,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 0.0, 1.0, 0.0, 0.07692307692307693, 0.0
fp,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 0.0, 1.0, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getTime,SIMPLE_NAME, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.0, 1.0, 0.0, 0.004016064257028112, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.0, 1.0, 0.0, 0.004016064257028112, 0.0
fp,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 0.0, 1.0, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.0, 1.0, 0.0, 0.004219409282700422, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.0, 0.1, 0.0, 0.5, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.0, 0.4, 0.0, 0.0625, 0.0
fp,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.0, 0.4, 0.0, 0.14285714285714285, 0.0
fp,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.0, 0.1, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getValues,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.0, 0.9, 0.0, 0.005305039787798408, 0.0
fp,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,toString,SIMPLE_NAME, line no: 979, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.0, 0.5, 0.0, 0.07692307692307693, 0.0
fp,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getInt,SIMPLE_NAME, line no: 998, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getLong,SIMPLE_NAME, line no: 1003, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getFloat,SIMPLE_NAME, line no: 1008, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getDouble,SIMPLE_NAME, line no: 1013, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getNumber,SIMPLE_NAME, line no: 1018, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,getBool,SIMPLE_NAME, line no: 1023, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.0, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.0, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.0, 0.6, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.0, 1.0, 0.0, 0.009523809523809525, 0.0
fp,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.0, 0.7, 0.0, 0.07142857142857142, 0.0
fp,SIMPLE_NAME, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.0, 0.4, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.0, 0.8, 0.0, 0.017543859649122806, 0.0
fp,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.0, 0.8, 0.0, 0.06666666666666667, 0.0
fp,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.0, 0.8, 0.0, 0.06666666666666667, 0.0
fp,SIMPLE_NAME, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.0, 0.9, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.0, 1.0, 0.0, 0.00819672131147541, 0.0
fp,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.0, 0.8, 0.0, 0.047619047619047616, 0.0
fp,SIMPLE_NAME, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.0, 0.8, 0.0, 0.010101010101010102, 0.0
fp,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.0, 0.7, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.0, 0.3, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.0, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.0, 0.2, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.7, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.0, 0.7, 0.0, 0.03125, 0.0
fp,SIMPLE_NAME, line no: 107,getRequestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.7, 0.0, 0.07142857142857142, 0.0
fp,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.0, 0.8, 0.0, 0.005291005291005291, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.0, 0.8, 0.0, 0.007462686567164179, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.0, 0.8, 0.0, 0.017857142857142856, 0.0
fp,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.0, 0.8, 0.0, 0.018867924528301886, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.0, 0.8, 0.0, 0.0196078431372549, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.0, 0.8, 0.0, 0.05263157894736842, 0.0
fp,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.0, 0.8, 0.0, 0.05, 0.0
fp,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.0, 0.7, 0.0, 0.013513513513513514, 0.0
fp,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.0, 0.7, 0.0, 0.03571428571428571, 0.0
fp,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.0, 0.8, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.0, 0.5, 0.0, 0.05, 0.0
fp,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.0, 0.5, 0.0, 0.09090909090909091, 0.0
fp,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.0, 0.6, 0.0, 0.05, 0.0
fp,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.0, 0.4, 0.0, 0.045454545454545456, 0.0
fp,SIMPLE_NAME, line no: 107,getSortField,SIMPLE_NAME, line no: 1255, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.0, 0.1, 0.0, 0.0, 0.0
fp,SIMPLE_NAME, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.0, 0.4, 0.0, 0.037037037037037035, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.0, 0.0, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,org,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,apache,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,solr,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,search,SIMPLE_NAME, line no: 17, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.11627906976744186, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.17391304347826086, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.0, 0.0, 0.0, 0.17647058823529413, 0.0
getString,SIMPLE_NAME, line no: 107,lucene,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,index,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,AtomicReaderContext,SIMPLE_NAME, line no: 19, 0.0, 0.1, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.0, 0.0, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,Term,SIMPLE_NAME, line no: 20, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.10638297872340426, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.14705882352941177, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.0, 0.0, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,queries,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,function,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,BoostedQuery,SIMPLE_NAME, line no: 21, 0.0, 0.1, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.0, 0.0, 0.0, 0.12244897959183673, 0.0
getString,SIMPLE_NAME, line no: 107,FunctionValues,SIMPLE_NAME, line no: 22, 0.0, 0.1, 0.0, 0.21428571428571427, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.0, 0.0, 0.0, 0.10869565217391304, 0.0
getString,SIMPLE_NAME, line no: 107,ValueSource,SIMPLE_NAME, line no: 23, 0.0, 0.1, 0.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.08620689655172414, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.0, 0.0, 0.0, 0.11363636363636363, 0.0
getString,SIMPLE_NAME, line no: 107,docvalues,SIMPLE_NAME, line no: 24, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,BoolDocValues,SIMPLE_NAME, line no: 24, 0.0, 0.1, 0.0, 0.07692307692307693, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.0, 0.0, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleDocValues,SIMPLE_NAME, line no: 25, 0.0, 0.1, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.0, 0.0, 0.0, 0.10344827586206896, 0.0
getString,SIMPLE_NAME, line no: 107,LongDocValues,SIMPLE_NAME, line no: 26, 0.0, 0.1, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.0, 0.0, 0.0, 0.10869565217391304, 0.0
getString,SIMPLE_NAME, line no: 107,valuesource,SIMPLE_NAME, line no: 27, 0.0, 0.1, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.09615384615384616, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.10810810810810811, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.0, 0.0, 0.0, 0.10344827586206896, 0.0
getString,SIMPLE_NAME, line no: 107,queryparser,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,classic,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,ParseException,SIMPLE_NAME, line no: 28, 0.0, 0.1, 0.0, 0.2857142857142857, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.0, 0.0, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,Query,SIMPLE_NAME, line no: 29, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.0, 0.0, 0.0, 0.10526315789473684, 0.0
getString,SIMPLE_NAME, line no: 107,IndexSearcher,SIMPLE_NAME, line no: 30, 0.0, 0.1, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.0, 0.0, 0.0, 0.14705882352941177, 0.0
getString,SIMPLE_NAME, line no: 107,SortField,SIMPLE_NAME, line no: 31, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.0, 0.0, 0.0, 0.08823529411764706, 0.0
getString,SIMPLE_NAME, line no: 107,TermQuery,SIMPLE_NAME, line no: 32, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.0, 0.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,spell,SIMPLE_NAME, line no: 33, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,JaroWinklerDistance,SIMPLE_NAME, line no: 33, 0.0, 0.1, 0.0, 0.21052631578947367, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.0, 0.0, 0.0, 0.10204081632653061, 0.0
getString,SIMPLE_NAME, line no: 107,LevensteinDistance,SIMPLE_NAME, line no: 34, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.0, 0.0, 0.0, 0.11363636363636363, 0.0
getString,SIMPLE_NAME, line no: 107,NGramDistance,SIMPLE_NAME, line no: 35, 0.0, 0.1, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.0, 0.0, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,util,SIMPLE_NAME, line no: 37, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,BytesRef,SIMPLE_NAME, line no: 37, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.0, 0.0, 0.0, 0.14705882352941177, 0.0
getString,SIMPLE_NAME, line no: 107,UnicodeUtil,SIMPLE_NAME, line no: 38, 0.0, 0.1, 0.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.0, 0.0, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,common,SIMPLE_NAME, line no: 39, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,SolrException,SIMPLE_NAME, line no: 39, 0.0, 0.1, 0.0, 0.3076923076923077, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.10810810810810811, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.0, 0.0, 0.0, 0.14814814814814814, 0.0
getString,SIMPLE_NAME, line no: 107,NamedList,SIMPLE_NAME, line no: 40, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.0, 0.0, 0.0, 0.13043478260869565, 0.0
getString,SIMPLE_NAME, line no: 107,request,SIMPLE_NAME, line no: 41, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,SolrRequestInfo,SIMPLE_NAME, line no: 41, 0.0, 0.1, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.0, 0.0, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,schema,SIMPLE_NAME, line no: 42, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.0, 0.0, 0.0, 0.16129032258064516, 0.0
getString,SIMPLE_NAME, line no: 107,distance,SIMPLE_NAME, line no: 44, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.18518518518518517, 0.0
getString,SIMPLE_NAME, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.0, 0.0, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,plugin,SIMPLE_NAME, line no: 45, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,NamedListInitializedPlugin,SIMPLE_NAME, line no: 45, 0.0, 0.1, 0.0, 0.19230769230769232, 0.0
getString,SIMPLE_NAME, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.21052631578947367, 0.0
getString,SIMPLE_NAME, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.0, 0.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,java,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,io,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,IOException,SIMPLE_NAME, line no: 47, 0.0, 0.1, 0.0, 0.36363636363636365, 0.0
getString,SIMPLE_NAME, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.0, 0.0, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,ValueSourceParser,SIMPLE_NAME, line no: 54, 0.0, 0.1, 0.0, 0.17647058823529413, 0.0
getString,SIMPLE_NAME, line no: 107,init,SIMPLE_NAME, line no: 58, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,args,SIMPLE_NAME, line no: 58, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,parse,SIMPLE_NAME, line no: 66, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,FunctionQParser,SIMPLE_NAME, line no: 66, 0.0, 0.1, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Map,SIMPLE_NAME, line no: 69, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers,SIMPLE_NAME, line no: 69, 0.0, 0.1, 0.0, 0.11538461538461539, 0.0
getString,SIMPLE_NAME, line no: 107,HashMap,SIMPLE_NAME, line no: 69, 0.0, 0.2, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,name,SIMPLE_NAME, line no: 74, 0.0, 0.1, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,p,SIMPLE_NAME, line no: 74, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.0, 0.8, 0.0, 0.10526315789473684, 0.0
getString,SIMPLE_NAME, line no: 107,put,SIMPLE_NAME, line no: 75, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,NamedParser,SIMPLE_NAME, line no: 81, 0.0, 0.1, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.0, 0.8, 0.0, 0.09523809523809523, 0.0
getString,SIMPLE_NAME, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.0, 0.8, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,alias,SIMPLE_NAME, line no: 85, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,source,SIMPLE_NAME, line no: 85, 0.0, 0.1, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,dest,SIMPLE_NAME, line no: 85, 0.0, 0.1, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.0, 1.0, 0.0, 0.03070175438596491, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc",STRING_LITERAL, line no: 90, 0.0, 1.0, 1.0, 0.3, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.0, 1.0, 0.0, 0.02912621359223301, 0.0
getString,SIMPLE_NAME, line no: 107,@Override,MARKER_ANNOTATION, line no: 91, 0.0, 1.0, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,Override,SIMPLE_NAME, line no: 91, 0.0, 1.0, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.0, 0.8, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,parseValueSource,SIMPLE_NAME, line no: 93, 0.0, 0.8, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.0, 0.9, 0.0, 0.14814814814814814, 0.0
getString,SIMPLE_NAME, line no: 107,TestValueSource,SIMPLE_NAME, line no: 94, 0.0, 0.9, 0.0, 0.26666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,"ord",STRING_LITERAL, line no: 97, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,field,SIMPLE_NAME, line no: 100, 0.0, 0.7, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.0, 0.8, 1.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,parseId,SIMPLE_NAME, line no: 100, 0.0, 0.8, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.0, 0.9, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,OrdFieldSource,SIMPLE_NAME, line no: 101, 0.0, 0.9, 0.0, 0.21428571428571427, 0.0
getString,SIMPLE_NAME, line no: 107,"literal",STRING_LITERAL, line no: 104, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,"rord",STRING_LITERAL, line no: 110, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.0, 0.9, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,ReverseOrdFieldSource,SIMPLE_NAME, line no: 114, 0.0, 0.9, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"top",STRING_LITERAL, line no: 117, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.0, 1.0, 0.0, 0.0335195530726257, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.0, 1.0, 0.0, 0.02258064516129032, 0.0
getString,SIMPLE_NAME, line no: 107,"linear",STRING_LITERAL, line no: 125, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.0, 1.0, 0.0, 0.02413793103448276, 0.0
getString,SIMPLE_NAME, line no: 107,slope,SIMPLE_NAME, line no: 129, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.0, 0.8, 0.0, 0.13333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,parseFloat,SIMPLE_NAME, line no: 129, 0.0, 0.8, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,intercept,SIMPLE_NAME, line no: 130, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.0, 1.0, 0.0, 0.1276595744680851, 0.0
getString,SIMPLE_NAME, line no: 107,LinearFloatFunction,SIMPLE_NAME, line no: 131, 0.0, 1.0, 0.0, 0.2631578947368421, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.0, 1.0, 0.0, 0.021875, 0.0
getString,SIMPLE_NAME, line no: 107,"recip",STRING_LITERAL, line no: 134, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.0, 1.0, 0.0, 0.023255813953488372, 0.0
getString,SIMPLE_NAME, line no: 107,m,SIMPLE_NAME, line no: 138, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a,SIMPLE_NAME, line no: 139, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b,SIMPLE_NAME, line no: 140, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.0, 1.0, 0.0, 0.12195121951219512, 0.0
getString,SIMPLE_NAME, line no: 107,ReciprocalFloatFunction,SIMPLE_NAME, line no: 141, 0.0, 1.0, 0.0, 0.21739130434782608, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.0, 1.0, 0.0, 0.023972602739726026, 0.0
getString,SIMPLE_NAME, line no: 107,"scale",STRING_LITERAL, line no: 144, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.0, 1.0, 0.0, 0.02564102564102564, 0.0
getString,SIMPLE_NAME, line no: 107,min,SIMPLE_NAME, line no: 148, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,max,SIMPLE_NAME, line no: 149, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.0, 1.0, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,ScaleFloatFunction,SIMPLE_NAME, line no: 150, 0.0, 1.0, 0.0, 0.2777777777777778, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.0, 1.0, 0.0, 0.027888446215139442, 0.0
getString,SIMPLE_NAME, line no: 107,"div",STRING_LITERAL, line no: 153, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.0, 1.0, 0.0, 0.029914529914529916, 0.0
getString,SIMPLE_NAME, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.0, 1.0, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,DivFloatFunction,SIMPLE_NAME, line no: 158, 0.0, 1.0, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.0, 1.0, 0.0, 0.02, 0.0
getString,SIMPLE_NAME, line no: 107,"map",STRING_LITERAL, line no: 161, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.0, 1.0, 0.0, 0.020887728459530026, 0.0
getString,SIMPLE_NAME, line no: 107,target,SIMPLE_NAME, line no: 167, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,Float,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,def,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.0, 0.8, 0.0, 0.10869565217391304, 0.0
getString,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.0, 0.8, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,hasMoreArguments,SIMPLE_NAME, line no: 168, 0.0, 0.8, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,null,NULL_LITERAL, line no: 168, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.0, 1.0, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,RangeMapFloatFunction,SIMPLE_NAME, line no: 169, 0.0, 1.0, 0.0, 0.2857142857142857, 0.0
getString,SIMPLE_NAME, line no: 107,"abs",STRING_LITERAL, line no: 173, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,SimpleFloatFunction,SIMPLE_NAME, line no: 177, 0.0, 1.0, 0.0, 0.2631578947368421, 0.0
getString,SIMPLE_NAME, line no: 107,func,SIMPLE_NAME, line no: 184, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,doc,SIMPLE_NAME, line no: 184, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals,SIMPLE_NAME, line no: 184, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.0, 0.8, 0.0, 0.07142857142857142, 0.0
getString,SIMPLE_NAME, line no: 107,Math,SIMPLE_NAME, line no: 185, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,abs,SIMPLE_NAME, line no: 185, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.0, 0.8, 0.0, 0.05555555555555555, 0.0
getString,SIMPLE_NAME, line no: 107,floatVal,SIMPLE_NAME, line no: 185, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.0, 1.0, 0.0, 0.025830258302583026, 0.0
getString,SIMPLE_NAME, line no: 107,"sum",STRING_LITERAL, line no: 190, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.0, 1.0, 0.0, 0.027559055118110236, 0.0
getString,SIMPLE_NAME, line no: 107,List,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,sources,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.0, 0.8, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,parseValueSourceList,SIMPLE_NAME, line no: 193, 0.0, 0.8, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
getString,SIMPLE_NAME, line no: 107,SumFloatFunction,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.0, 1.0, 0.0, 0.10416666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,toArray,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.0, 1.0, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,size,SIMPLE_NAME, line no: 194, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.0, 1.0, 0.0, 0.05555555555555555, 0.0
getString,SIMPLE_NAME, line no: 107,"add",STRING_LITERAL, line no: 197, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.0, 1.0, 0.0, 0.025089605734767026, 0.0
getString,SIMPLE_NAME, line no: 107,"product",STRING_LITERAL, line no: 199, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.0, 1.0, 0.0, 0.027131782945736434, 0.0
getString,SIMPLE_NAME, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.0, 1.0, 0.0, 0.06756756756756757, 0.0
getString,SIMPLE_NAME, line no: 107,ProductFloatFunction,SIMPLE_NAME, line no: 203, 0.0, 1.0, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.0, 1.0, 0.0, 0.045454545454545456, 0.0
getString,SIMPLE_NAME, line no: 107,"mul",STRING_LITERAL, line no: 206, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"sub",STRING_LITERAL, line no: 208, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,DualFloatFunction,SIMPLE_NAME, line no: 213, 0.0, 1.0, 0.0, 0.23529411764705882, 0.0
getString,SIMPLE_NAME, line no: 107,aVals,SIMPLE_NAME, line no: 220, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bVals,SIMPLE_NAME, line no: 220, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.0, 0.8, 0.0, 0.04878048780487805, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.0, 0.8, 0.0, 0.05263157894736842, 0.0
getString,SIMPLE_NAME, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.0, 0.8, 0.0, 0.05263157894736842, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.0, 1.0, 0.0, 0.035897435897435895, 0.0
getString,SIMPLE_NAME, line no: 107,"vector",STRING_LITERAL, line no: 226, 0.0, 1.0, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.0, 1.0, 0.0, 0.03428571428571429, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.0, 0.8, 0.0, 0.10416666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,VectorValueSource,SIMPLE_NAME, line no: 229, 0.0, 0.9, 0.0, 0.23529411764705882, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.0, 1.0, 0.0, 0.0231023102310231, 0.0
getString,SIMPLE_NAME, line no: 107,"query",STRING_LITERAL, line no: 232, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.0, 1.0, 0.0, 0.02464788732394366, 0.0
getString,SIMPLE_NAME, line no: 107,q,SIMPLE_NAME, line no: 236, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.0, 0.8, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,parseNestedQuery,SIMPLE_NAME, line no: 236, 0.0, 0.8, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,defVal,SIMPLE_NAME, line no: 237, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,0.0f,NUMBER_LITERAL, line no: 237, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.0, 0.4, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,QueryValueSource,SIMPLE_NAME, line no: 241, 0.0, 1.0, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.0, 1.0, 0.0, 0.02364864864864865, 0.0
getString,SIMPLE_NAME, line no: 107,"boost",STRING_LITERAL, line no: 244, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.0, 1.0, 0.0, 0.021660649819494584, 0.0
getString,SIMPLE_NAME, line no: 107,vs,SIMPLE_NAME, line no: 248, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,bq,SIMPLE_NAME, line no: 249, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.0, 0.9, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.0, 1.0, 0.0, 0.10344827586206896, 0.0
getString,SIMPLE_NAME, line no: 107,"joindf",STRING_LITERAL, line no: 253, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,f0,SIMPLE_NAME, line no: 256, 0.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.0, 0.8, 1.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,parseArg,SIMPLE_NAME, line no: 256, 0.0, 0.8, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,qf,SIMPLE_NAME, line no: 257, 0.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.0, 1.0, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,JoinDocFreqValueSource,SIMPLE_NAME, line no: 258, 0.0, 1.0, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.0, 1.0, 0.0, 0.12, 0.0
getString,SIMPLE_NAME, line no: 107,"geodist",STRING_LITERAL, line no: 262, 0.0, 1.0, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.0, 1.0, 0.0, 0.1724137931034483, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.22727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,parser,SIMPLE_NAME, line no: 262, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.0, 1.0, 0.0, 0.006993006993006993, 0.0
getString,SIMPLE_NAME, line no: 107,"hsin",STRING_LITERAL, line no: 264, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.0, 1.0, 0.0, 0.007104795737122558, 0.0
getString,SIMPLE_NAME, line no: 107,radius,SIMPLE_NAME, line no: 268, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.0, 0.9, 0.0, 0.0625, 0.0
getString,SIMPLE_NAME, line no: 107,parseDouble,SIMPLE_NAME, line no: 268, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,convert,SIMPLE_NAME, line no: 270, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.0, 0.9, 0.0, 0.11428571428571428, 0.0
getString,SIMPLE_NAME, line no: 107,Boolean,SIMPLE_NAME, line no: 270, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,parseBoolean,SIMPLE_NAME, line no: 270, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,MultiValueSource,SIMPLE_NAME, line no: 272, 0.0, 0.9, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,pv1,SIMPLE_NAME, line no: 272, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv2,SIMPLE_NAME, line no: 273, 0.0, 0.9, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,one,SIMPLE_NAME, line no: 275, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,two,SIMPLE_NAME, line no: 276, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,s1,SIMPLE_NAME, line no: 280, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.0, 0.8, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,ArrayList,SIMPLE_NAME, line no: 280, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.0, 0.8, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,add,SIMPLE_NAME, line no: 281, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.0, 0.8, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.0, 0.8, 0.0, 0.13793103448275862, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.0, 0.8, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,x2,SIMPLE_NAME, line no: 284, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,y2,SIMPLE_NAME, line no: 285, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2,SIMPLE_NAME, line no: 286, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.0, 0.8, 0.0, 0.13793103448275862, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.0, 0.8, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource && two instanceof MultiValueSource,INFIX_EXPRESSION, line no: 292, 0.0, 0.5, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,one instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.0, 0.5, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,two instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 292, 0.0, 0.5, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.0, 0.4, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.0, 0.4, 0.0, 0.19047619047619047, 0.0
getString,SIMPLE_NAME, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.0, 0.4, 0.0, 0.12, 0.0
getString,SIMPLE_NAME, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.0, 0.4, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.0, 0.6, 0.0, 0.046153846153846156, 0.0
getString,SIMPLE_NAME, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.0, 0.6, 0.0, 0.11428571428571428, 0.0
getString,SIMPLE_NAME, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.0, 0.6, 0.0, 0.17391304347826086, 0.0
getString,SIMPLE_NAME, line no: 107,ErrorCode,SIMPLE_NAME, line no: 296, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,BAD_REQUEST,SIMPLE_NAME, line no: 296, 0.0, 0.6, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,"Input must either be 2 MultiValueSources  or there must be 4 ValueSources",STRING_LITERAL, line no: 297, 0.0, 0.6, 1.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineFunction,SIMPLE_NAME, line no: 301, 0.0, 1.0, 0.0, 0.23529411764705882, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.0, 1.0, 0.0, 0.02875399361022364, 0.0
getString,SIMPLE_NAME, line no: 107,"ghhsin",STRING_LITERAL, line no: 305, 0.0, 1.0, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.0, 1.0, 0.0, 0.027303754266211604, 0.0
getString,SIMPLE_NAME, line no: 107,gh1,SIMPLE_NAME, line no: 310, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,gh2,SIMPLE_NAME, line no: 311, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.0, 1.0, 0.0, 0.11363636363636363, 0.0
getString,SIMPLE_NAME, line no: 107,GeohashHaversineFunction,SIMPLE_NAME, line no: 313, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.0, 1.0, 0.0, 0.030534351145038167, 0.0
getString,SIMPLE_NAME, line no: 107,"geohash",STRING_LITERAL, line no: 317, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.0, 1.0, 0.0, 0.029045643153526972, 0.0
getString,SIMPLE_NAME, line no: 107,lat,SIMPLE_NAME, line no: 321, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,lon,SIMPLE_NAME, line no: 322, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,GeohashFunction,SIMPLE_NAME, line no: 324, 0.0, 1.0, 0.0, 0.26666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,"strdist",STRING_LITERAL, line no: 327, 0.0, 1.0, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,str1,SIMPLE_NAME, line no: 331, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,str2,SIMPLE_NAME, line no: 332, 0.0, 0.9, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,distClass,SIMPLE_NAME, line no: 333, 0.0, 0.9, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,dist,SIMPLE_NAME, line no: 335, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.0, 0.9, 0.0, 0.0625, 0.0
getString,SIMPLE_NAME, line no: 107,equalsIgnoreCase,SIMPLE_NAME, line no: 336, 0.0, 0.9, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,"jw",STRING_LITERAL, line no: 336, 0.0, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.0, 0.3, 0.0, 0.13333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.0, 0.4, 0.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.0, 0.9, 0.0, 0.08823529411764706, 0.0
getString,SIMPLE_NAME, line no: 107,"edit",STRING_LITERAL, line no: 338, 0.0, 0.9, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.0, 0.3, 0.0, 0.13793103448275862, 0.0
getString,SIMPLE_NAME, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.0, 0.4, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.0, 0.9, 0.0, 0.11428571428571428, 0.0
getString,SIMPLE_NAME, line no: 107,"ngram",STRING_LITERAL, line no: 340, 0.0, 0.9, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,ngram,SIMPLE_NAME, line no: 341, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,2,NUMBER_LITERAL, line no: 341, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.0, 0.4, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.0, 0.5, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,parseInt,SIMPLE_NAME, line no: 343, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.0, 0.7, 0.0, 0.1724137931034483, 0.0
getString,SIMPLE_NAME, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.0, 0.8, 0.0, 0.20833333333333334, 0.0
getString,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,req,SIMPLE_NAME, line no: 347, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,newInstance,SIMPLE_NAME, line no: 347, 0.0, 0.6, 0.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,"field",STRING_LITERAL, line no: 352, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,fieldName,SIMPLE_NAME, line no: 356, 0.0, 0.7, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,SchemaField,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,f,SIMPLE_NAME, line no: 357, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.0, 1.0, 0.0, 0.03278688524590164, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.0, 1.0, 0.0, 0.03488372093023256, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleParser,SIMPLE_NAME, line no: 362, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,"rad",STRING_LITERAL, line no: 362, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.0, 0.7, 0.0, 0.07936507936507936, 0.0
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.0, 0.8, 0.0, 0.05263157894736842, 0.0
getString,SIMPLE_NAME, line no: 107,doubleVal,SIMPLE_NAME, line no: 365, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.0, 0.7, 0.0, 0.12195121951219512, 0.0
getString,SIMPLE_NAME, line no: 107,DEGREES_TO_RADIANS,SIMPLE_NAME, line no: 365, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.0, 1.0, 0.0, 0.03825136612021858, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.0, 1.0, 0.0, 0.040697674418604654, 0.0
getString,SIMPLE_NAME, line no: 107,"deg",STRING_LITERAL, line no: 368, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.0, 0.7, 0.0, 0.07936507936507936, 0.0
getString,SIMPLE_NAME, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.0, 0.7, 0.0, 0.12195121951219512, 0.0
getString,SIMPLE_NAME, line no: 107,RADIANS_TO_DEGREES,SIMPLE_NAME, line no: 371, 0.0, 0.7, 0.0, 0.05555555555555555, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"sqrt",STRING_LITERAL, line no: 374, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.0, 0.8, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,sqrt,SIMPLE_NAME, line no: 377, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"cbrt",STRING_LITERAL, line no: 380, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.0, 0.8, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,cbrt,SIMPLE_NAME, line no: 383, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.0, 1.0, 0.0, 0.046357615894039736, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.0, 1.0, 0.0, 0.05, 0.0
getString,SIMPLE_NAME, line no: 107,"log",STRING_LITERAL, line no: 386, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.0, 0.8, 0.0, 0.06451612903225806, 0.0
getString,SIMPLE_NAME, line no: 107,log10,SIMPLE_NAME, line no: 389, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.0, 1.0, 0.0, 0.04054054054054054, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.0, 1.0, 0.0, 0.043795620437956206, 0.0
getString,SIMPLE_NAME, line no: 107,"ln",STRING_LITERAL, line no: 392, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.0, 0.8, 0.0, 0.06896551724137931, 0.0
getString,SIMPLE_NAME, line no: 107,log,SIMPLE_NAME, line no: 395, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.0, 1.0, 0.0, 0.03355704697986577, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.0, 1.0, 0.0, 0.036231884057971016, 0.0
getString,SIMPLE_NAME, line no: 107,"exp",STRING_LITERAL, line no: 398, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.0, 0.8, 0.0, 0.034482758620689655, 0.0
getString,SIMPLE_NAME, line no: 107,exp,SIMPLE_NAME, line no: 401, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.0, 1.0, 0.0, 0.040268456375838924, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.0, 1.0, 0.0, 0.043478260869565216, 0.0
getString,SIMPLE_NAME, line no: 107,"sin",STRING_LITERAL, line no: 404, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.0, 0.8, 0.0, 0.10344827586206896, 0.0
getString,SIMPLE_NAME, line no: 107,sin,SIMPLE_NAME, line no: 407, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.0, 1.0, 0.0, 0.03355704697986577, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.0, 1.0, 0.0, 0.036231884057971016, 0.0
getString,SIMPLE_NAME, line no: 107,"cos",STRING_LITERAL, line no: 410, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.0, 0.8, 0.0, 0.034482758620689655, 0.0
getString,SIMPLE_NAME, line no: 107,cos,SIMPLE_NAME, line no: 413, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.0, 1.0, 0.0, 0.03355704697986577, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.0, 1.0, 0.0, 0.036231884057971016, 0.0
getString,SIMPLE_NAME, line no: 107,"tan",STRING_LITERAL, line no: 416, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.0, 0.8, 0.0, 0.10344827586206896, 0.0
getString,SIMPLE_NAME, line no: 107,tan,SIMPLE_NAME, line no: 419, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.0, 1.0, 0.0, 0.039735099337748346, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.0, 1.0, 0.0, 0.04285714285714286, 0.0
getString,SIMPLE_NAME, line no: 107,"asin",STRING_LITERAL, line no: 422, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.0, 0.8, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,asin,SIMPLE_NAME, line no: 425, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"acos",STRING_LITERAL, line no: 428, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.0, 0.8, 0.0, 0.03333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,acos,SIMPLE_NAME, line no: 431, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"atan",STRING_LITERAL, line no: 434, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.0, 0.8, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,atan,SIMPLE_NAME, line no: 437, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.0, 1.0, 0.0, 0.039735099337748346, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.0, 1.0, 0.0, 0.04285714285714286, 0.0
getString,SIMPLE_NAME, line no: 107,"sinh",STRING_LITERAL, line no: 440, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.0, 0.8, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,sinh,SIMPLE_NAME, line no: 443, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"cosh",STRING_LITERAL, line no: 446, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.0, 0.8, 0.0, 0.03333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,cosh,SIMPLE_NAME, line no: 449, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"tanh",STRING_LITERAL, line no: 452, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.0, 0.8, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,tanh,SIMPLE_NAME, line no: 455, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.0, 1.0, 0.0, 0.033112582781456956, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.0, 1.0, 0.0, 0.03571428571428571, 0.0
getString,SIMPLE_NAME, line no: 107,"ceil",STRING_LITERAL, line no: 458, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.0, 0.8, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,ceil,SIMPLE_NAME, line no: 461, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.0, 1.0, 0.0, 0.032679738562091505, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.0, 1.0, 0.0, 0.035211267605633804, 0.0
getString,SIMPLE_NAME, line no: 107,"floor",STRING_LITERAL, line no: 464, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.0, 0.8, 0.0, 0.06451612903225806, 0.0
getString,SIMPLE_NAME, line no: 107,floor,SIMPLE_NAME, line no: 467, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.0, 1.0, 0.0, 0.039735099337748346, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.0, 1.0, 0.0, 0.04285714285714286, 0.0
getString,SIMPLE_NAME, line no: 107,"rint",STRING_LITERAL, line no: 470, 0.0, 1.0, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.0, 0.8, 0.0, 0.13333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,rint,SIMPLE_NAME, line no: 473, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.0, 1.0, 0.0, 0.027777777777777776, 0.0
getString,SIMPLE_NAME, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.0, 1.0, 0.0, 0.029585798816568046, 0.0
getString,SIMPLE_NAME, line no: 107,Double2Parser,SIMPLE_NAME, line no: 476, 0.0, 1.0, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,"pow",STRING_LITERAL, line no: 476, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.0, 0.8, 0.0, 0.023255813953488372, 0.0
getString,SIMPLE_NAME, line no: 107,pow,SIMPLE_NAME, line no: 479, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.0, 0.8, 0.0, 0.0625, 0.0
getString,SIMPLE_NAME, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.0, 0.8, 0.0, 0.0625, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.0, 1.0, 0.0, 0.02717391304347826, 0.0
getString,SIMPLE_NAME, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.0, 1.0, 0.0, 0.028901734104046242, 0.0
getString,SIMPLE_NAME, line no: 107,"hypot",STRING_LITERAL, line no: 482, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.0, 0.8, 0.0, 0.044444444444444446, 0.0
getString,SIMPLE_NAME, line no: 107,hypot,SIMPLE_NAME, line no: 485, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.0, 1.0, 0.0, 0.02717391304347826, 0.0
getString,SIMPLE_NAME, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.0, 1.0, 0.0, 0.028901734104046242, 0.0
getString,SIMPLE_NAME, line no: 107,"atan2",STRING_LITERAL, line no: 488, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.0, 0.8, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,atan2,SIMPLE_NAME, line no: 491, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.0, 1.0, 0.0, 0.025830258302583026, 0.0
getString,SIMPLE_NAME, line no: 107,"max",STRING_LITERAL, line no: 494, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.0, 1.0, 0.0, 0.027559055118110236, 0.0
getString,SIMPLE_NAME, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
getString,SIMPLE_NAME, line no: 107,MaxFloatFunction,SIMPLE_NAME, line no: 498, 0.0, 1.0, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.0, 1.0, 0.0, 0.025830258302583026, 0.0
getString,SIMPLE_NAME, line no: 107,"min",STRING_LITERAL, line no: 501, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.0, 1.0, 0.0, 0.027559055118110236, 0.0
getString,SIMPLE_NAME, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.0, 1.0, 0.0, 0.07142857142857142, 0.0
getString,SIMPLE_NAME, line no: 107,MinFloatFunction,SIMPLE_NAME, line no: 505, 0.0, 1.0, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,"sqedist",STRING_LITERAL, line no: 508, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,MVResult,SIMPLE_NAME, line no: 512, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,mvr,SIMPLE_NAME, line no: 512, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,SquaredEuclideanFunction,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,mv1,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.0, 1.0, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,mv2,SIMPLE_NAME, line no: 514, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"dist",STRING_LITERAL, line no: 518, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,power,SIMPLE_NAME, line no: 521, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.0, 1.0, 0.0, 0.10204081632653061, 0.0
getString,SIMPLE_NAME, line no: 107,VectorDistanceFunction,SIMPLE_NAME, line no: 524, 0.0, 1.0, 0.0, 0.22727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.0, 1.0, 0.0, 0.09302325581395349, 0.0
getString,SIMPLE_NAME, line no: 107,"ms",STRING_LITERAL, line no: 527, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.0, 1.0, 0.0, 0.14814814814814814, 0.0
getString,SIMPLE_NAME, line no: 107,DateValueSourceParser,SIMPLE_NAME, line no: 527, 0.0, 1.0, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.0, 1.0, 0.0, 0.033707865168539325, 0.0
getString,SIMPLE_NAME, line no: 107,"pi",STRING_LITERAL, line no: 530, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.0, 1.0, 0.0, 0.037037037037037035, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.0, 0.7, 0.0, 0.11428571428571428, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleConstValueSource,SIMPLE_NAME, line no: 533, 0.0, 0.8, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,PI,SIMPLE_NAME, line no: 533, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.0, 1.0, 0.0, 0.03409090909090909, 0.0
getString,SIMPLE_NAME, line no: 107,"e",STRING_LITERAL, line no: 536, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.0, 1.0, 0.0, 0.037267080745341616, 0.0
getString,SIMPLE_NAME, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.0, 0.7, 0.0, 0.11764705882352941, 0.0
getString,SIMPLE_NAME, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,E,SIMPLE_NAME, line no: 539, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.0, 1.0, 0.0, 0.022900763358778626, 0.0
getString,SIMPLE_NAME, line no: 107,"docfreq",STRING_LITERAL, line no: 544, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.0, 1.0, 0.0, 0.024896265560165973, 0.0
getString,SIMPLE_NAME, line no: 107,TInfo,SIMPLE_NAME, line no: 547, 0.0, 0.7, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo,SIMPLE_NAME, line no: 547, 0.0, 0.7, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.0, 0.8, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,parseTerm,SIMPLE_NAME, line no: 547, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.0, 0.9, 0.0, 0.060240963855421686, 0.0
getString,SIMPLE_NAME, line no: 107,DocFreqValueSource,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 1.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,val,SIMPLE_NAME, line no: 548, 0.0, 0.9, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 1.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,indexedField,SIMPLE_NAME, line no: 548, 0.0, 0.9, 1.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,indexedBytes,SIMPLE_NAME, line no: 548, 0.0, 0.9, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.0, 1.0, 0.0, 0.025547445255474453, 0.0
getString,SIMPLE_NAME, line no: 107,"totaltermfreq",STRING_LITERAL, line no: 552, 0.0, 1.0, 1.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.0, 1.0, 0.0, 0.024291497975708502, 0.0
getString,SIMPLE_NAME, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.0, 0.9, 0.0, 0.06741573033707865, 0.0
getString,SIMPLE_NAME, line no: 107,TotalTermFreqValueSource,SIMPLE_NAME, line no: 556, 0.0, 0.9, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.0, 1.0, 0.0, 0.10714285714285714, 0.0
getString,SIMPLE_NAME, line no: 107,"ttf",STRING_LITERAL, line no: 559, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,"sumtotaltermfreq",STRING_LITERAL, line no: 561, 0.0, 1.0, 1.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.0, 0.9, 0.0, 0.13157894736842105, 0.0
getString,SIMPLE_NAME, line no: 107,SumTotalTermFreqValueSource,SIMPLE_NAME, line no: 565, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.0, 1.0, 0.0, 0.09375, 0.0
getString,SIMPLE_NAME, line no: 107,"sttf",STRING_LITERAL, line no: 568, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.0, 1.0, 0.0, 0.023622047244094488, 0.0
getString,SIMPLE_NAME, line no: 107,"idf",STRING_LITERAL, line no: 570, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.0, 1.0, 0.0, 0.02531645569620253, 0.0
getString,SIMPLE_NAME, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.0, 0.9, 0.0, 0.06329113924050633, 0.0
getString,SIMPLE_NAME, line no: 107,IDFValueSource,SIMPLE_NAME, line no: 574, 0.0, 0.9, 0.0, 0.21428571428571427, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.0, 1.0, 0.0, 0.026515151515151516, 0.0
getString,SIMPLE_NAME, line no: 107,"termfreq",STRING_LITERAL, line no: 578, 0.0, 1.0, 1.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.0, 1.0, 0.0, 0.024793388429752067, 0.0
getString,SIMPLE_NAME, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.0, 0.9, 0.0, 0.05952380952380952, 0.0
getString,SIMPLE_NAME, line no: 107,TermFreqValueSource,SIMPLE_NAME, line no: 582, 0.0, 0.9, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.0, 1.0, 0.0, 0.027777777777777776, 0.0
getString,SIMPLE_NAME, line no: 107,"tf",STRING_LITERAL, line no: 586, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.0, 1.0, 0.0, 0.025423728813559324, 0.0
getString,SIMPLE_NAME, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.0, 0.9, 0.0, 0.0641025641025641, 0.0
getString,SIMPLE_NAME, line no: 107,TFValueSource,SIMPLE_NAME, line no: 590, 0.0, 0.9, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,"norm",STRING_LITERAL, line no: 594, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.0, 0.9, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,NormValueSource,SIMPLE_NAME, line no: 598, 0.0, 0.9, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.0, 1.0, 0.0, 0.03529411764705882, 0.0
getString,SIMPLE_NAME, line no: 107,"maxdoc",STRING_LITERAL, line no: 602, 0.0, 1.0, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.0, 1.0, 0.0, 0.04, 0.0
getString,SIMPLE_NAME, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.0, 0.5, 0.0, 0.13043478260869565, 0.0
getString,SIMPLE_NAME, line no: 107,MaxDocValueSource,SIMPLE_NAME, line no: 605, 0.0, 0.6, 0.0, 0.17647058823529413, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.0, 1.0, 0.0, 0.03488372093023256, 0.0
getString,SIMPLE_NAME, line no: 107,"numdocs",STRING_LITERAL, line no: 609, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.0, 1.0, 0.0, 0.039735099337748346, 0.0
getString,SIMPLE_NAME, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.0, 0.5, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,NumDocsValueSource,SIMPLE_NAME, line no: 612, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.0, 1.0, 0.0, 0.04, 0.0
getString,SIMPLE_NAME, line no: 107,"true",STRING_LITERAL, line no: 616, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.0, 1.0, 0.0, 0.03821656050955414, 0.0
getString,SIMPLE_NAME, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.0, 0.5, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource,SIMPLE_NAME, line no: 619, 0.0, 0.6, 0.0, 0.15, 0.0
getString,SIMPLE_NAME, line no: 107,true,BOOLEAN_LITERAL, line no: 619, 0.0, 0.5, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.0, 1.0, 0.0, 0.03389830508474576, 0.0
getString,SIMPLE_NAME, line no: 107,"false",STRING_LITERAL, line no: 623, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.0, 1.0, 0.0, 0.0379746835443038, 0.0
getString,SIMPLE_NAME, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.0, 0.5, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,false,BOOLEAN_LITERAL, line no: 626, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,"exists",STRING_LITERAL, line no: 630, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,SimpleBoolFunction,SIMPLE_NAME, line no: 634, 0.0, 1.0, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.0, 0.7, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,exists,SIMPLE_NAME, line no: 641, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,"not",STRING_LITERAL, line no: 647, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.0, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,boolVal,SIMPLE_NAME, line no: 654, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"and",STRING_LITERAL, line no: 665, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,MultiBoolFunction,SIMPLE_NAME, line no: 669, 0.0, 1.0, 0.0, 0.23529411764705882, 0.0
getString,SIMPLE_NAME, line no: 107,dv,SIMPLE_NAME, line no: 676, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,"or",STRING_LITERAL, line no: 684, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,"xor",STRING_LITERAL, line no: 703, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue,SIMPLE_NAME, line no: 714, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,0,NUMBER_LITERAL, line no: 714, 0.0, 0.6, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,nFalse,SIMPLE_NAME, line no: 714, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue++,POSTFIX_EXPRESSION, line no: 716, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,nFalse++,POSTFIX_EXPRESSION, line no: 717, 0.0, 0.5, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue != 0 && nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.08, 0.0
getString,SIMPLE_NAME, line no: 107,nTrue != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,nFalse != 0,INFIX_EXPRESSION, line no: 719, 0.0, 0.7, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.0, 1.0, 0.0, 0.018970189701897018, 0.0
getString,SIMPLE_NAME, line no: 107,"if",STRING_LITERAL, line no: 725, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.0, 1.0, 0.0, 0.019830028328611898, 0.0
getString,SIMPLE_NAME, line no: 107,ifValueSource,SIMPLE_NAME, line no: 728, 0.0, 0.8, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,trueValueSource,SIMPLE_NAME, line no: 729, 0.0, 0.8, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,falseValueSource,SIMPLE_NAME, line no: 730, 0.0, 0.8, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.0, 1.0, 0.0, 0.08064516129032258, 0.0
getString,SIMPLE_NAME, line no: 107,IfFunction,SIMPLE_NAME, line no: 732, 0.0, 1.0, 0.0, 0.3, 0.0
getString,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.0, 1.0, 0.0, 0.03225806451612903, 0.0
getString,SIMPLE_NAME, line no: 107,"def",STRING_LITERAL, line no: 736, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.0, 1.0, 0.0, 0.03550295857988166, 0.0
getString,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.0, 0.8, 0.0, 0.11904761904761904, 0.0
getString,SIMPLE_NAME, line no: 107,DefFunction,SIMPLE_NAME, line no: 739, 0.0, 0.9, 0.0, 0.36363636363636365, 0.0
getString,SIMPLE_NAME, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.0, 0.9, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.0, 0.9, 1.0, 0.11363636363636363, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.0, 0.9, 1.0, 0.16, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.0, 0.9, 1.0, 0.17391304347826086, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.0, 0.9, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.0, 0.9, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,FieldType,SIMPLE_NAME, line no: 752, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,ft,SIMPLE_NAME, line no: 752, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,ft == null,INFIX_EXPRESSION, line no: 753, 0.0, 0.9, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.0, 0.9, 0.0, 0.29411764705882354, 0.0
getString,SIMPLE_NAME, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.0, 0.9, 0.0, 0.35714285714285715, 0.0
getString,SIMPLE_NAME, line no: 107,StrField,SIMPLE_NAME, line no: 753, 0.0, 0.9, 0.0, 0.4444444444444444, 0.0
getString,SIMPLE_NAME, line no: 107,ft instanceof TextField,INSTANCEOF_EXPRESSION, line no: 755, 0.0, 0.9, 0.0, 0.13043478260869565, 0.0
getString,SIMPLE_NAME, line no: 107,TextField,SIMPLE_NAME, line no: 755, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,indexedVal,SIMPLE_NAME, line no: 757, 0.0, 0.6, 1.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,q instanceof TermQuery,INSTANCEOF_EXPRESSION, line no: 759, 0.0, 0.6, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,term,SIMPLE_NAME, line no: 760, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.0, 0.6, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.0, 0.6, 0.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.0, 0.6, 1.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.0, 0.6, 1.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.0, 0.6, 1.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.0, 0.6, 1.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,text,SIMPLE_NAME, line no: 762, 0.0, 0.6, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.0, 0.6, 0.0, 0.07894736842105263, 0.0
getString,SIMPLE_NAME, line no: 107,UTF16toUTF8,SIMPLE_NAME, line no: 764, 0.0, 0.6, 0.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.0, 0.6, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,length,SIMPLE_NAME, line no: 764, 0.0, 0.6, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.0, 0.6, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,readableToIndexed,SIMPLE_NAME, line no: 766, 0.0, 0.6, 0.0, 0.11764705882352941, 0.0
getString,SIMPLE_NAME, line no: 107,splitSources,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,dim,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,dest1,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,dest2,SIMPLE_NAME, line no: 772, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 774, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,i,SIMPLE_NAME, line no: 774, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,i < dim,INFIX_EXPRESSION, line no: 774, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,i++,POSTFIX_EXPRESSION, line no: 774, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,int i=dim,VARIABLE_DECLARATION_EXPRESSION, line no: 778, 0.0, 0.6, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.0, 0.6, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.0, 0.9, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.0, 0.9, 0.0, 0.08695652173913043, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.0, 0.9, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.0, 0.6, 0.0, 0.056451612903225805, 0.0
getString,SIMPLE_NAME, line no: 107,"Illegal number of sources.  There must be an even number of sources",STRING_LITERAL, line no: 786, 0.0, 0.6, 1.0, 0.057971014492753624, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.0, 0.9, 0.0, 0.10526315789473684, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV,SIMPLE_NAME, line no: 791, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s2MV,SIMPLE_NAME, line no: 792, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,1,NUMBER_LITERAL, line no: 792, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV && s2MV,INFIX_EXPRESSION, line no: 793, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,s1MV || s2MV,INFIX_EXPRESSION, line no: 796, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,Collections,SIMPLE_NAME, line no: 801, 0.0, 0.8, 0.0, 0.36363636363636365, 0.0
getString,SIMPLE_NAME, line no: 107,singletonList,SIMPLE_NAME, line no: 801, 0.0, 0.8, 0.0, 0.3076923076923077, 0.0
getString,SIMPLE_NAME, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,sources1,SIMPLE_NAME, line no: 806, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.0, 0.8, 0.0, 0.16129032258064516, 0.0
getString,SIMPLE_NAME, line no: 107,sources2,SIMPLE_NAME, line no: 807, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.0, 0.8, 0.0, 0.09302325581395349, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.0, 0.8, 0.0, 0.10256410256410256, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.0, 0.8, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.0, 0.8, 0.0, 0.10256410256410256, 0.0
getString,SIMPLE_NAME, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.0, 0.8, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,DateField,SIMPLE_NAME, line no: 833, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,df,SIMPLE_NAME, line no: 833, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.0, 0.1, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,TrieDateField,SIMPLE_NAME, line no: 833, 0.0, 0.2, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,Date,SIMPLE_NAME, line no: 839, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,arg,SIMPLE_NAME, line no: 839, 0.0, 0.1, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,arg == null,INFIX_EXPRESSION, line no: 840, 0.0, 0.8, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.08860759493670886, 0.0
getString,SIMPLE_NAME, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.19047619047619047, 0.0
getString,SIMPLE_NAME, line no: 107,startsWith,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.3, 0.0
getString,SIMPLE_NAME, line no: 107,"NOW",STRING_LITERAL, line no: 841, 0.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.12962962962962962, 0.0
getString,SIMPLE_NAME, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.1346153846153846, 0.0
getString,SIMPLE_NAME, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.0, 0.8, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,Character,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,isDigit,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.0, 0.8, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,charAt,SIMPLE_NAME, line no: 841, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.0, 0.8, 0.0, 0.1388888888888889, 0.0
getString,SIMPLE_NAME, line no: 107,parseMathLenient,SIMPLE_NAME, line no: 842, 0.0, 0.8, 0.0, 0.25, 0.0
getString,SIMPLE_NAME, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.0, 0.9, 0.0, 0.13333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.0, 0.6, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field " + arg,INFIX_EXPRESSION, line no: 851, 0.0, 0.6, 1.0, 0.07692307692307693, 0.0
getString,SIMPLE_NAME, line no: 107,"Can't use ms() function on non-numeric legacy date field ",STRING_LITERAL, line no: 851, 0.0, 0.6, 1.0, 0.0847457627118644, 0.0
getString,SIMPLE_NAME, line no: 107,first,SIMPLE_NAME, line no: 858, 0.0, 1.0, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,second,SIMPLE_NAME, line no: 859, 0.0, 1.0, 1.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,first == null,INFIX_EXPRESSION, line no: 860, 0.0, 1.0, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,first="NOW",ASSIGNMENT, line no: 860, 0.0, 1.0, 1.0, 0.09090909090909091, 0.0
getString,SIMPLE_NAME, line no: 107,d1,SIMPLE_NAME, line no: 862, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1,SIMPLE_NAME, line no: 863, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d1 == null,INFIX_EXPRESSION, line no: 863, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,d2,SIMPLE_NAME, line no: 865, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v2,SIMPLE_NAME, line no: 866, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,d2 == null,INFIX_EXPRESSION, line no: 866, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,ms1,SIMPLE_NAME, line no: 875, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.0, 1.0, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,ms2,SIMPLE_NAME, line no: 876, 0.0, 1.0, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.0, 1.0, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,d1 != null && v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
getString,SIMPLE_NAME, line no: 107,d1 != null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,v2 == null,INFIX_EXPRESSION, line no: 880, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.0, 0.7, 0.0, 0.11428571428571428, 0.0
getString,SIMPLE_NAME, line no: 107,LongConstValueSource,SIMPLE_NAME, line no: 881, 0.0, 0.8, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,ms1 - ms2,INFIX_EXPRESSION, line no: 881, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 == null && d2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.02631578947368421, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 == null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null,INFIX_EXPRESSION, line no: 885, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,d1 != null && v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
getString,SIMPLE_NAME, line no: 107,v2 != null,INFIX_EXPRESSION, line no: 891, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.0, 1.0, 0.0, 0.13793103448275862, 0.0
getString,SIMPLE_NAME, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.0, 0.7, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,longVal,SIMPLE_NAME, line no: 900, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
getString,SIMPLE_NAME, line no: 107,d2 != null,INFIX_EXPRESSION, line no: 905, 0.0, 1.0, 0.0, 0.1, 0.0
getString,SIMPLE_NAME, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.0, 1.0, 0.0, 0.13793103448275862, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.0, 0.7, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.0, 0.8, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,v1 != null && v2 != null,INFIX_EXPRESSION, line no: 919, 0.0, 1.0, 0.0, 0.041666666666666664, 0.0
getString,SIMPLE_NAME, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.0, 0.8, 0.0, 0.07692307692307693, 0.0
getString,SIMPLE_NAME, line no: 107,ConstNumberSource,SIMPLE_NAME, line no: 939, 0.0, 0.1, 0.0, 0.17647058823529413, 0.0
getString,SIMPLE_NAME, line no: 107,constant,SIMPLE_NAME, line no: 940, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,fv,SIMPLE_NAME, line no: 942, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.0, 0.4, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.0, 0.4, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,this,THIS_EXPRESSION, line no: 945, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.0, 0.4, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.0, 0.4, 0.0, 0.1875, 0.0
getString,SIMPLE_NAME, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,description,SIMPLE_NAME, line no: 951, 0.0, 0.1, 1.0, 0.36363636363636365, 0.0
getString,SIMPLE_NAME, line no: 107,"const(" + constant + ")",INFIX_EXPRESSION, line no: 952, 0.0, 0.3, 1.0, 0.12, 0.0
getString,SIMPLE_NAME, line no: 107,"const(",STRING_LITERAL, line no: 952, 0.0, 0.3, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,")",STRING_LITERAL, line no: 952, 0.0, 0.3, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,context,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,readerContext,SIMPLE_NAME, line no: 956, 0.0, 0.1, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,intVal,SIMPLE_NAME, line no: 964, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.0, 0.3, 0.0, 0.23076923076923078, 0.0
getString,SIMPLE_NAME, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.0, 0.5, 1.0, 0.3076923076923077, 0.0
getString,SIMPLE_NAME, line no: 107,hashCode,SIMPLE_NAME, line no: 986, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.10526315789473684, 0.0
getString,SIMPLE_NAME, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.11764705882352941, 0.0
getString,SIMPLE_NAME, line no: 107,constant >>> 32,INFIX_EXPRESSION, line no: 987, 0.0, 0.4, 0.0, 0.13333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,32,NUMBER_LITERAL, line no: 987, 0.0, 0.4, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,equals,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,Object,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,o,SIMPLE_NAME, line no: 991, 0.0, 0.1, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.0, 0.7, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,other,SIMPLE_NAME, line no: 993, 0.0, 0.7, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.0, 0.7, 0.0, 0.17391304347826086, 0.0
getString,SIMPLE_NAME, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.0, 0.7, 0.0, 0.12903225806451613, 0.0
getString,SIMPLE_NAME, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.0, 0.7, 0.0, 0.21428571428571427, 0.0
getString,SIMPLE_NAME, line no: 107,Number,SIMPLE_NAME, line no: 1018, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,constant != 0,INFIX_EXPRESSION, line no: 1024, 0.0, 0.3, 0.0, 0.15384615384615385, 0.0
getString,SIMPLE_NAME, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.0, 0.2, 1.0, 0.21428571428571427, 0.0
getString,SIMPLE_NAME, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.0, 0.2, 1.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.0, 0.8, 0.0, 0.11428571428571428, 0.0
getString,SIMPLE_NAME, line no: 107,Function,SIMPLE_NAME, line no: 1049, 0.0, 0.9, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,SingleFunction,SIMPLE_NAME, line no: 1052, 0.0, 0.1, 0.0, 0.35714285714285715, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.0, 0.6, 1.0, 0.16666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.0, 0.6, 0.0, 0.17647058823529413, 0.0
getString,SIMPLE_NAME, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.0, 0.7, 0.0, 0.07142857142857142, 0.0
getString,SIMPLE_NAME, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.0, 0.8, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,'(',CHARACTER_LITERAL, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,')',CHARACTER_LITERAL, line no: 1072, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.0, 1.0, 0.0, 0.07017543859649122, 0.0
getString,SIMPLE_NAME, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.0, 0.4, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.0, 0.8, 1.0, 0.08771929824561403, 0.0
getString,SIMPLE_NAME, line no: 107,"(",STRING_LITERAL, line no: 1107, 0.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.0, 0.8, 1.0, 0.26666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107," ",STRING_LITERAL, line no: 1107, 0.0, 0.8, 1.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.0, 0.8, 1.0, 0.26666666666666666, 0.0
getString,SIMPLE_NAME, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.0, 0.8, 0.0, 0.047619047619047616, 0.0
getString,SIMPLE_NAME, line no: 107,' ',CHARACTER_LITERAL, line no: 1121, 0.0, 0.8, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,createWeight,SIMPLE_NAME, line no: 1127, 0.0, 0.1, 0.0, 0.3333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,searcher,SIMPLE_NAME, line no: 1127, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,h,SIMPLE_NAME, line no: 1132, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.0, 0.7, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h << 13,INFIX_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,13,NUMBER_LITERAL, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h >>> 20,INFIX_EXPRESSION, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,20,NUMBER_LITERAL, line no: 1133, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.0, 0.7, 0.0, 0.06666666666666667, 0.0
getString,SIMPLE_NAME, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.0, 0.7, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h << 23,INFIX_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,23,NUMBER_LITERAL, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h >>> 10,INFIX_EXPRESSION, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,10,NUMBER_LITERAL, line no: 1135, 0.0, 0.7, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.0, 0.7, 0.0, 0.05, 0.0
getString,SIMPLE_NAME, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.0, 0.7, 0.0, 0.058823529411764705, 0.0
getString,SIMPLE_NAME, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.0, 0.8, 0.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.0, 0.8, 0.0, 0.08333333333333333, 0.0
getString,SIMPLE_NAME, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.0, 0.8, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.0, 0.8, 0.0, 0.13636363636363635, 0.0
getString,SIMPLE_NAME, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.0, 0.8, 0.0, 0.050505050505050504, 0.0
getString,SIMPLE_NAME, line no: 107,constant ? 0x12345678 : 0x87654321,CONDITIONAL_EXPRESSION, line no: 1176, 0.0, 0.3, 0.0, 0.058823529411764705, 0.0
getString,SIMPLE_NAME, line no: 107,0x12345678,NUMBER_LITERAL, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,0x87654321,NUMBER_LITERAL, line no: 1176, 0.0, 0.3, 0.0, 0.0, 0.0
getString,SIMPLE_NAME, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.0, 0.7, 0.0, 0.11538461538461539, 0.0
getString,SIMPLE_NAME, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.0, 0.7, 0.0, 0.13043478260869565, 0.0
getString,SIMPLE_NAME, line no: 107,constant ? 1 : 0,CONDITIONAL_EXPRESSION, line no: 1188, 0.0, 0.3, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.0, 0.2, 0.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.0, 0.2, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,requestInfo,SIMPLE_NAME, line no: 1228, 0.0, 0.7, 0.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc: unweighted value source detected.  delegate=",STRING_LITERAL, line no: 1229, 0.0, 0.8, 1.0, 0.08928571428571429, 0.0
getString,SIMPLE_NAME, line no: 107," request=",STRING_LITERAL, line no: 1229, 0.0, 0.8, 1.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,requestInfo == null,INFIX_EXPRESSION, line no: 1229, 0.0, 0.8, 0.0, 0.15789473684210525, 0.0
getString,SIMPLE_NAME, line no: 107,"null",STRING_LITERAL, line no: 1229, 0.0, 0.8, 1.0, 0.1111111111111111, 0.0
getString,SIMPLE_NAME, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.0, 0.7, 0.0, 0.06756756756756757, 0.0
getString,SIMPLE_NAME, line no: 107,o instanceof TestValueSource,INSTANCEOF_EXPRESSION, line no: 1236, 0.0, 0.7, 0.0, 0.14285714285714285, 0.0
getString,SIMPLE_NAME, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.0, 0.8, 0.0, 0.09523809523809523, 0.0
getString,SIMPLE_NAME, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.0, 0.8, 0.0, 0.14814814814814814, 0.0
getString,SIMPLE_NAME, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.0, 0.8, 0.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.0, 0.8, 0.0, 0.2222222222222222, 0.0
getString,SIMPLE_NAME, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.0, 0.8, 0.0, 0.07692307692307693, 0.0
getString,SIMPLE_NAME, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.0, 0.8, 0.0, 0.058823529411764705, 0.0
getString,SIMPLE_NAME, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.0, 0.8, 0.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.0, 0.8, 0.0, 0.19047619047619047, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.0, 0.5, 1.0, 0.125, 0.0
getString,SIMPLE_NAME, line no: 107,"testfunc(",STRING_LITERAL, line no: 1246, 0.0, 0.5, 1.0, 0.2727272727272727, 0.0
getString,SIMPLE_NAME, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.0, 0.6, 1.0, 0.2, 0.0
getString,SIMPLE_NAME, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.0, 0.4, 0.0, 0.18181818181818182, 0.0
getString,SIMPLE_NAME, line no: 107,reverse,SIMPLE_NAME, line no: 1255, 0.0, 0.1, 0.0, 0.2222222222222222, 0.0
