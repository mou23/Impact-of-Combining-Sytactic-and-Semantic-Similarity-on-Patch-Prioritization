new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.7142857142857143, 1.0, 1.0, 0.3684210526315789, 0.7142857142857143
fp.getString(),METHOD_INVOCATION, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.7142857142857143, 0.8888888888888888, 1.0, 0.3684210526315789, 0.7142857142857143
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.6666666666666666, 0.7777777777777778, 1.0, 0.38095238095238093, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.6666666666666666, 0.7777777777777778, 1.0, 0.42857142857142855, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.6666666666666666, 0.7777777777777778, 1.0, 0.4666666666666667, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.6666666666666666, 0.7777777777777778, 1.0, 0.38095238095238093, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.6666666666666666, 0.7777777777777778, 1.0, 0.36, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.6666666666666666, 0.7777777777777778, 1.0, 0.38095238095238093, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.6666666666666666, 0.7777777777777778, 1.0, 0.5714285714285714, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.6666666666666666, 0.8888888888888888, 1.0, 0.375, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.6666666666666666, 0.5555555555555556, 1.0, 0.5, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.6666666666666666, 0.6666666666666666, 1.0, 0.5714285714285714, 0.6666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.5714285714285714, 0.5555555555555556, 0.0, 0.5625, 0.5714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.5714285714285714, 0.6666666666666666, 1.0, 0.391304347826087, 0.5714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.5714285714285714, 0.8888888888888888, 0.0, 0.5, 0.5714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.5555555555555556, 1.0, 1.0, 0.5833333333333334, 0.5555555555555556
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.5555555555555556, 1.0, 1.0, 0.5, 0.5555555555555556
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.5555555555555556, 1.0, 1.0, 0.5263157894736842, 0.5555555555555556
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.5, 0.75, 1.0, 0.3684210526315789, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.5, 0.75, 1.0, 0.15789473684210525, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.5, 0.75, 1.0, 0.18421052631578946, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.5, 0.75, 1.0, 0.23684210526315788, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.5, 0.75, 1.0, 0.39473684210526316, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.5, 0.75, 1.0, 0.21052631578947367, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.5, 0.75, 1.0, 0.21052631578947367, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.5, 0.875, 1.0, 0.18421052631578946, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.5, 0.5, 1.0, 0.18421052631578946, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.5, 0.625, 1.0, 0.21052631578947367, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.5, 1.0, 1.0, 0.47368421052631576, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.5, 0.8888888888888888, 1.0, 0.1875, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.5, 0.4444444444444444, 0.5, 0.3181818181818182, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.5, 0.8888888888888888, 1.0, 0.22857142857142856, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.5, 0.4444444444444444, 0.5, 0.3684210526315789, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.5, 0.5555555555555556, 0.0, 0.2777777777777778, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.5, 0.7777777777777778, 1.0, 0.35714285714285715, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.5, 0.8888888888888888, 1.0, 0.21428571428571427, 0.5
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.5, 0.8888888888888888, 1.0, 0.22857142857142856, 0.5
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.4444444444444444, 0.5, 0.0, 0.23684210526315788, 0.4444444444444444
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.4444444444444444, 0.625, 1.0, 0.2894736842105263, 0.4444444444444444
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.4444444444444444, 0.875, 0.0, 0.23684210526315788, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.4444444444444444, 0.6666666666666666, 0.5, 0.2558139534883721, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.4444444444444444, 0.7777777777777778, 0.5, 0.3125, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.4444444444444444, 0.8888888888888888, 0.3333333333333333, 0.32, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.4444444444444444, 0.8888888888888888, 0.3333333333333333, 0.34782608695652173, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.4444444444444444, 0.8888888888888888, 0.0, 0.34375, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.4444444444444444, 1.0, 1.0, 0.14035087719298245, 0.4444444444444444
fp.getString(),METHOD_INVOCATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.42857142857142855, 0.7777777777777778, 0.0, 0.35714285714285715, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.42857142857142855, 1.0, 0.0, 0.2857142857142857, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.42857142857142855, 0.7777777777777778, 0.0, 0.5, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.42857142857142855, 0.5555555555555556, 0.0, 0.35714285714285715, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.42857142857142855, 0.5555555555555556, 0.0, 0.35714285714285715, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.42857142857142855, 0.5555555555555556, 0.0, 0.3157894736842105, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.42857142857142855, 0.7777777777777778, 0.0, 0.42857142857142855, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.42857142857142855, 1.0, 0.0, 0.5, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.42857142857142855, 1.0, 0.0, 0.5, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.42857142857142855, 0.7777777777777778, 0.0, 0.42857142857142855, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.42857142857142855, 0.7777777777777778, 0.0, 0.4666666666666667, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.42857142857142855, 0.7777777777777778, 0.0, 0.4666666666666667, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.42857142857142855, 0.6666666666666666, 0.0, 0.2857142857142857, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.42857142857142855, 0.6666666666666666, 0.0, 0.2857142857142857, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.42857142857142855, 0.6666666666666666, 0.0, 0.23529411764705882, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.42857142857142855, 0.7777777777777778, 0.0, 0.4, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.42857142857142855, 0.6666666666666666, 0.0, 0.28125, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.42857142857142855, 0.7777777777777778, 0.0, 0.35, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.42857142857142855, 0.7777777777777778, 0.0, 0.23529411764705882, 0.42857142857142855
fp.getString(),METHOD_INVOCATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.42857142857142855, 0.6666666666666666, 0.0, 0.35, 0.42857142857142855
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.4, 0.5, 0.5, 0.2894736842105263, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.4, 0.875, 1.0, 0.42105263157894735, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.4, 0.5, 0.5, 0.2631578947368421, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.4, 0.5, 0.0, 0.34210526315789475, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.4, 0.875, 0.0, 0.5, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.4, 0.875, 0.0, 0.5, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.4, 0.7777777777777778, 1.0, 0.1956521739130435, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.4, 0.8888888888888888, 0.25, 0.20454545454545456, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.4, 0.8888888888888888, 0.3333333333333333, 0.20754716981132076, 0.4
fp.getString(),METHOD_INVOCATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.4, 0.5555555555555556, 0.3333333333333333, 0.23529411764705882, 0.4
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.375, 0.5, 0.0, 0.3157894736842105, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.375, 0.5, 0.0, 0.3157894736842105, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.375, 1.0, 0.0, 0.5526315789473685, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.375, 0.75, 1.0, 0.18421052631578946, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.375, 0.625, 0.0, 0.47368421052631576, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.375, 0.625, 0.0, 0.4473684210526316, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.375, 0.875, 0.0, 0.18421052631578946, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.375, 0.875, 0.0, 0.2631578947368421, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.375, 0.875, 0.0, 0.2631578947368421, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.375, 0.875, 0.0, 0.2631578947368421, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.375, 0.125, 0.0, 0.2894736842105263, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.375, 0.5555555555555556, 0.0, 0.15789473684210525, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.375, 0.7777777777777778, 0.0, 0.2222222222222222, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.375, 0.7777777777777778, 0.0, 0.21052631578947367, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.375, 0.7777777777777778, 0.0, 0.21052631578947367, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.375, 0.7777777777777778, 0.0, 0.21428571428571427, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.375, 0.7777777777777778, 0.0, 0.21428571428571427, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.375, 0.7777777777777778, 0.0, 0.21428571428571427, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.375, 0.7777777777777778, 0.0, 0.21428571428571427, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.375, 0.8888888888888888, 0.0, 0.15625, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.375, 0.8888888888888888, 0.0, 0.14705882352941177, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.375, 0.8888888888888888, 0.0, 0.17142857142857143, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.375, 0.7777777777777778, 0.0, 0.21052631578947367, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.375, 0.7777777777777778, 0.0, 0.25, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.375, 0.7777777777777778, 0.0, 0.25, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.375, 0.7777777777777778, 0.0, 0.3125, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.375, 0.7777777777777778, 0.0, 0.17647058823529413, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.375, 0.7777777777777778, 0.0, 0.2, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.375, 0.5555555555555556, 0.0, 0.2916666666666667, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.375, 0.5555555555555556, 0.0, 0.42857142857142855, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.375, 0.7777777777777778, 0.0, 0.42857142857142855, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.375, 0.7777777777777778, 0.0, 0.42857142857142855, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.375, 0.7777777777777778, 0.0, 0.2857142857142857, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.375, 0.7777777777777778, 0.0, 0.2857142857142857, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.375, 0.8888888888888888, 0.0, 0.36363636363636365, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.375, 1.0, 0.5, 0.35294117647058826, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.375, 1.0, 0.5, 0.2916666666666667, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.375, 1.0, 0.5, 0.3333333333333333, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.375, 1.0, 0.5, 0.28, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.375, 0.7777777777777778, 0.0, 0.2777777777777778, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.375, 0.7777777777777778, 0.0, 0.2777777777777778, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.375, 0.6666666666666666, 0.0, 0.25, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.375, 0.7777777777777778, 0.0, 0.5555555555555556, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.375, 0.7777777777777778, 0.0, 0.5263157894736842, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.375, 0.7777777777777778, 0.0, 0.5263157894736842, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.375, 0.7777777777777778, 0.0, 0.4117647058823529, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.375, 0.7777777777777778, 0.0, 0.18518518518518517, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.375, 0.7777777777777778, 0.0, 0.1875, 0.375
fp.getString(),METHOD_INVOCATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.375, 0.4444444444444444, 0.0, 0.37037037037037035, 0.375
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.36363636363636365, 0.625, 0.5, 0.3488372093023256, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.36363636363636365, 0.75, 0.5, 0.47368421052631576, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.36363636363636365, 0.875, 0.3333333333333333, 0.3157894736842105, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.36363636363636365, 0.875, 0.3333333333333333, 0.2894736842105263, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.36363636363636365, 0.875, 0.0, 0.2631578947368421, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.36363636363636365, 0.875, 0.0, 0.34210526315789475, 0.36363636363636365
fp.getString(),METHOD_INVOCATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.36363636363636365, 0.7777777777777778, 0.0, 0.2222222222222222, 0.36363636363636365
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.35, 1.0, 1.0, 0.23030303030303031, 0.35
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,p.name(),METHOD_INVOCATION, line no: 82, 0.3333333333333333, 0.75, 0.0, 0.13157894736842105, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.3333333333333333, 1.0, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.3333333333333333, 1.0, 0.0, 0.4473684210526316, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.3333333333333333, 1.0, 0.0, 0.4473684210526316, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.3333333333333333, 0.75, 1.0, 0.2608695652173913, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.3333333333333333, 1.0, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size(),METHOD_INVOCATION, line no: 194, 0.3333333333333333, 1.0, 0.0, 0.23684210526315788, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.3333333333333333, 0.75, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.3333333333333333, 0.75, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.3333333333333333, 0.625, 0.0, 0.19230769230769232, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.3333333333333333, 0.75, 0.0, 0.34210526315789475, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType(),METHOD_INVOCATION, line no: 358, 0.3333333333333333, 0.75, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.3333333333333333, 1.0, 0.0, 0.3111111111111111, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.3333333333333333, 1.0, 0.0, 0.5789473684210527, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.3333333333333333, 1.0, 0.0, 0.5263157894736842, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.3333333333333333, 0.625, 0.0, 0.5263157894736842, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.3333333333333333, 0.625, 0.0, 0.5263157894736842, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.3333333333333333, 0.875, 0.25, 0.3409090909090909, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.3333333333333333, 0.875, 0.3333333333333333, 0.3018867924528302, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.3333333333333333, 0.5, 0.3333333333333333, 0.3137254901960784, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.field(),METHOD_INVOCATION, line no: 761, 0.3333333333333333, 0.5, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,term.text(),METHOD_INVOCATION, line no: 762, 0.3333333333333333, 0.5, 0.0, 0.21052631578947367, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal.length(),METHOD_INVOCATION, line no: 764, 0.3333333333333333, 0.5, 0.0, 0.3157894736842105, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.3333333333333333, 0.625, 0.0, 0.1774193548387097, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.3333333333333333, 0.75, 0.0, 0.5128205128205128, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.3333333333333333, 0.75, 0.0, 0.5263157894736842, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.3333333333333333, 0.75, 0.0, 0.5128205128205128, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.3333333333333333, 0.75, 0.0, 0.5263157894736842, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length(),METHOD_INVOCATION, line no: 841, 0.3333333333333333, 0.75, 0.0, 0.21052631578947367, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1.getTime(),METHOD_INVOCATION, line no: 875, 0.3333333333333333, 1.0, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2.getTime(),METHOD_INVOCATION, line no: 876, 0.3333333333333333, 1.0, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.3333333333333333, 1.0, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.3333333333333333, 1.0, 0.0, 0.5, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o.getClass(),METHOD_INVOCATION, line no: 992, 0.3333333333333333, 0.75, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.description(),METHOD_INVOCATION, line no: 1107, 0.3333333333333333, 0.75, 0.0, 0.23684210526315788, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.description(),METHOD_INVOCATION, line no: 1107, 0.3333333333333333, 0.75, 0.0, 0.21052631578947367, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.hashCode(),METHOD_INVOCATION, line no: 1132, 0.3333333333333333, 0.625, 0.0, 0.15789473684210525, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.hashCode(),METHOD_INVOCATION, line no: 1134, 0.3333333333333333, 0.625, 0.0, 0.13157894736842105, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name().hashCode(),METHOD_INVOCATION, line no: 1136, 0.3333333333333333, 0.625, 0.0, 0.21052631578947367, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass(),METHOD_INVOCATION, line no: 1142, 0.3333333333333333, 0.75, 0.0, 0.18421052631578946, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrRequestInfo.getRequestInfo(),METHOD_INVOCATION, line no: 1228, 0.3333333333333333, 0.625, 0.0, 0.34210526315789475, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo.getReq(),METHOD_INVOCATION, line no: 1229, 0.3333333333333333, 0.75, 0.0, 0.2894736842105263, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode(),METHOD_INVOCATION, line no: 1241, 0.3333333333333333, 0.75, 0.0, 0.23684210526315788, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.description(),METHOD_INVOCATION, line no: 1246, 0.3333333333333333, 0.625, 0.0, 0.3157894736842105, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.3333333333333333, 0.5555555555555556, 0.0, 0.2857142857142857, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.PI),CLASS_INSTANCE_CREATION, line no: 533, 0.3333333333333333, 0.7777777777777778, 0.0, 0.17142857142857143, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleConstValueSource(Math.E),CLASS_INSTANCE_CREATION, line no: 539, 0.3333333333333333, 0.7777777777777778, 0.0, 0.17647058823529413, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.3333333333333333, 0.6666666666666666, 0.0, 0.16666666666666666, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.3333333333333333, 0.6666666666666666, 0.0, 0.1875, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.3333333333333333, 0.5555555555555556, 0.0, 0.22727272727272727, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.3333333333333333, 0.5555555555555556, 0.0, 0.2222222222222222, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.3333333333333333, 0.8888888888888888, 0.0, 0.2222222222222222, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.3333333333333333, 0.8888888888888888, 0.0, 0.21052631578947367, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.3333333333333333, 0.5555555555555556, 0.0, 0.1875, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.3333333333333333, 0.5555555555555556, 0.0, 0.1875, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.3333333333333333, 0.7777777777777778, 0.0, 0.2222222222222222, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.3333333333333333, 0.7777777777777778, 0.0, 0.375, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.3333333333333333, 0.5555555555555556, 0.0, 0.42857142857142855, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.3333333333333333, 0.7777777777777778, 0.0, 0.21428571428571427, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.3333333333333333, 0.6666666666666666, 0.0, 0.26666666666666666, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.3333333333333333, 0.6666666666666666, 0.0, 0.2, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.3333333333333333, 0.7777777777777778, 0.0, 0.22580645161290322, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.3333333333333333, 0.7777777777777778, 0.0, 0.22727272727272727, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.3333333333333333, 0.7777777777777778, 0.0, 0.22727272727272727, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.3333333333333333, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.3333333333333333, 0.4444444444444444, 0.0, 0.22727272727272727, 0.3333333333333333
fp,SIMPLE_NAME, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.3333333333333333, 0.6, 0.0, 0.3333333333333333, 0.3333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.3076923076923077, 1.0, 0.0, 0.4166666666666667, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.3076923076923077, 1.0, 0.0, 0.30612244897959184, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.3076923076923077, 0.75, 0.0, 0.4375, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.3076923076923077, 0.75, 0.0, 0.4375, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.3076923076923077, 0.75, 0.0, 0.3157894736842105, 0.3076923076923077
fp.getString(),METHOD_INVOCATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.3076923076923077, 0.5555555555555556, 0.0, 0.1625, 0.3076923076923077
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.30434782608695654, 1.0, 1.0, 0.20430107526881722, 0.30434782608695654
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.get(source),METHOD_INVOCATION, line no: 86, 0.3, 0.5, 0.0, 0.5, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.floatVal(doc),METHOD_INVOCATION, line no: 185, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.floatVal(doc),METHOD_INVOCATION, line no: 221, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(one),METHOD_INVOCATION, line no: 281, 0.3, 0.75, 0.0, 0.10526315789473684, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s1.add(two),METHOD_INVOCATION, line no: 282, 0.3, 0.75, 0.0, 0.10526315789473684, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(x2),METHOD_INVOCATION, line no: 287, 0.3, 0.75, 0.0, 0.07894736842105263, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,s2.add(y2),METHOD_INVOCATION, line no: 288, 0.3, 0.75, 0.0, 0.07894736842105263, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("jw"),METHOD_INVOCATION, line no: 336, 0.3, 0.875, 0.0, 0.2894736842105263, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.3, 0.375, 0.0, 0.3157894736842105, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("edit"),METHOD_INVOCATION, line no: 338, 0.3, 0.875, 0.0, 0.3157894736842105, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.3, 0.375, 0.0, 0.3157894736842105, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,distClass.equalsIgnoreCase("ngram"),METHOD_INVOCATION, line no: 340, 0.3, 0.875, 0.0, 0.3157894736842105, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc),METHOD_INVOCATION, line no: 365, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.doubleVal(doc),METHOD_INVOCATION, line no: 479, 0.3, 0.75, 0.0, 0.18421052631578946, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.exists(doc),METHOD_INVOCATION, line no: 641, 0.3, 0.75, 0.0, 0.18421052631578946, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.boolVal(doc),METHOD_INVOCATION, line no: 654, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dv.boolVal(doc),METHOD_INVOCATION, line no: 677, 0.3, 0.75, 0.0, 0.18421052631578946, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.3, 0.875, 0.0, 0.2631578947368421, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q).getTerm(),METHOD_INVOCATION, line no: 760, 0.3, 0.5, 0.0, 0.3157894736842105, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(i),METHOD_INVOCATION, line no: 775, 0.3, 0.5, 0.0, 0.2894736842105263, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0),METHOD_INVOCATION, line no: 791, 0.3, 0.75, 0.0, 0.2894736842105263, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1),METHOD_INVOCATION, line no: 792, 0.3, 0.75, 0.0, 0.2894736842105263, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW"),METHOD_INVOCATION, line no: 841, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.charAt(0),METHOD_INVOCATION, line no: 841, 0.3, 0.75, 0.0, 0.15789473684210525, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass(),METHOD_INVOCATION, line no: 850, 0.3, 0.875, 0.0, 0.2631578947368421, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.3, 1.0, 0.5, 0.23684210526315788, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.3, 1.0, 0.5, 0.47368421052631576, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.3, 1.0, 0.5, 0.2631578947368421, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.3, 1.0, 0.5, 0.5, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.longVal(doc),METHOD_INVOCATION, line no: 900, 0.3, 0.75, 0.0, 0.21052631578947367, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc),METHOD_INVOCATION, line no: 914, 0.3, 0.75, 0.0, 0.23684210526315788, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this.name(),METHOD_INVOCATION, line no: 1059, 0.3, 0.625, 0.0, 0.2631578947368421, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.toString(doc),METHOD_INVOCATION, line no: 1072, 0.3, 0.75, 0.0, 0.3157894736842105, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.3, 0.75, 0.0, 0.3684210526315789, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,bVals.toString(doc),METHOD_INVOCATION, line no: 1121, 0.3, 0.75, 0.0, 0.34210526315789475, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this),METHOD_INVOCATION, line no: 1227, 0.3, 0.75, 0.0, 0.2631578947368421, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o).source,FIELD_ACCESS, line no: 1236, 0.3, 0.75, 0.0, 0.39473684210526316, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class.hashCode(),METHOD_INVOCATION, line no: 1241, 0.3, 0.75, 0.0, 0.4473684210526316, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,super.getSortField(reverse),SUPER_METHOD_INVOCATION, line no: 1256, 0.3, 0.5, 0.0, 0.3157894736842105, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.3, 0.7777777777777778, 0.0, 0.13157894736842105, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.3, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.3, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.3, 0.7777777777777778, 0.0, 0.12195121951219512, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.3, 1.0, 0.0, 0.14, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.3, 0.7777777777777778, 0.0, 0.13333333333333333, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.3, 0.7777777777777778, 0.0, 0.13333333333333333, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.3, 0.7777777777777778, 0.0, 0.16129032258064516, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.3, 0.7777777777777778, 0.0, 0.1724137931034483, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.3, 0.7777777777777778, 0.0, 0.1724137931034483, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.3, 0.7777777777777778, 0.0, 0.1724137931034483, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.3, 0.7777777777777778, 0.0, 0.13793103448275862, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.3, 0.7777777777777778, 0.0, 0.1724137931034483, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.3, 0.7777777777777778, 0.0, 0.16666666666666666, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.3, 0.7777777777777778, 0.0, 0.13333333333333333, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.3, 0.7777777777777778, 0.0, 0.16666666666666666, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.3, 0.7777777777777778, 0.0, 0.16666666666666666, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.3, 0.7777777777777778, 0.0, 0.13333333333333333, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.3, 0.7777777777777778, 0.0, 0.16666666666666666, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.3, 0.7777777777777778, 0.0, 0.16666666666666666, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.3, 0.7777777777777778, 0.0, 0.16129032258064516, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.3, 0.7777777777777778, 0.0, 0.2, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes=new BytesRef(),ASSIGNMENT, line no: 750, 0.3, 0.8888888888888888, 0.0, 0.21212121212121213, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.3, 0.5555555555555556, 0.0, 0.25806451612903225, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.3, 0.5555555555555556, 0.0, 0.24, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.3, 0.5555555555555556, 0.0, 0.24, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.3, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.3, 0.7777777777777778, 0.0, 0.14285714285714285, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.3, 0.7777777777777778, 0.0, 0.21951219512195122, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.3, 0.7777777777777778, 0.0, 0.21951219512195122, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.3, 0.7777777777777778, 0.0, 0.21875, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.3, 0.6666666666666666, 0.0, 0.20833333333333334, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.3, 0.6666666666666666, 0.0, 0.20833333333333334, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.3, 0.7777777777777778, 0.0, 0.15384615384615385, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.3, 0.6666666666666666, 0.0, 0.16666666666666666, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.3, 0.8888888888888888, 0.0, 0.20512820512820512, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.3, 0.8888888888888888, 0.0, 0.23529411764705882, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.3, 0.8888888888888888, 0.0, 0.23529411764705882, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.3, 0.6666666666666666, 0.0, 0.14285714285714285, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.3, 0.7777777777777778, 0.0, 0.28, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.3, 0.7777777777777778, 0.0, 0.1346153846153846, 0.3
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.3, 0.5555555555555556, 0.0, 0.2, 0.3
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.2857142857142857, 1.0, 0.0, 0.34285714285714286, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.2857142857142857, 1.0, 0.0, 0.32432432432432434, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.2857142857142857, 1.0, 0.0, 0.34285714285714286, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.2857142857142857, 1.0, 0.0, 0.35714285714285715, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.2857142857142857, 1.0, 0.0, 0.30120481927710846, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.2857142857142857, 1.0, 0.0, 0.30337078651685395, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.2857142857142857, 1.0, 0.0, 0.3037974683544304, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.2857142857142857, 1.0, 0.0, 0.30952380952380953, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.2857142857142857, 1.0, 0.0, 0.3076923076923077, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.2857142857142857, 0.625, 0.0, 0.16666666666666666, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.2857142857142857, 0.3333333333333333, 0.0, 0.19047619047619047, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.2857142857142857, 0.3333333333333333, 0.0, 0.19047619047619047, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new JaroWinklerDistance(),CLASS_INSTANCE_CREATION, line no: 337, 0.2857142857142857, 0.4444444444444444, 0.0, 0.24, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new LevensteinDistance(),CLASS_INSTANCE_CREATION, line no: 339, 0.2857142857142857, 0.4444444444444444, 0.0, 0.25, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.2857142857142857, 0.7777777777777778, 0.0, 0.2413793103448276, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new DateValueSourceParser(),CLASS_INSTANCE_CREATION, line no: 527, 0.2857142857142857, 1.0, 0.0, 0.2222222222222222, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxDocValueSource(),CLASS_INSTANCE_CREATION, line no: 605, 0.2857142857142857, 0.5555555555555556, 0.0, 0.21739130434782608, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new NumDocsValueSource(),CLASS_INSTANCE_CREATION, line no: 612, 0.2857142857142857, 0.5555555555555556, 0.0, 0.20833333333333334, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new TInfo(),CLASS_INSTANCE_CREATION, line no: 746, 0.2857142857142857, 0.8888888888888888, 0.0, 0.2857142857142857, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new BytesRef(),CLASS_INSTANCE_CREATION, line no: 750, 0.2857142857142857, 0.8888888888888888, 0.0, 0.2857142857142857, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new StrField(),CLASS_INSTANCE_CREATION, line no: 753, 0.2857142857142857, 0.8888888888888888, 0.0, 0.5, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.2857142857142857, 0.5555555555555556, 0.2, 0.14634146341463414, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.2857142857142857, 0.5555555555555556, 0.0, 0.21428571428571427, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.2857142857142857, 0.5555555555555556, 0.0, 0.21428571428571427, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new MVResult(),CLASS_INSTANCE_CREATION, line no: 784, 0.2857142857142857, 0.8888888888888888, 0.0, 0.2857142857142857, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,new TrieDateField(),CLASS_INSTANCE_CREATION, line no: 833, 0.2857142857142857, 0.1111111111111111, 0.0, 0.2631578947368421, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.2857142857142857, 0.3333333333333333, 0.0, 0.21428571428571427, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.2857142857142857, 0.6666666666666666, 0.0, 0.21739130434782608, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.2857142857142857, 0.7777777777777778, 0.0, 0.2857142857142857, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.2857142857142857, 0.6666666666666666, 0.0, 0.17391304347826086, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.2857142857142857, 0.7777777777777778, 0.0, 0.25, 0.2857142857142857
fp.getString(),METHOD_INVOCATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.2857142857142857, 0.7777777777777778, 0.0, 0.2777777777777778, 0.2857142857142857
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.2727272727272727, 1.0, 0.0, 0.3684210526315789, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.2727272727272727, 1.0, 0.0, 0.5263157894736842, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.2727272727272727, 0.875, 0.0, 0.2894736842105263, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.2727272727272727, 1.0, 0.0, 0.5263157894736842, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.2727272727272727, 1.0, 0.0, 0.5263157894736842, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.2727272727272727, 0.75, 0.0, 0.5263157894736842, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.2727272727272727, 0.75, 0.0, 0.5, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.2727272727272727, 0.75, 0.0, 0.5, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.2727272727272727, 1.0, 0.0, 0.34210526315789475, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.2727272727272727, 0.625, 0.0, 0.34210526315789475, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.2727272727272727, 1.0, 0.0, 0.5116279069767442, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!vals.boolVal(doc),PREFIX_EXPRESSION, line no: 654, 0.2727272727272727, 0.75, 0.0, 0.21052631578947367, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,!dv.boolVal(doc),PREFIX_EXPRESSION, line no: 677, 0.2727272727272727, 0.75, 0.0, 0.18421052631578946, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,indexedVal=term.text(),ASSIGNMENT, line no: 762, 0.2727272727272727, 0.5, 0.0, 0.34210526315789475, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,i < sources.size(),INFIX_EXPRESSION, line no: 778, 0.2727272727272727, 0.5, 0.0, 0.2631578947368421, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2,INFIX_EXPRESSION, line no: 785, 0.2727272727272727, 0.875, 0.0, 0.23684210526315788, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() == 2,INFIX_EXPRESSION, line no: 788, 0.2727272727272727, 0.875, 0.0, 0.23684210526315788, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(0),CAST_EXPRESSION, line no: 794, 0.2727272727272727, 0.5, 0.0, 0.47368421052631576, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)sources.get(1),CAST_EXPRESSION, line no: 795, 0.2727272727272727, 0.5, 0.0, 0.47368421052631576, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() / 2,INFIX_EXPRESSION, line no: 805, 0.2727272727272727, 0.75, 0.0, 0.23684210526315788, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0,INFIX_EXPRESSION, line no: 841, 0.2727272727272727, 0.75, 0.0, 0.21052631578947367, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.2727272727272727, 0.875, 0.0, 0.5, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=b.hashCode(),ASSIGNMENT, line no: 1134, 0.2727272727272727, 0.625, 0.0, 0.13157894736842105, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h+=name().hashCode(),ASSIGNMENT, line no: 1136, 0.2727272727272727, 0.625, 0.0, 0.21052631578947367, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.getClass() != o.getClass(),INFIX_EXPRESSION, line no: 1142, 0.2727272727272727, 0.75, 0.0, 0.2894736842105263, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a),METHOD_INVOCATION, line no: 1144, 0.2727272727272727, 0.75, 0.0, 0.21052631578947367, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b.equals(other.b),METHOD_INVOCATION, line no: 1145, 0.2727272727272727, 0.75, 0.0, 0.21052631578947367, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.equals(((TestValueSource)o).source),METHOD_INVOCATION, line no: 1236, 0.2727272727272727, 0.75, 0.0, 0.42857142857142855, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.put(this this),METHOD_INVOCATION, line no: 1251, 0.2727272727272727, 0.375, 0.0, 0.23684210526315788, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.2727272727272727, 0.5555555555555556, 0.0, 0.10666666666666667, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSource[sources.size()],ARRAY_CREATION, line no: 194, 0.2727272727272727, 1.0, 0.0, 0.1935483870967742, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources"),CLASS_INSTANCE_CREATION, line no: 296, 0.2727272727272727, 0.5555555555555556, 0.0, 0.06153846153846154, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.2727272727272727, 0.6666666666666666, 0.0, 0.09523809523809523, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.2727272727272727, 0.6666666666666666, 0.0, 0.09523809523809523, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,new SquaredEuclideanFunction(mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 514, 0.2727272727272727, 1.0, 0.0, 0.15555555555555556, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.2727272727272727, 0.5555555555555556, 0.0, 0.16, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.2727272727272727, 0.8888888888888888, 0.0, 0.17391304347826086, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Illegal number of sources.  There must be an even number of sources"),CLASS_INSTANCE_CREATION, line no: 786, 0.2727272727272727, 0.5555555555555556, 0.0, 0.06451612903225806, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(sources1),ASSIGNMENT, line no: 810, 0.2727272727272727, 0.7777777777777778, 0.0, 0.1794871794871795, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(sources2),ASSIGNMENT, line no: 811, 0.2727272727272727, 0.7777777777777778, 0.0, 0.1794871794871795, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.2727272727272727, 0.8888888888888888, 0.0, 0.1951219512195122, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.2727272727272727, 0.7777777777777778, 0.0, 0.14583333333333334, 0.2727272727272727
fp.getString(),METHOD_INVOCATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.2727272727272727, 0.6666666666666666, 0.0, 0.0945945945945946, 0.2727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.26666666666666666, 0.5, 0.0, 0.25, 0.26666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.26666666666666666, 0.5555555555555556, 0.0, 0.15294117647058825, 0.26666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(name p),METHOD_INVOCATION, line no: 75, 0.25, 0.75, 0.0, 0.4473684210526316, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(p.name() p),METHOD_INVOCATION, line no: 82, 0.25, 0.75, 0.0, 0.47619047619047616, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.25, 1.0, 0.0, 0.44680851063829785, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.25, 1.0, 0.0, 0.42105263157894735, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.abs(vals.floatVal(doc)),METHOD_INVOCATION, line no: 185, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.floatVal(doc) - bVals.floatVal(doc),INFIX_EXPRESSION, line no: 221, 0.25, 0.75, 0.0, 0.2682926829268293, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geodist" HaversineConstFunction.parser),METHOD_INVOCATION, line no: 262, 0.25, 1.0, 0.0, 0.26, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.25, 1.0, 0.0, 0.3409090909090909, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp.req,QUALIFIED_NAME, line no: 347, 0.25, 0.5, 0.0, 0.10526315789473684, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.25, 1.0, 0.0, 0.38095238095238093, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sqrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 377, 0.25, 0.75, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cbrt(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 383, 0.25, 0.75, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log10(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 389, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.log(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 395, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.exp(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 401, 0.25, 0.75, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 407, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 413, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 419, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.asin(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 425, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.acos(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 431, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 437, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.sinh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 443, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.cosh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 449, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.tanh(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 455, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.ceil(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 461, 0.25, 0.75, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.floor(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 467, 0.25, 0.75, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.rint(vals.doubleVal(doc)),METHOD_INVOCATION, line no: 473, 0.25, 0.75, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.25, 1.0, 0.0, 0.3709677419354839, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.25, 0.5, 0.2, 0.25609756097560976, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField=term.field(),ASSIGNMENT, line no: 761, 0.25, 0.5, 0.0, 0.2894736842105263, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest1.add(sources.get(i)),METHOD_INVOCATION, line no: 775, 0.25, 0.5, 0.0, 0.39473684210526316, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dest2.add(sources.get(i)),METHOD_INVOCATION, line no: 779, 0.25, 0.5, 0.0, 0.39473684210526316, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(0) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 791, 0.25, 0.75, 0.0, 0.40476190476190477, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.get(1) instanceof MultiValueSource,INSTANCEOF_EXPRESSION, line no: 792, 0.25, 0.75, 0.0, 0.40476190476190477, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.25, 0.75, 0.0, 0.3888888888888889, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(0)),METHOD_INVOCATION, line no: 801, 0.25, 0.75, 0.0, 0.4146341463414634, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.25, 0.75, 0.0, 0.3888888888888889, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Collections.singletonList(sources.get(1)),METHOD_INVOCATION, line no: 802, 0.25, 0.75, 0.0, 0.4146341463414634, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.25, 0.75, 0.0, 0.5526315789473685, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Character.isDigit(arg.charAt(0)),METHOD_INVOCATION, line no: 841, 0.25, 0.75, 0.0, 0.3157894736842105, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ms1 - bVals.longVal(doc),INFIX_EXPRESSION, line no: 900, 0.25, 0.75, 0.0, 0.23684210526315788, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - ms2,INFIX_EXPRESSION, line no: 914, 0.25, 0.75, 0.0, 0.23684210526315788, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,aVals.longVal(doc) - bVals.longVal(doc),INFIX_EXPRESSION, line no: 928, 0.25, 0.75, 0.0, 0.3076923076923077, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,description(),METHOD_INVOCATION, line no: 980, 0.25, 0.5, 0.0, 0.21052631578947367, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 992, 0.25, 0.75, 0.0, 0.4523809523809524, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.getValues(context readerContext),METHOD_INVOCATION, line no: 1064, 0.25, 0.875, 0.0, 0.358974358974359, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name(),METHOD_INVOCATION, line no: 1072, 0.25, 0.75, 0.0, 0.13157894736842105, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,a.getValues(context readerContext),METHOD_INVOCATION, line no: 1112, 0.25, 0.875, 0.0, 0.3684210526315789, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,b.getValues(context readerContext),METHOD_INVOCATION, line no: 1113, 0.25, 0.875, 0.0, 0.3684210526315789, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class != o.getClass(),INFIX_EXPRESSION, line no: 1181, 0.25, 0.75, 0.0, 0.4523809523809524, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,context.get(this) == null,INFIX_EXPRESSION, line no: 1227, 0.25, 0.75, 0.0, 0.2631578947368421, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,source.hashCode() + TestValueSource.class.hashCode(),INFIX_EXPRESSION, line no: 1241, 0.25, 0.75, 0.0, 0.34615384615384615, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc(" + source.description() + ')',INFIX_EXPRESSION, line no: 1246, 0.25, 0.625, 0.0, 0.4, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new TestValueSource(source),CLASS_INSTANCE_CREATION, line no: 94, 0.25, 0.8888888888888888, 0.0, 0.2222222222222222, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new OrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 101, 0.25, 0.8888888888888888, 0.0, 0.2, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.25, 1.0, 1.0, 0.08484848484848485, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new ReverseOrdFieldSource(field),CLASS_INSTANCE_CREATION, line no: 114, 0.25, 0.8888888888888888, 0.0, 0.15625, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,sources.toArray(new ValueSource[sources.size()]),METHOD_INVOCATION, line no: 194, 0.25, 1.0, 0.0, 0.14583333333333334, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s1),CLASS_INSTANCE_CREATION, line no: 283, 0.25, 0.7777777777777778, 0.0, 0.24, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(s2),CLASS_INSTANCE_CREATION, line no: 289, 0.25, 0.7777777777777778, 0.0, 0.24, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new NGramDistance(ngram),CLASS_INSTANCE_CREATION, line no: 345, 0.25, 0.7777777777777778, 0.0, 0.25, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.25, 0.7777777777777778, 0.0, 0.11627906976744186, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.25, 0.7777777777777778, 0.0, 0.1111111111111111, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.25, 0.7777777777777778, 0.0, 0.1111111111111111, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorDistanceFunction(power mvr.mv1 mvr.mv2),CLASS_INSTANCE_CREATION, line no: 524, 0.25, 1.0, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new SumTotalTermFreqValueSource(field),CLASS_INSTANCE_CREATION, line no: 565, 0.25, 0.8888888888888888, 0.0, 0.15789473684210525, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new NormValueSource(field),CLASS_INSTANCE_CREATION, line no: 598, 0.25, 0.8888888888888888, 0.0, 0.19230769230769232, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(true),CLASS_INSTANCE_CREATION, line no: 619, 0.25, 0.5555555555555556, 0.0, 0.2, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolConstValueSource(false),CLASS_INSTANCE_CREATION, line no: 626, 0.25, 0.5555555555555556, 0.0, 0.1935483870967742, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.25, 0.5555555555555556, 0.0, 0.175, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.25, 0.5555555555555556, 0.0, 0.175, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(0))),CLASS_INSTANCE_CREATION, line no: 801, 0.25, 0.7777777777777778, 0.0, 0.140625, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(Collections.singletonList(sources.get(1))),CLASS_INSTANCE_CREATION, line no: 802, 0.25, 0.7777777777777778, 0.0, 0.140625, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources1),CLASS_INSTANCE_CREATION, line no: 810, 0.25, 0.7777777777777778, 0.0, 0.1935483870967742, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new VectorValueSource(sources2),CLASS_INSTANCE_CREATION, line no: 811, 0.25, 0.7777777777777778, 0.0, 0.1935483870967742, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.25, 1.0, 0.0, 0.22580645161290322, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.25, 1.0, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.25, 1.0, 0.0, 0.22580645161290322, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.25, 1.0, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1),CLASS_INSTANCE_CREATION, line no: 892, 0.25, 1.0, 0.0, 0.20689655172413793, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms2),CLASS_INSTANCE_CREATION, line no: 906, 0.25, 1.0, 0.0, 0.20689655172413793, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.25, 0.4444444444444444, 0.0, 0.17647058823529413, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.25, 0.7777777777777778, 0.0, 0.2631578947368421, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.25, 0.6666666666666666, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.25, 0.6666666666666666, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.25, 0.6666666666666666, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.25, 0.6666666666666666, 0.0, 0.14285714285714285, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.25, 0.7777777777777778, 0.0, 0.1320754716981132, 0.25
fp.getString(),METHOD_INVOCATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.25, 0.7777777777777778, 0.0, 0.13725490196078433, 0.25
fp,SIMPLE_NAME, line no: 107,parseTerm(fp),METHOD_INVOCATION, line no: 547, 0.25, 0.8, 0.0, 0.15384615384615385, 0.25
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.23529411764705882, 0.5, 0.0, 0.24705882352941178, 0.23529411764705882
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.23076923076923078, 0.125, 0.0, 0.5384615384615384, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,standardValueSourceParsers.put(dest standardValueSourceParsers.get(source)),METHOD_INVOCATION, line no: 86, 0.23076923076923078, 0.5, 0.0, 0.30666666666666664, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.23076923076923078, 1.0, 0.0, 0.4146341463414634, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.23076923076923078, 1.0, 0.0, 0.3333333333333333, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS,INFIX_EXPRESSION, line no: 365, 0.23076923076923078, 0.75, 0.0, 0.20634920634920634, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES,INFIX_EXPRESSION, line no: 371, 0.23076923076923078, 0.75, 0.0, 0.20634920634920634, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,ft.readableToIndexed(tinfo.val tinfo.indexedBytes),METHOD_INVOCATION, line no: 766, 0.23076923076923078, 0.5, 0.0, 0.3, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,sources.size() % 2 != 0,INFIX_EXPRESSION, line no: 785, 0.23076923076923078, 0.875, 0.0, 0.23684210526315788, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,f.getType().getClass() == DateField.class,INFIX_EXPRESSION, line no: 850, 0.23076923076923078, 0.875, 0.0, 0.24390243902439024, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a.equals(other.a) && this.b.equals(other.b),INFIX_EXPRESSION, line no: 1144, 0.23076923076923078, 0.75, 0.0, 0.22916666666666666, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,o instanceof TestValueSource && source.equals(((TestValueSource)o).source),INFIX_EXPRESSION, line no: 1236, 0.23076923076923078, 0.75, 0.0, 0.2972972972972973, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new SumFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 194, 0.23076923076923078, 1.0, 0.0, 0.1, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 203, 0.23076923076923078, 1.0, 0.0, 0.0945945945945946, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 498, 0.23076923076923078, 1.0, 0.0, 0.1, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new MinFloatFunction(sources.toArray(new ValueSource[sources.size()])),CLASS_INSTANCE_CREATION, line no: 505, 0.23076923076923078, 1.0, 0.0, 0.1, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 548, 0.23076923076923078, 0.8888888888888888, 0.0, 0.0963855421686747, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 556, 0.23076923076923078, 0.8888888888888888, 0.0, 0.0898876404494382, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 574, 0.23076923076923078, 0.8888888888888888, 0.0, 0.10126582278481013, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 582, 0.23076923076923078, 0.8888888888888888, 0.0, 0.09523809523809523, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes),CLASS_INSTANCE_CREATION, line no: 590, 0.23076923076923078, 0.8888888888888888, 0.0, 0.10256410256410256, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.23076923076923078, 0.5555555555555556, 0.0, 0.10526315789473684, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.23076923076923078, 0.7777777777777778, 0.0, 0.16666666666666666, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.23076923076923078, 0.7777777777777778, 0.0, 0.17307692307692307, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "Can't use ms() function on non-numeric legacy date field " + arg),CLASS_INSTANCE_CREATION, line no: 851, 0.23076923076923078, 0.5555555555555556, 0.0, 0.075, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.23076923076923078, 1.0, 0.3333333333333333, 0.1590909090909091, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.23076923076923078, 1.0, 0.3333333333333333, 0.15555555555555556, 0.23076923076923078
fp.getString(),METHOD_INVOCATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.23076923076923078, 0.7777777777777778, 0.0, 0.14035087719298245, 0.23076923076923078
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.22727272727272727, 1.0, 1.0, 0.17714285714285713, 0.22727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.22727272727272727, 1.0, 1.0, 0.1834319526627219, 0.22727272727272727
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)one,CAST_EXPRESSION, line no: 293, 0.2222222222222222, 0.375, 0.0, 0.34210526315789475, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(MultiValueSource)two,CAST_EXPRESSION, line no: 294, 0.2222222222222222, 0.375, 0.0, 0.34210526315789475, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getMultiValueSources(sources),METHOD_INVOCATION, line no: 512, 0.2222222222222222, 0.75, 0.0, 0.4473684210526316, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TermQuery)q),PARENTHESIZED_EXPRESSION, line no: 760, 0.2222222222222222, 0.5, 0.0, 0.18421052631578946, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TermQuery)q,CAST_EXPRESSION, line no: 760, 0.2222222222222222, 0.5, 0.0, 0.15789473684210525, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant,CAST_EXPRESSION, line no: 965, 0.2222222222222222, 0.375, 0.0, 0.13157894736842105, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(LongConstValueSource)o,CAST_EXPRESSION, line no: 993, 0.2222222222222222, 0.75, 0.0, 0.3684210526315789, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(Function)o,CAST_EXPRESSION, line no: 1143, 0.2222222222222222, 0.75, 0.0, 0.15789473684210525, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(BoolConstValueSource)o,CAST_EXPRESSION, line no: 1182, 0.2222222222222222, 0.75, 0.0, 0.3684210526315789, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,((TestValueSource)o),PARENTHESIZED_EXPRESSION, line no: 1236, 0.2222222222222222, 0.75, 0.0, 0.39473684210526316, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(TestValueSource)o,CAST_EXPRESSION, line no: 1236, 0.2222222222222222, 0.75, 0.0, 0.3684210526315789, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.2222222222222222, 1.0, 0.0, 0.16666666666666666, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.2222222222222222, 1.0, 0.0, 0.13636363636363635, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.2222222222222222, 0.3333333333333333, 0.0, 0.2, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.2222222222222222, 0.3333333333333333, 0.0, 0.2, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new JaroWinklerDistance(),ASSIGNMENT, line no: 337, 0.2222222222222222, 0.3333333333333333, 0.0, 0.2, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new LevensteinDistance(),ASSIGNMENT, line no: 339, 0.2222222222222222, 0.3333333333333333, 0.0, 0.20689655172413793, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.2222222222222222, 1.0, 0.0, 0.17857142857142858, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.2222222222222222, 1.0, 0.0, 0.15625, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,ft=new StrField(),ASSIGNMENT, line no: 753, 0.2222222222222222, 0.8888888888888888, 0.0, 0.47058823529411764, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.2222222222222222, 0.4444444444444444, 0.0, 0.18181818181818182, 0.2222222222222222
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.2222222222222222, 0.7777777777777778, 0.0, 0.2857142857142857, 0.2222222222222222
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.21739130434782608, 1.0, 0.5, 0.1564245810055866, 0.21739130434782608
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.21739130434782608, 1.0, 0.5, 0.17901234567901234, 0.21739130434782608
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.21739130434782608, 1.0, 0.5, 0.18012422360248448, 0.21739130434782608
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.21739130434782608, 1.0, 1.0, 0.07526881720430108, 0.21739130434782608
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.21428571428571427, 1.0, 0.0, 0.34615384615384615, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.pow(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 479, 0.21428571428571427, 0.75, 0.0, 0.3023255813953488, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.hypot(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 485, 0.21428571428571427, 0.75, 0.0, 0.28888888888888886, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.atan2(a.doubleVal(doc) b.doubleVal(doc)),METHOD_INVOCATION, line no: 491, 0.21428571428571427, 0.75, 0.0, 0.28888888888888886, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1=(MultiValueSource)sources.get(0),ASSIGNMENT, line no: 794, 0.21428571428571427, 0.5, 0.0, 0.475, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2=(MultiValueSource)sources.get(1),ASSIGNMENT, line no: 795, 0.21428571428571427, 0.5, 0.0, 0.475, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null) ? 0 : d1.getTime(),CONDITIONAL_EXPRESSION, line no: 875, 0.21428571428571427, 1.0, 0.0, 0.2631578947368421, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null) ? 0 : d2.getTime(),CONDITIONAL_EXPRESSION, line no: 876, 0.21428571428571427, 1.0, 0.0, 0.2631578947368421, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + vals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1072, 0.21428571428571427, 0.75, 0.0, 0.42105263157894735, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(requestInfo == null ? "null" : requestInfo.getReq()),PARENTHESIZED_EXPRESSION, line no: 1229, 0.21428571428571427, 0.75, 0.0, 0.3018867924528302, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,requestInfo == null ? "null" : requestInfo.getReq(),CONDITIONAL_EXPRESSION, line no: 1229, 0.21428571428571427, 0.75, 0.0, 0.29411764705882354, 0.21428571428571427
fp.getString(),METHOD_INVOCATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.21428571428571427, 0.7777777777777778, 0.0, 0.16923076923076924, 0.21428571428571427
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.2, 1.0, 0.5, 0.15048543689320387, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.2, 1.0, 0.5, 0.18032786885245902, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.2, 1.0, 0.5, 0.1736842105263158, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.2, 1.0, 1.0, 0.15897435897435896, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.2, 1.0, 0.5, 0.16751269035532995, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.2, 1.0, 0.5, 0.1783783783783784, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.2, 1.0, 1.0, 0.16666666666666666, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,UnicodeUtil.UTF16toUTF8(indexedVal 0 indexedVal.length() tinfo.indexedBytes),METHOD_INVOCATION, line no: 764, 0.2, 0.5, 0.0, 0.2236842105263158, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(arg.length() > 0 && Character.isDigit(arg.charAt(0))),PARENTHESIZED_EXPRESSION, line no: 841, 0.2, 0.75, 0.0, 0.25925925925925924, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.length() > 0 && Character.isDigit(arg.charAt(0)),INFIX_EXPRESSION, line no: 841, 0.2, 0.75, 0.0, 0.2692307692307692, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.2, 1.0, 0.3333333333333333, 0.4318181818181818, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.2, 1.0, 0.3333333333333333, 0.4444444444444444, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d1 == null),PARENTHESIZED_EXPRESSION, line no: 875, 0.2, 1.0, 0.0, 0.10526315789473684, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(d2 == null),PARENTHESIZED_EXPRESSION, line no: 876, 0.2, 1.0, 0.0, 0.10526315789473684, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(constant >>> 32),PARENTHESIZED_EXPRESSION, line no: 987, 0.2, 0.5, 0.0, 0.13157894736842105, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + "(" + a.description()+ " "+ b.description()+ ")",INFIX_EXPRESSION, line no: 1107, 0.2, 0.75, 0.0, 0.2631578947368421, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13),PARENTHESIZED_EXPRESSION, line no: 1133, 0.2, 0.625, 0.0, 0.05263157894736842, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 20),PARENTHESIZED_EXPRESSION, line no: 1133, 0.2, 0.625, 0.0, 0.05263157894736842, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23),PARENTHESIZED_EXPRESSION, line no: 1135, 0.2, 0.625, 0.0, 0.05263157894736842, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h >>> 10),PARENTHESIZED_EXPRESSION, line no: 1135, 0.2, 0.625, 0.0, 0.05263157894736842, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.2, 0.1111111111111111, 0.0, 0.14285714285714285, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.2, 1.0, 1.0, 0.6428571428571429, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new DivFloatFunction(a b),CLASS_INSTANCE_CREATION, line no: 158, 0.2, 1.0, 0.0, 0.28, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(q defVal),CLASS_INSTANCE_CREATION, line no: 241, 0.2, 1.0, 0.0, 0.16666666666666666, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new BoostedQuery(q vs),CLASS_INSTANCE_CREATION, line no: 249, 0.2, 0.8888888888888888, 0.0, 0.22727272727272727, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new QueryValueSource(bq 0.0f),CLASS_INSTANCE_CREATION, line no: 250, 0.2, 1.0, 0.0, 0.1724137931034483, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new JoinDocFreqValueSource(f0 qf),CLASS_INSTANCE_CREATION, line no: 258, 0.2, 1.0, 0.0, 0.15151515151515152, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(),CLASS_INSTANCE_CREATION, line no: 280, 0.2, 0.7777777777777778, 0.0, 0.21428571428571427, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,pv1=new VectorValueSource(s1),ASSIGNMENT, line no: 283, 0.2, 0.7777777777777778, 0.0, 0.2413793103448276, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,pv2=new VectorValueSource(s2),ASSIGNMENT, line no: 289, 0.2, 0.7777777777777778, 0.0, 0.2413793103448276, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashFunction(lat lon),CLASS_INSTANCE_CREATION, line no: 324, 0.2, 1.0, 0.0, 0.21428571428571427, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,dist=new NGramDistance(ngram),ASSIGNMENT, line no: 345, 0.2, 0.6666666666666666, 0.0, 0.20689655172413793, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ms" new DateValueSourceParser()),METHOD_INVOCATION, line no: 527, 0.2, 1.0, 0.0, 0.13953488372093023, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1=new VectorValueSource(Collections.singletonList(sources.get(0))),ASSIGNMENT, line no: 801, 0.2, 0.7777777777777778, 0.0, 0.1388888888888889, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2=new VectorValueSource(Collections.singletonList(sources.get(1))),ASSIGNMENT, line no: 802, 0.2, 0.7777777777777778, 0.0, 0.1388888888888889, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,new LongConstValueSource(ms1 - ms2),CLASS_INSTANCE_CREATION, line no: 881, 0.2, 0.7777777777777778, 0.0, 0.17142857142857143, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.2, 0.4444444444444444, 0.0, 0.15789473684210525, 0.2
fp.getString(),METHOD_INVOCATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.2, 0.7777777777777778, 0.0, 0.19047619047619047, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseValueSource(),METHOD_INVOCATION, line no: 93, 0.2, 0.8, 0.0, 0.09523809523809523, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseId(),METHOD_INVOCATION, line no: 100, 0.2, 0.8, 0.0, 0.16666666666666666, 0.2
fp,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.2, 0.9, 0.0, 0.14285714285714285, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseFloat(),METHOD_INVOCATION, line no: 129, 0.2, 0.8, 0.0, 0.13333333333333333, 0.2
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments(),METHOD_INVOCATION, line no: 168, 0.2, 0.8, 0.0, 0.09523809523809523, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseValueSourceList(),METHOD_INVOCATION, line no: 193, 0.2, 0.8, 0.0, 0.08, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseNestedQuery(),METHOD_INVOCATION, line no: 236, 0.2, 0.8, 0.0, 0.09523809523809523, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseArg(),METHOD_INVOCATION, line no: 256, 0.2, 0.8, 0.0, 0.15384615384615385, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseDouble(),METHOD_INVOCATION, line no: 268, 0.2, 0.9, 0.0, 0.125, 0.2
fp,SIMPLE_NAME, line no: 107,fp.parseInt(),METHOD_INVOCATION, line no: 343, 0.2, 0.5, 0.0, 0.15384615384615385, 0.2
fp,SIMPLE_NAME, line no: 107,fp.getReq(),METHOD_INVOCATION, line no: 357, 0.2, 0.7, 0.0, 0.18181818181818182, 0.2
getString,SIMPLE_NAME, line no: 107,fp.getString(),METHOD_INVOCATION, line no: 107, 0.2, 0.9, 1.0, 0.6428571428571429, 0.2
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.19230769230769232, 1.0, 0.5, 0.14795918367346939, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.19230769230769232, 1.0, 0.3333333333333333, 0.14102564102564102, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.19230769230769232, 1.0, 0.3333333333333333, 0.13692946058091288, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.19230769230769232, 1.0, 0.5, 0.16853932584269662, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.19230769230769232, 1.0, 0.5, 0.17045454545454544, 0.19230769230769232
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.19047619047619047, 1.0, 1.0, 0.19333333333333333, 0.19047619047619047
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.19047619047619047, 1.0, 1.0, 0.19205298013245034, 0.19047619047619047
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.19047619047619047, 1.0, 1.0, 0.05142857142857143, 0.19047619047619047
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.19047619047619047, 1.0, 1.0, 0.05917159763313609, 0.19047619047619047
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')',INFIX_EXPRESSION, line no: 1121, 0.1875, 0.75, 0.0, 0.3230769230769231, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.1875, 0.7777777777777778, 0.0, 0.12658227848101267, 0.1875
fp.getString(),METHOD_INVOCATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.1875, 0.7777777777777778, 0.0, 0.08208955223880597, 0.1875
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.18518518518518517, 1.0, 0.3333333333333333, 0.15137614678899083, 0.18518518518518517
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.18518518518518517, 1.0, 0.25, 0.09348441926345609, 0.18518518518518517
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sum" "add"),METHOD_INVOCATION, line no: 197, 0.18181818181818182, 1.0, 0.0, 0.13157894736842105, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("product" "mul"),METHOD_INVOCATION, line no: 206, 0.18181818181818182, 1.0, 0.0, 0.21052631578947367, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv1=(MultiValueSource)one,ASSIGNMENT, line no: 293, 0.18181818181818182, 0.375, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,pv2=(MultiValueSource)two,ASSIGNMENT, line no: 294, 0.18181818181818182, 0.375, 0.0, 0.34210526315789475, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("totaltermfreq" "ttf"),METHOD_INVOCATION, line no: 559, 0.18181818181818182, 1.0, 0.0, 0.2894736842105263, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,alias("sumtotaltermfreq" "sttf"),METHOD_INVOCATION, line no: 568, 0.18181818181818182, 1.0, 0.0, 0.2894736842105263, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.18181818181818182, 1.0, 1.0, 0.18471337579617833, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.18181818181818182, 1.0, 1.0, 0.18354430379746836, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)(constant >>> 32),CAST_EXPRESSION, line no: 987, 0.18181818181818182, 0.5, 0.0, 0.15789473684210525, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc vals),METHOD_INVOCATION, line no: 1068, 0.18181818181818182, 0.75, 0.0, 0.10526315789473684, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.18181818181818182, 0.75, 0.0, 0.14285714285714285, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.18181818181818182, 1.0, 0.5, 0.05027932960893855, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new LinearFloatFunction(source slope intercept),CLASS_INSTANCE_CREATION, line no: 131, 0.18181818181818182, 1.0, 0.0, 0.14893617021276595, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new ScaleFloatFunction(source min max),CLASS_INSTANCE_CREATION, line no: 150, 0.18181818181818182, 1.0, 0.0, 0.18421052631578946, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new GeohashHaversineFunction(gh1 gh2 radius),CLASS_INSTANCE_CREATION, line no: 313, 0.18181818181818182, 1.0, 0.0, 0.13636363636363635, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new StringDistanceFunction(str1 str2 dist),CLASS_INSTANCE_CREATION, line no: 349, 0.18181818181818182, 1.0, 0.0, 0.21428571428571427, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.18181818181818182, 1.0, 0.5, 0.05555555555555555, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.18181818181818182, 1.0, 0.5, 0.055900621118012424, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new IfFunction(ifValueSource trueValueSource falseValueSource),CLASS_INSTANCE_CREATION, line no: 732, 0.18181818181818182, 1.0, 0.0, 0.0967741935483871, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,new ArrayList<ValueSource>(dim),CLASS_INSTANCE_CREATION, line no: 806, 0.18181818181818182, 0.7777777777777778, 0.0, 0.1935483870967742, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.18181818181818182, 0.7777777777777778, 0.0, 0.13953488372093023, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.18181818181818182, 0.6666666666666666, 0.0, 0.09090909090909091, 0.18181818181818182
fp.getString(),METHOD_INVOCATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.18181818181818182, 0.6666666666666666, 0.0, 0.09090909090909091, 0.18181818181818182
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.17857142857142858, 1.0, 0.5, 0.14035087719298245, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.17857142857142858, 1.0, 0.5, 0.165, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.17857142857142858, 1.0, 0.5, 0.15865384615384615, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.17857142857142858, 1.0, 0.3333333333333333, 0.13545816733067728, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.17857142857142858, 1.0, 0.3333333333333333, 0.1297709923664122, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.17857142857142858, 1.0, 0.5, 0.14537444933920704, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.17857142857142858, 1.0, 0.5, 0.1625615763546798, 0.17857142857142858
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.1724137931034483, 1.0, 0.25, 0.11379310344827587, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.1724137931034483, 1.0, 0.25, 0.12087912087912088, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.1724137931034483, 1.0, 0.3333333333333333, 0.13865546218487396, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.1724137931034483, 1.0, 0.25, 0.11262798634812286, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.1724137931034483, 1.0, 0.25, 0.0921409214092141, 0.1724137931034483
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.16666666666666666, 1.0, 0.2, 0.10963455149501661, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.16666666666666666, 1.0, 0.16666666666666666, 0.12448132780082988, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.16666666666666666, 1.0, 0.16666666666666666, 0.1214574898785425, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.16666666666666666, 1.0, 0.16666666666666666, 0.12658227848101267, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.16666666666666666, 1.0, 0.16666666666666666, 0.12396694214876033, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.16666666666666666, 1.0, 0.16666666666666666, 0.1271186440677966, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.16666666666666666, 1.0, 1.0, 0.17647058823529413, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.16666666666666666, 1.0, 1.0, 0.1744186046511628, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,arg.startsWith("NOW") || (arg.length() > 0 && Character.isDigit(arg.charAt(0))),INFIX_EXPRESSION, line no: 841, 0.16666666666666666, 0.75, 0.0, 0.20253164556962025, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(int)constant + (int)(constant >>> 32),INFIX_EXPRESSION, line no: 987, 0.16666666666666666, 0.5, 0.0, 0.23684210526315788, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,func(doc aVals bVals),METHOD_INVOCATION, line no: 1117, 0.16666666666666666, 0.75, 0.0, 0.18421052631578946, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,"testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq()),INFIX_EXPRESSION, line no: 1229, 0.16666666666666666, 0.75, 0.0, 0.1865671641791045, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new HashMap<String ValueSourceParser>(),CLASS_INSTANCE_CREATION, line no: 69, 0.16666666666666666, 0.1111111111111111, 0.0, 0.23076923076923078, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.16666666666666666, 1.0, 0.5, 0.04854368932038835, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.16666666666666666, 1.0, 0.5, 0.06557377049180328, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.16666666666666666, 1.0, 0.5, 0.06315789473684211, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ReciprocalFloatFunction(source m a b),CLASS_INSTANCE_CREATION, line no: 141, 0.16666666666666666, 1.0, 0.0, 0.17073170731707318, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.16666666666666666, 1.0, 1.0, 0.046153846153846156, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new HaversineFunction(pv1 pv2 radius convert),CLASS_INSTANCE_CREATION, line no: 301, 0.16666666666666666, 1.0, 0.0, 0.13333333333333333, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.16666666666666666, 1.0, 0.5, 0.06091370558375635, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.16666666666666666, 1.0, 0.5, 0.06486486486486487, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.16666666666666666, 1.0, 1.0, 0.053763440860215055, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.16666666666666666, 0.6666666666666666, 0.0, 0.08, 0.16666666666666666
fp.getString(),METHOD_INVOCATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.16666666666666666, 0.6666666666666666, 0.0, 0.08, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.req.getCore(),METHOD_INVOCATION, line no: 347, 0.16666666666666666, 0.6, 0.0, 0.125, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema(),METHOD_INVOCATION, line no: 357, 0.16666666666666666, 0.7, 0.0, 0.08695652173913043, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema(),METHOD_INVOCATION, line no: 849, 0.16666666666666666, 0.9, 0.0, 0.1111111111111111, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,getDate(fp first),METHOD_INVOCATION, line no: 862, 0.16666666666666666, 1.0, 0.0, 0.11764705882352941, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,getValueSource(fp first),METHOD_INVOCATION, line no: 863, 0.16666666666666666, 1.0, 0.0, 0.08333333333333333, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,getDate(fp second),METHOD_INVOCATION, line no: 865, 0.16666666666666666, 1.0, 0.0, 0.1111111111111111, 0.16666666666666666
fp,SIMPLE_NAME, line no: 107,getValueSource(fp second),METHOD_INVOCATION, line no: 866, 0.16666666666666666, 1.0, 0.0, 0.08, 0.16666666666666666
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.16129032258064516, 1.0, 0.25, 0.10967741935483871, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.16129032258064516, 1.0, 0.25, 0.11643835616438356, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.16129032258064516, 1.0, 0.5, 0.12598425196850394, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.16129032258064516, 1.0, 0.5, 0.12403100775193798, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.16129032258064516, 1.0, 0.25, 0.11552346570397112, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.16129032258064516, 1.0, 0.25, 0.10862619808306709, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.16129032258064516, 1.0, 0.5, 0.12598425196850394, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.16129032258064516, 1.0, 0.5, 0.12598425196850394, 0.16129032258064516
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.16, 1.0, 1.0, 0.17142857142857143, 0.16
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.16, 1.0, 1.0, 0.1694915254237288, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.16, 1.0, 0.5, 0.04591836734693878, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.16, 1.0, 0.3333333333333333, 0.04700854700854701, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.16, 1.0, 0.3333333333333333, 0.04564315352697095, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.16, 1.0, 0.5, 0.05056179775280899, 0.16
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.16, 1.0, 0.5, 0.05113636363636364, 0.16
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.15625, 1.0, 0.2, 0.10625, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.15625, 1.0, 0.3333333333333333, 0.10915492957746478, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.15625, 1.0, 0.3333333333333333, 0.13178294573643412, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.15625, 1.0, 0.16666666666666666, 0.11450381679389313, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.15625, 1.0, 0.16666666666666666, 0.11313868613138686, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.15625, 1.0, 0.16666666666666666, 0.11811023622047244, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.15625, 1.0, 0.16666666666666666, 0.11363636363636363, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.15625, 1.0, 0.16666666666666666, 0.11904761904761904, 0.15625
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.15384615384615385, 1.0, 0.0, 0.15, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.15384615384615385, 1.0, 0.0, 0.15714285714285714, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.15384615384615385, 1.0, 0.0, 0.15714285714285714, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.15384615384615385, 1.0, 0.0, 0.16058394160583941, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.15384615384615385, 1.0, 0.0, 0.15217391304347827, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.15384615384615385, 1.0, 0.0, 0.15942028985507245, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.15384615384615385, 1.0, 0.0, 0.15217391304347827, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.15384615384615385, 1.0, 0.0, 0.15217391304347827, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.15384615384615385, 1.0, 0.0, 0.15714285714285714, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.15384615384615385, 1.0, 0.0, 0.15714285714285714, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.15384615384615385, 1.0, 0.0, 0.15714285714285714, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.15384615384615385, 1.0, 0.0, 0.15714285714285714, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.15384615384615385, 1.0, 0.0, 0.15, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.15384615384615385, 1.0, 0.0, 0.15, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.15384615384615385, 1.0, 0.0, 0.16428571428571428, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.15384615384615385, 1.0, 0.0, 0.14788732394366197, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.15384615384615385, 1.0, 0.0, 0.17142857142857143, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,splitSources(dim sources sources1 sources2),METHOD_INVOCATION, line no: 809, 0.15384615384615385, 0.75, 0.0, 0.27906976744186046, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 13) | (h >>> 20),INFIX_EXPRESSION, line no: 1133, 0.15384615384615385, 0.625, 0.0, 0.07894736842105263, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,(h << 23) | (h >>> 10),INFIX_EXPRESSION, line no: 1135, 0.15384615384615385, 0.625, 0.0, 0.07894736842105263, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new RangeMapFloatFunction(source min max target def),CLASS_INSTANCE_CREATION, line no: 169, 0.15384615384615385, 1.0, 0.0, 0.17307692307692307, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.15384615384615385, 1.0, 0.3333333333333333, 0.05504587155963303, 0.15384615384615385
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.15384615384615385, 1.0, 0.25, 0.0339943342776204, 0.15384615384615385
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.15151515151515152, 1.0, 0.25, 0.10810810810810811, 0.15151515151515152
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.15151515151515152, 1.0, 0.2, 0.11913357400722022, 0.15151515151515152
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.15, 1.0, 1.0, 0.06, 0.15
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.15, 1.0, 1.0, 0.059602649006622516, 0.15
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.14814814814814814, 1.0, 0.0, 0.12790697674418605, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.14814814814814814, 1.0, 0.0, 0.12209302325581395, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.14814814814814814, 1.0, 0.0, 0.1390728476821192, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.14814814814814814, 1.0, 0.0, 0.1456953642384106, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.14814814814814814, 1.0, 0.0, 0.1456953642384106, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.14814814814814814, 1.0, 0.0, 0.14864864864864866, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.14814814814814814, 1.0, 0.0, 0.14093959731543623, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.14814814814814814, 1.0, 0.0, 0.1476510067114094, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.14814814814814814, 1.0, 0.0, 0.14093959731543623, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.14814814814814814, 1.0, 0.0, 0.14093959731543623, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.14814814814814814, 1.0, 0.0, 0.1456953642384106, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.14814814814814814, 1.0, 0.0, 0.1456953642384106, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.14814814814814814, 1.0, 0.0, 0.1456953642384106, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.14814814814814814, 1.0, 0.0, 0.1456953642384106, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.14814814814814814, 1.0, 0.0, 0.1390728476821192, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.14814814814814814, 1.0, 0.0, 0.1390728476821192, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.14814814814814814, 1.0, 0.0, 0.152317880794702, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.14814814814814814, 1.0, 0.0, 0.13725490196078433, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.14814814814814814, 1.0, 0.0, 0.15894039735099338, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.14814814814814814, 1.0, 0.0, 0.1301775147928994, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.14814814814814814, 1.0, 0.0, 0.1329479768786127, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.14814814814814814, 1.0, 0.0, 0.1329479768786127, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.14814814814814814, 1.0, 0.0, 0.11855670103092783, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.14814814814814814, 1.0, 0.5, 0.043859649122807015, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.14814814814814814, 1.0, 0.5, 0.06, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.14814814814814814, 1.0, 0.5, 0.057692307692307696, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.14814814814814814, 1.0, 0.3333333333333333, 0.043824701195219126, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.14814814814814814, 1.0, 0.3333333333333333, 0.04198473282442748, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.14814814814814814, 1.0, 0.5, 0.05286343612334802, 0.14814814814814814
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.14814814814814814, 1.0, 0.5, 0.059113300492610835, 0.14814814814814814
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.14705882352941177, 1.0, 0.5, 0.11808118081180811, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.14705882352941177, 1.0, 0.5, 0.11469534050179211, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.14705882352941177, 1.0, 0.3333333333333333, 0.10561056105610561, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.14705882352941177, 1.0, 0.3333333333333333, 0.12274368231046931, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.14705882352941177, 1.0, 0.5, 0.11808118081180811, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.14705882352941177, 1.0, 0.5, 0.11808118081180811, 0.14705882352941177
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,fp,SIMPLE_NAME, line no: 66, 0.14285714285714285, 0.125, 0.0, 0.05263157894736842, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LiteralValueSource,SIMPLE_NAME, line no: 107, 0.14285714285714285, 1.0, 1.0, 0.47368421052631576, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,getString,SIMPLE_NAME, line no: 107, 0.14285714285714285, 1.0, 0.0, 0.23684210526315788, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.14285714285714285, 1.0, 0.0, 0.12568306010928962, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.14285714285714285, 1.0, 0.0, 0.12021857923497267, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.14285714285714285, 1.0, 0.0, 0.12222222222222222, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.14285714285714285, 1.0, 0.0, 0.125, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.14285714285714285, 1.0, 0.0, 0.125, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.14285714285714285, 1.0, 0.2, 0.11409395973154363, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.14285714285714285, 1.0, 0.0, 0.15025906735751296, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 13) | (h >>> 20),ASSIGNMENT, line no: 1133, 0.14285714285714285, 0.625, 0.0, 0.07894736842105263, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,h^=(h << 23) | (h >>> 10),ASSIGNMENT, line no: 1135, 0.14285714285714285, 0.625, 0.0, 0.07894736842105263, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.14285714285714285, 0.875, 0.0, 0.18181818181818182, 0.14285714285714285
LiteralValueSource,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.14285714285714285, 0.8, 1.0, 0.47368421052631576, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.14285714285714285, 0.0, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.14285714285714285, 0.0, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.14285714285714285, 0.0, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.14285714285714285, 1.0, 0.25, 0.03793103448275862, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.14285714285714285, 1.0, 0.25, 0.040293040293040296, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.14285714285714285, 1.0, 0.3333333333333333, 0.05042016806722689, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.14285714285714285, 1.0, 0.0, 0.1724137931034483, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.14285714285714285, 0.5555555555555556, 0.0, 0.17391304347826086, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.14285714285714285, 1.0, 0.25, 0.040955631399317405, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.14285714285714285, 0.5555555555555556, 0.0, 0.3, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.14285714285714285, 0.6666666666666666, 0.0, 0.12195121951219512, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.14285714285714285, 0.6666666666666666, 0.0, 0.12195121951219512, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.14285714285714285, 1.0, 0.0, 0.07142857142857142, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.14285714285714285, 1.0, 0.0, 0.07142857142857142, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.14285714285714285, 0.7777777777777778, 0.0, 0.07142857142857142, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.14285714285714285, 0.7777777777777778, 0.0, 0.07142857142857142, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.14285714285714285, 0.8888888888888888, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.14285714285714285, 0.8888888888888888, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.14285714285714285, 0.8888888888888888, 0.0, 0.2222222222222222, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.14285714285714285, 0.8888888888888888, 0.0, 0.2222222222222222, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.14285714285714285, 1.0, 1.0, 0.05732484076433121, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.14285714285714285, 1.0, 1.0, 0.056962025316455694, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.14285714285714285, 1.0, 0.25, 0.032520325203252036, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.14285714285714285, 0.8888888888888888, 0.0, 0.13333333333333333, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.14285714285714285, 0.3333333333333333, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.14285714285714285, 0.3333333333333333, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.14285714285714285, 0.3333333333333333, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.14285714285714285, 0.6666666666666666, 0.0, 0.15384615384615385, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.14285714285714285, 0.6666666666666666, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.14285714285714285, 0.2222222222222222, 0.0, 0.21428571428571427, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.14285714285714285, 0.6666666666666666, 0.0, 0.17647058823529413, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.14285714285714285, 0.3333333333333333, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.14285714285714285, 0.3333333333333333, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.14285714285714285, 0.7777777777777778, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.14285714285714285, 0.7777777777777778, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.14285714285714285, 0.6666666666666666, 0.0, 0.11538461538461539, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.14285714285714285, 0.2222222222222222, 0.0, 0.14285714285714285, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,new SolrException(SolrException.ErrorCode.BAD_REQUEST "testfunc: unweighted value source detected.  delegate=" + source + " request="+ (requestInfo == null ? "null" : requestInfo.getReq())),CLASS_INSTANCE_CREATION, line no: 1229, 0.14285714285714285, 0.7777777777777778, 0.0, 0.0582010582010582, 0.14285714285714285
fp.getString(),METHOD_INVOCATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.14285714285714285, 0.7777777777777778, 0.0, 0.19047619047619047, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.14285714285714285, 0.8, 0.0, 0.05263157894736842, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,new VectorValueSource(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 229, 0.14285714285714285, 0.8, 0.0, 0.041666666666666664, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,defVal=fp.parseFloat(),ASSIGNMENT, line no: 239, 0.14285714285714285, 0.4, 0.0, 0.09090909090909091, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,Boolean.parseBoolean(fp.parseArg()),METHOD_INVOCATION, line no: 270, 0.14285714285714285, 0.9, 0.0, 0.05714285714285714, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,ngram=fp.parseInt(),ASSIGNMENT, line no: 343, 0.14285714285714285, 0.4, 0.0, 0.10526315789473684, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader(),METHOD_INVOCATION, line no: 347, 0.14285714285714285, 0.6, 0.0, 0.05555555555555555, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,new DefFunction(fp.parseValueSourceList()),CLASS_INSTANCE_CREATION, line no: 739, 0.14285714285714285, 0.8, 0.0, 0.047619047619047616, 0.14285714285714285
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1049, 0.14285714285714285, 0.8, 0.0, 0.05714285714285714, 0.14285714285714285
getString,SIMPLE_NAME, line no: 107,new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107, 0.14285714285714285, 0.8, 0.0, 0.23684210526315788, 0.14285714285714285
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.1388888888888889, 1.0, 0.16666666666666666, 0.08877284595300261, 0.1388888888888889
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.1388888888888889, 1.0, 0.16666666666666666, 0.10828025477707007, 0.1388888888888889
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.1388888888888889, 1.0, 0.25, 0.08521303258145363, 0.1388888888888889
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.13793103448275862, 1.0, 0.0, 0.1262135922330097, 0.13793103448275862
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.13793103448275862, 1.0, 0.0, 0.14285714285714285, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.13793103448275862, 1.0, 0.2, 0.036544850498338874, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.13793103448275862, 1.0, 0.16666666666666666, 0.03734439834024896, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.13793103448275862, 1.0, 0.16666666666666666, 0.03643724696356275, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.13793103448275862, 1.0, 0.16666666666666666, 0.0379746835443038, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.13793103448275862, 1.0, 0.16666666666666666, 0.0371900826446281, 0.13793103448275862
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.13793103448275862, 1.0, 0.16666666666666666, 0.038135593220338986, 0.13793103448275862
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.13513513513513514, 1.0, 0.25, 0.081145584725537, 0.13513513513513514
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.13513513513513514, 1.0, 0.25, 0.08542713567839195, 0.13513513513513514
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.13333333333333333, 1.0, 0.0, 0.10504201680672269, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.13333333333333333, 1.0, 0.0, 0.10970464135021098, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.13333333333333333, 1.0, 0.25, 0.035483870967741936, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.13333333333333333, 1.0, 0.25, 0.03767123287671233, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.13333333333333333, 1.0, 0.5, 0.04330708661417323, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.13333333333333333, 1.0, 0.5, 0.04263565891472868, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.13333333333333333, 1.0, 0.25, 0.039711191335740074, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.13333333333333333, 1.0, 0.25, 0.038338658146964855, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.13333333333333333, 1.0, 0.5, 0.04330708661417323, 0.13333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.13333333333333333, 1.0, 0.5, 0.04330708661417323, 0.13333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.13157894736842105, 1.0, 0.16666666666666666, 0.0875, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.13157894736842105, 1.0, 0.25, 0.0819277108433735, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.13157894736842105, 1.0, 0.16666666666666666, 0.10542168674698796, 0.13157894736842105
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.13157894736842105, 1.0, 0.25, 0.08433734939759036, 0.13157894736842105
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.13043478260869565, 1.0, 1.0, 0.052941176470588235, 0.13043478260869565
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.13043478260869565, 1.0, 1.0, 0.05232558139534884, 0.13043478260869565
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.12903225806451613, 1.0, 0.0, 0.12048192771084337, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.12903225806451613, 1.0, 0.0, 0.12048192771084337, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.12903225806451613, 1.0, 0.0, 0.13114754098360656, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.12903225806451613, 1.0, 0.2, 0.034375, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.12903225806451613, 1.0, 0.3333333333333333, 0.03873239436619718, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.12903225806451613, 1.0, 0.3333333333333333, 0.050387596899224806, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.12903225806451613, 1.0, 0.16666666666666666, 0.03816793893129771, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.12903225806451613, 1.0, 0.16666666666666666, 0.0364963503649635, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.12903225806451613, 1.0, 0.16666666666666666, 0.03937007874015748, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.12903225806451613, 1.0, 0.16666666666666666, 0.03787878787878788, 0.12903225806451613
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.12903225806451613, 1.0, 0.16666666666666666, 0.03968253968253968, 0.12903225806451613
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.1282051282051282, 1.0, 0.25, 0.0787037037037037, 0.1282051282051282
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.1282051282051282, 1.0, 0.16666666666666666, 0.07392197125256673, 0.1282051282051282
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.125, 1.0, 0.16666666666666666, 0.07142857142857142, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.125, 0.0, 0.0, 0.2, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.125, 0.0, 0.0, 0.23529411764705882, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.125, 0.0, 0.0, 0.2631578947368421, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.125, 1.0, 0.25, 0.037162162162162164, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.125, 0.5555555555555556, 0.0, 0.11428571428571428, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.125, 1.0, 0.2, 0.04693140794223827, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.125, 1.0, 1.0, 0.05142857142857143, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.125, 1.0, 1.0, 0.05649717514124294, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.125, 0.3333333333333333, 0.0, 0.18181818181818182, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.125, 0.2222222222222222, 0.0, 0.21428571428571427, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.125, 0.3333333333333333, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.125, 0.3333333333333333, 0.0, 0.14285714285714285, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.125, 0.2222222222222222, 0.0, 0.16666666666666666, 0.125
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getField(fieldName),METHOD_INVOCATION, line no: 357, 0.125, 0.7, 0.0, 0.046511627906976744, 0.125
fp,SIMPLE_NAME, line no: 107,f.getType().getValueSource(f fp),METHOD_INVOCATION, line no: 358, 0.125, 0.8, 0.0, 0.0625, 0.125
fp,SIMPLE_NAME, line no: 107,tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.125, 0.9, 0.0, 0.08, 0.125
fp,SIMPLE_NAME, line no: 107,tinfo.val=fp.parseArg(),ASSIGNMENT, line no: 749, 0.125, 0.9, 0.0, 0.08695652173913043, 0.125
fp,SIMPLE_NAME, line no: 107,fp.req.getSchema().getField(arg),METHOD_INVOCATION, line no: 849, 0.125, 0.9, 0.0, 0.0625, 0.125
fp,SIMPLE_NAME, line no: 107,new Function(fp.parseValueSource() fp.parseValueSource()),CLASS_INSTANCE_CREATION, line no: 1089, 0.125, 1.0, 0.0, 0.03508771929824561, 0.125
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.12121212121212122, 1.0, 0.5, 0.04059040590405904, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.12121212121212122, 1.0, 0.5, 0.03942652329749104, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.12121212121212122, 1.0, 0.3333333333333333, 0.036303630363036306, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.12121212121212122, 1.0, 0.3333333333333333, 0.04693140794223827, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.12121212121212122, 1.0, 0.5, 0.04059040590405904, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.12121212121212122, 1.0, 0.5, 0.04059040590405904, 0.12121212121212122
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 374, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 380, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 386, 0.12, 1.0, 0.0, 0.06428571428571428, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 392, 0.12, 1.0, 0.0, 0.06569343065693431, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 398, 0.12, 1.0, 0.0, 0.057971014492753624, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 404, 0.12, 1.0, 0.0, 0.06521739130434782, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 410, 0.12, 1.0, 0.0, 0.057971014492753624, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 416, 0.12, 1.0, 0.0, 0.057971014492753624, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 422, 0.12, 1.0, 0.0, 0.06428571428571428, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 428, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 434, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 440, 0.12, 1.0, 0.0, 0.06428571428571428, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 446, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 452, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 458, 0.12, 1.0, 0.0, 0.05714285714285714, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 464, 0.12, 1.0, 0.0, 0.06338028169014084, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 470, 0.12, 1.0, 0.0, 0.06428571428571428, 0.12
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.11764705882352941, 1.0, 0.2, 0.0436241610738255, 0.11764705882352941
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ,CLASS_INSTANCE_CREATION, line no: 362, 0.11538461538461539, 1.0, 0.0, 0.046511627906976744, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ,CLASS_INSTANCE_CREATION, line no: 368, 0.11538461538461539, 1.0, 0.0, 0.046511627906976744, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sqrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sqrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 374, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cbrt"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cbrt(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 380, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("log"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log10(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 386, 0.11538461538461539, 1.0, 0.0, 0.059602649006622516, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ln"){   @Override public double func(  int doc   FunctionValues vals){     return Math.log(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 392, 0.11538461538461539, 1.0, 0.0, 0.060810810810810814, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("exp"){   @Override public double func(  int doc   FunctionValues vals){     return Math.exp(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 398, 0.11538461538461539, 1.0, 0.0, 0.053691275167785234, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 404, 0.11538461538461539, 1.0, 0.0, 0.06040268456375839, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 410, 0.11538461538461539, 1.0, 0.0, 0.053691275167785234, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 416, 0.11538461538461539, 1.0, 0.0, 0.053691275167785234, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("asin"){   @Override public double func(  int doc   FunctionValues vals){     return Math.asin(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 422, 0.11538461538461539, 1.0, 0.0, 0.059602649006622516, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("acos"){   @Override public double func(  int doc   FunctionValues vals){     return Math.acos(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 428, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("atan"){   @Override public double func(  int doc   FunctionValues vals){     return Math.atan(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 434, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("sinh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.sinh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 440, 0.11538461538461539, 1.0, 0.0, 0.059602649006622516, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("cosh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.cosh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 446, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("tanh"){   @Override public double func(  int doc   FunctionValues vals){     return Math.tanh(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 452, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("ceil"){   @Override public double func(  int doc   FunctionValues vals){     return Math.ceil(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 458, 0.11538461538461539, 1.0, 0.0, 0.052980132450331126, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("floor"){   @Override public double func(  int doc   FunctionValues vals){     return Math.floor(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 464, 0.11538461538461539, 1.0, 0.0, 0.058823529411764705, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rint"){   @Override public double func(  int doc   FunctionValues vals){     return Math.rint(vals.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 470, 0.11538461538461539, 1.0, 0.0, 0.059602649006622516, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 476, 0.11538461538461539, 1.0, 0.0, 0.047337278106508875, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 482, 0.11538461538461539, 1.0, 0.0, 0.046242774566473986, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 488, 0.11538461538461539, 1.0, 0.0, 0.046242774566473986, 0.11538461538461539
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected String name(){     return "exists";   }   @Override protected boolean func(  int doc   FunctionValues vals){     return vals.exists(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 634, 0.11538461538461539, 1.0, 0.0, 0.05670103092783505, 0.11538461538461539
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.11428571428571428, 1.0, 0.0, 0.09774436090225563, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.11428571428571428, 1.0, 0.16666666666666666, 0.031331592689295036, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.11428571428571428, 1.0, 0.16666666666666666, 0.041401273885350316, 0.11428571428571428
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.11428571428571428, 1.0, 0.25, 0.03258145363408521, 0.11428571428571428
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache,QUALIFIED_NAME, line no: 17, 0.1111111111111111, 0.0, 0.0, 0.13157894736842105, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io,QUALIFIED_NAME, line no: 47, 0.1111111111111111, 0.0, 0.0, 0.10526315789473684, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.util,QUALIFIED_NAME, line no: 48, 0.1111111111111111, 0.0, 0.0, 0.13157894736842105, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.parser,QUALIFIED_NAME, line no: 262, 0.1111111111111111, 1.0, 0.0, 0.23684210526315788, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode,QUALIFIED_NAME, line no: 296, 0.1111111111111111, 0.625, 0.0, 0.23684210526315788, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,StringDistance.class,TYPE_LITERAL, line no: 347, 0.1111111111111111, 0.5, 0.0, 0.18421052631578946, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.DEGREES_TO_RADIANS,QUALIFIED_NAME, line no: 365, 0.1111111111111111, 0.75, 0.0, 0.21951219512195122, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,HaversineConstFunction.RADIANS_TO_DEGREES,QUALIFIED_NAME, line no: 371, 0.1111111111111111, 0.75, 0.0, 0.21951219512195122, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv1,QUALIFIED_NAME, line no: 514, 0.1111111111111111, 1.0, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,mvr.mv2,QUALIFIED_NAME, line no: 514, 0.1111111111111111, 1.0, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.PI,QUALIFIED_NAME, line no: 533, 0.1111111111111111, 0.875, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,Math.E,QUALIFIED_NAME, line no: 539, 0.1111111111111111, 0.875, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.field,QUALIFIED_NAME, line no: 548, 0.1111111111111111, 1.0, 0.0, 0.10526315789473684, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.val,QUALIFIED_NAME, line no: 548, 0.1111111111111111, 1.0, 0.0, 0.07894736842105263, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedField,QUALIFIED_NAME, line no: 548, 0.1111111111111111, 1.0, 0.0, 0.13157894736842105, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,tinfo.indexedBytes,QUALIFIED_NAME, line no: 548, 0.1111111111111111, 1.0, 0.0, 0.13157894736842105, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.1111111111111111, 1.0, 0.0, 0.09701492537313433, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DateField.class,TYPE_LITERAL, line no: 850, 0.1111111111111111, 0.875, 0.0, 0.13157894736842105, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant,FIELD_ACCESS, line no: 945, 0.1111111111111111, 0.375, 0.0, 0.10526315789473684, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv,FIELD_ACCESS, line no: 946, 0.1111111111111111, 0.375, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv,FIELD_ACCESS, line no: 947, 0.1111111111111111, 0.375, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,LongConstValueSource.class,TYPE_LITERAL, line no: 992, 0.1111111111111111, 0.75, 0.0, 0.3684210526315789, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.constant,QUALIFIED_NAME, line no: 994, 0.1111111111111111, 0.75, 0.0, 0.15789473684210525, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name,FIELD_ACCESS, line no: 1032, 0.1111111111111111, 0.25, 0.0, 0.07894736842105263, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,DoubleParser.this,THIS_EXPRESSION, line no: 1059, 0.1111111111111111, 0.625, 0.0, 0.18421052631578946, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a,FIELD_ACCESS, line no: 1101, 0.1111111111111111, 0.375, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b,FIELD_ACCESS, line no: 1102, 0.1111111111111111, 0.375, 0.0, 0.05263157894736842, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.a,QUALIFIED_NAME, line no: 1144, 0.1111111111111111, 0.75, 0.0, 0.10526315789473684, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,other.b,QUALIFIED_NAME, line no: 1145, 0.1111111111111111, 0.75, 0.0, 0.10526315789473684, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,BoolConstValueSource.class,TYPE_LITERAL, line no: 1181, 0.1111111111111111, 0.75, 0.0, 0.3684210526315789, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source,FIELD_ACCESS, line no: 1222, 0.1111111111111111, 0.25, 0.0, 0.15789473684210525, 0.1111111111111111
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,TestValueSource.class,TYPE_LITERAL, line no: 1241, 0.1111111111111111, 0.75, 0.0, 0.3684210526315789, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.1111111111111111, 0.0, 0.0, 0.18181818181818182, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.1111111111111111, 0.0, 0.0, 0.21739130434782608, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.1111111111111111, 0.0, 0.0, 0.2, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.1111111111111111, 0.0, 0.0, 0.13793103448275862, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.1111111111111111, 0.0, 0.0, 0.16666666666666666, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.1111111111111111, 0.0, 0.0, 0.22727272727272727, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.1111111111111111, 0.0, 0.0, 0.18181818181818182, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.1111111111111111, 0.0, 0.0, 0.17391304347826086, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.1111111111111111, 0.0, 0.0, 0.13636363636363635, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.1111111111111111, 0.0, 0.0, 0.2, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("rad"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.DEGREES_TO_RADIANS;   } } ),METHOD_INVOCATION, line no: 362, 0.1111111111111111, 1.0, 0.0, 0.04371584699453552, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new DoubleParser("deg"){   @Override public double func(  int doc   FunctionValues vals){     return vals.doubleVal(doc) * HaversineConstFunction.RADIANS_TO_DEGREES;   } } ),METHOD_INVOCATION, line no: 368, 0.1111111111111111, 1.0, 0.0, 0.04371584699453552, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("pow"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.pow(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 476, 0.1111111111111111, 1.0, 0.0, 0.044444444444444446, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("hypot"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.hypot(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 482, 0.1111111111111111, 1.0, 0.0, 0.043478260869565216, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser(new Double2Parser("atan2"){   @Override public double func(  int doc   FunctionValues a   FunctionValues b){     return Math.atan2(a.doubleVal(doc) b.doubleVal(doc));   } } ),METHOD_INVOCATION, line no: 488, 0.1111111111111111, 1.0, 0.0, 0.043478260869565216, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.1111111111111111, 1.0, 0.25, 0.031026252983293555, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.1111111111111111, 1.0, 0.25, 0.032663316582914576, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleBoolFunction(vs){   @Override protected boolean func(  int doc   FunctionValues vals){     return !vals.boolVal(doc);   }   @Override protected String name(){     return "not";   } } ,CLASS_INSTANCE_CREATION, line no: 651, 0.1111111111111111, 1.0, 0.0, 0.06217616580310881, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.1111111111111111, 0.3333333333333333, 0.0, 0.1875, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.1111111111111111, 0.3333333333333333, 0.0, 0.1875, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.1111111111111111, 0.6666666666666666, 0.0, 0.16129032258064516, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.hasMoreArguments() ? fp.parseFloat() : null,CONDITIONAL_EXPRESSION, line no: 168, 0.1111111111111111, 0.8, 0.0, 0.043478260869565216, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,tinfo.indexedField=tinfo.field=fp.parseArg(),ASSIGNMENT, line no: 748, 0.1111111111111111, 0.9, 0.0, 0.045454545454545456, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldTypeNoEx(tinfo.field),METHOD_INVOCATION, line no: 752, 0.1111111111111111, 0.9, 0.0, 0.03773584905660377, 0.1111111111111111
fp,SIMPLE_NAME, line no: 107,fp.getReq().getSchema().getFieldOrNull(tinfo.field),METHOD_INVOCATION, line no: 758, 0.1111111111111111, 0.6, 0.0, 0.0392156862745098, 0.1111111111111111
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.10810810810810811, 1.0, 0.16666666666666666, 0.03, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.10810810810810811, 1.0, 0.25, 0.03132530120481928, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.10810810810810811, 1.0, 0.16666666666666666, 0.0391566265060241, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.10810810810810811, 1.0, 0.25, 0.03132530120481928, 0.10810810810810811
fp.getString(),METHOD_INVOCATION, line no: 107,new SimpleFloatFunction(source){   @Override protected String name(){     return "abs";   }   @Override protected float func(  int doc   FunctionValues vals){     return Math.abs(vals.floatVal(doc));   } } ,CLASS_INSTANCE_CREATION, line no: 177, 0.10714285714285714, 1.0, 0.0, 0.05339805825242718, 0.10714285714285714
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc vals);   }   @Override public String toString(  int doc){     return name() + '(' + vals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1065, 0.10714285714285714, 1.0, 0.0, 0.06190476190476191, 0.10714285714285714
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.10638297872340426, 1.0, 0.2, 0.06772908366533864, 0.10638297872340426
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.10526315789473684, 1.0, 0.25, 0.03009259259259259, 0.10526315789473684
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.10526315789473684, 1.0, 0.16666666666666666, 0.026694045174537988, 0.10526315789473684
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.10416666666666667, 1.0, 0.2, 0.06746031746031746, 0.10416666666666667
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.10416666666666667, 1.0, 0.2, 0.06563706563706563, 0.10416666666666667
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(a b){   @Override protected String name(){     return "sub";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.floatVal(doc) - bVals.floatVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 213, 0.10344827586206896, 1.0, 0.0, 0.046218487394957986, 0.10344827586206896
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 920, 0.10344827586206896, 1.0, 0.0, 0.046413502109704644, 0.10344827586206896
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.10256410256410256, 1.0, 0.16666666666666666, 0.025793650793650792, 0.10256410256410256
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.10204081632653061, 1.0, 0.2, 0.06525911708253358, 0.10204081632653061
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr,QUALIFIED_NAME, line no: 17, 0.1, 0.0, 0.0, 0.18421052631578946, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene,QUALIFIED_NAME, line no: 19, 0.1, 0.0, 0.0, 0.21052631578947367, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,java.io.IOException,QUALIFIED_NAME, line no: 47, 0.1, 0.0, 0.0, 0.23684210526315788, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,SolrException.ErrorCode.BAD_REQUEST,QUALIFIED_NAME, line no: 296, 0.1, 0.625, 0.0, 0.23684210526315788, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant=constant,ASSIGNMENT, line no: 945, 0.1, 0.375, 0.0, 0.15789473684210525, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.name=name,ASSIGNMENT, line no: 1032, 0.1, 0.25, 0.0, 0.10526315789473684, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.a=a,ASSIGNMENT, line no: 1101, 0.1, 0.375, 0.0, 0.07894736842105263, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.b=b,ASSIGNMENT, line no: 1102, 0.1, 0.375, 0.0, 0.05263157894736842, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.source=source,ASSIGNMENT, line no: 1222, 0.1, 0.25, 0.0, 0.21052631578947367, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.1, 0.0, 0.0, 0.13953488372093023, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.1, 0.0, 0.0, 0.17857142857142858, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.1, 0.0, 0.0, 0.17647058823529413, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.1, 0.0, 0.0, 0.13513513513513514, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.1, 0.0, 0.0, 0.13333333333333333, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.1, 0.0, 0.0, 0.13157894736842105, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.1, 0.0, 0.0, 0.17647058823529413, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.1, 0.0, 0.0, 0.11764705882352941, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.1, 0.0, 0.0, 0.13333333333333333, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.1, 0.0, 0.0, 0.16129032258064516, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.1, 0.0, 0.0, 0.17647058823529413, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.1, 0.0, 0.0, 0.16666666666666666, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.1, 0.0, 0.0, 0.14814814814814814, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.1, 0.0, 0.0, 0.1794871794871795, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.1, 0.0, 0.0, 0.1935483870967742, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.1, 0.0, 0.0, 0.18518518518518517, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(new LongConstValueSource(ms1) v2){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return ms1 - bVals.longVal(doc);   } } ,CLASS_INSTANCE_CREATION, line no: 892, 0.1, 1.0, 0.0, 0.04417670682730924, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new DualFloatFunction(v1 new LongConstValueSource(ms2)){   @Override protected String name(){     return "ms";   }   @Override protected float func(  int doc   FunctionValues aVals   FunctionValues bVals){     return aVals.longVal(doc) - ms2;   } } ,CLASS_INSTANCE_CREATION, line no: 906, 0.1, 1.0, 0.0, 0.04417670682730924, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new DoubleDocValues(this){   @Override public double doubleVal(  int doc){     return func(doc aVals bVals);   }   @Override public String toString(  int doc){     return name() + '(' + aVals.toString(doc)+ ' '+ bVals.toString(doc)+ ')';   } } ,CLASS_INSTANCE_CREATION, line no: 1114, 0.1, 1.0, 0.0, 0.05327868852459016, 0.1
fp.getString(),METHOD_INVOCATION, line no: 107,new BoolDocValues(this){   @Override public boolean boolVal(  int doc){     return constant;   } } ,CLASS_INSTANCE_CREATION, line no: 1166, 0.1, 0.7777777777777778, 0.0, 0.0707070707070707, 0.1
fp,SIMPLE_NAME, line no: 107,df.parseMathLenient(null arg fp.req),METHOD_INVOCATION, line no: 842, 0.1, 0.8, 0.0, 0.05555555555555555, 0.1
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.09803921568627451, 1.0, 0.125, 0.045, 0.09803921568627451
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.0975609756097561, 1.0, 0.0, 0.07267441860465117, 0.0975609756097561
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.0967741935483871, 1.0, 0.0, 0.08753315649867374, 0.0967741935483871
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.09615384615384616, 1.0, 0.14285714285714285, 0.057432432432432436, 0.09615384615384616
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.09433962264150944, 1.0, 0.125, 0.04506699147381242, 0.09433962264150944
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.09433962264150944, 1.0, 0.14285714285714285, 0.05582922824302135, 0.09433962264150944
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search,QUALIFIED_NAME, line no: 17, 0.09090909090909091, 0.0, 0.0, 0.23684210526315788, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index,QUALIFIED_NAME, line no: 19, 0.09090909090909091, 0.0, 0.0, 0.2631578947368421, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries,QUALIFIED_NAME, line no: 21, 0.09090909090909091, 0.0, 0.0, 0.2894736842105263, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser,QUALIFIED_NAME, line no: 28, 0.09090909090909091, 0.0, 0.0, 0.2894736842105263, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search,QUALIFIED_NAME, line no: 29, 0.09090909090909091, 0.0, 0.0, 0.2631578947368421, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util,QUALIFIED_NAME, line no: 37, 0.09090909090909091, 0.0, 0.0, 0.2631578947368421, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common,QUALIFIED_NAME, line no: 39, 0.09090909090909091, 0.0, 0.0, 0.21052631578947367, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request,QUALIFIED_NAME, line no: 41, 0.09090909090909091, 0.0, 0.0, 0.23684210526315788, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.schema,QUALIFIED_NAME, line no: 42, 0.09090909090909091, 0.0, 0.0, 0.21052631578947367, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util,QUALIFIED_NAME, line no: 45, 0.09090909090909091, 0.0, 0.0, 0.23684210526315788, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.dv=constant,ASSIGNMENT, line no: 946, 0.09090909090909091, 0.375, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.fv=constant,ASSIGNMENT, line no: 947, 0.09090909090909091, 0.375, 0.0, 0.10526315789473684, 0.09090909090909091
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,this.constant == other.constant,INFIX_EXPRESSION, line no: 994, 0.09090909090909091, 0.75, 0.0, 0.21052631578947367, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.09090909090909091, 0.0, 0.0, 0.1276595744680851, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.09090909090909091, 0.0, 0.0, 0.14285714285714285, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.09090909090909091, 0.0, 0.0, 0.13043478260869565, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.09090909090909091, 0.0, 0.0, 0.13636363636363635, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.09090909090909091, 0.0, 0.0, 0.13043478260869565, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.09090909090909091, 0.0, 0.0, 0.11538461538461539, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.09090909090909091, 0.0, 0.0, 0.12, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.09090909090909091, 0.0, 0.0, 0.12244897959183673, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.09090909090909091, 0.0, 0.0, 0.13636363636363635, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.09090909090909091, 0.0, 0.0, 0.2, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.09090909090909091, 0.0, 0.0, 0.10810810810810811, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.09090909090909091, 0.0, 0.0, 0.15, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.09090909090909091, 0.0, 0.0, 0.14814814814814814, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,d1 == null ? getValueSource(fp first) : null,CONDITIONAL_EXPRESSION, line no: 863, 0.09090909090909091, 1.0, 0.0, 0.045454545454545456, 0.09090909090909091
fp,SIMPLE_NAME, line no: 107,d2 == null ? getValueSource(fp second) : null,CONDITIONAL_EXPRESSION, line no: 866, 0.09090909090909091, 1.0, 0.0, 0.044444444444444446, 0.09090909090909091
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "or";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (dv.boolVal(doc))     return true;     return false;   } } ,CLASS_INSTANCE_CREATION, line no: 688, 0.08823529411764706, 1.0, 0.0, 0.041353383458646614, 0.08823529411764706
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.08771929824561403, 1.0, 0.08333333333333333, 0.03197158081705151, 0.08771929824561403
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.08695652173913043, 1.0, 0.2, 0.025896414342629483, 0.08695652173913043
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "and";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     for (    FunctionValues dv : vals)     if (!dv.boolVal(doc))     return false;     return true;   } } ,CLASS_INSTANCE_CREATION, line no: 669, 0.08571428571428572, 1.0, 0.0, 0.041044776119402986, 0.08571428571428572
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.0851063829787234, 1.0, 0.2, 0.025793650793650792, 0.0851063829787234
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.0851063829787234, 1.0, 0.2, 0.025096525096525095, 0.0851063829787234
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.0847457627118644, 1.0, 0.08333333333333333, 0.03146853146853147, 0.0847457627118644
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.AtomicReaderContext,QUALIFIED_NAME, line no: 19, 0.08333333333333333, 0.0, 0.0, 0.27906976744186046, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.index.Term,QUALIFIED_NAME, line no: 20, 0.08333333333333333, 0.0, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function,QUALIFIED_NAME, line no: 21, 0.08333333333333333, 0.0, 0.0, 0.34210526315789475, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic,QUALIFIED_NAME, line no: 28, 0.08333333333333333, 0.0, 0.0, 0.3157894736842105, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.Query,QUALIFIED_NAME, line no: 29, 0.08333333333333333, 0.0, 0.0, 0.2894736842105263, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.IndexSearcher,QUALIFIED_NAME, line no: 30, 0.08333333333333333, 0.0, 0.0, 0.3157894736842105, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.SortField,QUALIFIED_NAME, line no: 31, 0.08333333333333333, 0.0, 0.0, 0.3157894736842105, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.TermQuery,QUALIFIED_NAME, line no: 32, 0.08333333333333333, 0.0, 0.0, 0.2894736842105263, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell,QUALIFIED_NAME, line no: 33, 0.08333333333333333, 0.0, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 37, 0.08333333333333333, 0.0, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.util.UnicodeUtil,QUALIFIED_NAME, line no: 38, 0.08333333333333333, 0.0, 0.0, 0.2894736842105263, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.SolrException,QUALIFIED_NAME, line no: 39, 0.08333333333333333, 0.0, 0.0, 0.34210526315789475, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util,QUALIFIED_NAME, line no: 40, 0.08333333333333333, 0.0, 0.0, 0.2631578947368421, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.request.SolrRequestInfo,QUALIFIED_NAME, line no: 41, 0.08333333333333333, 0.0, 0.0, 0.3333333333333333, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function,QUALIFIED_NAME, line no: 44, 0.08333333333333333, 0.0, 0.0, 0.2894736842105263, 0.08333333333333333
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin,QUALIFIED_NAME, line no: 45, 0.08333333333333333, 0.0, 0.0, 0.2631578947368421, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.08333333333333333, 0.0, 0.0, 0.10344827586206896, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.08333333333333333, 0.0, 0.0, 0.1, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.08333333333333333, 0.0, 0.0, 0.1206896551724138, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.08333333333333333, 1.0, 0.2, 0.02495201535508637, 0.08333333333333333
fp,SIMPLE_NAME, line no: 107,fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),METHOD_INVOCATION, line no: 347, 0.08333333333333333, 0.6, 0.0, 0.025, 0.08333333333333333
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.08, 1.0, 0.125, 0.0175, 0.08
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.0784313725490196, 1.0, 0.14285714285714285, 0.02195945945945946, 0.0784313725490196
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.BoostedQuery,QUALIFIED_NAME, line no: 21, 0.07692307692307693, 0.0, 0.0, 0.2765957446808511, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.FunctionValues,QUALIFIED_NAME, line no: 22, 0.07692307692307693, 0.0, 0.0, 0.2857142857142857, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.ValueSource,QUALIFIED_NAME, line no: 23, 0.07692307692307693, 0.0, 0.0, 0.32608695652173914, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues,QUALIFIED_NAME, line no: 24, 0.07692307692307693, 0.0, 0.0, 0.29545454545454547, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.valuesource,QUALIFIED_NAME, line no: 27, 0.07692307692307693, 0.0, 0.0, 0.2826086956521739, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queryparser.classic.ParseException,QUALIFIED_NAME, line no: 28, 0.07692307692307693, 0.0, 0.0, 0.2692307692307692, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.JaroWinklerDistance,QUALIFIED_NAME, line no: 33, 0.07692307692307693, 0.0, 0.0, 0.28, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.LevensteinDistance,QUALIFIED_NAME, line no: 34, 0.07692307692307693, 0.0, 0.0, 0.2857142857142857, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.NGramDistance,QUALIFIED_NAME, line no: 35, 0.07692307692307693, 0.0, 0.0, 0.29545454545454547, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.search.spell.StringDistance,QUALIFIED_NAME, line no: 36, 0.07692307692307693, 0.0, 0.0, 0.35555555555555557, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.common.util.NamedList,QUALIFIED_NAME, line no: 40, 0.07692307692307693, 0.0, 0.0, 0.2631578947368421, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.search.function.distance,QUALIFIED_NAME, line no: 44, 0.07692307692307693, 0.0, 0.0, 0.275, 0.07692307692307693
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.solr.util.plugin.NamedListInitializedPlugin,QUALIFIED_NAME, line no: 45, 0.07692307692307693, 0.0, 0.0, 0.24074074074074073, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.07692307692307693, 1.0, 0.125, 0.01705237515225335, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.07692307692307693, 1.0, 0.14285714285714285, 0.021346469622331693, 0.07692307692307693
fp,SIMPLE_NAME, line no: 107,ft.getFieldQuery(fp fp.getReq().getSchema().getFieldOrNull(tinfo.field) tinfo.val),METHOD_INVOCATION, line no: 758, 0.07692307692307693, 0.6, 0.0, 0.024390243902439025, 0.07692307692307693
fp.getString(),METHOD_INVOCATION, line no: 107,new MultiBoolFunction(sources){   @Override protected String name(){     return "xor";   }   @Override protected boolean func(  int doc   FunctionValues[] vals){     int nTrue=0  nFalse=0;     for (    FunctionValues dv : vals) {       if (dv.boolVal(doc))       nTrue++;  else       nFalse++;     }     return nTrue != 0 && nFalse != 0;   } } ,CLASS_INSTANCE_CREATION, line no: 707, 0.075, 1.0, 0.0, 0.03197674418604651, 0.075
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.BoolDocValues,QUALIFIED_NAME, line no: 24, 0.07142857142857142, 0.0, 0.0, 0.22413793103448276, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.DoubleDocValues,QUALIFIED_NAME, line no: 25, 0.07142857142857142, 0.0, 0.0, 0.21666666666666667, 0.07142857142857142
new LiteralValueSource(fp.getString()),CLASS_INSTANCE_CREATION, line no: 107,org.apache.lucene.queries.function.docvalues.LongDocValues,QUALIFIED_NAME, line no: 26, 0.07142857142857142, 0.0, 0.0, 0.2413793103448276, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.07142857142857142, 1.0, 0.08333333333333333, 0.011545293072824156, 0.07142857142857142
fp,SIMPLE_NAME, line no: 107,dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class),ASSIGNMENT, line no: 347, 0.07142857142857142, 0.6, 0.0, 0.023529411764705882, 0.07142857142857142
fp.getString(),METHOD_INVOCATION, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.06896551724137931, 1.0, 0.08333333333333333, 0.011363636363636364, 0.06896551724137931
fp.getString(),METHOD_INVOCATION, line no: 107,new LongDocValues(this){   @Override public float floatVal(  int doc){     return fv;   }   @Override public int intVal(  int doc){     return (int)constant;   }   @Override public long longVal(  int doc){     return constant;   }   @Override public double doubleVal(  int doc){     return dv;   }   @Override public String toString(  int doc){     return description();   } } ,CLASS_INSTANCE_CREATION, line no: 957, 0.06666666666666667, 0.8888888888888888, 0.0, 0.034482758620689655, 0.06666666666666667
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 602, 0.05555555555555555, 1.0, 0.0, 0.013333333333333334, 0.05555555555555555
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ,CLASS_INSTANCE_CREATION, line no: 609, 0.05555555555555555, 1.0, 0.0, 0.013245033112582781, 0.05555555555555555
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ,CLASS_INSTANCE_CREATION, line no: 616, 0.05263157894736842, 1.0, 0.0, 0.012738853503184714, 0.05263157894736842
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ,CLASS_INSTANCE_CREATION, line no: 623, 0.05263157894736842, 1.0, 0.0, 0.012658227848101266, 0.05263157894736842
LiteralValueSource,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.05, 0.9, 0.0, 0.10909090909090909, 0.05
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.05, 1.0, 0.0, 0.012121212121212121, 0.05
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 226, 0.05, 1.0, 0.0, 0.011428571428571429, 0.05
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ,CLASS_INSTANCE_CREATION, line no: 736, 0.05, 1.0, 0.0, 0.011834319526627219, 0.05
getString,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ,CLASS_INSTANCE_CREATION, line no: 104, 0.05, 1.0, 0.0, 0.05454545454545454, 0.05
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ,CLASS_INSTANCE_CREATION, line no: 117, 0.047619047619047616, 1.0, 0.0, 0.0111731843575419, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ,CLASS_INSTANCE_CREATION, line no: 530, 0.047619047619047616, 1.0, 0.0, 0.012345679012345678, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ,CLASS_INSTANCE_CREATION, line no: 536, 0.047619047619047616, 1.0, 0.0, 0.012422360248447204, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,addParser("maxdoc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new MaxDocValueSource();   } } ),METHOD_INVOCATION, line no: 602, 0.047619047619047616, 1.0, 0.0, 0.011764705882352941, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,addParser("numdocs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new NumDocsValueSource();   } } ),METHOD_INVOCATION, line no: 609, 0.047619047619047616, 1.0, 0.0, 0.011627906976744186, 0.047619047619047616
fp,SIMPLE_NAME, line no: 107,addParser("true" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(true);   } } ),METHOD_INVOCATION, line no: 616, 0.045454545454545456, 1.0, 0.0, 0.011428571428571429, 0.045454545454545456
fp,SIMPLE_NAME, line no: 107,addParser("false" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new BoolConstValueSource(false);   } } ),METHOD_INVOCATION, line no: 623, 0.045454545454545456, 1.0, 0.0, 0.011299435028248588, 0.045454545454545456
LiteralValueSource,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.043478260869565216, 0.9, 0.0, 0.0967741935483871, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ,CLASS_INSTANCE_CREATION, line no: 90, 0.043478260869565216, 1.0, 0.0, 0.009708737864077669, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 97, 0.043478260869565216, 1.0, 0.0, 0.01092896174863388, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.043478260869565216, 1.0, 0.0, 0.010752688172043012, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 110, 0.043478260869565216, 1.0, 0.0, 0.010526315789473684, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,addParser("vector" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new VectorValueSource(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 226, 0.043478260869565216, 1.0, 0.0, 0.010256410256410256, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 561, 0.043478260869565216, 1.0, 0.0, 0.01015228426395939, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ,CLASS_INSTANCE_CREATION, line no: 594, 0.043478260869565216, 1.0, 0.0, 0.010810810810810811, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,addParser("def" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DefFunction(fp.parseValueSourceList());   } } ),METHOD_INVOCATION, line no: 736, 0.043478260869565216, 1.0, 0.0, 0.010752688172043012, 0.043478260869565216
getString,SIMPLE_NAME, line no: 107,addParser("literal" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new LiteralValueSource(fp.getString());   } } ),METHOD_INVOCATION, line no: 104, 0.043478260869565216, 1.0, 0.0, 0.04838709677419355, 0.043478260869565216
fp,SIMPLE_NAME, line no: 107,addParser("top" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return source;   } } ),METHOD_INVOCATION, line no: 117, 0.041666666666666664, 1.0, 0.0, 0.01020408163265306, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ,CLASS_INSTANCE_CREATION, line no: 153, 0.041666666666666664, 1.0, 0.0, 0.008547008547008548, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ,CLASS_INSTANCE_CREATION, line no: 317, 0.041666666666666664, 1.0, 0.0, 0.008298755186721992, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,addParser("pi" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.PI);   } } ),METHOD_INVOCATION, line no: 530, 0.041666666666666664, 1.0, 0.0, 0.011235955056179775, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,addParser("e" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     return new DoubleConstValueSource(Math.E);   } } ),METHOD_INVOCATION, line no: 536, 0.041666666666666664, 1.0, 0.0, 0.011363636363636364, 0.041666666666666664
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ,CLASS_INSTANCE_CREATION, line no: 253, 0.04, 1.0, 0.0, 0.009174311926605505, 0.04
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ,CLASS_INSTANCE_CREATION, line no: 725, 0.04, 1.0, 0.0, 0.0056657223796034, 0.04
fp,SIMPLE_NAME, line no: 107,addParser("testfunc" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     final ValueSource source=fp.parseValueSource();     return new TestValueSource(source);   } } ),METHOD_INVOCATION, line no: 90, 0.038461538461538464, 1.0, 0.0, 0.008771929824561403, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("ord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new OrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 97, 0.038461538461538464, 1.0, 0.0, 0.01, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("rord" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseId();     return new ReverseOrdFieldSource(field);   } } ),METHOD_INVOCATION, line no: 110, 0.038461538461538464, 1.0, 0.0, 0.009615384615384616, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("div" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DivFloatFunction(a b);   } } ),METHOD_INVOCATION, line no: 153, 0.038461538461538464, 1.0, 0.0, 0.00796812749003984, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("geohash" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource lat=fp.parseValueSource();     ValueSource lon=fp.parseValueSource();     return new GeohashFunction(lat lon);   } } ),METHOD_INVOCATION, line no: 317, 0.038461538461538464, 1.0, 0.0, 0.007633587786259542, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("sumtotaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new SumTotalTermFreqValueSource(field);   } } ),METHOD_INVOCATION, line no: 561, 0.038461538461538464, 1.0, 0.0, 0.00881057268722467, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,addParser("norm" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String field=fp.parseArg();     return new NormValueSource(field);   } } ),METHOD_INVOCATION, line no: 594, 0.038461538461538464, 1.0, 0.0, 0.009852216748768473, 0.038461538461538464
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ,CLASS_INSTANCE_CREATION, line no: 125, 0.037037037037037035, 1.0, 0.0, 0.006896551724137931, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ,CLASS_INSTANCE_CREATION, line no: 144, 0.037037037037037035, 1.0, 0.0, 0.007326007326007326, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,addParser("joindf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String f0=fp.parseArg();     String qf=fp.parseArg();     return new JoinDocFreqValueSource(f0 qf);   } } ),METHOD_INVOCATION, line no: 253, 0.037037037037037035, 1.0, 0.0, 0.008403361344537815, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ,CLASS_INSTANCE_CREATION, line no: 305, 0.037037037037037035, 1.0, 0.0, 0.006825938566552901, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,addParser("if" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource ifValueSource=fp.parseValueSource();     ValueSource trueValueSource=fp.parseValueSource();     ValueSource falseValueSource=fp.parseValueSource();     return new IfFunction(ifValueSource trueValueSource falseValueSource);   } } ),METHOD_INVOCATION, line no: 725, 0.037037037037037035, 1.0, 0.0, 0.005420054200542005, 0.037037037037037035
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ,CLASS_INSTANCE_CREATION, line no: 134, 0.03571428571428571, 1.0, 0.0, 0.006644518272425249, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 544, 0.03571428571428571, 1.0, 0.0, 0.008298755186721992, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 552, 0.03571428571428571, 1.0, 0.0, 0.008097165991902834, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 570, 0.03571428571428571, 1.0, 0.0, 0.008438818565400843, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 578, 0.03571428571428571, 1.0, 0.0, 0.008264462809917356, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ,CLASS_INSTANCE_CREATION, line no: 586, 0.03571428571428571, 1.0, 0.0, 0.00847457627118644, 0.03571428571428571
fp,SIMPLE_NAME, line no: 107,addParser("linear" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float slope=fp.parseFloat();     float intercept=fp.parseFloat();     return new LinearFloatFunction(source slope intercept);   } } ),METHOD_INVOCATION, line no: 125, 0.034482758620689655, 1.0, 0.0, 0.0064516129032258064, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,addParser("scale" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     return new ScaleFloatFunction(source min max);   } } ),METHOD_INVOCATION, line no: 144, 0.034482758620689655, 1.0, 0.0, 0.00684931506849315, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 190, 0.034482758620689655, 1.0, 0.0, 0.007874015748031496, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 199, 0.034482758620689655, 1.0, 0.0, 0.007751937984496124, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ,CLASS_INSTANCE_CREATION, line no: 244, 0.034482758620689655, 1.0, 0.0, 0.007220216606498195, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,addParser("ghhsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     ValueSource gh1=fp.parseValueSource();     ValueSource gh2=fp.parseValueSource();     return new GeohashHaversineFunction(gh1 gh2 radius);   } } ),METHOD_INVOCATION, line no: 305, 0.034482758620689655, 1.0, 0.0, 0.006389776357827476, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 494, 0.034482758620689655, 1.0, 0.0, 0.007874015748031496, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ,CLASS_INSTANCE_CREATION, line no: 501, 0.034482758620689655, 1.0, 0.0, 0.007874015748031496, 0.034482758620689655
fp,SIMPLE_NAME, line no: 107,addParser("recip" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float m=fp.parseFloat();     float a=fp.parseFloat();     float b=fp.parseFloat();     return new ReciprocalFloatFunction(source m a b);   } } ),METHOD_INVOCATION, line no: 134, 0.03333333333333333, 1.0, 0.0, 0.00625, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ,CLASS_INSTANCE_CREATION, line no: 232, 0.03333333333333333, 1.0, 0.0, 0.007042253521126761, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ,CLASS_INSTANCE_CREATION, line no: 352, 0.03333333333333333, 1.0, 0.0, 0.007751937984496124, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("docfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new DocFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 544, 0.03333333333333333, 1.0, 0.0, 0.007633587786259542, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("totaltermfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TotalTermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 552, 0.03333333333333333, 1.0, 0.0, 0.0072992700729927005, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("idf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new IDFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 570, 0.03333333333333333, 1.0, 0.0, 0.007874015748031496, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("termfreq" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TermFreqValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 578, 0.03333333333333333, 1.0, 0.0, 0.007575757575757576, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("tf" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     TInfo tinfo=parseTerm(fp);     return new TFValueSource(tinfo.field tinfo.val tinfo.indexedField tinfo.indexedBytes);   } } ),METHOD_INVOCATION, line no: 586, 0.03333333333333333, 1.0, 0.0, 0.007936507936507936, 0.03333333333333333
fp,SIMPLE_NAME, line no: 107,addParser("boost" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     ValueSource vs=fp.parseValueSource();     BoostedQuery bq=new BoostedQuery(q vs);     return new QueryValueSource(bq 0.0f);   } } ),METHOD_INVOCATION, line no: 244, 0.03225806451612903, 1.0, 0.0, 0.006756756756756757, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 508, 0.03225806451612903, 1.0, 0.0, 0.007220216606498195, 0.03225806451612903
fp,SIMPLE_NAME, line no: 107,addParser("sum" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new SumFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 190, 0.03125, 1.0, 0.0, 0.007380073800738007, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("product" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new ProductFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 199, 0.03125, 1.0, 0.0, 0.007168458781362007, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("query" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     Query q=fp.parseNestedQuery();     float defVal=0.0f;     if (fp.hasMoreArguments()) {       defVal=fp.parseFloat();     }     return new QueryValueSource(q defVal);   } } ),METHOD_INVOCATION, line no: 232, 0.03125, 1.0, 0.0, 0.006600660066006601, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("field" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     String fieldName=fp.parseArg();     SchemaField f=fp.getReq().getSchema().getField(fieldName);     return f.getType().getValueSource(f fp);   } } ),METHOD_INVOCATION, line no: 352, 0.03125, 1.0, 0.0, 0.007220216606498195, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("max" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MaxFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 494, 0.03125, 1.0, 0.0, 0.007380073800738007, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("min" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MinFloatFunction(sources.toArray(new ValueSource[sources.size()]));   } } ),METHOD_INVOCATION, line no: 501, 0.03125, 1.0, 0.0, 0.007380073800738007, 0.03125
fp,SIMPLE_NAME, line no: 107,addParser("sqedist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new SquaredEuclideanFunction(mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 508, 0.030303030303030304, 1.0, 0.0, 0.006711409395973154, 0.030303030303030304
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ,CLASS_INSTANCE_CREATION, line no: 161, 0.029411764705882353, 1.0, 0.0, 0.005221932114882507, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ,CLASS_INSTANCE_CREATION, line no: 518, 0.029411764705882353, 1.0, 0.0, 0.006369426751592357, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 630, 0.029411764705882353, 1.0, 0.0, 0.005012531328320802, 0.029411764705882353
fp,SIMPLE_NAME, line no: 107,addParser("exists" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected String name(){         return "exists";       }       @Override protected boolean func(      int doc       FunctionValues vals){         return vals.exists(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 630, 0.02857142857142857, 1.0, 0.0, 0.00477326968973747, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 647, 0.02857142857142857, 1.0, 0.0, 0.005025125628140704, 0.02857142857142857
fp,SIMPLE_NAME, line no: 107,addParser("map" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     float min=fp.parseFloat();     float max=fp.parseFloat();     float target=fp.parseFloat();     Float def=fp.hasMoreArguments() ? fp.parseFloat() : null;     return new RangeMapFloatFunction(source min max target def);   } } ),METHOD_INVOCATION, line no: 161, 0.027777777777777776, 1.0, 0.0, 0.005, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 173, 0.027777777777777776, 1.0, 0.0, 0.004819277108433735, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,addParser("dist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     float power=fp.parseFloat();     List<ValueSource> sources=fp.parseValueSourceList();     MVResult mvr=getMultiValueSources(sources);     return new VectorDistanceFunction(power mvr.mv1 mvr.mv2);   } } ),METHOD_INVOCATION, line no: 518, 0.027777777777777776, 1.0, 0.0, 0.006024096385542169, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,addParser("not" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource vs=fp.parseValueSource();     return new SimpleBoolFunction(vs){       @Override protected boolean func(      int doc       FunctionValues vals){         return !vals.boolVal(doc);       }       @Override protected String name(){         return "not";       }     } ;   } } ),METHOD_INVOCATION, line no: 647, 0.027777777777777776, 1.0, 0.0, 0.004819277108433735, 0.027777777777777776
fp,SIMPLE_NAME, line no: 107,addParser("abs" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource source=fp.parseValueSource();     return new SimpleFloatFunction(source){       @Override protected String name(){         return "abs";       }       @Override protected float func(      int doc       FunctionValues vals){         return Math.abs(vals.floatVal(doc));       }     } ;   } } ),METHOD_INVOCATION, line no: 173, 0.02702702702702703, 1.0, 0.0, 0.004629629629629629, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 208, 0.02702702702702703, 1.0, 0.0, 0.004106776180698152, 0.02702702702702703
fp,SIMPLE_NAME, line no: 107,addParser("sub" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource a=fp.parseValueSource();     ValueSource b=fp.parseValueSource();     return new DualFloatFunction(a b){       @Override protected String name(){         return "sub";       }       @Override protected float func(      int doc       FunctionValues aVals       FunctionValues bVals){         return aVals.floatVal(doc) - bVals.floatVal(doc);       }     } ;   } } ),METHOD_INVOCATION, line no: 208, 0.02631578947368421, 1.0, 0.0, 0.003968253968253968, 0.02631578947368421
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 684, 0.022222222222222223, 1.0, 0.0, 0.00398406374501992, 0.022222222222222223
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 665, 0.021739130434782608, 1.0, 0.0, 0.003968253968253968, 0.021739130434782608
fp,SIMPLE_NAME, line no: 107,addParser("or" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "or";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (dv.boolVal(doc))         return true;         return false;       }     } ;   } } ),METHOD_INVOCATION, line no: 684, 0.021739130434782608, 1.0, 0.0, 0.003861003861003861, 0.021739130434782608
fp,SIMPLE_NAME, line no: 107,addParser("and" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "and";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         for (        FunctionValues dv : vals)         if (!dv.boolVal(doc))         return false;         return true;       }     } ;   } } ),METHOD_INVOCATION, line no: 665, 0.02127659574468085, 1.0, 0.0, 0.003838771593090211, 0.02127659574468085
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ,CLASS_INSTANCE_CREATION, line no: 327, 0.02040816326530612, 1.0, 0.0, 0.0025, 0.02040816326530612
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ,CLASS_INSTANCE_CREATION, line no: 703, 0.02, 1.0, 0.0, 0.0033783783783783786, 0.02
fp,SIMPLE_NAME, line no: 107,addParser("strdist" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     ValueSource str1=fp.parseValueSource();     ValueSource str2=fp.parseValueSource();     String distClass=fp.parseArg();     StringDistance dist=null;     if (distClass.equalsIgnoreCase("jw")) {       dist=new JaroWinklerDistance();     }  else     if (distClass.equalsIgnoreCase("edit")) {       dist=new LevensteinDistance();     }  else     if (distClass.equalsIgnoreCase("ngram")) {       int ngram=2;       if (fp.hasMoreArguments()) {         ngram=fp.parseInt();       }       dist=new NGramDistance(ngram);     }  else {       dist=fp.req.getCore().getResourceLoader().newInstance(distClass StringDistance.class);     }     return new StringDistanceFunction(str1 str2 dist);   } } ),METHOD_INVOCATION, line no: 327, 0.0196078431372549, 1.0, 0.0, 0.00243605359317905, 0.0196078431372549
fp,SIMPLE_NAME, line no: 107,addParser("xor" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     List<ValueSource> sources=fp.parseValueSourceList();     return new MultiBoolFunction(sources){       @Override protected String name(){         return "xor";       }       @Override protected boolean func(      int doc       FunctionValues[] vals){         int nTrue=0  nFalse=0;         for (        FunctionValues dv : vals) {           if (dv.boolVal(doc))           nTrue++;  else           nFalse++;         }         return nTrue != 0 && nFalse != 0;       }     } ;   } } ),METHOD_INVOCATION, line no: 703, 0.0196078431372549, 1.0, 0.0, 0.003284072249589491, 0.0196078431372549
fp,SIMPLE_NAME, line no: 107,new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ,CLASS_INSTANCE_CREATION, line no: 264, 0.01818181818181818, 1.0, 0.0, 0.0017761989342806395, 0.01818181818181818
fp,SIMPLE_NAME, line no: 107,addParser("hsin" new ValueSourceParser(){   @Override public ValueSource parse(  FunctionQParser fp) throws ParseException {     double radius=fp.parseDouble();     boolean convert=Boolean.parseBoolean(fp.parseArg());     MultiValueSource pv1;     MultiValueSource pv2;     ValueSource one=fp.parseValueSource();     ValueSource two=fp.parseValueSource();     if (fp.hasMoreArguments()) {       List<ValueSource> s1=new ArrayList<ValueSource>();       s1.add(one);       s1.add(two);       pv1=new VectorValueSource(s1);       ValueSource x2=fp.parseValueSource();       ValueSource y2=fp.parseValueSource();       List<ValueSource> s2=new ArrayList<ValueSource>();       s2.add(x2);       s2.add(y2);       pv2=new VectorValueSource(s2);     }  else {       if (one instanceof MultiValueSource && two instanceof MultiValueSource) {         pv1=(MultiValueSource)one;         pv2=(MultiValueSource)two;       }  else {         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST "Input must either be 2 MultiValueSources  or there must be 4 ValueSources");       }     }     return new HaversineFunction(pv1 pv2 radius convert);   } } ),METHOD_INVOCATION, line no: 264, 0.017543859649122806, 1.0, 0.0, 0.0017482517482517483, 0.017543859649122806
