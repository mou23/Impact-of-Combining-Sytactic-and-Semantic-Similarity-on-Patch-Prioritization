FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,org,SIMPLE_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,apache,SIMPLE_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,lucene,SIMPLE_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,index,SIMPLE_NAME, line no: 1
FieldsEnum,SIMPLE_NAME, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
FieldsEnum,SIMPLE_NAME, line no: 616,java.io,QUALIFIED_NAME, line no: 20
FieldsEnum,SIMPLE_NAME, line no: 616,java,SIMPLE_NAME, line no: 20
FieldsEnum,SIMPLE_NAME, line no: 616,io,SIMPLE_NAME, line no: 20
FieldsEnum,SIMPLE_NAME, line no: 616,File,SIMPLE_NAME, line no: 20
FieldsEnum,SIMPLE_NAME, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
FieldsEnum,SIMPLE_NAME, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
FieldsEnum,SIMPLE_NAME, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
FieldsEnum,SIMPLE_NAME, line no: 616,IOException,SIMPLE_NAME, line no: 22
FieldsEnum,SIMPLE_NAME, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
FieldsEnum,SIMPLE_NAME, line no: 616,java.util,QUALIFIED_NAME, line no: 23
FieldsEnum,SIMPLE_NAME, line no: 616,util,SIMPLE_NAME, line no: 23
FieldsEnum,SIMPLE_NAME, line no: 616,Collection,SIMPLE_NAME, line no: 23
FieldsEnum,SIMPLE_NAME, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
FieldsEnum,SIMPLE_NAME, line no: 616,HashSet,SIMPLE_NAME, line no: 24
FieldsEnum,SIMPLE_NAME, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
FieldsEnum,SIMPLE_NAME, line no: 616,Iterator,SIMPLE_NAME, line no: 25
FieldsEnum,SIMPLE_NAME, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
FieldsEnum,SIMPLE_NAME, line no: 616,List,SIMPLE_NAME, line no: 26
FieldsEnum,SIMPLE_NAME, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
FieldsEnum,SIMPLE_NAME, line no: 616,Random,SIMPLE_NAME, line no: 27
FieldsEnum,SIMPLE_NAME, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
FieldsEnum,SIMPLE_NAME, line no: 616,Set,SIMPLE_NAME, line no: 28
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
FieldsEnum,SIMPLE_NAME, line no: 616,analysis,SIMPLE_NAME, line no: 30
FieldsEnum,SIMPLE_NAME, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
FieldsEnum,SIMPLE_NAME, line no: 616,codecs,SIMPLE_NAME, line no: 31
FieldsEnum,SIMPLE_NAME, line no: 616,lucene40,SIMPLE_NAME, line no: 31
FieldsEnum,SIMPLE_NAME, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
FieldsEnum,SIMPLE_NAME, line no: 616,document,SIMPLE_NAME, line no: 32
FieldsEnum,SIMPLE_NAME, line no: 616,Document,SIMPLE_NAME, line no: 32
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
FieldsEnum,SIMPLE_NAME, line no: 616,Field,SIMPLE_NAME, line no: 33
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
FieldsEnum,SIMPLE_NAME, line no: 616,FieldType,SIMPLE_NAME, line no: 34
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
FieldsEnum,SIMPLE_NAME, line no: 616,StoredField,SIMPLE_NAME, line no: 35
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
FieldsEnum,SIMPLE_NAME, line no: 616,StringField,SIMPLE_NAME, line no: 36
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
FieldsEnum,SIMPLE_NAME, line no: 616,TextField,SIMPLE_NAME, line no: 37
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
FieldsEnum,SIMPLE_NAME, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
FieldsEnum,SIMPLE_NAME, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
FieldsEnum,SIMPLE_NAME, line no: 616,search,SIMPLE_NAME, line no: 39
FieldsEnum,SIMPLE_NAME, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
FieldsEnum,SIMPLE_NAME, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
FieldsEnum,SIMPLE_NAME, line no: 616,store,SIMPLE_NAME, line no: 41
FieldsEnum,SIMPLE_NAME, line no: 616,Directory,SIMPLE_NAME, line no: 41
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
FieldsEnum,SIMPLE_NAME, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
FieldsEnum,SIMPLE_NAME, line no: 616,Bits,SIMPLE_NAME, line no: 43
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
FieldsEnum,SIMPLE_NAME, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
FieldsEnum,SIMPLE_NAME, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
FieldsEnum,SIMPLE_NAME, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
FieldsEnum,SIMPLE_NAME, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
FieldsEnum,SIMPLE_NAME, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
FieldsEnum,SIMPLE_NAME, line no: 616,junit,SIMPLE_NAME, line no: 47
FieldsEnum,SIMPLE_NAME, line no: 616,Assume,SIMPLE_NAME, line no: 47
FieldsEnum,SIMPLE_NAME, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
FieldsEnum,SIMPLE_NAME, line no: 616,testDocument,SIMPLE_NAME, line no: 51
FieldsEnum,SIMPLE_NAME, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
FieldsEnum,SIMPLE_NAME, line no: 616,readers,SIMPLE_NAME, line no: 52
FieldsEnum,SIMPLE_NAME, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
FieldsEnum,SIMPLE_NAME, line no: 616,2,NUMBER_LITERAL, line no: 52
FieldsEnum,SIMPLE_NAME, line no: 616,dir,SIMPLE_NAME, line no: 53
FieldsEnum,SIMPLE_NAME, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
FieldsEnum,SIMPLE_NAME, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
FieldsEnum,SIMPLE_NAME, line no: 616,doc1,SIMPLE_NAME, line no: 54
FieldsEnum,SIMPLE_NAME, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
FieldsEnum,SIMPLE_NAME, line no: 616,doc2,SIMPLE_NAME, line no: 55
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
FieldsEnum,SIMPLE_NAME, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
FieldsEnum,SIMPLE_NAME, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
FieldsEnum,SIMPLE_NAME, line no: 616,random(),METHOD_INVOCATION, line no: 58
FieldsEnum,SIMPLE_NAME, line no: 616,random,SIMPLE_NAME, line no: 58
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
FieldsEnum,SIMPLE_NAME, line no: 616,reader,SIMPLE_NAME, line no: 60
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
FieldsEnum,SIMPLE_NAME, line no: 616,open,SIMPLE_NAME, line no: 60
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
FieldsEnum,SIMPLE_NAME, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
FieldsEnum,SIMPLE_NAME, line no: 616,null,NULL_LITERAL, line no: 61
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
FieldsEnum,SIMPLE_NAME, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
FieldsEnum,SIMPLE_NAME, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
FieldsEnum,SIMPLE_NAME, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
FieldsEnum,SIMPLE_NAME, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
FieldsEnum,SIMPLE_NAME, line no: 616,0,NUMBER_LITERAL, line no: 64
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
FieldsEnum,SIMPLE_NAME, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,numFields,SIMPLE_NAME, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,unstored,SIMPLE_NAME, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,size,SIMPLE_NAME, line no: 66
FieldsEnum,SIMPLE_NAME, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
FieldsEnum,SIMPLE_NAME, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
FieldsEnum,SIMPLE_NAME, line no: 616,1,NUMBER_LITERAL, line no: 67
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
FieldsEnum,SIMPLE_NAME, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
FieldsEnum,SIMPLE_NAME, line no: 616,Terms,SIMPLE_NAME, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,vector,SIMPLE_NAME, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,terms,SIMPLE_NAME, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
FieldsEnum,SIMPLE_NAME, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
FieldsEnum,SIMPLE_NAME, line no: 616,close,SIMPLE_NAME, line no: 73
FieldsEnum,SIMPLE_NAME, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
FieldsEnum,SIMPLE_NAME, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
FieldsEnum,SIMPLE_NAME, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
FieldsEnum,SIMPLE_NAME, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
FieldsEnum,SIMPLE_NAME, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
FieldsEnum,SIMPLE_NAME, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
FieldsEnum,SIMPLE_NAME, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
FieldsEnum,SIMPLE_NAME, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
FieldsEnum,SIMPLE_NAME, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
FieldsEnum,SIMPLE_NAME, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
FieldsEnum,SIMPLE_NAME, line no: 616,addDoc,SIMPLE_NAME, line no: 81
FieldsEnum,SIMPLE_NAME, line no: 616,"test foo",STRING_LITERAL, line no: 81
FieldsEnum,SIMPLE_NAME, line no: 616,true,BOOLEAN_LITERAL, line no: 81
FieldsEnum,SIMPLE_NAME, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
FieldsEnum,SIMPLE_NAME, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
FieldsEnum,SIMPLE_NAME, line no: 616,"test blah",STRING_LITERAL, line no: 83
FieldsEnum,SIMPLE_NAME, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
FieldsEnum,SIMPLE_NAME, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
FieldsEnum,SIMPLE_NAME, line no: 616,"test wow",STRING_LITERAL, line no: 85
FieldsEnum,SIMPLE_NAME, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
FieldsEnum,SIMPLE_NAME, line no: 616,readers1,SIMPLE_NAME, line no: 87
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
FieldsEnum,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
FieldsEnum,SIMPLE_NAME, line no: 616,readers2,SIMPLE_NAME, line no: 88
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
FieldsEnum,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
FieldsEnum,SIMPLE_NAME, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
FieldsEnum,SIMPLE_NAME, line no: 616,mr2,SIMPLE_NAME, line no: 89
FieldsEnum,SIMPLE_NAME, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
FieldsEnum,SIMPLE_NAME, line no: 616,mr3,SIMPLE_NAME, line no: 90
FieldsEnum,SIMPLE_NAME, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
FieldsEnum,SIMPLE_NAME, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,te2,SIMPLE_NAME, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,getTerms,SIMPLE_NAME, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,"body",STRING_LITERAL, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,iterator,SIMPLE_NAME, line no: 93
FieldsEnum,SIMPLE_NAME, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
FieldsEnum,SIMPLE_NAME, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
FieldsEnum,SIMPLE_NAME, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
FieldsEnum,SIMPLE_NAME, line no: 616,"wow",STRING_LITERAL, line no: 94
FieldsEnum,SIMPLE_NAME, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
FieldsEnum,SIMPLE_NAME, line no: 616,td,SIMPLE_NAME, line no: 95
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
FieldsEnum,SIMPLE_NAME, line no: 616,docs,SIMPLE_NAME, line no: 95
FieldsEnum,SIMPLE_NAME, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
FieldsEnum,SIMPLE_NAME, line no: 616,term,SIMPLE_NAME, line no: 97
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
FieldsEnum,SIMPLE_NAME, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
FieldsEnum,SIMPLE_NAME, line no: 616,te3,SIMPLE_NAME, line no: 102
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
FieldsEnum,SIMPLE_NAME, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
FieldsEnum,SIMPLE_NAME, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
FieldsEnum,SIMPLE_NAME, line no: 616,ret,SIMPLE_NAME, line no: 108
FieldsEnum,SIMPLE_NAME, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,docID,SIMPLE_NAME, line no: 112
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
FieldsEnum,SIMPLE_NAME, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
FieldsEnum,SIMPLE_NAME, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
FieldsEnum,SIMPLE_NAME, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
FieldsEnum,SIMPLE_NAME, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
FieldsEnum,SIMPLE_NAME, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
FieldsEnum,SIMPLE_NAME, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
FieldsEnum,SIMPLE_NAME, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
FieldsEnum,SIMPLE_NAME, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
FieldsEnum,SIMPLE_NAME, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
FieldsEnum,SIMPLE_NAME, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
FieldsEnum,SIMPLE_NAME, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
FieldsEnum,SIMPLE_NAME, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
FieldsEnum,SIMPLE_NAME, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
FieldsEnum,SIMPLE_NAME, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
FieldsEnum,SIMPLE_NAME, line no: 616,String,SIMPLE_NAME, line no: 127
FieldsEnum,SIMPLE_NAME, line no: 616,s,SIMPLE_NAME, line no: 127
FieldsEnum,SIMPLE_NAME, line no: 616,create,SIMPLE_NAME, line no: 127
FieldsEnum,SIMPLE_NAME, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
FieldsEnum,SIMPLE_NAME, line no: 616,iw,SIMPLE_NAME, line no: 128
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
FieldsEnum,SIMPLE_NAME, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
FieldsEnum,SIMPLE_NAME, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
FieldsEnum,SIMPLE_NAME, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
FieldsEnum,SIMPLE_NAME, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
FieldsEnum,SIMPLE_NAME, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
FieldsEnum,SIMPLE_NAME, line no: 616,CREATE,SIMPLE_NAME, line no: 131
FieldsEnum,SIMPLE_NAME, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
FieldsEnum,SIMPLE_NAME, line no: 616,APPEND,SIMPLE_NAME, line no: 131
FieldsEnum,SIMPLE_NAME, line no: 616,doc,SIMPLE_NAME, line no: 132
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,add,SIMPLE_NAME, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField,SIMPLE_NAME, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,Store,SIMPLE_NAME, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,NO,SIMPLE_NAME, line no: 133
FieldsEnum,SIMPLE_NAME, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
FieldsEnum,SIMPLE_NAME, line no: 616,addDocument,SIMPLE_NAME, line no: 134
FieldsEnum,SIMPLE_NAME, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
FieldsEnum,SIMPLE_NAME, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
FieldsEnum,SIMPLE_NAME, line no: 616,Exception,SIMPLE_NAME, line no: 138
FieldsEnum,SIMPLE_NAME, line no: 616,d,SIMPLE_NAME, line no: 139
FieldsEnum,SIMPLE_NAME, line no: 616,writer,SIMPLE_NAME, line no: 140
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
FieldsEnum,SIMPLE_NAME, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
FieldsEnum,SIMPLE_NAME, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
FieldsEnum,SIMPLE_NAME, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
FieldsEnum,SIMPLE_NAME, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
FieldsEnum,SIMPLE_NAME, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
FieldsEnum,SIMPLE_NAME, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
FieldsEnum,SIMPLE_NAME, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
FieldsEnum,SIMPLE_NAME, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
FieldsEnum,SIMPLE_NAME, line no: 616,customType3,SIMPLE_NAME, line no: 177
FieldsEnum,SIMPLE_NAME, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
FieldsEnum,SIMPLE_NAME, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
FieldsEnum,SIMPLE_NAME, line no: 616,setStored,SIMPLE_NAME, line no: 178
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
FieldsEnum,SIMPLE_NAME, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
FieldsEnum,SIMPLE_NAME, line no: 616,"keyword",STRING_LITERAL, line no: 180
FieldsEnum,SIMPLE_NAME, line no: 616,"test1",STRING_LITERAL, line no: 180
FieldsEnum,SIMPLE_NAME, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
FieldsEnum,SIMPLE_NAME, line no: 616,YES,SIMPLE_NAME, line no: 180
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
FieldsEnum,SIMPLE_NAME, line no: 616,"text",STRING_LITERAL, line no: 181
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
FieldsEnum,SIMPLE_NAME, line no: 616,"unindexed",STRING_LITERAL, line no: 182
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
FieldsEnum,SIMPLE_NAME, line no: 616,"unstored",STRING_LITERAL, line no: 183
FieldsEnum,SIMPLE_NAME, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
FieldsEnum,SIMPLE_NAME, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
FieldsEnum,SIMPLE_NAME, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
FieldsEnum,SIMPLE_NAME, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
FieldsEnum,SIMPLE_NAME, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
FieldsEnum,SIMPLE_NAME, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
FieldsEnum,SIMPLE_NAME, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,getConfig,SIMPLE_NAME, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
FieldsEnum,SIMPLE_NAME, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
FieldsEnum,SIMPLE_NAME, line no: 616,i,SIMPLE_NAME, line no: 204
FieldsEnum,SIMPLE_NAME, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
FieldsEnum,SIMPLE_NAME, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
FieldsEnum,SIMPLE_NAME, line no: 616,5,NUMBER_LITERAL, line no: 204
FieldsEnum,SIMPLE_NAME, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
FieldsEnum,SIMPLE_NAME, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
FieldsEnum,SIMPLE_NAME, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
FieldsEnum,SIMPLE_NAME, line no: 616,"keyword2",STRING_LITERAL, line no: 215
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
FieldsEnum,SIMPLE_NAME, line no: 616,"text2",STRING_LITERAL, line no: 216
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
FieldsEnum,SIMPLE_NAME, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
FieldsEnum,SIMPLE_NAME, line no: 616,"unstored2",STRING_LITERAL, line no: 218
FieldsEnum,SIMPLE_NAME, line no: 616,customType5,SIMPLE_NAME, line no: 223
FieldsEnum,SIMPLE_NAME, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
FieldsEnum,SIMPLE_NAME, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
FieldsEnum,SIMPLE_NAME, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
FieldsEnum,SIMPLE_NAME, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
FieldsEnum,SIMPLE_NAME, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
FieldsEnum,SIMPLE_NAME, line no: 616,customType6,SIMPLE_NAME, line no: 225
FieldsEnum,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
FieldsEnum,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
FieldsEnum,SIMPLE_NAME, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
FieldsEnum,SIMPLE_NAME, line no: 616,customType7,SIMPLE_NAME, line no: 228
FieldsEnum,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
FieldsEnum,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
FieldsEnum,SIMPLE_NAME, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
FieldsEnum,SIMPLE_NAME, line no: 616,customType8,SIMPLE_NAME, line no: 231
FieldsEnum,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
FieldsEnum,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
FieldsEnum,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
FieldsEnum,SIMPLE_NAME, line no: 616,"tvnot",STRING_LITERAL, line no: 238
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
FieldsEnum,SIMPLE_NAME, line no: 616,"termvector",STRING_LITERAL, line no: 239
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
FieldsEnum,SIMPLE_NAME, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
FieldsEnum,SIMPLE_NAME, line no: 616,"tvposition",STRING_LITERAL, line no: 241
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
FieldsEnum,SIMPLE_NAME, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
FieldsEnum,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
FieldsEnum,SIMPLE_NAME, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
FieldsEnum,SIMPLE_NAME, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
FieldsEnum,SIMPLE_NAME, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
FieldsEnum,SIMPLE_NAME, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
FieldsEnum,SIMPLE_NAME, line no: 616,name,SIMPLE_NAME, line no: 258
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
FieldsEnum,SIMPLE_NAME, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
FieldsEnum,SIMPLE_NAME, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
FieldsEnum,SIMPLE_NAME, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
FieldsEnum,SIMPLE_NAME, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
FieldsEnum,SIMPLE_NAME, line no: 616,contains,SIMPLE_NAME, line no: 270
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
FieldsEnum,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
FieldsEnum,SIMPLE_NAME, line no: 616,11,NUMBER_LITERAL, line no: 285
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
FieldsEnum,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
FieldsEnum,SIMPLE_NAME, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
FieldsEnum,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
FieldsEnum,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
FieldsEnum,SIMPLE_NAME, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
FieldsEnum,SIMPLE_NAME, line no: 616,toString,SIMPLE_NAME, line no: 304
FieldsEnum,SIMPLE_NAME, line no: 616,4,NUMBER_LITERAL, line no: 304
FieldsEnum,SIMPLE_NAME, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
FieldsEnum,SIMPLE_NAME, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
FieldsEnum,SIMPLE_NAME, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
FieldsEnum,SIMPLE_NAME, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
FieldsEnum,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
FieldsEnum,SIMPLE_NAME, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
FieldsEnum,SIMPLE_NAME, line no: 616,msg,SIMPLE_NAME, line no: 348
FieldsEnum,SIMPLE_NAME, line no: 616,Term,SIMPLE_NAME, line no: 350
FieldsEnum,SIMPLE_NAME, line no: 616,expected,SIMPLE_NAME, line no: 351
FieldsEnum,SIMPLE_NAME, line no: 616,tdocs,SIMPLE_NAME, line no: 353
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
FieldsEnum,SIMPLE_NAME, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
FieldsEnum,SIMPLE_NAME, line no: 616,field,SIMPLE_NAME, line no: 354
FieldsEnum,SIMPLE_NAME, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
FieldsEnum,SIMPLE_NAME, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
FieldsEnum,SIMPLE_NAME, line no: 616,text,SIMPLE_NAME, line no: 355
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
FieldsEnum,SIMPLE_NAME, line no: 616,count,SIMPLE_NAME, line no: 359
FieldsEnum,SIMPLE_NAME, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
FieldsEnum,SIMPLE_NAME, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
FieldsEnum,SIMPLE_NAME, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
FieldsEnum,SIMPLE_NAME, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
FieldsEnum,SIMPLE_NAME, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
FieldsEnum,SIMPLE_NAME, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
FieldsEnum,SIMPLE_NAME, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
FieldsEnum,SIMPLE_NAME, line no: 616,bin,SIMPLE_NAME, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,3,NUMBER_LITERAL, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,6,NUMBER_LITERAL, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,7,NUMBER_LITERAL, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,8,NUMBER_LITERAL, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,9,NUMBER_LITERAL, line no: 371
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
FieldsEnum,SIMPLE_NAME, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
FieldsEnum,SIMPLE_NAME, line no: 616,10,NUMBER_LITERAL, line no: 375
FieldsEnum,SIMPLE_NAME, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
FieldsEnum,SIMPLE_NAME, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
FieldsEnum,SIMPLE_NAME, line no: 616,"document number ",STRING_LITERAL, line no: 376
FieldsEnum,SIMPLE_NAME, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
FieldsEnum,SIMPLE_NAME, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
FieldsEnum,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
FieldsEnum,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
FieldsEnum,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
FieldsEnum,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
FieldsEnum,SIMPLE_NAME, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
FieldsEnum,SIMPLE_NAME, line no: 616,"bin1",STRING_LITERAL, line no: 384
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
FieldsEnum,SIMPLE_NAME, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
FieldsEnum,SIMPLE_NAME, line no: 616,"junk",STRING_LITERAL, line no: 385
FieldsEnum,SIMPLE_NAME, line no: 616,"junk text",STRING_LITERAL, line no: 385
FieldsEnum,SIMPLE_NAME, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
FieldsEnum,SIMPLE_NAME, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
FieldsEnum,SIMPLE_NAME, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
FieldsEnum,SIMPLE_NAME, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
FieldsEnum,SIMPLE_NAME, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
FieldsEnum,SIMPLE_NAME, line no: 616,fields,SIMPLE_NAME, line no: 390
FieldsEnum,SIMPLE_NAME, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
FieldsEnum,SIMPLE_NAME, line no: 616,getFields,SIMPLE_NAME, line no: 390
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
FieldsEnum,SIMPLE_NAME, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
FieldsEnum,SIMPLE_NAME, line no: 616,length,SIMPLE_NAME, line no: 392
FieldsEnum,SIMPLE_NAME, line no: 616,b1,SIMPLE_NAME, line no: 393
FieldsEnum,SIMPLE_NAME, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
FieldsEnum,SIMPLE_NAME, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
FieldsEnum,SIMPLE_NAME, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
FieldsEnum,SIMPLE_NAME, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
FieldsEnum,SIMPLE_NAME, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
FieldsEnum,SIMPLE_NAME, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
FieldsEnum,SIMPLE_NAME, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
FieldsEnum,SIMPLE_NAME, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,bytes,SIMPLE_NAME, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,offset,SIMPLE_NAME, line no: 398
FieldsEnum,SIMPLE_NAME, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
FieldsEnum,SIMPLE_NAME, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
FieldsEnum,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
FieldsEnum,SIMPLE_NAME, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
FieldsEnum,SIMPLE_NAME, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
FieldsEnum,SIMPLE_NAME, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
FieldsEnum,SIMPLE_NAME, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
FieldsEnum,SIMPLE_NAME, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
FieldsEnum,SIMPLE_NAME, line no: 616,dirFile,SIMPLE_NAME, line no: 440
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
FieldsEnum,SIMPLE_NAME, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
FieldsEnum,SIMPLE_NAME, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
FieldsEnum,SIMPLE_NAME, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
FieldsEnum,SIMPLE_NAME, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
FieldsEnum,SIMPLE_NAME, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
FieldsEnum,SIMPLE_NAME, line no: 616,"test",STRING_LITERAL, line no: 443
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
FieldsEnum,SIMPLE_NAME, line no: 616,rmDir,SIMPLE_NAME, line no: 448
FieldsEnum,SIMPLE_NAME, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
FieldsEnum,SIMPLE_NAME, line no: 616,reader1,SIMPLE_NAME, line no: 459
FieldsEnum,SIMPLE_NAME, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
FieldsEnum,SIMPLE_NAME, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
FieldsEnum,SIMPLE_NAME, line no: 616,"deletetest",STRING_LITERAL, line no: 469
FieldsEnum,SIMPLE_NAME, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
FieldsEnum,SIMPLE_NAME, line no: 616,fail,SIMPLE_NAME, line no: 473
FieldsEnum,SIMPLE_NAME, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
FieldsEnum,SIMPLE_NAME, line no: 616,e,SIMPLE_NAME, line no: 474
FieldsEnum,SIMPLE_NAME, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
FieldsEnum,SIMPLE_NAME, line no: 616,delete,SIMPLE_NAME, line no: 478
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
FieldsEnum,SIMPLE_NAME, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
FieldsEnum,SIMPLE_NAME, line no: 616,newStringField,SIMPLE_NAME, line no: 497
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
FieldsEnum,SIMPLE_NAME, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
FieldsEnum,SIMPLE_NAME, line no: 616,newField,SIMPLE_NAME, line no: 499
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
FieldsEnum,SIMPLE_NAME, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
FieldsEnum,SIMPLE_NAME, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
FieldsEnum,SIMPLE_NAME, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
FieldsEnum,SIMPLE_NAME, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
FieldsEnum,SIMPLE_NAME, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
FieldsEnum,SIMPLE_NAME, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
FieldsEnum,SIMPLE_NAME, line no: 616,value,SIMPLE_NAME, line no: 541
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
FieldsEnum,SIMPLE_NAME, line no: 616,"content",STRING_LITERAL, line no: 543
FieldsEnum,SIMPLE_NAME, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
FieldsEnum,SIMPLE_NAME, line no: 616,index1,SIMPLE_NAME, line no: 548
FieldsEnum,SIMPLE_NAME, line no: 616,index2,SIMPLE_NAME, line no: 548
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
FieldsEnum,SIMPLE_NAME, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
FieldsEnum,SIMPLE_NAME, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
FieldsEnum,SIMPLE_NAME, line no: 616,numDocs,SIMPLE_NAME, line no: 549
FieldsEnum,SIMPLE_NAME, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
FieldsEnum,SIMPLE_NAME, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
FieldsEnum,SIMPLE_NAME, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
FieldsEnum,SIMPLE_NAME, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
FieldsEnum,SIMPLE_NAME, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
FieldsEnum,SIMPLE_NAME, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
FieldsEnum,SIMPLE_NAME, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
FieldsEnum,SIMPLE_NAME, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
FieldsEnum,SIMPLE_NAME, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
FieldsEnum,SIMPLE_NAME, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
FieldsEnum,SIMPLE_NAME, line no: 616,fieldID,SIMPLE_NAME, line no: 559
FieldsEnum,SIMPLE_NAME, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
FieldsEnum,SIMPLE_NAME, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
FieldsEnum,SIMPLE_NAME, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
FieldsEnum,SIMPLE_NAME, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
FieldsEnum,SIMPLE_NAME, line no: 616,curField,SIMPLE_NAME, line no: 567
FieldsEnum,SIMPLE_NAME, line no: 616,DocValues,SIMPLE_NAME, line no: 568
FieldsEnum,SIMPLE_NAME, line no: 616,norms1,SIMPLE_NAME, line no: 568
FieldsEnum,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
FieldsEnum,SIMPLE_NAME, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
FieldsEnum,SIMPLE_NAME, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
FieldsEnum,SIMPLE_NAME, line no: 616,norms2,SIMPLE_NAME, line no: 569
FieldsEnum,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
FieldsEnum,SIMPLE_NAME, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
FieldsEnum,SIMPLE_NAME, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
FieldsEnum,SIMPLE_NAME, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
FieldsEnum,SIMPLE_NAME, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
FieldsEnum,SIMPLE_NAME, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
FieldsEnum,SIMPLE_NAME, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
FieldsEnum,SIMPLE_NAME, line no: 616,getSource,SIMPLE_NAME, line no: 573
FieldsEnum,SIMPLE_NAME, line no: 616,getArray,SIMPLE_NAME, line no: 573
FieldsEnum,SIMPLE_NAME, line no: 616,b2,SIMPLE_NAME, line no: 574
FieldsEnum,SIMPLE_NAME, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
FieldsEnum,SIMPLE_NAME, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
FieldsEnum,SIMPLE_NAME, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
FieldsEnum,SIMPLE_NAME, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
FieldsEnum,SIMPLE_NAME, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
FieldsEnum,SIMPLE_NAME, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616," and field '",STRING_LITERAL, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616,"'.",STRING_LITERAL, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
FieldsEnum,SIMPLE_NAME, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
FieldsEnum,SIMPLE_NAME, line no: 616,assertSame,SIMPLE_NAME, line no: 582
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
FieldsEnum,SIMPLE_NAME, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
FieldsEnum,SIMPLE_NAME, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
FieldsEnum,SIMPLE_NAME, line no: 616,"Doc ",STRING_LITERAL, line no: 590
FieldsEnum,SIMPLE_NAME, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
FieldsEnum,SIMPLE_NAME, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
FieldsEnum,SIMPLE_NAME, line no: 616,get,SIMPLE_NAME, line no: 591
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
FieldsEnum,SIMPLE_NAME, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
FieldsEnum,SIMPLE_NAME, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
FieldsEnum,SIMPLE_NAME, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
FieldsEnum,SIMPLE_NAME, line no: 616,field1,SIMPLE_NAME, line no: 600
FieldsEnum,SIMPLE_NAME, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
FieldsEnum,SIMPLE_NAME, line no: 616,field2,SIMPLE_NAME, line no: 601
FieldsEnum,SIMPLE_NAME, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
FieldsEnum,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
FieldsEnum,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
FieldsEnum,SIMPLE_NAME, line no: 616,".",STRING_LITERAL, line no: 602
FieldsEnum,SIMPLE_NAME, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
FieldsEnum,SIMPLE_NAME, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
FieldsEnum,SIMPLE_NAME, line no: 616,itField1,SIMPLE_NAME, line no: 603
FieldsEnum,SIMPLE_NAME, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
FieldsEnum,SIMPLE_NAME, line no: 616,itField2,SIMPLE_NAME, line no: 604
FieldsEnum,SIMPLE_NAME, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
FieldsEnum,SIMPLE_NAME, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
FieldsEnum,SIMPLE_NAME, line no: 616,hasNext,SIMPLE_NAME, line no: 605
FieldsEnum,SIMPLE_NAME, line no: 616,curField1,SIMPLE_NAME, line no: 606
FieldsEnum,SIMPLE_NAME, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
FieldsEnum,SIMPLE_NAME, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
FieldsEnum,SIMPLE_NAME, line no: 616,next,SIMPLE_NAME, line no: 606
FieldsEnum,SIMPLE_NAME, line no: 616,curField2,SIMPLE_NAME, line no: 607
FieldsEnum,SIMPLE_NAME, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
FieldsEnum,SIMPLE_NAME, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
FieldsEnum,SIMPLE_NAME, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
FieldsEnum,SIMPLE_NAME, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
FieldsEnum,SIMPLE_NAME, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
FieldsEnum,SIMPLE_NAME, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
FieldsEnum,SIMPLE_NAME, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
FieldsEnum,SIMPLE_NAME, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
FieldsEnum,SIMPLE_NAME, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
FieldsEnum,SIMPLE_NAME, line no: 616,stringValue,SIMPLE_NAME, line no: 609
FieldsEnum,SIMPLE_NAME, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
FieldsEnum,SIMPLE_NAME, line no: 616,fenum1,SIMPLE_NAME, line no: 615
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
FieldsEnum,SIMPLE_NAME, line no: 616,fenum2,SIMPLE_NAME, line no: 616
FieldsEnum,SIMPLE_NAME, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
FieldsEnum,SIMPLE_NAME, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
FieldsEnum,SIMPLE_NAME, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
FieldsEnum,SIMPLE_NAME, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
FieldsEnum,SIMPLE_NAME, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
FieldsEnum,SIMPLE_NAME, line no: 616,"Different fields",STRING_LITERAL, line no: 620
FieldsEnum,SIMPLE_NAME, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
FieldsEnum,SIMPLE_NAME, line no: 616,terms1,SIMPLE_NAME, line no: 621
FieldsEnum,SIMPLE_NAME, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
FieldsEnum,SIMPLE_NAME, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
FieldsEnum,SIMPLE_NAME, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
FieldsEnum,SIMPLE_NAME, line no: 616,assertNull,SIMPLE_NAME, line no: 623
FieldsEnum,SIMPLE_NAME, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
FieldsEnum,SIMPLE_NAME, line no: 616,enum1,SIMPLE_NAME, line no: 626
FieldsEnum,SIMPLE_NAME, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
FieldsEnum,SIMPLE_NAME, line no: 616,terms2,SIMPLE_NAME, line no: 628
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
FieldsEnum,SIMPLE_NAME, line no: 616,enum2,SIMPLE_NAME, line no: 630
FieldsEnum,SIMPLE_NAME, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
FieldsEnum,SIMPLE_NAME, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
FieldsEnum,SIMPLE_NAME, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
FieldsEnum,SIMPLE_NAME, line no: 616,"Different terms",STRING_LITERAL, line no: 633
FieldsEnum,SIMPLE_NAME, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
FieldsEnum,SIMPLE_NAME, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
FieldsEnum,SIMPLE_NAME, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
FieldsEnum,SIMPLE_NAME, line no: 616,tp1,SIMPLE_NAME, line no: 634
FieldsEnum,SIMPLE_NAME, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
FieldsEnum,SIMPLE_NAME, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
FieldsEnum,SIMPLE_NAME, line no: 616,tp2,SIMPLE_NAME, line no: 635
FieldsEnum,SIMPLE_NAME, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
FieldsEnum,SIMPLE_NAME, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
FieldsEnum,SIMPLE_NAME, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
FieldsEnum,SIMPLE_NAME, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
FieldsEnum,SIMPLE_NAME, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
FieldsEnum,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
FieldsEnum,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
FieldsEnum,SIMPLE_NAME, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
FieldsEnum,SIMPLE_NAME, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
FieldsEnum,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
FieldsEnum,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
FieldsEnum,SIMPLE_NAME, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
FieldsEnum,SIMPLE_NAME, line no: 616,freq,SIMPLE_NAME, line no: 640
FieldsEnum,SIMPLE_NAME, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
FieldsEnum,SIMPLE_NAME, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
FieldsEnum,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
FieldsEnum,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
FieldsEnum,SIMPLE_NAME, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
FieldsEnum,SIMPLE_NAME, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
FieldsEnum,SIMPLE_NAME, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
FieldsEnum,SIMPLE_NAME, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
FieldsEnum,SIMPLE_NAME, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
FieldsEnum,SIMPLE_NAME, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
FieldsEnum,SIMPLE_NAME, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
FieldsEnum,SIMPLE_NAME, line no: 616,27,NUMBER_LITERAL, line no: 660
FieldsEnum,SIMPLE_NAME, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
FieldsEnum,SIMPLE_NAME, line no: 616,sis,SIMPLE_NAME, line no: 664
FieldsEnum,SIMPLE_NAME, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
FieldsEnum,SIMPLE_NAME, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
FieldsEnum,SIMPLE_NAME, line no: 616,read,SIMPLE_NAME, line no: 665
FieldsEnum,SIMPLE_NAME, line no: 616,r,SIMPLE_NAME, line no: 666
FieldsEnum,SIMPLE_NAME, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
FieldsEnum,SIMPLE_NAME, line no: 616,c,SIMPLE_NAME, line no: 667
FieldsEnum,SIMPLE_NAME, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
FieldsEnum,SIMPLE_NAME, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
FieldsEnum,SIMPLE_NAME, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
FieldsEnum,SIMPLE_NAME, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
FieldsEnum,SIMPLE_NAME, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
FieldsEnum,SIMPLE_NAME, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
FieldsEnum,SIMPLE_NAME, line no: 616,equals,SIMPLE_NAME, line no: 671
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
FieldsEnum,SIMPLE_NAME, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
FieldsEnum,SIMPLE_NAME, line no: 616,r2,SIMPLE_NAME, line no: 685
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
FieldsEnum,SIMPLE_NAME, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
FieldsEnum,SIMPLE_NAME, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
FieldsEnum,SIMPLE_NAME, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
FieldsEnum,SIMPLE_NAME, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
FieldsEnum,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
FieldsEnum,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
FieldsEnum,SIMPLE_NAME, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
FieldsEnum,SIMPLE_NAME, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
FieldsEnum,SIMPLE_NAME, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
FieldsEnum,SIMPLE_NAME, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
FieldsEnum,SIMPLE_NAME, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
FieldsEnum,SIMPLE_NAME, line no: 616,createDocument,SIMPLE_NAME, line no: 707
FieldsEnum,SIMPLE_NAME, line no: 616,id,SIMPLE_NAME, line no: 707
FieldsEnum,SIMPLE_NAME, line no: 616,customType,SIMPLE_NAME, line no: 709
FieldsEnum,SIMPLE_NAME, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
FieldsEnum,SIMPLE_NAME, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
FieldsEnum,SIMPLE_NAME, line no: 616,false,BOOLEAN_LITERAL, line no: 710
FieldsEnum,SIMPLE_NAME, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
FieldsEnum,SIMPLE_NAME, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
FieldsEnum,SIMPLE_NAME, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
FieldsEnum,SIMPLE_NAME, line no: 616,"id",STRING_LITERAL, line no: 713
FieldsEnum,SIMPLE_NAME, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
FieldsEnum,SIMPLE_NAME, line no: 616,Throwable,SIMPLE_NAME, line no: 720
FieldsEnum,SIMPLE_NAME, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
FieldsEnum,SIMPLE_NAME, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
FieldsEnum,SIMPLE_NAME, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
FieldsEnum,SIMPLE_NAME, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
FieldsEnum,SIMPLE_NAME, line no: 616,nsde,SIMPLE_NAME, line no: 725
FieldsEnum,SIMPLE_NAME, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
FieldsEnum,SIMPLE_NAME, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
FieldsEnum,SIMPLE_NAME, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
FieldsEnum,SIMPLE_NAME, line no: 616,"a",STRING_LITERAL, line no: 739
FieldsEnum,SIMPLE_NAME, line no: 616,commits,SIMPLE_NAME, line no: 744
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
FieldsEnum,SIMPLE_NAME, line no: 616,listCommits,SIMPLE_NAME, line no: 744
FieldsEnum,SIMPLE_NAME, line no: 616,commit,SIMPLE_NAME, line no: 745
FieldsEnum,SIMPLE_NAME, line no: 616,files,SIMPLE_NAME, line no: 746
FieldsEnum,SIMPLE_NAME, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
FieldsEnum,SIMPLE_NAME, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
FieldsEnum,SIMPLE_NAME, line no: 616,seen,SIMPLE_NAME, line no: 747
FieldsEnum,SIMPLE_NAME, line no: 616,fileName,SIMPLE_NAME, line no: 748
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
FieldsEnum,SIMPLE_NAME, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
FieldsEnum,SIMPLE_NAME, line no: 616,"file ",STRING_LITERAL, line no: 749
FieldsEnum,SIMPLE_NAME, line no: 616," was duplicated",STRING_LITERAL, line no: 749
FieldsEnum,SIMPLE_NAME, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
FieldsEnum,SIMPLE_NAME, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
FieldsEnum,SIMPLE_NAME, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
FieldsEnum,SIMPLE_NAME, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
FieldsEnum,SIMPLE_NAME, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
FieldsEnum,SIMPLE_NAME, line no: 616,"number",STRING_LITERAL, line no: 768
FieldsEnum,SIMPLE_NAME, line no: 616,"17",STRING_LITERAL, line no: 768
FieldsEnum,SIMPLE_NAME, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
FieldsEnum,SIMPLE_NAME, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
FieldsEnum,SIMPLE_NAME, line no: 616,r1,SIMPLE_NAME, line no: 774
FieldsEnum,SIMPLE_NAME, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
FieldsEnum,SIMPLE_NAME, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
FieldsEnum,SIMPLE_NAME, line no: 616,ints,SIMPLE_NAME, line no: 775
FieldsEnum,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
FieldsEnum,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
FieldsEnum,SIMPLE_NAME, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
FieldsEnum,SIMPLE_NAME, line no: 616,getInts,SIMPLE_NAME, line no: 775
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
FieldsEnum,SIMPLE_NAME, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
FieldsEnum,SIMPLE_NAME, line no: 616,17,NUMBER_LITERAL, line no: 777
FieldsEnum,SIMPLE_NAME, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
FieldsEnum,SIMPLE_NAME, line no: 616,sub0,SIMPLE_NAME, line no: 787
FieldsEnum,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
FieldsEnum,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
FieldsEnum,SIMPLE_NAME, line no: 616,ints2,SIMPLE_NAME, line no: 788
FieldsEnum,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
FieldsEnum,SIMPLE_NAME, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
FieldsEnum,SIMPLE_NAME, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
FieldsEnum,SIMPLE_NAME, line no: 616,"field",STRING_LITERAL, line no: 801
FieldsEnum,SIMPLE_NAME, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
FieldsEnum,SIMPLE_NAME, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
FieldsEnum,SIMPLE_NAME, line no: 616,36,NUMBER_LITERAL, line no: 809
FieldsEnum,SIMPLE_NAME, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
FieldsEnum,SIMPLE_NAME, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
FieldsEnum,SIMPLE_NAME, line no: 616,subs,SIMPLE_NAME, line no: 816
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
FieldsEnum,SIMPLE_NAME, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
FieldsEnum,SIMPLE_NAME, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
FieldsEnum,SIMPLE_NAME, line no: 616,setCodec,SIMPLE_NAME, line no: 828
FieldsEnum,SIMPLE_NAME, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
FieldsEnum,SIMPLE_NAME, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
FieldsEnum,SIMPLE_NAME, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
FieldsEnum,SIMPLE_NAME, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
FieldsEnum,SIMPLE_NAME, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
FieldsEnum,SIMPLE_NAME, line no: 616,docFreq,SIMPLE_NAME, line no: 838
FieldsEnum,SIMPLE_NAME, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
FieldsEnum,SIMPLE_NAME, line no: 616,"f",STRING_LITERAL, line no: 838
FieldsEnum,SIMPLE_NAME, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
FieldsEnum,SIMPLE_NAME, line no: 616,ise,SIMPLE_NAME, line no: 840
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
FieldsEnum,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
FieldsEnum,SIMPLE_NAME, line no: 616,subReaders,SIMPLE_NAME, line no: 859
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
FieldsEnum,SIMPLE_NAME, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
FieldsEnum,SIMPLE_NAME, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
FieldsEnum,SIMPLE_NAME, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
FieldsEnum,SIMPLE_NAME, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
FieldsEnum,SIMPLE_NAME, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
FieldsEnum,SIMPLE_NAME, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
FieldsEnum,SIMPLE_NAME, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
FieldsEnum,SIMPLE_NAME, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
FieldsEnum,SIMPLE_NAME, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
FieldsEnum,SIMPLE_NAME, line no: 616,sdp,SIMPLE_NAME, line no: 898
FieldsEnum,SIMPLE_NAME, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
FieldsEnum,SIMPLE_NAME, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
FieldsEnum,SIMPLE_NAME, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
FieldsEnum,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
FieldsEnum,SIMPLE_NAME, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
FieldsEnum,SIMPLE_NAME, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
FieldsEnum,SIMPLE_NAME, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
FieldsEnum,SIMPLE_NAME, line no: 616,snapshot,SIMPLE_NAME, line no: 903
FieldsEnum,SIMPLE_NAME, line no: 616,"c1",STRING_LITERAL, line no: 903
FieldsEnum,SIMPLE_NAME, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
FieldsEnum,SIMPLE_NAME, line no: 616,"c2",STRING_LITERAL, line no: 906
FieldsEnum,SIMPLE_NAME, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
FieldsEnum,SIMPLE_NAME, line no: 616,"c3",STRING_LITERAL, line no: 909
FieldsEnum,SIMPLE_NAME, line no: 616,currentGen,SIMPLE_NAME, line no: 911
FieldsEnum,SIMPLE_NAME, line no: 616,ic,SIMPLE_NAME, line no: 912
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616," commitGen=",STRING_LITERAL, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
FieldsEnum,SIMPLE_NAME, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
FieldsEnum,SIMPLE_NAME, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
FieldsEnum,SIMPLE_NAME, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
FieldsEnum,SIMPLE_NAME, line no: 616,indexExists,SIMPLE_NAME, line no: 925
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
FieldsEnum,SIMPLE_NAME, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
FieldsEnum,SIMPLE_NAME, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
FieldsEnum,SIMPLE_NAME, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
FieldsEnum,SIMPLE_NAME, line no: 616,"a a b",STRING_LITERAL, line no: 938
FieldsEnum,SIMPLE_NAME, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
FieldsEnum,SIMPLE_NAME, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
FieldsEnum,SIMPLE_NAME, line no: 616,getReader,SIMPLE_NAME, line no: 940
FieldsEnum,SIMPLE_NAME, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,"b",STRING_LITERAL, line no: 944
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
FieldsEnum,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
FieldsEnum,SIMPLE_NAME, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
FieldsEnum,SIMPLE_NAME, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
FieldsEnum,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
FieldsEnum,SIMPLE_NAME, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
FieldsEnum,SIMPLE_NAME, line no: 616,closeCount,SIMPLE_NAME, line no: 964
FieldsEnum,SIMPLE_NAME, line no: 616,new int[1],ARRAY_CREATION, line no: 964
FieldsEnum,SIMPLE_NAME, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
FieldsEnum,SIMPLE_NAME, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
FieldsEnum,SIMPLE_NAME, line no: 616,listener,SIMPLE_NAME, line no: 965
FieldsEnum,SIMPLE_NAME, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
FieldsEnum,SIMPLE_NAME, line no: 616,onClose,SIMPLE_NAME, line no: 966
FieldsEnum,SIMPLE_NAME, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
FieldsEnum,SIMPLE_NAME, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
FieldsEnum,SIMPLE_NAME, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
FieldsEnum,SIMPLE_NAME, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
FieldsEnum,SIMPLE_NAME, line no: 616,reader2,SIMPLE_NAME, line no: 979
FieldsEnum,SIMPLE_NAME, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
FieldsEnum,SIMPLE_NAME, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
FieldsEnum,SIMPLE_NAME, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
FieldsEnum,SIMPLE_NAME, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
FieldsEnum,SIMPLE_NAME, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
FieldsEnum,SIMPLE_NAME, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
FieldsEnum,SIMPLE_NAME, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
FieldsEnum,SIMPLE_NAME, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
FieldsEnum,SIMPLE_NAME, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
FieldsEnum,SIMPLE_NAME, line no: 616,iae,SIMPLE_NAME, line no: 998
FieldsEnum,SIMPLE_NAME, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
FieldsEnum,SIMPLE_NAME, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
FieldsEnum,SIMPLE_NAME, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
FieldsEnum,SIMPLE_NAME, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
FieldsEnum,SIMPLE_NAME, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
FieldsEnum,SIMPLE_NAME, line no: 616,decRef,SIMPLE_NAME, line no: 1012
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
FieldsEnum,SIMPLE_NAME, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
FieldsEnum,SIMPLE_NAME, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
FieldsEnum,SIMPLE_NAME, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
FieldsEnum,SIMPLE_NAME, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
FieldsEnum,SIMPLE_NAME, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
FieldsEnum,SIMPLE_NAME, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
FieldsEnum,SIMPLE_NAME, line no: 616,threads,SIMPLE_NAME, line no: 1027
FieldsEnum,SIMPLE_NAME, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
FieldsEnum,SIMPLE_NAME, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
FieldsEnum,SIMPLE_NAME, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
FieldsEnum,SIMPLE_NAME, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
FieldsEnum,SIMPLE_NAME, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
FieldsEnum,SIMPLE_NAME, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
FieldsEnum,SIMPLE_NAME, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
FieldsEnum,SIMPLE_NAME, line no: 616,start,SIMPLE_NAME, line no: 1030
FieldsEnum,SIMPLE_NAME, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
FieldsEnum,SIMPLE_NAME, line no: 616,Thread,SIMPLE_NAME, line no: 1032
FieldsEnum,SIMPLE_NAME, line no: 616,sleep,SIMPLE_NAME, line no: 1032
FieldsEnum,SIMPLE_NAME, line no: 616,100,NUMBER_LITERAL, line no: 1032
FieldsEnum,SIMPLE_NAME, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
FieldsEnum,SIMPLE_NAME, line no: 616,join,SIMPLE_NAME, line no: 1039
FieldsEnum,SIMPLE_NAME, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
FieldsEnum,SIMPLE_NAME, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
FieldsEnum,SIMPLE_NAME, line no: 616,failed,SIMPLE_NAME, line no: 1040
FieldsEnum,SIMPLE_NAME, line no: 616,toInc,SIMPLE_NAME, line no: 1048
FieldsEnum,SIMPLE_NAME, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
FieldsEnum,SIMPLE_NAME, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
FieldsEnum,SIMPLE_NAME, line no: 616,this,THIS_EXPRESSION, line no: 1053
FieldsEnum,SIMPLE_NAME, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
FieldsEnum,SIMPLE_NAME, line no: 616,this.random,FIELD_ACCESS, line no: 1054
FieldsEnum,SIMPLE_NAME, line no: 616,@Override,, line no: 1057
FieldsEnum,SIMPLE_NAME, line no: 616,Override,SIMPLE_NAME, line no: 1057
FieldsEnum,SIMPLE_NAME, line no: 616,run,SIMPLE_NAME, line no: 1058
FieldsEnum,SIMPLE_NAME, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
FieldsEnum,SIMPLE_NAME, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
FieldsEnum,SIMPLE_NAME, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
FieldsEnum,SIMPLE_NAME, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
FieldsEnum,SIMPLE_NAME, line no: 616,failed=e,ASSIGNMENT, line no: 1066
FieldsEnum,SIMPLE_NAME, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
FieldsEnum,SIMPLE_NAME, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
FieldsEnum,SIMPLE_NAME, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
FieldsEnum,SIMPLE_NAME, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
FieldsEnum,SIMPLE_NAME, line no: 616,"field1",STRING_LITERAL, line no: 1075
FieldsEnum,SIMPLE_NAME, line no: 616,"foobar",STRING_LITERAL, line no: 1075
FieldsEnum,SIMPLE_NAME, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
FieldsEnum,SIMPLE_NAME, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
FieldsEnum,SIMPLE_NAME, line no: 616,"field2",STRING_LITERAL, line no: 1076
FieldsEnum,SIMPLE_NAME, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
FieldsEnum,SIMPLE_NAME, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
FieldsEnum,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
FieldsEnum,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
FieldsEnum,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
FieldsEnum,SIMPLE_NAME, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
FieldsEnum,SIMPLE_NAME, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
FieldsEnum,SIMPLE_NAME, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
FieldsEnum,SIMPLE_NAME, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,org,SIMPLE_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,apache,SIMPLE_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,lucene,SIMPLE_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,index,SIMPLE_NAME, line no: 1
fenum2,SIMPLE_NAME, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
fenum2,SIMPLE_NAME, line no: 616,java.io,QUALIFIED_NAME, line no: 20
fenum2,SIMPLE_NAME, line no: 616,java,SIMPLE_NAME, line no: 20
fenum2,SIMPLE_NAME, line no: 616,io,SIMPLE_NAME, line no: 20
fenum2,SIMPLE_NAME, line no: 616,File,SIMPLE_NAME, line no: 20
fenum2,SIMPLE_NAME, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
fenum2,SIMPLE_NAME, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
fenum2,SIMPLE_NAME, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
fenum2,SIMPLE_NAME, line no: 616,IOException,SIMPLE_NAME, line no: 22
fenum2,SIMPLE_NAME, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
fenum2,SIMPLE_NAME, line no: 616,java.util,QUALIFIED_NAME, line no: 23
fenum2,SIMPLE_NAME, line no: 616,util,SIMPLE_NAME, line no: 23
fenum2,SIMPLE_NAME, line no: 616,Collection,SIMPLE_NAME, line no: 23
fenum2,SIMPLE_NAME, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
fenum2,SIMPLE_NAME, line no: 616,HashSet,SIMPLE_NAME, line no: 24
fenum2,SIMPLE_NAME, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
fenum2,SIMPLE_NAME, line no: 616,Iterator,SIMPLE_NAME, line no: 25
fenum2,SIMPLE_NAME, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
fenum2,SIMPLE_NAME, line no: 616,List,SIMPLE_NAME, line no: 26
fenum2,SIMPLE_NAME, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
fenum2,SIMPLE_NAME, line no: 616,Random,SIMPLE_NAME, line no: 27
fenum2,SIMPLE_NAME, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
fenum2,SIMPLE_NAME, line no: 616,Set,SIMPLE_NAME, line no: 28
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
fenum2,SIMPLE_NAME, line no: 616,analysis,SIMPLE_NAME, line no: 30
fenum2,SIMPLE_NAME, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
fenum2,SIMPLE_NAME, line no: 616,codecs,SIMPLE_NAME, line no: 31
fenum2,SIMPLE_NAME, line no: 616,lucene40,SIMPLE_NAME, line no: 31
fenum2,SIMPLE_NAME, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
fenum2,SIMPLE_NAME, line no: 616,document,SIMPLE_NAME, line no: 32
fenum2,SIMPLE_NAME, line no: 616,Document,SIMPLE_NAME, line no: 32
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
fenum2,SIMPLE_NAME, line no: 616,Field,SIMPLE_NAME, line no: 33
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
fenum2,SIMPLE_NAME, line no: 616,FieldType,SIMPLE_NAME, line no: 34
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
fenum2,SIMPLE_NAME, line no: 616,StoredField,SIMPLE_NAME, line no: 35
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
fenum2,SIMPLE_NAME, line no: 616,StringField,SIMPLE_NAME, line no: 36
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
fenum2,SIMPLE_NAME, line no: 616,TextField,SIMPLE_NAME, line no: 37
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
fenum2,SIMPLE_NAME, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
fenum2,SIMPLE_NAME, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
fenum2,SIMPLE_NAME, line no: 616,search,SIMPLE_NAME, line no: 39
fenum2,SIMPLE_NAME, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
fenum2,SIMPLE_NAME, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
fenum2,SIMPLE_NAME, line no: 616,store,SIMPLE_NAME, line no: 41
fenum2,SIMPLE_NAME, line no: 616,Directory,SIMPLE_NAME, line no: 41
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
fenum2,SIMPLE_NAME, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
fenum2,SIMPLE_NAME, line no: 616,Bits,SIMPLE_NAME, line no: 43
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
fenum2,SIMPLE_NAME, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
fenum2,SIMPLE_NAME, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
fenum2,SIMPLE_NAME, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
fenum2,SIMPLE_NAME, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
fenum2,SIMPLE_NAME, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
fenum2,SIMPLE_NAME, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
fenum2,SIMPLE_NAME, line no: 616,junit,SIMPLE_NAME, line no: 47
fenum2,SIMPLE_NAME, line no: 616,Assume,SIMPLE_NAME, line no: 47
fenum2,SIMPLE_NAME, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
fenum2,SIMPLE_NAME, line no: 616,testDocument,SIMPLE_NAME, line no: 51
fenum2,SIMPLE_NAME, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
fenum2,SIMPLE_NAME, line no: 616,readers,SIMPLE_NAME, line no: 52
fenum2,SIMPLE_NAME, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
fenum2,SIMPLE_NAME, line no: 616,2,NUMBER_LITERAL, line no: 52
fenum2,SIMPLE_NAME, line no: 616,dir,SIMPLE_NAME, line no: 53
fenum2,SIMPLE_NAME, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
fenum2,SIMPLE_NAME, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
fenum2,SIMPLE_NAME, line no: 616,doc1,SIMPLE_NAME, line no: 54
fenum2,SIMPLE_NAME, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
fenum2,SIMPLE_NAME, line no: 616,doc2,SIMPLE_NAME, line no: 55
fenum2,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
fenum2,SIMPLE_NAME, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
fenum2,SIMPLE_NAME, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
fenum2,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
fenum2,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
fenum2,SIMPLE_NAME, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
fenum2,SIMPLE_NAME, line no: 616,random(),METHOD_INVOCATION, line no: 58
fenum2,SIMPLE_NAME, line no: 616,random,SIMPLE_NAME, line no: 58
fenum2,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
fenum2,SIMPLE_NAME, line no: 616,reader,SIMPLE_NAME, line no: 60
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
fenum2,SIMPLE_NAME, line no: 616,open,SIMPLE_NAME, line no: 60
fenum2,SIMPLE_NAME, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
fenum2,SIMPLE_NAME, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
fenum2,SIMPLE_NAME, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
fenum2,SIMPLE_NAME, line no: 616,null,NULL_LITERAL, line no: 61
fenum2,SIMPLE_NAME, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
fenum2,SIMPLE_NAME, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
fenum2,SIMPLE_NAME, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
fenum2,SIMPLE_NAME, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
fenum2,SIMPLE_NAME, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
fenum2,SIMPLE_NAME, line no: 616,0,NUMBER_LITERAL, line no: 64
fenum2,SIMPLE_NAME, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
fenum2,SIMPLE_NAME, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
fenum2,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
fenum2,SIMPLE_NAME, line no: 616,numFields,SIMPLE_NAME, line no: 66
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
fenum2,SIMPLE_NAME, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
fenum2,SIMPLE_NAME, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
fenum2,SIMPLE_NAME, line no: 616,unstored,SIMPLE_NAME, line no: 66
fenum2,SIMPLE_NAME, line no: 616,size,SIMPLE_NAME, line no: 66
fenum2,SIMPLE_NAME, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
fenum2,SIMPLE_NAME, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
fenum2,SIMPLE_NAME, line no: 616,1,NUMBER_LITERAL, line no: 67
fenum2,SIMPLE_NAME, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
fenum2,SIMPLE_NAME, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
fenum2,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
fenum2,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
fenum2,SIMPLE_NAME, line no: 616,Terms,SIMPLE_NAME, line no: 70
fenum2,SIMPLE_NAME, line no: 616,vector,SIMPLE_NAME, line no: 70
fenum2,SIMPLE_NAME, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
fenum2,SIMPLE_NAME, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
fenum2,SIMPLE_NAME, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
fenum2,SIMPLE_NAME, line no: 616,terms,SIMPLE_NAME, line no: 70
fenum2,SIMPLE_NAME, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
fenum2,SIMPLE_NAME, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
fenum2,SIMPLE_NAME, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
fenum2,SIMPLE_NAME, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
fenum2,SIMPLE_NAME, line no: 616,close,SIMPLE_NAME, line no: 73
fenum2,SIMPLE_NAME, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
fenum2,SIMPLE_NAME, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
fenum2,SIMPLE_NAME, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
fenum2,SIMPLE_NAME, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
fenum2,SIMPLE_NAME, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
fenum2,SIMPLE_NAME, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
fenum2,SIMPLE_NAME, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
fenum2,SIMPLE_NAME, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
fenum2,SIMPLE_NAME, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
fenum2,SIMPLE_NAME, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
fenum2,SIMPLE_NAME, line no: 616,addDoc,SIMPLE_NAME, line no: 81
fenum2,SIMPLE_NAME, line no: 616,"test foo",STRING_LITERAL, line no: 81
fenum2,SIMPLE_NAME, line no: 616,true,BOOLEAN_LITERAL, line no: 81
fenum2,SIMPLE_NAME, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
fenum2,SIMPLE_NAME, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
fenum2,SIMPLE_NAME, line no: 616,"test blah",STRING_LITERAL, line no: 83
fenum2,SIMPLE_NAME, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
fenum2,SIMPLE_NAME, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
fenum2,SIMPLE_NAME, line no: 616,"test wow",STRING_LITERAL, line no: 85
fenum2,SIMPLE_NAME, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
fenum2,SIMPLE_NAME, line no: 616,readers1,SIMPLE_NAME, line no: 87
fenum2,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
fenum2,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
fenum2,SIMPLE_NAME, line no: 616,readers2,SIMPLE_NAME, line no: 88
fenum2,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
fenum2,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
fenum2,SIMPLE_NAME, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
fenum2,SIMPLE_NAME, line no: 616,mr2,SIMPLE_NAME, line no: 89
fenum2,SIMPLE_NAME, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
fenum2,SIMPLE_NAME, line no: 616,mr3,SIMPLE_NAME, line no: 90
fenum2,SIMPLE_NAME, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
fenum2,SIMPLE_NAME, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
fenum2,SIMPLE_NAME, line no: 616,te2,SIMPLE_NAME, line no: 93
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
fenum2,SIMPLE_NAME, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
fenum2,SIMPLE_NAME, line no: 616,getTerms,SIMPLE_NAME, line no: 93
fenum2,SIMPLE_NAME, line no: 616,"body",STRING_LITERAL, line no: 93
fenum2,SIMPLE_NAME, line no: 616,iterator,SIMPLE_NAME, line no: 93
fenum2,SIMPLE_NAME, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
fenum2,SIMPLE_NAME, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
fenum2,SIMPLE_NAME, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
fenum2,SIMPLE_NAME, line no: 616,"wow",STRING_LITERAL, line no: 94
fenum2,SIMPLE_NAME, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
fenum2,SIMPLE_NAME, line no: 616,td,SIMPLE_NAME, line no: 95
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
fenum2,SIMPLE_NAME, line no: 616,docs,SIMPLE_NAME, line no: 95
fenum2,SIMPLE_NAME, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
fenum2,SIMPLE_NAME, line no: 616,term,SIMPLE_NAME, line no: 97
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
fenum2,SIMPLE_NAME, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
fenum2,SIMPLE_NAME, line no: 616,te3,SIMPLE_NAME, line no: 102
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
fenum2,SIMPLE_NAME, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
fenum2,SIMPLE_NAME, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
fenum2,SIMPLE_NAME, line no: 616,ret,SIMPLE_NAME, line no: 108
fenum2,SIMPLE_NAME, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
fenum2,SIMPLE_NAME, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
fenum2,SIMPLE_NAME, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
fenum2,SIMPLE_NAME, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
fenum2,SIMPLE_NAME, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
fenum2,SIMPLE_NAME, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
fenum2,SIMPLE_NAME, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
fenum2,SIMPLE_NAME, line no: 616,docID,SIMPLE_NAME, line no: 112
fenum2,SIMPLE_NAME, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
fenum2,SIMPLE_NAME, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
fenum2,SIMPLE_NAME, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
fenum2,SIMPLE_NAME, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
fenum2,SIMPLE_NAME, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
fenum2,SIMPLE_NAME, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
fenum2,SIMPLE_NAME, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
fenum2,SIMPLE_NAME, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
fenum2,SIMPLE_NAME, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
fenum2,SIMPLE_NAME, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
fenum2,SIMPLE_NAME, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
fenum2,SIMPLE_NAME, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
fenum2,SIMPLE_NAME, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
fenum2,SIMPLE_NAME, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
fenum2,SIMPLE_NAME, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
fenum2,SIMPLE_NAME, line no: 616,String,SIMPLE_NAME, line no: 127
fenum2,SIMPLE_NAME, line no: 616,s,SIMPLE_NAME, line no: 127
fenum2,SIMPLE_NAME, line no: 616,create,SIMPLE_NAME, line no: 127
fenum2,SIMPLE_NAME, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
fenum2,SIMPLE_NAME, line no: 616,iw,SIMPLE_NAME, line no: 128
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
fenum2,SIMPLE_NAME, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
fenum2,SIMPLE_NAME, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
fenum2,SIMPLE_NAME, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
fenum2,SIMPLE_NAME, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
fenum2,SIMPLE_NAME, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
fenum2,SIMPLE_NAME, line no: 616,CREATE,SIMPLE_NAME, line no: 131
fenum2,SIMPLE_NAME, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
fenum2,SIMPLE_NAME, line no: 616,APPEND,SIMPLE_NAME, line no: 131
fenum2,SIMPLE_NAME, line no: 616,doc,SIMPLE_NAME, line no: 132
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
fenum2,SIMPLE_NAME, line no: 616,add,SIMPLE_NAME, line no: 133
fenum2,SIMPLE_NAME, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
fenum2,SIMPLE_NAME, line no: 616,newTextField,SIMPLE_NAME, line no: 133
fenum2,SIMPLE_NAME, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
fenum2,SIMPLE_NAME, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
fenum2,SIMPLE_NAME, line no: 616,Store,SIMPLE_NAME, line no: 133
fenum2,SIMPLE_NAME, line no: 616,NO,SIMPLE_NAME, line no: 133
fenum2,SIMPLE_NAME, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
fenum2,SIMPLE_NAME, line no: 616,addDocument,SIMPLE_NAME, line no: 134
fenum2,SIMPLE_NAME, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
fenum2,SIMPLE_NAME, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
fenum2,SIMPLE_NAME, line no: 616,Exception,SIMPLE_NAME, line no: 138
fenum2,SIMPLE_NAME, line no: 616,d,SIMPLE_NAME, line no: 139
fenum2,SIMPLE_NAME, line no: 616,writer,SIMPLE_NAME, line no: 140
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
fenum2,SIMPLE_NAME, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
fenum2,SIMPLE_NAME, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
fenum2,SIMPLE_NAME, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
fenum2,SIMPLE_NAME, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
fenum2,SIMPLE_NAME, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
fenum2,SIMPLE_NAME, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
fenum2,SIMPLE_NAME, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
fenum2,SIMPLE_NAME, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
fenum2,SIMPLE_NAME, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
fenum2,SIMPLE_NAME, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
fenum2,SIMPLE_NAME, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
fenum2,SIMPLE_NAME, line no: 616,customType3,SIMPLE_NAME, line no: 177
fenum2,SIMPLE_NAME, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
fenum2,SIMPLE_NAME, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
fenum2,SIMPLE_NAME, line no: 616,setStored,SIMPLE_NAME, line no: 178
fenum2,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
fenum2,SIMPLE_NAME, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
fenum2,SIMPLE_NAME, line no: 616,"keyword",STRING_LITERAL, line no: 180
fenum2,SIMPLE_NAME, line no: 616,"test1",STRING_LITERAL, line no: 180
fenum2,SIMPLE_NAME, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
fenum2,SIMPLE_NAME, line no: 616,YES,SIMPLE_NAME, line no: 180
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
fenum2,SIMPLE_NAME, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
fenum2,SIMPLE_NAME, line no: 616,"text",STRING_LITERAL, line no: 181
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
fenum2,SIMPLE_NAME, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
fenum2,SIMPLE_NAME, line no: 616,"unindexed",STRING_LITERAL, line no: 182
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
fenum2,SIMPLE_NAME, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
fenum2,SIMPLE_NAME, line no: 616,"unstored",STRING_LITERAL, line no: 183
fenum2,SIMPLE_NAME, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
fenum2,SIMPLE_NAME, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
fenum2,SIMPLE_NAME, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
fenum2,SIMPLE_NAME, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
fenum2,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
fenum2,SIMPLE_NAME, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
fenum2,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
fenum2,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
fenum2,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
fenum2,SIMPLE_NAME, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
fenum2,SIMPLE_NAME, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
fenum2,SIMPLE_NAME, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
fenum2,SIMPLE_NAME, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
fenum2,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
fenum2,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
fenum2,SIMPLE_NAME, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
fenum2,SIMPLE_NAME, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
fenum2,SIMPLE_NAME, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
fenum2,SIMPLE_NAME, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
fenum2,SIMPLE_NAME, line no: 616,getConfig,SIMPLE_NAME, line no: 203
fenum2,SIMPLE_NAME, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
fenum2,SIMPLE_NAME, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
fenum2,SIMPLE_NAME, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
fenum2,SIMPLE_NAME, line no: 616,i,SIMPLE_NAME, line no: 204
fenum2,SIMPLE_NAME, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
fenum2,SIMPLE_NAME, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
fenum2,SIMPLE_NAME, line no: 616,5,NUMBER_LITERAL, line no: 204
fenum2,SIMPLE_NAME, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
fenum2,SIMPLE_NAME, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
fenum2,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
fenum2,SIMPLE_NAME, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
fenum2,SIMPLE_NAME, line no: 616,"keyword2",STRING_LITERAL, line no: 215
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
fenum2,SIMPLE_NAME, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
fenum2,SIMPLE_NAME, line no: 616,"text2",STRING_LITERAL, line no: 216
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
fenum2,SIMPLE_NAME, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
fenum2,SIMPLE_NAME, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
fenum2,SIMPLE_NAME, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
fenum2,SIMPLE_NAME, line no: 616,"unstored2",STRING_LITERAL, line no: 218
fenum2,SIMPLE_NAME, line no: 616,customType5,SIMPLE_NAME, line no: 223
fenum2,SIMPLE_NAME, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
fenum2,SIMPLE_NAME, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
fenum2,SIMPLE_NAME, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
fenum2,SIMPLE_NAME, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
fenum2,SIMPLE_NAME, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
fenum2,SIMPLE_NAME, line no: 616,customType6,SIMPLE_NAME, line no: 225
fenum2,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
fenum2,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
fenum2,SIMPLE_NAME, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
fenum2,SIMPLE_NAME, line no: 616,customType7,SIMPLE_NAME, line no: 228
fenum2,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
fenum2,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
fenum2,SIMPLE_NAME, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
fenum2,SIMPLE_NAME, line no: 616,customType8,SIMPLE_NAME, line no: 231
fenum2,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
fenum2,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
fenum2,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
fenum2,SIMPLE_NAME, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
fenum2,SIMPLE_NAME, line no: 616,"tvnot",STRING_LITERAL, line no: 238
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
fenum2,SIMPLE_NAME, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
fenum2,SIMPLE_NAME, line no: 616,"termvector",STRING_LITERAL, line no: 239
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
fenum2,SIMPLE_NAME, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
fenum2,SIMPLE_NAME, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
fenum2,SIMPLE_NAME, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
fenum2,SIMPLE_NAME, line no: 616,"tvposition",STRING_LITERAL, line no: 241
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
fenum2,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
fenum2,SIMPLE_NAME, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
fenum2,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
fenum2,SIMPLE_NAME, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
fenum2,SIMPLE_NAME, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
fenum2,SIMPLE_NAME, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
fenum2,SIMPLE_NAME, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
fenum2,SIMPLE_NAME, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
fenum2,SIMPLE_NAME, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
fenum2,SIMPLE_NAME, line no: 616,name,SIMPLE_NAME, line no: 258
fenum2,SIMPLE_NAME, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
fenum2,SIMPLE_NAME, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
fenum2,SIMPLE_NAME, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
fenum2,SIMPLE_NAME, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
fenum2,SIMPLE_NAME, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
fenum2,SIMPLE_NAME, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
fenum2,SIMPLE_NAME, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
fenum2,SIMPLE_NAME, line no: 616,contains,SIMPLE_NAME, line no: 270
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
fenum2,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
fenum2,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
fenum2,SIMPLE_NAME, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
fenum2,SIMPLE_NAME, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
fenum2,SIMPLE_NAME, line no: 616,11,NUMBER_LITERAL, line no: 285
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
fenum2,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
fenum2,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
fenum2,SIMPLE_NAME, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
fenum2,SIMPLE_NAME, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
fenum2,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
fenum2,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
fenum2,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
fenum2,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
fenum2,SIMPLE_NAME, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
fenum2,SIMPLE_NAME, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
fenum2,SIMPLE_NAME, line no: 616,toString,SIMPLE_NAME, line no: 304
fenum2,SIMPLE_NAME, line no: 616,4,NUMBER_LITERAL, line no: 304
fenum2,SIMPLE_NAME, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
fenum2,SIMPLE_NAME, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
fenum2,SIMPLE_NAME, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
fenum2,SIMPLE_NAME, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
fenum2,SIMPLE_NAME, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
fenum2,SIMPLE_NAME, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
fenum2,SIMPLE_NAME, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
fenum2,SIMPLE_NAME, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
fenum2,SIMPLE_NAME, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
fenum2,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
fenum2,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
fenum2,SIMPLE_NAME, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
fenum2,SIMPLE_NAME, line no: 616,msg,SIMPLE_NAME, line no: 348
fenum2,SIMPLE_NAME, line no: 616,Term,SIMPLE_NAME, line no: 350
fenum2,SIMPLE_NAME, line no: 616,expected,SIMPLE_NAME, line no: 351
fenum2,SIMPLE_NAME, line no: 616,tdocs,SIMPLE_NAME, line no: 353
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
fenum2,SIMPLE_NAME, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
fenum2,SIMPLE_NAME, line no: 616,field,SIMPLE_NAME, line no: 354
fenum2,SIMPLE_NAME, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
fenum2,SIMPLE_NAME, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
fenum2,SIMPLE_NAME, line no: 616,text,SIMPLE_NAME, line no: 355
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
fenum2,SIMPLE_NAME, line no: 616,count,SIMPLE_NAME, line no: 359
fenum2,SIMPLE_NAME, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
fenum2,SIMPLE_NAME, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
fenum2,SIMPLE_NAME, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
fenum2,SIMPLE_NAME, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
fenum2,SIMPLE_NAME, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
fenum2,SIMPLE_NAME, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
fenum2,SIMPLE_NAME, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
fenum2,SIMPLE_NAME, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
fenum2,SIMPLE_NAME, line no: 616,bin,SIMPLE_NAME, line no: 371
fenum2,SIMPLE_NAME, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
fenum2,SIMPLE_NAME, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
fenum2,SIMPLE_NAME, line no: 616,3,NUMBER_LITERAL, line no: 371
fenum2,SIMPLE_NAME, line no: 616,6,NUMBER_LITERAL, line no: 371
fenum2,SIMPLE_NAME, line no: 616,7,NUMBER_LITERAL, line no: 371
fenum2,SIMPLE_NAME, line no: 616,8,NUMBER_LITERAL, line no: 371
fenum2,SIMPLE_NAME, line no: 616,9,NUMBER_LITERAL, line no: 371
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
fenum2,SIMPLE_NAME, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
fenum2,SIMPLE_NAME, line no: 616,10,NUMBER_LITERAL, line no: 375
fenum2,SIMPLE_NAME, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
fenum2,SIMPLE_NAME, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
fenum2,SIMPLE_NAME, line no: 616,"document number ",STRING_LITERAL, line no: 376
fenum2,SIMPLE_NAME, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
fenum2,SIMPLE_NAME, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
fenum2,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
fenum2,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
fenum2,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
fenum2,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
fenum2,SIMPLE_NAME, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
fenum2,SIMPLE_NAME, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
fenum2,SIMPLE_NAME, line no: 616,"bin1",STRING_LITERAL, line no: 384
fenum2,SIMPLE_NAME, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
fenum2,SIMPLE_NAME, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
fenum2,SIMPLE_NAME, line no: 616,"junk",STRING_LITERAL, line no: 385
fenum2,SIMPLE_NAME, line no: 616,"junk text",STRING_LITERAL, line no: 385
fenum2,SIMPLE_NAME, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
fenum2,SIMPLE_NAME, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
fenum2,SIMPLE_NAME, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
fenum2,SIMPLE_NAME, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
fenum2,SIMPLE_NAME, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
fenum2,SIMPLE_NAME, line no: 616,fields,SIMPLE_NAME, line no: 390
fenum2,SIMPLE_NAME, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
fenum2,SIMPLE_NAME, line no: 616,getFields,SIMPLE_NAME, line no: 390
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
fenum2,SIMPLE_NAME, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
fenum2,SIMPLE_NAME, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
fenum2,SIMPLE_NAME, line no: 616,length,SIMPLE_NAME, line no: 392
fenum2,SIMPLE_NAME, line no: 616,b1,SIMPLE_NAME, line no: 393
fenum2,SIMPLE_NAME, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
fenum2,SIMPLE_NAME, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
fenum2,SIMPLE_NAME, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
fenum2,SIMPLE_NAME, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
fenum2,SIMPLE_NAME, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
fenum2,SIMPLE_NAME, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
fenum2,SIMPLE_NAME, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
fenum2,SIMPLE_NAME, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
fenum2,SIMPLE_NAME, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
fenum2,SIMPLE_NAME, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
fenum2,SIMPLE_NAME, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
fenum2,SIMPLE_NAME, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
fenum2,SIMPLE_NAME, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
fenum2,SIMPLE_NAME, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
fenum2,SIMPLE_NAME, line no: 616,bytes,SIMPLE_NAME, line no: 398
fenum2,SIMPLE_NAME, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
fenum2,SIMPLE_NAME, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
fenum2,SIMPLE_NAME, line no: 616,offset,SIMPLE_NAME, line no: 398
fenum2,SIMPLE_NAME, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
fenum2,SIMPLE_NAME, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
fenum2,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
fenum2,SIMPLE_NAME, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
fenum2,SIMPLE_NAME, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
fenum2,SIMPLE_NAME, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
fenum2,SIMPLE_NAME, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
fenum2,SIMPLE_NAME, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
fenum2,SIMPLE_NAME, line no: 616,dirFile,SIMPLE_NAME, line no: 440
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
fenum2,SIMPLE_NAME, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
fenum2,SIMPLE_NAME, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
fenum2,SIMPLE_NAME, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
fenum2,SIMPLE_NAME, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
fenum2,SIMPLE_NAME, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
fenum2,SIMPLE_NAME, line no: 616,"test",STRING_LITERAL, line no: 443
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
fenum2,SIMPLE_NAME, line no: 616,rmDir,SIMPLE_NAME, line no: 448
fenum2,SIMPLE_NAME, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
fenum2,SIMPLE_NAME, line no: 616,reader1,SIMPLE_NAME, line no: 459
fenum2,SIMPLE_NAME, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
fenum2,SIMPLE_NAME, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
fenum2,SIMPLE_NAME, line no: 616,"deletetest",STRING_LITERAL, line no: 469
fenum2,SIMPLE_NAME, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
fenum2,SIMPLE_NAME, line no: 616,fail,SIMPLE_NAME, line no: 473
fenum2,SIMPLE_NAME, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
fenum2,SIMPLE_NAME, line no: 616,e,SIMPLE_NAME, line no: 474
fenum2,SIMPLE_NAME, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
fenum2,SIMPLE_NAME, line no: 616,delete,SIMPLE_NAME, line no: 478
fenum2,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
fenum2,SIMPLE_NAME, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
fenum2,SIMPLE_NAME, line no: 616,newStringField,SIMPLE_NAME, line no: 497
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
fenum2,SIMPLE_NAME, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
fenum2,SIMPLE_NAME, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
fenum2,SIMPLE_NAME, line no: 616,newField,SIMPLE_NAME, line no: 499
fenum2,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
fenum2,SIMPLE_NAME, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
fenum2,SIMPLE_NAME, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
fenum2,SIMPLE_NAME, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
fenum2,SIMPLE_NAME, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
fenum2,SIMPLE_NAME, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
fenum2,SIMPLE_NAME, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
fenum2,SIMPLE_NAME, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
fenum2,SIMPLE_NAME, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
fenum2,SIMPLE_NAME, line no: 616,value,SIMPLE_NAME, line no: 541
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
fenum2,SIMPLE_NAME, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
fenum2,SIMPLE_NAME, line no: 616,"content",STRING_LITERAL, line no: 543
fenum2,SIMPLE_NAME, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
fenum2,SIMPLE_NAME, line no: 616,index1,SIMPLE_NAME, line no: 548
fenum2,SIMPLE_NAME, line no: 616,index2,SIMPLE_NAME, line no: 548
fenum2,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
fenum2,SIMPLE_NAME, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
fenum2,SIMPLE_NAME, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
fenum2,SIMPLE_NAME, line no: 616,numDocs,SIMPLE_NAME, line no: 549
fenum2,SIMPLE_NAME, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
fenum2,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
fenum2,SIMPLE_NAME, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
fenum2,SIMPLE_NAME, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
fenum2,SIMPLE_NAME, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
fenum2,SIMPLE_NAME, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
fenum2,SIMPLE_NAME, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
fenum2,SIMPLE_NAME, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
fenum2,SIMPLE_NAME, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
fenum2,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
fenum2,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
fenum2,SIMPLE_NAME, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
fenum2,SIMPLE_NAME, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
fenum2,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
fenum2,SIMPLE_NAME, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
fenum2,SIMPLE_NAME, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
fenum2,SIMPLE_NAME, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
fenum2,SIMPLE_NAME, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
fenum2,SIMPLE_NAME, line no: 616,fieldID,SIMPLE_NAME, line no: 559
fenum2,SIMPLE_NAME, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
fenum2,SIMPLE_NAME, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
fenum2,SIMPLE_NAME, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
fenum2,SIMPLE_NAME, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
fenum2,SIMPLE_NAME, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
fenum2,SIMPLE_NAME, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
fenum2,SIMPLE_NAME, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
fenum2,SIMPLE_NAME, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
fenum2,SIMPLE_NAME, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
fenum2,SIMPLE_NAME, line no: 616,curField,SIMPLE_NAME, line no: 567
fenum2,SIMPLE_NAME, line no: 616,DocValues,SIMPLE_NAME, line no: 568
fenum2,SIMPLE_NAME, line no: 616,norms1,SIMPLE_NAME, line no: 568
fenum2,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
fenum2,SIMPLE_NAME, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
fenum2,SIMPLE_NAME, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
fenum2,SIMPLE_NAME, line no: 616,norms2,SIMPLE_NAME, line no: 569
fenum2,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
fenum2,SIMPLE_NAME, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
fenum2,SIMPLE_NAME, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
fenum2,SIMPLE_NAME, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
fenum2,SIMPLE_NAME, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
fenum2,SIMPLE_NAME, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
fenum2,SIMPLE_NAME, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
fenum2,SIMPLE_NAME, line no: 616,getSource,SIMPLE_NAME, line no: 573
fenum2,SIMPLE_NAME, line no: 616,getArray,SIMPLE_NAME, line no: 573
fenum2,SIMPLE_NAME, line no: 616,b2,SIMPLE_NAME, line no: 574
fenum2,SIMPLE_NAME, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
fenum2,SIMPLE_NAME, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
fenum2,SIMPLE_NAME, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
fenum2,SIMPLE_NAME, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
fenum2,SIMPLE_NAME, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
fenum2,SIMPLE_NAME, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
fenum2,SIMPLE_NAME, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
fenum2,SIMPLE_NAME, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
fenum2,SIMPLE_NAME, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
fenum2,SIMPLE_NAME, line no: 616," and field '",STRING_LITERAL, line no: 577
fenum2,SIMPLE_NAME, line no: 616,"'.",STRING_LITERAL, line no: 577
fenum2,SIMPLE_NAME, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
fenum2,SIMPLE_NAME, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
fenum2,SIMPLE_NAME, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
fenum2,SIMPLE_NAME, line no: 616,assertSame,SIMPLE_NAME, line no: 582
fenum2,SIMPLE_NAME, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
fenum2,SIMPLE_NAME, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
fenum2,SIMPLE_NAME, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
fenum2,SIMPLE_NAME, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
fenum2,SIMPLE_NAME, line no: 616,"Doc ",STRING_LITERAL, line no: 590
fenum2,SIMPLE_NAME, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
fenum2,SIMPLE_NAME, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
fenum2,SIMPLE_NAME, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
fenum2,SIMPLE_NAME, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
fenum2,SIMPLE_NAME, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
fenum2,SIMPLE_NAME, line no: 616,get,SIMPLE_NAME, line no: 591
fenum2,SIMPLE_NAME, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
fenum2,SIMPLE_NAME, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
fenum2,SIMPLE_NAME, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
fenum2,SIMPLE_NAME, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
fenum2,SIMPLE_NAME, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
fenum2,SIMPLE_NAME, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
fenum2,SIMPLE_NAME, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
fenum2,SIMPLE_NAME, line no: 616,field1,SIMPLE_NAME, line no: 600
fenum2,SIMPLE_NAME, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
fenum2,SIMPLE_NAME, line no: 616,field2,SIMPLE_NAME, line no: 601
fenum2,SIMPLE_NAME, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
fenum2,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
fenum2,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
fenum2,SIMPLE_NAME, line no: 616,".",STRING_LITERAL, line no: 602
fenum2,SIMPLE_NAME, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
fenum2,SIMPLE_NAME, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
fenum2,SIMPLE_NAME, line no: 616,itField1,SIMPLE_NAME, line no: 603
fenum2,SIMPLE_NAME, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
fenum2,SIMPLE_NAME, line no: 616,itField2,SIMPLE_NAME, line no: 604
fenum2,SIMPLE_NAME, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
fenum2,SIMPLE_NAME, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
fenum2,SIMPLE_NAME, line no: 616,hasNext,SIMPLE_NAME, line no: 605
fenum2,SIMPLE_NAME, line no: 616,curField1,SIMPLE_NAME, line no: 606
fenum2,SIMPLE_NAME, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
fenum2,SIMPLE_NAME, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
fenum2,SIMPLE_NAME, line no: 616,next,SIMPLE_NAME, line no: 606
fenum2,SIMPLE_NAME, line no: 616,curField2,SIMPLE_NAME, line no: 607
fenum2,SIMPLE_NAME, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
fenum2,SIMPLE_NAME, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
fenum2,SIMPLE_NAME, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
fenum2,SIMPLE_NAME, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
fenum2,SIMPLE_NAME, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
fenum2,SIMPLE_NAME, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
fenum2,SIMPLE_NAME, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
fenum2,SIMPLE_NAME, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
fenum2,SIMPLE_NAME, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
fenum2,SIMPLE_NAME, line no: 616,stringValue,SIMPLE_NAME, line no: 609
fenum2,SIMPLE_NAME, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
fenum2,SIMPLE_NAME, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
fenum2,SIMPLE_NAME, line no: 616,fenum1,SIMPLE_NAME, line no: 615
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
fenum2,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
fenum2,SIMPLE_NAME, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
fenum2,SIMPLE_NAME, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
fenum2,SIMPLE_NAME, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
fenum2,SIMPLE_NAME, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
fenum2,SIMPLE_NAME, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
fenum2,SIMPLE_NAME, line no: 616,"Different fields",STRING_LITERAL, line no: 620
fenum2,SIMPLE_NAME, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
fenum2,SIMPLE_NAME, line no: 616,terms1,SIMPLE_NAME, line no: 621
fenum2,SIMPLE_NAME, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
fenum2,SIMPLE_NAME, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
fenum2,SIMPLE_NAME, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
fenum2,SIMPLE_NAME, line no: 616,assertNull,SIMPLE_NAME, line no: 623
fenum2,SIMPLE_NAME, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
fenum2,SIMPLE_NAME, line no: 616,enum1,SIMPLE_NAME, line no: 626
fenum2,SIMPLE_NAME, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
fenum2,SIMPLE_NAME, line no: 616,terms2,SIMPLE_NAME, line no: 628
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
fenum2,SIMPLE_NAME, line no: 616,enum2,SIMPLE_NAME, line no: 630
fenum2,SIMPLE_NAME, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
fenum2,SIMPLE_NAME, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
fenum2,SIMPLE_NAME, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
fenum2,SIMPLE_NAME, line no: 616,"Different terms",STRING_LITERAL, line no: 633
fenum2,SIMPLE_NAME, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
fenum2,SIMPLE_NAME, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
fenum2,SIMPLE_NAME, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
fenum2,SIMPLE_NAME, line no: 616,tp1,SIMPLE_NAME, line no: 634
fenum2,SIMPLE_NAME, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
fenum2,SIMPLE_NAME, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
fenum2,SIMPLE_NAME, line no: 616,tp2,SIMPLE_NAME, line no: 635
fenum2,SIMPLE_NAME, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
fenum2,SIMPLE_NAME, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
fenum2,SIMPLE_NAME, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
fenum2,SIMPLE_NAME, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
fenum2,SIMPLE_NAME, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
fenum2,SIMPLE_NAME, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
fenum2,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
fenum2,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
fenum2,SIMPLE_NAME, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
fenum2,SIMPLE_NAME, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
fenum2,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
fenum2,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
fenum2,SIMPLE_NAME, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
fenum2,SIMPLE_NAME, line no: 616,freq,SIMPLE_NAME, line no: 640
fenum2,SIMPLE_NAME, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
fenum2,SIMPLE_NAME, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
fenum2,SIMPLE_NAME, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
fenum2,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
fenum2,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
fenum2,SIMPLE_NAME, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
fenum2,SIMPLE_NAME, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
fenum2,SIMPLE_NAME, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
fenum2,SIMPLE_NAME, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
fenum2,SIMPLE_NAME, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
fenum2,SIMPLE_NAME, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
fenum2,SIMPLE_NAME, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
fenum2,SIMPLE_NAME, line no: 616,27,NUMBER_LITERAL, line no: 660
fenum2,SIMPLE_NAME, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
fenum2,SIMPLE_NAME, line no: 616,sis,SIMPLE_NAME, line no: 664
fenum2,SIMPLE_NAME, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
fenum2,SIMPLE_NAME, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
fenum2,SIMPLE_NAME, line no: 616,read,SIMPLE_NAME, line no: 665
fenum2,SIMPLE_NAME, line no: 616,r,SIMPLE_NAME, line no: 666
fenum2,SIMPLE_NAME, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
fenum2,SIMPLE_NAME, line no: 616,c,SIMPLE_NAME, line no: 667
fenum2,SIMPLE_NAME, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
fenum2,SIMPLE_NAME, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
fenum2,SIMPLE_NAME, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
fenum2,SIMPLE_NAME, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
fenum2,SIMPLE_NAME, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
fenum2,SIMPLE_NAME, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
fenum2,SIMPLE_NAME, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
fenum2,SIMPLE_NAME, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
fenum2,SIMPLE_NAME, line no: 616,equals,SIMPLE_NAME, line no: 671
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
fenum2,SIMPLE_NAME, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
fenum2,SIMPLE_NAME, line no: 616,r2,SIMPLE_NAME, line no: 685
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
fenum2,SIMPLE_NAME, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
fenum2,SIMPLE_NAME, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
fenum2,SIMPLE_NAME, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
fenum2,SIMPLE_NAME, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
fenum2,SIMPLE_NAME, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
fenum2,SIMPLE_NAME, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
fenum2,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
fenum2,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
fenum2,SIMPLE_NAME, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
fenum2,SIMPLE_NAME, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
fenum2,SIMPLE_NAME, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
fenum2,SIMPLE_NAME, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
fenum2,SIMPLE_NAME, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
fenum2,SIMPLE_NAME, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
fenum2,SIMPLE_NAME, line no: 616,createDocument,SIMPLE_NAME, line no: 707
fenum2,SIMPLE_NAME, line no: 616,id,SIMPLE_NAME, line no: 707
fenum2,SIMPLE_NAME, line no: 616,customType,SIMPLE_NAME, line no: 709
fenum2,SIMPLE_NAME, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
fenum2,SIMPLE_NAME, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
fenum2,SIMPLE_NAME, line no: 616,false,BOOLEAN_LITERAL, line no: 710
fenum2,SIMPLE_NAME, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
fenum2,SIMPLE_NAME, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
fenum2,SIMPLE_NAME, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
fenum2,SIMPLE_NAME, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
fenum2,SIMPLE_NAME, line no: 616,"id",STRING_LITERAL, line no: 713
fenum2,SIMPLE_NAME, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
fenum2,SIMPLE_NAME, line no: 616,Throwable,SIMPLE_NAME, line no: 720
fenum2,SIMPLE_NAME, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
fenum2,SIMPLE_NAME, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
fenum2,SIMPLE_NAME, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
fenum2,SIMPLE_NAME, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
fenum2,SIMPLE_NAME, line no: 616,nsde,SIMPLE_NAME, line no: 725
fenum2,SIMPLE_NAME, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
fenum2,SIMPLE_NAME, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
fenum2,SIMPLE_NAME, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
fenum2,SIMPLE_NAME, line no: 616,"a",STRING_LITERAL, line no: 739
fenum2,SIMPLE_NAME, line no: 616,commits,SIMPLE_NAME, line no: 744
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
fenum2,SIMPLE_NAME, line no: 616,listCommits,SIMPLE_NAME, line no: 744
fenum2,SIMPLE_NAME, line no: 616,commit,SIMPLE_NAME, line no: 745
fenum2,SIMPLE_NAME, line no: 616,files,SIMPLE_NAME, line no: 746
fenum2,SIMPLE_NAME, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
fenum2,SIMPLE_NAME, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
fenum2,SIMPLE_NAME, line no: 616,seen,SIMPLE_NAME, line no: 747
fenum2,SIMPLE_NAME, line no: 616,fileName,SIMPLE_NAME, line no: 748
fenum2,SIMPLE_NAME, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
fenum2,SIMPLE_NAME, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
fenum2,SIMPLE_NAME, line no: 616,"file ",STRING_LITERAL, line no: 749
fenum2,SIMPLE_NAME, line no: 616," was duplicated",STRING_LITERAL, line no: 749
fenum2,SIMPLE_NAME, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
fenum2,SIMPLE_NAME, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
fenum2,SIMPLE_NAME, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
fenum2,SIMPLE_NAME, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
fenum2,SIMPLE_NAME, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
fenum2,SIMPLE_NAME, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
fenum2,SIMPLE_NAME, line no: 616,"number",STRING_LITERAL, line no: 768
fenum2,SIMPLE_NAME, line no: 616,"17",STRING_LITERAL, line no: 768
fenum2,SIMPLE_NAME, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
fenum2,SIMPLE_NAME, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
fenum2,SIMPLE_NAME, line no: 616,r1,SIMPLE_NAME, line no: 774
fenum2,SIMPLE_NAME, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
fenum2,SIMPLE_NAME, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
fenum2,SIMPLE_NAME, line no: 616,ints,SIMPLE_NAME, line no: 775
fenum2,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
fenum2,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
fenum2,SIMPLE_NAME, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
fenum2,SIMPLE_NAME, line no: 616,getInts,SIMPLE_NAME, line no: 775
fenum2,SIMPLE_NAME, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
fenum2,SIMPLE_NAME, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
fenum2,SIMPLE_NAME, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
fenum2,SIMPLE_NAME, line no: 616,17,NUMBER_LITERAL, line no: 777
fenum2,SIMPLE_NAME, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
fenum2,SIMPLE_NAME, line no: 616,sub0,SIMPLE_NAME, line no: 787
fenum2,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
fenum2,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
fenum2,SIMPLE_NAME, line no: 616,ints2,SIMPLE_NAME, line no: 788
fenum2,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
fenum2,SIMPLE_NAME, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
fenum2,SIMPLE_NAME, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
fenum2,SIMPLE_NAME, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
fenum2,SIMPLE_NAME, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
fenum2,SIMPLE_NAME, line no: 616,"field",STRING_LITERAL, line no: 801
fenum2,SIMPLE_NAME, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
fenum2,SIMPLE_NAME, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
fenum2,SIMPLE_NAME, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
fenum2,SIMPLE_NAME, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
fenum2,SIMPLE_NAME, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
fenum2,SIMPLE_NAME, line no: 616,36,NUMBER_LITERAL, line no: 809
fenum2,SIMPLE_NAME, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
fenum2,SIMPLE_NAME, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
fenum2,SIMPLE_NAME, line no: 616,subs,SIMPLE_NAME, line no: 816
fenum2,SIMPLE_NAME, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
fenum2,SIMPLE_NAME, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
fenum2,SIMPLE_NAME, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
fenum2,SIMPLE_NAME, line no: 616,setCodec,SIMPLE_NAME, line no: 828
fenum2,SIMPLE_NAME, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
fenum2,SIMPLE_NAME, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
fenum2,SIMPLE_NAME, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
fenum2,SIMPLE_NAME, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
fenum2,SIMPLE_NAME, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
fenum2,SIMPLE_NAME, line no: 616,docFreq,SIMPLE_NAME, line no: 838
fenum2,SIMPLE_NAME, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
fenum2,SIMPLE_NAME, line no: 616,"f",STRING_LITERAL, line no: 838
fenum2,SIMPLE_NAME, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
fenum2,SIMPLE_NAME, line no: 616,ise,SIMPLE_NAME, line no: 840
fenum2,SIMPLE_NAME, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
fenum2,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
fenum2,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
fenum2,SIMPLE_NAME, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
fenum2,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
fenum2,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
fenum2,SIMPLE_NAME, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
fenum2,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
fenum2,SIMPLE_NAME, line no: 616,subReaders,SIMPLE_NAME, line no: 859
fenum2,SIMPLE_NAME, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
fenum2,SIMPLE_NAME, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
fenum2,SIMPLE_NAME, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
fenum2,SIMPLE_NAME, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
fenum2,SIMPLE_NAME, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
fenum2,SIMPLE_NAME, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
fenum2,SIMPLE_NAME, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
fenum2,SIMPLE_NAME, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
fenum2,SIMPLE_NAME, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
fenum2,SIMPLE_NAME, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
fenum2,SIMPLE_NAME, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
fenum2,SIMPLE_NAME, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
fenum2,SIMPLE_NAME, line no: 616,sdp,SIMPLE_NAME, line no: 898
fenum2,SIMPLE_NAME, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
fenum2,SIMPLE_NAME, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
fenum2,SIMPLE_NAME, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
fenum2,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
fenum2,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
fenum2,SIMPLE_NAME, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
fenum2,SIMPLE_NAME, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
fenum2,SIMPLE_NAME, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
fenum2,SIMPLE_NAME, line no: 616,snapshot,SIMPLE_NAME, line no: 903
fenum2,SIMPLE_NAME, line no: 616,"c1",STRING_LITERAL, line no: 903
fenum2,SIMPLE_NAME, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
fenum2,SIMPLE_NAME, line no: 616,"c2",STRING_LITERAL, line no: 906
fenum2,SIMPLE_NAME, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
fenum2,SIMPLE_NAME, line no: 616,"c3",STRING_LITERAL, line no: 909
fenum2,SIMPLE_NAME, line no: 616,currentGen,SIMPLE_NAME, line no: 911
fenum2,SIMPLE_NAME, line no: 616,ic,SIMPLE_NAME, line no: 912
fenum2,SIMPLE_NAME, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
fenum2,SIMPLE_NAME, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
fenum2,SIMPLE_NAME, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
fenum2,SIMPLE_NAME, line no: 616," commitGen=",STRING_LITERAL, line no: 913
fenum2,SIMPLE_NAME, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
fenum2,SIMPLE_NAME, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
fenum2,SIMPLE_NAME, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
fenum2,SIMPLE_NAME, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
fenum2,SIMPLE_NAME, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
fenum2,SIMPLE_NAME, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
fenum2,SIMPLE_NAME, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
fenum2,SIMPLE_NAME, line no: 616,indexExists,SIMPLE_NAME, line no: 925
fenum2,SIMPLE_NAME, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
fenum2,SIMPLE_NAME, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
fenum2,SIMPLE_NAME, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
fenum2,SIMPLE_NAME, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
fenum2,SIMPLE_NAME, line no: 616,"a a b",STRING_LITERAL, line no: 938
fenum2,SIMPLE_NAME, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
fenum2,SIMPLE_NAME, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
fenum2,SIMPLE_NAME, line no: 616,getReader,SIMPLE_NAME, line no: 940
fenum2,SIMPLE_NAME, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
fenum2,SIMPLE_NAME, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
fenum2,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
fenum2,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
fenum2,SIMPLE_NAME, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
fenum2,SIMPLE_NAME, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
fenum2,SIMPLE_NAME, line no: 616,"b",STRING_LITERAL, line no: 944
fenum2,SIMPLE_NAME, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
fenum2,SIMPLE_NAME, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
fenum2,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
fenum2,SIMPLE_NAME, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
fenum2,SIMPLE_NAME, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
fenum2,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
fenum2,SIMPLE_NAME, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
fenum2,SIMPLE_NAME, line no: 616,closeCount,SIMPLE_NAME, line no: 964
fenum2,SIMPLE_NAME, line no: 616,new int[1],ARRAY_CREATION, line no: 964
fenum2,SIMPLE_NAME, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
fenum2,SIMPLE_NAME, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
fenum2,SIMPLE_NAME, line no: 616,listener,SIMPLE_NAME, line no: 965
fenum2,SIMPLE_NAME, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
fenum2,SIMPLE_NAME, line no: 616,onClose,SIMPLE_NAME, line no: 966
fenum2,SIMPLE_NAME, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
fenum2,SIMPLE_NAME, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
fenum2,SIMPLE_NAME, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
fenum2,SIMPLE_NAME, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
fenum2,SIMPLE_NAME, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
fenum2,SIMPLE_NAME, line no: 616,reader2,SIMPLE_NAME, line no: 979
fenum2,SIMPLE_NAME, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
fenum2,SIMPLE_NAME, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
fenum2,SIMPLE_NAME, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
fenum2,SIMPLE_NAME, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
fenum2,SIMPLE_NAME, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
fenum2,SIMPLE_NAME, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
fenum2,SIMPLE_NAME, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
fenum2,SIMPLE_NAME, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
fenum2,SIMPLE_NAME, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
fenum2,SIMPLE_NAME, line no: 616,iae,SIMPLE_NAME, line no: 998
fenum2,SIMPLE_NAME, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
fenum2,SIMPLE_NAME, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
fenum2,SIMPLE_NAME, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
fenum2,SIMPLE_NAME, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
fenum2,SIMPLE_NAME, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
fenum2,SIMPLE_NAME, line no: 616,decRef,SIMPLE_NAME, line no: 1012
fenum2,SIMPLE_NAME, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
fenum2,SIMPLE_NAME, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
fenum2,SIMPLE_NAME, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
fenum2,SIMPLE_NAME, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
fenum2,SIMPLE_NAME, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
fenum2,SIMPLE_NAME, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
fenum2,SIMPLE_NAME, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
fenum2,SIMPLE_NAME, line no: 616,threads,SIMPLE_NAME, line no: 1027
fenum2,SIMPLE_NAME, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
fenum2,SIMPLE_NAME, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
fenum2,SIMPLE_NAME, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
fenum2,SIMPLE_NAME, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
fenum2,SIMPLE_NAME, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
fenum2,SIMPLE_NAME, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
fenum2,SIMPLE_NAME, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
fenum2,SIMPLE_NAME, line no: 616,start,SIMPLE_NAME, line no: 1030
fenum2,SIMPLE_NAME, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
fenum2,SIMPLE_NAME, line no: 616,Thread,SIMPLE_NAME, line no: 1032
fenum2,SIMPLE_NAME, line no: 616,sleep,SIMPLE_NAME, line no: 1032
fenum2,SIMPLE_NAME, line no: 616,100,NUMBER_LITERAL, line no: 1032
fenum2,SIMPLE_NAME, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
fenum2,SIMPLE_NAME, line no: 616,join,SIMPLE_NAME, line no: 1039
fenum2,SIMPLE_NAME, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
fenum2,SIMPLE_NAME, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
fenum2,SIMPLE_NAME, line no: 616,failed,SIMPLE_NAME, line no: 1040
fenum2,SIMPLE_NAME, line no: 616,toInc,SIMPLE_NAME, line no: 1048
fenum2,SIMPLE_NAME, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
fenum2,SIMPLE_NAME, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
fenum2,SIMPLE_NAME, line no: 616,this,THIS_EXPRESSION, line no: 1053
fenum2,SIMPLE_NAME, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
fenum2,SIMPLE_NAME, line no: 616,this.random,FIELD_ACCESS, line no: 1054
fenum2,SIMPLE_NAME, line no: 616,@Override,, line no: 1057
fenum2,SIMPLE_NAME, line no: 616,Override,SIMPLE_NAME, line no: 1057
fenum2,SIMPLE_NAME, line no: 616,run,SIMPLE_NAME, line no: 1058
fenum2,SIMPLE_NAME, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
fenum2,SIMPLE_NAME, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
fenum2,SIMPLE_NAME, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
fenum2,SIMPLE_NAME, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
fenum2,SIMPLE_NAME, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
fenum2,SIMPLE_NAME, line no: 616,failed=e,ASSIGNMENT, line no: 1066
fenum2,SIMPLE_NAME, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
fenum2,SIMPLE_NAME, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
fenum2,SIMPLE_NAME, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
fenum2,SIMPLE_NAME, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
fenum2,SIMPLE_NAME, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
fenum2,SIMPLE_NAME, line no: 616,"field1",STRING_LITERAL, line no: 1075
fenum2,SIMPLE_NAME, line no: 616,"foobar",STRING_LITERAL, line no: 1075
fenum2,SIMPLE_NAME, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
fenum2,SIMPLE_NAME, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
fenum2,SIMPLE_NAME, line no: 616,"field2",STRING_LITERAL, line no: 1076
fenum2,SIMPLE_NAME, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
fenum2,SIMPLE_NAME, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
fenum2,SIMPLE_NAME, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
fenum2,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
fenum2,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
fenum2,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
fenum2,SIMPLE_NAME, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
fenum2,SIMPLE_NAME, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
fenum2,SIMPLE_NAME, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
fenum2,SIMPLE_NAME, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
fenum2,SIMPLE_NAME, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,apache,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,lucene,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.io,QUALIFIED_NAME, line no: 20
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java,SIMPLE_NAME, line no: 20
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,io,SIMPLE_NAME, line no: 20
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,File,SIMPLE_NAME, line no: 20
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IOException,SIMPLE_NAME, line no: 22
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util,QUALIFIED_NAME, line no: 23
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,util,SIMPLE_NAME, line no: 23
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Collection,SIMPLE_NAME, line no: 23
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,HashSet,SIMPLE_NAME, line no: 24
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Iterator,SIMPLE_NAME, line no: 25
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,List,SIMPLE_NAME, line no: 26
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Random,SIMPLE_NAME, line no: 27
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Set,SIMPLE_NAME, line no: 28
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,analysis,SIMPLE_NAME, line no: 30
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,codecs,SIMPLE_NAME, line no: 31
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,lucene40,SIMPLE_NAME, line no: 31
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,document,SIMPLE_NAME, line no: 32
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Document,SIMPLE_NAME, line no: 32
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Field,SIMPLE_NAME, line no: 33
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldType,SIMPLE_NAME, line no: 34
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,StoredField,SIMPLE_NAME, line no: 35
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,StringField,SIMPLE_NAME, line no: 36
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TextField,SIMPLE_NAME, line no: 37
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,search,SIMPLE_NAME, line no: 39
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,store,SIMPLE_NAME, line no: 41
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Directory,SIMPLE_NAME, line no: 41
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Bits,SIMPLE_NAME, line no: 43
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,junit,SIMPLE_NAME, line no: 47
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Assume,SIMPLE_NAME, line no: 47
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testDocument,SIMPLE_NAME, line no: 51
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers,SIMPLE_NAME, line no: 52
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,2,NUMBER_LITERAL, line no: 52
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,dir,SIMPLE_NAME, line no: 53
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc1,SIMPLE_NAME, line no: 54
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc2,SIMPLE_NAME, line no: 55
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,random(),METHOD_INVOCATION, line no: 58
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,random,SIMPLE_NAME, line no: 58
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader,SIMPLE_NAME, line no: 60
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,open,SIMPLE_NAME, line no: 60
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,null,NULL_LITERAL, line no: 61
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,0,NUMBER_LITERAL, line no: 64
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,numFields,SIMPLE_NAME, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,unstored,SIMPLE_NAME, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,size,SIMPLE_NAME, line no: 66
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,1,NUMBER_LITERAL, line no: 67
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Terms,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,vector,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,terms,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,close,SIMPLE_NAME, line no: 73
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDoc,SIMPLE_NAME, line no: 81
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"test foo",STRING_LITERAL, line no: 81
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,true,BOOLEAN_LITERAL, line no: 81
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"test blah",STRING_LITERAL, line no: 83
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"test wow",STRING_LITERAL, line no: 85
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers1,SIMPLE_NAME, line no: 87
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2,SIMPLE_NAME, line no: 88
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,mr2,SIMPLE_NAME, line no: 89
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,mr3,SIMPLE_NAME, line no: 90
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,te2,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getTerms,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"body",STRING_LITERAL, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,iterator,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"wow",STRING_LITERAL, line no: 94
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,td,SIMPLE_NAME, line no: 95
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,docs,SIMPLE_NAME, line no: 95
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,term,SIMPLE_NAME, line no: 97
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,te3,SIMPLE_NAME, line no: 102
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ret,SIMPLE_NAME, line no: 108
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,docID,SIMPLE_NAME, line no: 112
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,String,SIMPLE_NAME, line no: 127
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,s,SIMPLE_NAME, line no: 127
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,create,SIMPLE_NAME, line no: 127
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,iw,SIMPLE_NAME, line no: 128
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,CREATE,SIMPLE_NAME, line no: 131
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,APPEND,SIMPLE_NAME, line no: 131
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc,SIMPLE_NAME, line no: 132
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,add,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Store,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,NO,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocument,SIMPLE_NAME, line no: 134
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Exception,SIMPLE_NAME, line no: 138
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,d,SIMPLE_NAME, line no: 139
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer,SIMPLE_NAME, line no: 140
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType3,SIMPLE_NAME, line no: 177
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setStored,SIMPLE_NAME, line no: 178
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"keyword",STRING_LITERAL, line no: 180
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"test1",STRING_LITERAL, line no: 180
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,YES,SIMPLE_NAME, line no: 180
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"text",STRING_LITERAL, line no: 181
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"unindexed",STRING_LITERAL, line no: 182
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"unstored",STRING_LITERAL, line no: 183
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getConfig,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i,SIMPLE_NAME, line no: 204
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,5,NUMBER_LITERAL, line no: 204
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"keyword2",STRING_LITERAL, line no: 215
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"text2",STRING_LITERAL, line no: 216
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"unstored2",STRING_LITERAL, line no: 218
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType5,SIMPLE_NAME, line no: 223
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType6,SIMPLE_NAME, line no: 225
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType7,SIMPLE_NAME, line no: 228
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType8,SIMPLE_NAME, line no: 231
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"tvnot",STRING_LITERAL, line no: 238
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"termvector",STRING_LITERAL, line no: 239
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"tvposition",STRING_LITERAL, line no: 241
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,name,SIMPLE_NAME, line no: 258
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,contains,SIMPLE_NAME, line no: 270
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,11,NUMBER_LITERAL, line no: 285
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,toString,SIMPLE_NAME, line no: 304
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,4,NUMBER_LITERAL, line no: 304
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,msg,SIMPLE_NAME, line no: 348
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Term,SIMPLE_NAME, line no: 350
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,expected,SIMPLE_NAME, line no: 351
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tdocs,SIMPLE_NAME, line no: 353
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field,SIMPLE_NAME, line no: 354
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,text,SIMPLE_NAME, line no: 355
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,count,SIMPLE_NAME, line no: 359
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bin,SIMPLE_NAME, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,3,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,6,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,7,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,8,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,9,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,10,NUMBER_LITERAL, line no: 375
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"document number ",STRING_LITERAL, line no: 376
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"bin1",STRING_LITERAL, line no: 384
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"junk",STRING_LITERAL, line no: 385
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"junk text",STRING_LITERAL, line no: 385
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fields,SIMPLE_NAME, line no: 390
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getFields,SIMPLE_NAME, line no: 390
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,length,SIMPLE_NAME, line no: 392
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b1,SIMPLE_NAME, line no: 393
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytes,SIMPLE_NAME, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,offset,SIMPLE_NAME, line no: 398
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,dirFile,SIMPLE_NAME, line no: 440
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"test",STRING_LITERAL, line no: 443
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,rmDir,SIMPLE_NAME, line no: 448
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader1,SIMPLE_NAME, line no: 459
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"deletetest",STRING_LITERAL, line no: 469
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fail,SIMPLE_NAME, line no: 473
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,e,SIMPLE_NAME, line no: 474
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,delete,SIMPLE_NAME, line no: 478
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newStringField,SIMPLE_NAME, line no: 497
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField,SIMPLE_NAME, line no: 499
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,value,SIMPLE_NAME, line no: 541
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"content",STRING_LITERAL, line no: 543
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1,SIMPLE_NAME, line no: 548
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2,SIMPLE_NAME, line no: 548
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,numDocs,SIMPLE_NAME, line no: 549
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldID,SIMPLE_NAME, line no: 559
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField,SIMPLE_NAME, line no: 567
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocValues,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms1,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms2,SIMPLE_NAME, line no: 569
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getSource,SIMPLE_NAME, line no: 573
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getArray,SIMPLE_NAME, line no: 573
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b2,SIMPLE_NAME, line no: 574
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616," and field '",STRING_LITERAL, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"'.",STRING_LITERAL, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertSame,SIMPLE_NAME, line no: 582
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Doc ",STRING_LITERAL, line no: 590
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,get,SIMPLE_NAME, line no: 591
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field1,SIMPLE_NAME, line no: 600
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field2,SIMPLE_NAME, line no: 601
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,".",STRING_LITERAL, line no: 602
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,itField1,SIMPLE_NAME, line no: 603
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,itField2,SIMPLE_NAME, line no: 604
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,hasNext,SIMPLE_NAME, line no: 605
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField1,SIMPLE_NAME, line no: 606
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,next,SIMPLE_NAME, line no: 606
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField2,SIMPLE_NAME, line no: 607
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,stringValue,SIMPLE_NAME, line no: 609
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fenum1,SIMPLE_NAME, line no: 615
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fenum2,SIMPLE_NAME, line no: 616
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different fields",STRING_LITERAL, line no: 620
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,terms1,SIMPLE_NAME, line no: 621
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNull,SIMPLE_NAME, line no: 623
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum1,SIMPLE_NAME, line no: 626
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,terms2,SIMPLE_NAME, line no: 628
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum2,SIMPLE_NAME, line no: 630
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different terms",STRING_LITERAL, line no: 633
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp1,SIMPLE_NAME, line no: 634
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp2,SIMPLE_NAME, line no: 635
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,freq,SIMPLE_NAME, line no: 640
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,27,NUMBER_LITERAL, line no: 660
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sis,SIMPLE_NAME, line no: 664
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,read,SIMPLE_NAME, line no: 665
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r,SIMPLE_NAME, line no: 666
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,c,SIMPLE_NAME, line no: 667
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,equals,SIMPLE_NAME, line no: 671
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2,SIMPLE_NAME, line no: 685
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,createDocument,SIMPLE_NAME, line no: 707
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,id,SIMPLE_NAME, line no: 707
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType,SIMPLE_NAME, line no: 709
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,false,BOOLEAN_LITERAL, line no: 710
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"id",STRING_LITERAL, line no: 713
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Throwable,SIMPLE_NAME, line no: 720
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,nsde,SIMPLE_NAME, line no: 725
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"a",STRING_LITERAL, line no: 739
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,commits,SIMPLE_NAME, line no: 744
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,listCommits,SIMPLE_NAME, line no: 744
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,commit,SIMPLE_NAME, line no: 745
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,files,SIMPLE_NAME, line no: 746
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,seen,SIMPLE_NAME, line no: 747
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fileName,SIMPLE_NAME, line no: 748
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"file ",STRING_LITERAL, line no: 749
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616," was duplicated",STRING_LITERAL, line no: 749
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"number",STRING_LITERAL, line no: 768
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"17",STRING_LITERAL, line no: 768
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r1,SIMPLE_NAME, line no: 774
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ints,SIMPLE_NAME, line no: 775
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getInts,SIMPLE_NAME, line no: 775
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,17,NUMBER_LITERAL, line no: 777
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sub0,SIMPLE_NAME, line no: 787
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ints2,SIMPLE_NAME, line no: 788
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"field",STRING_LITERAL, line no: 801
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,36,NUMBER_LITERAL, line no: 809
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,subs,SIMPLE_NAME, line no: 816
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setCodec,SIMPLE_NAME, line no: 828
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,docFreq,SIMPLE_NAME, line no: 838
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"f",STRING_LITERAL, line no: 838
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ise,SIMPLE_NAME, line no: 840
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,subReaders,SIMPLE_NAME, line no: 859
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sdp,SIMPLE_NAME, line no: 898
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,snapshot,SIMPLE_NAME, line no: 903
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"c1",STRING_LITERAL, line no: 903
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"c2",STRING_LITERAL, line no: 906
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"c3",STRING_LITERAL, line no: 909
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,currentGen,SIMPLE_NAME, line no: 911
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ic,SIMPLE_NAME, line no: 912
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616," commitGen=",STRING_LITERAL, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,indexExists,SIMPLE_NAME, line no: 925
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"a a b",STRING_LITERAL, line no: 938
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,getReader,SIMPLE_NAME, line no: 940
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"b",STRING_LITERAL, line no: 944
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,closeCount,SIMPLE_NAME, line no: 964
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new int[1],ARRAY_CREATION, line no: 964
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,listener,SIMPLE_NAME, line no: 965
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,onClose,SIMPLE_NAME, line no: 966
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader2,SIMPLE_NAME, line no: 979
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,iae,SIMPLE_NAME, line no: 998
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,decRef,SIMPLE_NAME, line no: 1012
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads,SIMPLE_NAME, line no: 1027
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,start,SIMPLE_NAME, line no: 1030
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Thread,SIMPLE_NAME, line no: 1032
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,sleep,SIMPLE_NAME, line no: 1032
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,100,NUMBER_LITERAL, line no: 1032
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,join,SIMPLE_NAME, line no: 1039
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,failed,SIMPLE_NAME, line no: 1040
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,toInc,SIMPLE_NAME, line no: 1048
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,this,THIS_EXPRESSION, line no: 1053
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,this.random,FIELD_ACCESS, line no: 1054
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,@Override,, line no: 1057
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,Override,SIMPLE_NAME, line no: 1057
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,run,SIMPLE_NAME, line no: 1058
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,failed=e,ASSIGNMENT, line no: 1066
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"field1",STRING_LITERAL, line no: 1075
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"foobar",STRING_LITERAL, line no: 1075
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"field2",STRING_LITERAL, line no: 1076
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,apache,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,lucene,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index,SIMPLE_NAME, line no: 1
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.io,QUALIFIED_NAME, line no: 20
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java,SIMPLE_NAME, line no: 20
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,io,SIMPLE_NAME, line no: 20
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,File,SIMPLE_NAME, line no: 20
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IOException,SIMPLE_NAME, line no: 22
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util,QUALIFIED_NAME, line no: 23
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,util,SIMPLE_NAME, line no: 23
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Collection,SIMPLE_NAME, line no: 23
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,HashSet,SIMPLE_NAME, line no: 24
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Iterator,SIMPLE_NAME, line no: 25
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,List,SIMPLE_NAME, line no: 26
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Random,SIMPLE_NAME, line no: 27
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Set,SIMPLE_NAME, line no: 28
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,analysis,SIMPLE_NAME, line no: 30
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,codecs,SIMPLE_NAME, line no: 31
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,lucene40,SIMPLE_NAME, line no: 31
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,document,SIMPLE_NAME, line no: 32
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Document,SIMPLE_NAME, line no: 32
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Field,SIMPLE_NAME, line no: 33
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldType,SIMPLE_NAME, line no: 34
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,StoredField,SIMPLE_NAME, line no: 35
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,StringField,SIMPLE_NAME, line no: 36
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TextField,SIMPLE_NAME, line no: 37
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,search,SIMPLE_NAME, line no: 39
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,store,SIMPLE_NAME, line no: 41
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Directory,SIMPLE_NAME, line no: 41
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Bits,SIMPLE_NAME, line no: 43
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,junit,SIMPLE_NAME, line no: 47
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Assume,SIMPLE_NAME, line no: 47
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testDocument,SIMPLE_NAME, line no: 51
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers,SIMPLE_NAME, line no: 52
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,2,NUMBER_LITERAL, line no: 52
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,dir,SIMPLE_NAME, line no: 53
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc1,SIMPLE_NAME, line no: 54
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc2,SIMPLE_NAME, line no: 55
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,random(),METHOD_INVOCATION, line no: 58
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,random,SIMPLE_NAME, line no: 58
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader,SIMPLE_NAME, line no: 60
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,open,SIMPLE_NAME, line no: 60
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,null,NULL_LITERAL, line no: 61
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,0,NUMBER_LITERAL, line no: 64
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,numFields,SIMPLE_NAME, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,unstored,SIMPLE_NAME, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,size,SIMPLE_NAME, line no: 66
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,1,NUMBER_LITERAL, line no: 67
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Terms,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,vector,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,terms,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,close,SIMPLE_NAME, line no: 73
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDoc,SIMPLE_NAME, line no: 81
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"test foo",STRING_LITERAL, line no: 81
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,true,BOOLEAN_LITERAL, line no: 81
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"test blah",STRING_LITERAL, line no: 83
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"test wow",STRING_LITERAL, line no: 85
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers1,SIMPLE_NAME, line no: 87
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2,SIMPLE_NAME, line no: 88
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,mr2,SIMPLE_NAME, line no: 89
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,mr3,SIMPLE_NAME, line no: 90
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,te2,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getTerms,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"body",STRING_LITERAL, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,iterator,SIMPLE_NAME, line no: 93
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"wow",STRING_LITERAL, line no: 94
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,td,SIMPLE_NAME, line no: 95
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,docs,SIMPLE_NAME, line no: 95
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,term,SIMPLE_NAME, line no: 97
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,te3,SIMPLE_NAME, line no: 102
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ret,SIMPLE_NAME, line no: 108
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,docID,SIMPLE_NAME, line no: 112
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,String,SIMPLE_NAME, line no: 127
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,s,SIMPLE_NAME, line no: 127
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,create,SIMPLE_NAME, line no: 127
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,iw,SIMPLE_NAME, line no: 128
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,CREATE,SIMPLE_NAME, line no: 131
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,APPEND,SIMPLE_NAME, line no: 131
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc,SIMPLE_NAME, line no: 132
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,add,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Store,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,NO,SIMPLE_NAME, line no: 133
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocument,SIMPLE_NAME, line no: 134
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Exception,SIMPLE_NAME, line no: 138
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,d,SIMPLE_NAME, line no: 139
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer,SIMPLE_NAME, line no: 140
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType3,SIMPLE_NAME, line no: 177
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setStored,SIMPLE_NAME, line no: 178
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"keyword",STRING_LITERAL, line no: 180
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"test1",STRING_LITERAL, line no: 180
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,YES,SIMPLE_NAME, line no: 180
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"text",STRING_LITERAL, line no: 181
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"unindexed",STRING_LITERAL, line no: 182
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"unstored",STRING_LITERAL, line no: 183
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getConfig,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i,SIMPLE_NAME, line no: 204
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,5,NUMBER_LITERAL, line no: 204
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"keyword2",STRING_LITERAL, line no: 215
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"text2",STRING_LITERAL, line no: 216
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"unstored2",STRING_LITERAL, line no: 218
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType5,SIMPLE_NAME, line no: 223
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType6,SIMPLE_NAME, line no: 225
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType7,SIMPLE_NAME, line no: 228
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType8,SIMPLE_NAME, line no: 231
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"tvnot",STRING_LITERAL, line no: 238
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"termvector",STRING_LITERAL, line no: 239
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"tvposition",STRING_LITERAL, line no: 241
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,name,SIMPLE_NAME, line no: 258
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,contains,SIMPLE_NAME, line no: 270
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,11,NUMBER_LITERAL, line no: 285
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,toString,SIMPLE_NAME, line no: 304
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,4,NUMBER_LITERAL, line no: 304
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,msg,SIMPLE_NAME, line no: 348
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Term,SIMPLE_NAME, line no: 350
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,expected,SIMPLE_NAME, line no: 351
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tdocs,SIMPLE_NAME, line no: 353
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field,SIMPLE_NAME, line no: 354
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,text,SIMPLE_NAME, line no: 355
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,count,SIMPLE_NAME, line no: 359
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bin,SIMPLE_NAME, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,3,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,6,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,7,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,8,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,9,NUMBER_LITERAL, line no: 371
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,10,NUMBER_LITERAL, line no: 375
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"document number ",STRING_LITERAL, line no: 376
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"bin1",STRING_LITERAL, line no: 384
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"junk",STRING_LITERAL, line no: 385
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"junk text",STRING_LITERAL, line no: 385
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fields,SIMPLE_NAME, line no: 390
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getFields,SIMPLE_NAME, line no: 390
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,length,SIMPLE_NAME, line no: 392
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b1,SIMPLE_NAME, line no: 393
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytes,SIMPLE_NAME, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,offset,SIMPLE_NAME, line no: 398
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,dirFile,SIMPLE_NAME, line no: 440
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"test",STRING_LITERAL, line no: 443
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,rmDir,SIMPLE_NAME, line no: 448
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader1,SIMPLE_NAME, line no: 459
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"deletetest",STRING_LITERAL, line no: 469
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fail,SIMPLE_NAME, line no: 473
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,e,SIMPLE_NAME, line no: 474
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,delete,SIMPLE_NAME, line no: 478
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newStringField,SIMPLE_NAME, line no: 497
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField,SIMPLE_NAME, line no: 499
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,value,SIMPLE_NAME, line no: 541
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"content",STRING_LITERAL, line no: 543
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1,SIMPLE_NAME, line no: 548
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2,SIMPLE_NAME, line no: 548
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,numDocs,SIMPLE_NAME, line no: 549
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldID,SIMPLE_NAME, line no: 559
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField,SIMPLE_NAME, line no: 567
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocValues,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms1,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms2,SIMPLE_NAME, line no: 569
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getSource,SIMPLE_NAME, line no: 573
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getArray,SIMPLE_NAME, line no: 573
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b2,SIMPLE_NAME, line no: 574
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616," and field '",STRING_LITERAL, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"'.",STRING_LITERAL, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertSame,SIMPLE_NAME, line no: 582
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Doc ",STRING_LITERAL, line no: 590
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,get,SIMPLE_NAME, line no: 591
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field1,SIMPLE_NAME, line no: 600
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field2,SIMPLE_NAME, line no: 601
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,".",STRING_LITERAL, line no: 602
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,itField1,SIMPLE_NAME, line no: 603
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,itField2,SIMPLE_NAME, line no: 604
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,hasNext,SIMPLE_NAME, line no: 605
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField1,SIMPLE_NAME, line no: 606
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,next,SIMPLE_NAME, line no: 606
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField2,SIMPLE_NAME, line no: 607
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,stringValue,SIMPLE_NAME, line no: 609
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fenum1,SIMPLE_NAME, line no: 615
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fenum2,SIMPLE_NAME, line no: 616
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different fields",STRING_LITERAL, line no: 620
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,terms1,SIMPLE_NAME, line no: 621
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNull,SIMPLE_NAME, line no: 623
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum1,SIMPLE_NAME, line no: 626
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,terms2,SIMPLE_NAME, line no: 628
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum2,SIMPLE_NAME, line no: 630
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different terms",STRING_LITERAL, line no: 633
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp1,SIMPLE_NAME, line no: 634
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp2,SIMPLE_NAME, line no: 635
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,freq,SIMPLE_NAME, line no: 640
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,27,NUMBER_LITERAL, line no: 660
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sis,SIMPLE_NAME, line no: 664
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,read,SIMPLE_NAME, line no: 665
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r,SIMPLE_NAME, line no: 666
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,c,SIMPLE_NAME, line no: 667
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,equals,SIMPLE_NAME, line no: 671
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2,SIMPLE_NAME, line no: 685
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,createDocument,SIMPLE_NAME, line no: 707
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,id,SIMPLE_NAME, line no: 707
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType,SIMPLE_NAME, line no: 709
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,false,BOOLEAN_LITERAL, line no: 710
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"id",STRING_LITERAL, line no: 713
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Throwable,SIMPLE_NAME, line no: 720
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,nsde,SIMPLE_NAME, line no: 725
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"a",STRING_LITERAL, line no: 739
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,commits,SIMPLE_NAME, line no: 744
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,listCommits,SIMPLE_NAME, line no: 744
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,commit,SIMPLE_NAME, line no: 745
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,files,SIMPLE_NAME, line no: 746
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,seen,SIMPLE_NAME, line no: 747
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fileName,SIMPLE_NAME, line no: 748
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"file ",STRING_LITERAL, line no: 749
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616," was duplicated",STRING_LITERAL, line no: 749
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"number",STRING_LITERAL, line no: 768
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"17",STRING_LITERAL, line no: 768
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r1,SIMPLE_NAME, line no: 774
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ints,SIMPLE_NAME, line no: 775
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getInts,SIMPLE_NAME, line no: 775
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,17,NUMBER_LITERAL, line no: 777
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sub0,SIMPLE_NAME, line no: 787
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ints2,SIMPLE_NAME, line no: 788
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"field",STRING_LITERAL, line no: 801
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,36,NUMBER_LITERAL, line no: 809
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,subs,SIMPLE_NAME, line no: 816
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setCodec,SIMPLE_NAME, line no: 828
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,docFreq,SIMPLE_NAME, line no: 838
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"f",STRING_LITERAL, line no: 838
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ise,SIMPLE_NAME, line no: 840
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,subReaders,SIMPLE_NAME, line no: 859
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sdp,SIMPLE_NAME, line no: 898
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,snapshot,SIMPLE_NAME, line no: 903
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"c1",STRING_LITERAL, line no: 903
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"c2",STRING_LITERAL, line no: 906
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"c3",STRING_LITERAL, line no: 909
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,currentGen,SIMPLE_NAME, line no: 911
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ic,SIMPLE_NAME, line no: 912
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616," commitGen=",STRING_LITERAL, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,indexExists,SIMPLE_NAME, line no: 925
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"a a b",STRING_LITERAL, line no: 938
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,getReader,SIMPLE_NAME, line no: 940
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"b",STRING_LITERAL, line no: 944
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,closeCount,SIMPLE_NAME, line no: 964
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new int[1],ARRAY_CREATION, line no: 964
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,listener,SIMPLE_NAME, line no: 965
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,onClose,SIMPLE_NAME, line no: 966
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader2,SIMPLE_NAME, line no: 979
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,iae,SIMPLE_NAME, line no: 998
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,decRef,SIMPLE_NAME, line no: 1012
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads,SIMPLE_NAME, line no: 1027
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,start,SIMPLE_NAME, line no: 1030
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Thread,SIMPLE_NAME, line no: 1032
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,sleep,SIMPLE_NAME, line no: 1032
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,100,NUMBER_LITERAL, line no: 1032
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,join,SIMPLE_NAME, line no: 1039
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,failed,SIMPLE_NAME, line no: 1040
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,toInc,SIMPLE_NAME, line no: 1048
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,this,THIS_EXPRESSION, line no: 1053
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,this.random,FIELD_ACCESS, line no: 1054
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,@Override,, line no: 1057
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,Override,SIMPLE_NAME, line no: 1057
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,run,SIMPLE_NAME, line no: 1058
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,failed=e,ASSIGNMENT, line no: 1066
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"field1",STRING_LITERAL, line no: 1075
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"foobar",STRING_LITERAL, line no: 1075
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"field2",STRING_LITERAL, line no: 1076
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
MultiFields.getFields(index1),METHOD_INVOCATION, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,org,SIMPLE_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,apache,SIMPLE_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,lucene,SIMPLE_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,index,SIMPLE_NAME, line no: 1
MultiFields,SIMPLE_NAME, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
MultiFields,SIMPLE_NAME, line no: 616,java.io,QUALIFIED_NAME, line no: 20
MultiFields,SIMPLE_NAME, line no: 616,java,SIMPLE_NAME, line no: 20
MultiFields,SIMPLE_NAME, line no: 616,io,SIMPLE_NAME, line no: 20
MultiFields,SIMPLE_NAME, line no: 616,File,SIMPLE_NAME, line no: 20
MultiFields,SIMPLE_NAME, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
MultiFields,SIMPLE_NAME, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
MultiFields,SIMPLE_NAME, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
MultiFields,SIMPLE_NAME, line no: 616,IOException,SIMPLE_NAME, line no: 22
MultiFields,SIMPLE_NAME, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
MultiFields,SIMPLE_NAME, line no: 616,java.util,QUALIFIED_NAME, line no: 23
MultiFields,SIMPLE_NAME, line no: 616,util,SIMPLE_NAME, line no: 23
MultiFields,SIMPLE_NAME, line no: 616,Collection,SIMPLE_NAME, line no: 23
MultiFields,SIMPLE_NAME, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
MultiFields,SIMPLE_NAME, line no: 616,HashSet,SIMPLE_NAME, line no: 24
MultiFields,SIMPLE_NAME, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
MultiFields,SIMPLE_NAME, line no: 616,Iterator,SIMPLE_NAME, line no: 25
MultiFields,SIMPLE_NAME, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
MultiFields,SIMPLE_NAME, line no: 616,List,SIMPLE_NAME, line no: 26
MultiFields,SIMPLE_NAME, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
MultiFields,SIMPLE_NAME, line no: 616,Random,SIMPLE_NAME, line no: 27
MultiFields,SIMPLE_NAME, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
MultiFields,SIMPLE_NAME, line no: 616,Set,SIMPLE_NAME, line no: 28
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
MultiFields,SIMPLE_NAME, line no: 616,analysis,SIMPLE_NAME, line no: 30
MultiFields,SIMPLE_NAME, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
MultiFields,SIMPLE_NAME, line no: 616,codecs,SIMPLE_NAME, line no: 31
MultiFields,SIMPLE_NAME, line no: 616,lucene40,SIMPLE_NAME, line no: 31
MultiFields,SIMPLE_NAME, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
MultiFields,SIMPLE_NAME, line no: 616,document,SIMPLE_NAME, line no: 32
MultiFields,SIMPLE_NAME, line no: 616,Document,SIMPLE_NAME, line no: 32
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
MultiFields,SIMPLE_NAME, line no: 616,Field,SIMPLE_NAME, line no: 33
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
MultiFields,SIMPLE_NAME, line no: 616,FieldType,SIMPLE_NAME, line no: 34
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
MultiFields,SIMPLE_NAME, line no: 616,StoredField,SIMPLE_NAME, line no: 35
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
MultiFields,SIMPLE_NAME, line no: 616,StringField,SIMPLE_NAME, line no: 36
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
MultiFields,SIMPLE_NAME, line no: 616,TextField,SIMPLE_NAME, line no: 37
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
MultiFields,SIMPLE_NAME, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
MultiFields,SIMPLE_NAME, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
MultiFields,SIMPLE_NAME, line no: 616,search,SIMPLE_NAME, line no: 39
MultiFields,SIMPLE_NAME, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
MultiFields,SIMPLE_NAME, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
MultiFields,SIMPLE_NAME, line no: 616,store,SIMPLE_NAME, line no: 41
MultiFields,SIMPLE_NAME, line no: 616,Directory,SIMPLE_NAME, line no: 41
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
MultiFields,SIMPLE_NAME, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
MultiFields,SIMPLE_NAME, line no: 616,Bits,SIMPLE_NAME, line no: 43
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
MultiFields,SIMPLE_NAME, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
MultiFields,SIMPLE_NAME, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
MultiFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
MultiFields,SIMPLE_NAME, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
MultiFields,SIMPLE_NAME, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
MultiFields,SIMPLE_NAME, line no: 616,junit,SIMPLE_NAME, line no: 47
MultiFields,SIMPLE_NAME, line no: 616,Assume,SIMPLE_NAME, line no: 47
MultiFields,SIMPLE_NAME, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
MultiFields,SIMPLE_NAME, line no: 616,testDocument,SIMPLE_NAME, line no: 51
MultiFields,SIMPLE_NAME, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
MultiFields,SIMPLE_NAME, line no: 616,readers,SIMPLE_NAME, line no: 52
MultiFields,SIMPLE_NAME, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
MultiFields,SIMPLE_NAME, line no: 616,2,NUMBER_LITERAL, line no: 52
MultiFields,SIMPLE_NAME, line no: 616,dir,SIMPLE_NAME, line no: 53
MultiFields,SIMPLE_NAME, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
MultiFields,SIMPLE_NAME, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
MultiFields,SIMPLE_NAME, line no: 616,doc1,SIMPLE_NAME, line no: 54
MultiFields,SIMPLE_NAME, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
MultiFields,SIMPLE_NAME, line no: 616,doc2,SIMPLE_NAME, line no: 55
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
MultiFields,SIMPLE_NAME, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
MultiFields,SIMPLE_NAME, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
MultiFields,SIMPLE_NAME, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
MultiFields,SIMPLE_NAME, line no: 616,random(),METHOD_INVOCATION, line no: 58
MultiFields,SIMPLE_NAME, line no: 616,random,SIMPLE_NAME, line no: 58
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
MultiFields,SIMPLE_NAME, line no: 616,reader,SIMPLE_NAME, line no: 60
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
MultiFields,SIMPLE_NAME, line no: 616,open,SIMPLE_NAME, line no: 60
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
MultiFields,SIMPLE_NAME, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
MultiFields,SIMPLE_NAME, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
MultiFields,SIMPLE_NAME, line no: 616,null,NULL_LITERAL, line no: 61
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
MultiFields,SIMPLE_NAME, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
MultiFields,SIMPLE_NAME, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
MultiFields,SIMPLE_NAME, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
MultiFields,SIMPLE_NAME, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
MultiFields,SIMPLE_NAME, line no: 616,0,NUMBER_LITERAL, line no: 64
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
MultiFields,SIMPLE_NAME, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,numFields,SIMPLE_NAME, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,unstored,SIMPLE_NAME, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,size,SIMPLE_NAME, line no: 66
MultiFields,SIMPLE_NAME, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
MultiFields,SIMPLE_NAME, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
MultiFields,SIMPLE_NAME, line no: 616,1,NUMBER_LITERAL, line no: 67
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
MultiFields,SIMPLE_NAME, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
MultiFields,SIMPLE_NAME, line no: 616,Terms,SIMPLE_NAME, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,vector,SIMPLE_NAME, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,terms,SIMPLE_NAME, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
MultiFields,SIMPLE_NAME, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
MultiFields,SIMPLE_NAME, line no: 616,close,SIMPLE_NAME, line no: 73
MultiFields,SIMPLE_NAME, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
MultiFields,SIMPLE_NAME, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
MultiFields,SIMPLE_NAME, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
MultiFields,SIMPLE_NAME, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
MultiFields,SIMPLE_NAME, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
MultiFields,SIMPLE_NAME, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
MultiFields,SIMPLE_NAME, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
MultiFields,SIMPLE_NAME, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
MultiFields,SIMPLE_NAME, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
MultiFields,SIMPLE_NAME, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
MultiFields,SIMPLE_NAME, line no: 616,addDoc,SIMPLE_NAME, line no: 81
MultiFields,SIMPLE_NAME, line no: 616,"test foo",STRING_LITERAL, line no: 81
MultiFields,SIMPLE_NAME, line no: 616,true,BOOLEAN_LITERAL, line no: 81
MultiFields,SIMPLE_NAME, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
MultiFields,SIMPLE_NAME, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
MultiFields,SIMPLE_NAME, line no: 616,"test blah",STRING_LITERAL, line no: 83
MultiFields,SIMPLE_NAME, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
MultiFields,SIMPLE_NAME, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
MultiFields,SIMPLE_NAME, line no: 616,"test wow",STRING_LITERAL, line no: 85
MultiFields,SIMPLE_NAME, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
MultiFields,SIMPLE_NAME, line no: 616,readers1,SIMPLE_NAME, line no: 87
MultiFields,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
MultiFields,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
MultiFields,SIMPLE_NAME, line no: 616,readers2,SIMPLE_NAME, line no: 88
MultiFields,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
MultiFields,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
MultiFields,SIMPLE_NAME, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
MultiFields,SIMPLE_NAME, line no: 616,mr2,SIMPLE_NAME, line no: 89
MultiFields,SIMPLE_NAME, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
MultiFields,SIMPLE_NAME, line no: 616,mr3,SIMPLE_NAME, line no: 90
MultiFields,SIMPLE_NAME, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
MultiFields,SIMPLE_NAME, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,te2,SIMPLE_NAME, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,getTerms,SIMPLE_NAME, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,"body",STRING_LITERAL, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,iterator,SIMPLE_NAME, line no: 93
MultiFields,SIMPLE_NAME, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
MultiFields,SIMPLE_NAME, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
MultiFields,SIMPLE_NAME, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
MultiFields,SIMPLE_NAME, line no: 616,"wow",STRING_LITERAL, line no: 94
MultiFields,SIMPLE_NAME, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
MultiFields,SIMPLE_NAME, line no: 616,td,SIMPLE_NAME, line no: 95
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
MultiFields,SIMPLE_NAME, line no: 616,docs,SIMPLE_NAME, line no: 95
MultiFields,SIMPLE_NAME, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
MultiFields,SIMPLE_NAME, line no: 616,term,SIMPLE_NAME, line no: 97
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
MultiFields,SIMPLE_NAME, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
MultiFields,SIMPLE_NAME, line no: 616,te3,SIMPLE_NAME, line no: 102
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
MultiFields,SIMPLE_NAME, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
MultiFields,SIMPLE_NAME, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
MultiFields,SIMPLE_NAME, line no: 616,ret,SIMPLE_NAME, line no: 108
MultiFields,SIMPLE_NAME, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,docID,SIMPLE_NAME, line no: 112
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
MultiFields,SIMPLE_NAME, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
MultiFields,SIMPLE_NAME, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
MultiFields,SIMPLE_NAME, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
MultiFields,SIMPLE_NAME, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
MultiFields,SIMPLE_NAME, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
MultiFields,SIMPLE_NAME, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
MultiFields,SIMPLE_NAME, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
MultiFields,SIMPLE_NAME, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
MultiFields,SIMPLE_NAME, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
MultiFields,SIMPLE_NAME, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
MultiFields,SIMPLE_NAME, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
MultiFields,SIMPLE_NAME, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
MultiFields,SIMPLE_NAME, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
MultiFields,SIMPLE_NAME, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
MultiFields,SIMPLE_NAME, line no: 616,String,SIMPLE_NAME, line no: 127
MultiFields,SIMPLE_NAME, line no: 616,s,SIMPLE_NAME, line no: 127
MultiFields,SIMPLE_NAME, line no: 616,create,SIMPLE_NAME, line no: 127
MultiFields,SIMPLE_NAME, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
MultiFields,SIMPLE_NAME, line no: 616,iw,SIMPLE_NAME, line no: 128
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
MultiFields,SIMPLE_NAME, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
MultiFields,SIMPLE_NAME, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
MultiFields,SIMPLE_NAME, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
MultiFields,SIMPLE_NAME, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
MultiFields,SIMPLE_NAME, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
MultiFields,SIMPLE_NAME, line no: 616,CREATE,SIMPLE_NAME, line no: 131
MultiFields,SIMPLE_NAME, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
MultiFields,SIMPLE_NAME, line no: 616,APPEND,SIMPLE_NAME, line no: 131
MultiFields,SIMPLE_NAME, line no: 616,doc,SIMPLE_NAME, line no: 132
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,add,SIMPLE_NAME, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,newTextField,SIMPLE_NAME, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,Store,SIMPLE_NAME, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,NO,SIMPLE_NAME, line no: 133
MultiFields,SIMPLE_NAME, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
MultiFields,SIMPLE_NAME, line no: 616,addDocument,SIMPLE_NAME, line no: 134
MultiFields,SIMPLE_NAME, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
MultiFields,SIMPLE_NAME, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
MultiFields,SIMPLE_NAME, line no: 616,Exception,SIMPLE_NAME, line no: 138
MultiFields,SIMPLE_NAME, line no: 616,d,SIMPLE_NAME, line no: 139
MultiFields,SIMPLE_NAME, line no: 616,writer,SIMPLE_NAME, line no: 140
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
MultiFields,SIMPLE_NAME, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
MultiFields,SIMPLE_NAME, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
MultiFields,SIMPLE_NAME, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
MultiFields,SIMPLE_NAME, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
MultiFields,SIMPLE_NAME, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
MultiFields,SIMPLE_NAME, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
MultiFields,SIMPLE_NAME, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
MultiFields,SIMPLE_NAME, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
MultiFields,SIMPLE_NAME, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
MultiFields,SIMPLE_NAME, line no: 616,customType3,SIMPLE_NAME, line no: 177
MultiFields,SIMPLE_NAME, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
MultiFields,SIMPLE_NAME, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
MultiFields,SIMPLE_NAME, line no: 616,setStored,SIMPLE_NAME, line no: 178
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
MultiFields,SIMPLE_NAME, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
MultiFields,SIMPLE_NAME, line no: 616,"keyword",STRING_LITERAL, line no: 180
MultiFields,SIMPLE_NAME, line no: 616,"test1",STRING_LITERAL, line no: 180
MultiFields,SIMPLE_NAME, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
MultiFields,SIMPLE_NAME, line no: 616,YES,SIMPLE_NAME, line no: 180
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
MultiFields,SIMPLE_NAME, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
MultiFields,SIMPLE_NAME, line no: 616,"text",STRING_LITERAL, line no: 181
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
MultiFields,SIMPLE_NAME, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
MultiFields,SIMPLE_NAME, line no: 616,"unindexed",STRING_LITERAL, line no: 182
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
MultiFields,SIMPLE_NAME, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
MultiFields,SIMPLE_NAME, line no: 616,"unstored",STRING_LITERAL, line no: 183
MultiFields,SIMPLE_NAME, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
MultiFields,SIMPLE_NAME, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
MultiFields,SIMPLE_NAME, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
MultiFields,SIMPLE_NAME, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
MultiFields,SIMPLE_NAME, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
MultiFields,SIMPLE_NAME, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
MultiFields,SIMPLE_NAME, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,getConfig,SIMPLE_NAME, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
MultiFields,SIMPLE_NAME, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
MultiFields,SIMPLE_NAME, line no: 616,i,SIMPLE_NAME, line no: 204
MultiFields,SIMPLE_NAME, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
MultiFields,SIMPLE_NAME, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
MultiFields,SIMPLE_NAME, line no: 616,5,NUMBER_LITERAL, line no: 204
MultiFields,SIMPLE_NAME, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
MultiFields,SIMPLE_NAME, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
MultiFields,SIMPLE_NAME, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
MultiFields,SIMPLE_NAME, line no: 616,"keyword2",STRING_LITERAL, line no: 215
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
MultiFields,SIMPLE_NAME, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
MultiFields,SIMPLE_NAME, line no: 616,"text2",STRING_LITERAL, line no: 216
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
MultiFields,SIMPLE_NAME, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
MultiFields,SIMPLE_NAME, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
MultiFields,SIMPLE_NAME, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
MultiFields,SIMPLE_NAME, line no: 616,"unstored2",STRING_LITERAL, line no: 218
MultiFields,SIMPLE_NAME, line no: 616,customType5,SIMPLE_NAME, line no: 223
MultiFields,SIMPLE_NAME, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
MultiFields,SIMPLE_NAME, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
MultiFields,SIMPLE_NAME, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
MultiFields,SIMPLE_NAME, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
MultiFields,SIMPLE_NAME, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
MultiFields,SIMPLE_NAME, line no: 616,customType6,SIMPLE_NAME, line no: 225
MultiFields,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
MultiFields,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
MultiFields,SIMPLE_NAME, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
MultiFields,SIMPLE_NAME, line no: 616,customType7,SIMPLE_NAME, line no: 228
MultiFields,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
MultiFields,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
MultiFields,SIMPLE_NAME, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
MultiFields,SIMPLE_NAME, line no: 616,customType8,SIMPLE_NAME, line no: 231
MultiFields,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
MultiFields,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
MultiFields,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
MultiFields,SIMPLE_NAME, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
MultiFields,SIMPLE_NAME, line no: 616,"tvnot",STRING_LITERAL, line no: 238
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
MultiFields,SIMPLE_NAME, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
MultiFields,SIMPLE_NAME, line no: 616,"termvector",STRING_LITERAL, line no: 239
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
MultiFields,SIMPLE_NAME, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
MultiFields,SIMPLE_NAME, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
MultiFields,SIMPLE_NAME, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
MultiFields,SIMPLE_NAME, line no: 616,"tvposition",STRING_LITERAL, line no: 241
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
MultiFields,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
MultiFields,SIMPLE_NAME, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
MultiFields,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
MultiFields,SIMPLE_NAME, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
MultiFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
MultiFields,SIMPLE_NAME, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
MultiFields,SIMPLE_NAME, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
MultiFields,SIMPLE_NAME, line no: 616,name,SIMPLE_NAME, line no: 258
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
MultiFields,SIMPLE_NAME, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
MultiFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
MultiFields,SIMPLE_NAME, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
MultiFields,SIMPLE_NAME, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
MultiFields,SIMPLE_NAME, line no: 616,contains,SIMPLE_NAME, line no: 270
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
MultiFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
MultiFields,SIMPLE_NAME, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
MultiFields,SIMPLE_NAME, line no: 616,11,NUMBER_LITERAL, line no: 285
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
MultiFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
MultiFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
MultiFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
MultiFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
MultiFields,SIMPLE_NAME, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
MultiFields,SIMPLE_NAME, line no: 616,toString,SIMPLE_NAME, line no: 304
MultiFields,SIMPLE_NAME, line no: 616,4,NUMBER_LITERAL, line no: 304
MultiFields,SIMPLE_NAME, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
MultiFields,SIMPLE_NAME, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
MultiFields,SIMPLE_NAME, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
MultiFields,SIMPLE_NAME, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
MultiFields,SIMPLE_NAME, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
MultiFields,SIMPLE_NAME, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
MultiFields,SIMPLE_NAME, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
MultiFields,SIMPLE_NAME, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
MultiFields,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
MultiFields,SIMPLE_NAME, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
MultiFields,SIMPLE_NAME, line no: 616,msg,SIMPLE_NAME, line no: 348
MultiFields,SIMPLE_NAME, line no: 616,Term,SIMPLE_NAME, line no: 350
MultiFields,SIMPLE_NAME, line no: 616,expected,SIMPLE_NAME, line no: 351
MultiFields,SIMPLE_NAME, line no: 616,tdocs,SIMPLE_NAME, line no: 353
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
MultiFields,SIMPLE_NAME, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
MultiFields,SIMPLE_NAME, line no: 616,field,SIMPLE_NAME, line no: 354
MultiFields,SIMPLE_NAME, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
MultiFields,SIMPLE_NAME, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
MultiFields,SIMPLE_NAME, line no: 616,text,SIMPLE_NAME, line no: 355
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
MultiFields,SIMPLE_NAME, line no: 616,count,SIMPLE_NAME, line no: 359
MultiFields,SIMPLE_NAME, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
MultiFields,SIMPLE_NAME, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
MultiFields,SIMPLE_NAME, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
MultiFields,SIMPLE_NAME, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
MultiFields,SIMPLE_NAME, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
MultiFields,SIMPLE_NAME, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
MultiFields,SIMPLE_NAME, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
MultiFields,SIMPLE_NAME, line no: 616,bin,SIMPLE_NAME, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,3,NUMBER_LITERAL, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,6,NUMBER_LITERAL, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,7,NUMBER_LITERAL, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,8,NUMBER_LITERAL, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,9,NUMBER_LITERAL, line no: 371
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
MultiFields,SIMPLE_NAME, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
MultiFields,SIMPLE_NAME, line no: 616,10,NUMBER_LITERAL, line no: 375
MultiFields,SIMPLE_NAME, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
MultiFields,SIMPLE_NAME, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
MultiFields,SIMPLE_NAME, line no: 616,"document number ",STRING_LITERAL, line no: 376
MultiFields,SIMPLE_NAME, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
MultiFields,SIMPLE_NAME, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
MultiFields,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
MultiFields,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
MultiFields,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
MultiFields,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
MultiFields,SIMPLE_NAME, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
MultiFields,SIMPLE_NAME, line no: 616,"bin1",STRING_LITERAL, line no: 384
MultiFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
MultiFields,SIMPLE_NAME, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
MultiFields,SIMPLE_NAME, line no: 616,"junk",STRING_LITERAL, line no: 385
MultiFields,SIMPLE_NAME, line no: 616,"junk text",STRING_LITERAL, line no: 385
MultiFields,SIMPLE_NAME, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
MultiFields,SIMPLE_NAME, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
MultiFields,SIMPLE_NAME, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
MultiFields,SIMPLE_NAME, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
MultiFields,SIMPLE_NAME, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
MultiFields,SIMPLE_NAME, line no: 616,fields,SIMPLE_NAME, line no: 390
MultiFields,SIMPLE_NAME, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
MultiFields,SIMPLE_NAME, line no: 616,getFields,SIMPLE_NAME, line no: 390
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
MultiFields,SIMPLE_NAME, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
MultiFields,SIMPLE_NAME, line no: 616,length,SIMPLE_NAME, line no: 392
MultiFields,SIMPLE_NAME, line no: 616,b1,SIMPLE_NAME, line no: 393
MultiFields,SIMPLE_NAME, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
MultiFields,SIMPLE_NAME, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
MultiFields,SIMPLE_NAME, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
MultiFields,SIMPLE_NAME, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
MultiFields,SIMPLE_NAME, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
MultiFields,SIMPLE_NAME, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
MultiFields,SIMPLE_NAME, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
MultiFields,SIMPLE_NAME, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,bytes,SIMPLE_NAME, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,offset,SIMPLE_NAME, line no: 398
MultiFields,SIMPLE_NAME, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
MultiFields,SIMPLE_NAME, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
MultiFields,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
MultiFields,SIMPLE_NAME, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
MultiFields,SIMPLE_NAME, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
MultiFields,SIMPLE_NAME, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
MultiFields,SIMPLE_NAME, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
MultiFields,SIMPLE_NAME, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
MultiFields,SIMPLE_NAME, line no: 616,dirFile,SIMPLE_NAME, line no: 440
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
MultiFields,SIMPLE_NAME, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
MultiFields,SIMPLE_NAME, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
MultiFields,SIMPLE_NAME, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
MultiFields,SIMPLE_NAME, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
MultiFields,SIMPLE_NAME, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
MultiFields,SIMPLE_NAME, line no: 616,"test",STRING_LITERAL, line no: 443
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
MultiFields,SIMPLE_NAME, line no: 616,rmDir,SIMPLE_NAME, line no: 448
MultiFields,SIMPLE_NAME, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
MultiFields,SIMPLE_NAME, line no: 616,reader1,SIMPLE_NAME, line no: 459
MultiFields,SIMPLE_NAME, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
MultiFields,SIMPLE_NAME, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
MultiFields,SIMPLE_NAME, line no: 616,"deletetest",STRING_LITERAL, line no: 469
MultiFields,SIMPLE_NAME, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
MultiFields,SIMPLE_NAME, line no: 616,fail,SIMPLE_NAME, line no: 473
MultiFields,SIMPLE_NAME, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
MultiFields,SIMPLE_NAME, line no: 616,e,SIMPLE_NAME, line no: 474
MultiFields,SIMPLE_NAME, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
MultiFields,SIMPLE_NAME, line no: 616,delete,SIMPLE_NAME, line no: 478
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
MultiFields,SIMPLE_NAME, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
MultiFields,SIMPLE_NAME, line no: 616,newStringField,SIMPLE_NAME, line no: 497
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
MultiFields,SIMPLE_NAME, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
MultiFields,SIMPLE_NAME, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
MultiFields,SIMPLE_NAME, line no: 616,newField,SIMPLE_NAME, line no: 499
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
MultiFields,SIMPLE_NAME, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
MultiFields,SIMPLE_NAME, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
MultiFields,SIMPLE_NAME, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
MultiFields,SIMPLE_NAME, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
MultiFields,SIMPLE_NAME, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
MultiFields,SIMPLE_NAME, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
MultiFields,SIMPLE_NAME, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
MultiFields,SIMPLE_NAME, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
MultiFields,SIMPLE_NAME, line no: 616,value,SIMPLE_NAME, line no: 541
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
MultiFields,SIMPLE_NAME, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
MultiFields,SIMPLE_NAME, line no: 616,"content",STRING_LITERAL, line no: 543
MultiFields,SIMPLE_NAME, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
MultiFields,SIMPLE_NAME, line no: 616,index1,SIMPLE_NAME, line no: 548
MultiFields,SIMPLE_NAME, line no: 616,index2,SIMPLE_NAME, line no: 548
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
MultiFields,SIMPLE_NAME, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
MultiFields,SIMPLE_NAME, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
MultiFields,SIMPLE_NAME, line no: 616,numDocs,SIMPLE_NAME, line no: 549
MultiFields,SIMPLE_NAME, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
MultiFields,SIMPLE_NAME, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
MultiFields,SIMPLE_NAME, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
MultiFields,SIMPLE_NAME, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
MultiFields,SIMPLE_NAME, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
MultiFields,SIMPLE_NAME, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
MultiFields,SIMPLE_NAME, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
MultiFields,SIMPLE_NAME, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
MultiFields,SIMPLE_NAME, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
MultiFields,SIMPLE_NAME, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
MultiFields,SIMPLE_NAME, line no: 616,fieldID,SIMPLE_NAME, line no: 559
MultiFields,SIMPLE_NAME, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
MultiFields,SIMPLE_NAME, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
MultiFields,SIMPLE_NAME, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
MultiFields,SIMPLE_NAME, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
MultiFields,SIMPLE_NAME, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
MultiFields,SIMPLE_NAME, line no: 616,curField,SIMPLE_NAME, line no: 567
MultiFields,SIMPLE_NAME, line no: 616,DocValues,SIMPLE_NAME, line no: 568
MultiFields,SIMPLE_NAME, line no: 616,norms1,SIMPLE_NAME, line no: 568
MultiFields,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
MultiFields,SIMPLE_NAME, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
MultiFields,SIMPLE_NAME, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
MultiFields,SIMPLE_NAME, line no: 616,norms2,SIMPLE_NAME, line no: 569
MultiFields,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
MultiFields,SIMPLE_NAME, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
MultiFields,SIMPLE_NAME, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
MultiFields,SIMPLE_NAME, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
MultiFields,SIMPLE_NAME, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
MultiFields,SIMPLE_NAME, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
MultiFields,SIMPLE_NAME, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
MultiFields,SIMPLE_NAME, line no: 616,getSource,SIMPLE_NAME, line no: 573
MultiFields,SIMPLE_NAME, line no: 616,getArray,SIMPLE_NAME, line no: 573
MultiFields,SIMPLE_NAME, line no: 616,b2,SIMPLE_NAME, line no: 574
MultiFields,SIMPLE_NAME, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
MultiFields,SIMPLE_NAME, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
MultiFields,SIMPLE_NAME, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
MultiFields,SIMPLE_NAME, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
MultiFields,SIMPLE_NAME, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
MultiFields,SIMPLE_NAME, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
MultiFields,SIMPLE_NAME, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
MultiFields,SIMPLE_NAME, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
MultiFields,SIMPLE_NAME, line no: 616," and field '",STRING_LITERAL, line no: 577
MultiFields,SIMPLE_NAME, line no: 616,"'.",STRING_LITERAL, line no: 577
MultiFields,SIMPLE_NAME, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
MultiFields,SIMPLE_NAME, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
MultiFields,SIMPLE_NAME, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
MultiFields,SIMPLE_NAME, line no: 616,assertSame,SIMPLE_NAME, line no: 582
MultiFields,SIMPLE_NAME, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
MultiFields,SIMPLE_NAME, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
MultiFields,SIMPLE_NAME, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
MultiFields,SIMPLE_NAME, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
MultiFields,SIMPLE_NAME, line no: 616,"Doc ",STRING_LITERAL, line no: 590
MultiFields,SIMPLE_NAME, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
MultiFields,SIMPLE_NAME, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
MultiFields,SIMPLE_NAME, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
MultiFields,SIMPLE_NAME, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
MultiFields,SIMPLE_NAME, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
MultiFields,SIMPLE_NAME, line no: 616,get,SIMPLE_NAME, line no: 591
MultiFields,SIMPLE_NAME, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
MultiFields,SIMPLE_NAME, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
MultiFields,SIMPLE_NAME, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
MultiFields,SIMPLE_NAME, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
MultiFields,SIMPLE_NAME, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
MultiFields,SIMPLE_NAME, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
MultiFields,SIMPLE_NAME, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
MultiFields,SIMPLE_NAME, line no: 616,field1,SIMPLE_NAME, line no: 600
MultiFields,SIMPLE_NAME, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
MultiFields,SIMPLE_NAME, line no: 616,field2,SIMPLE_NAME, line no: 601
MultiFields,SIMPLE_NAME, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
MultiFields,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
MultiFields,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
MultiFields,SIMPLE_NAME, line no: 616,".",STRING_LITERAL, line no: 602
MultiFields,SIMPLE_NAME, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
MultiFields,SIMPLE_NAME, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
MultiFields,SIMPLE_NAME, line no: 616,itField1,SIMPLE_NAME, line no: 603
MultiFields,SIMPLE_NAME, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
MultiFields,SIMPLE_NAME, line no: 616,itField2,SIMPLE_NAME, line no: 604
MultiFields,SIMPLE_NAME, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
MultiFields,SIMPLE_NAME, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
MultiFields,SIMPLE_NAME, line no: 616,hasNext,SIMPLE_NAME, line no: 605
MultiFields,SIMPLE_NAME, line no: 616,curField1,SIMPLE_NAME, line no: 606
MultiFields,SIMPLE_NAME, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
MultiFields,SIMPLE_NAME, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
MultiFields,SIMPLE_NAME, line no: 616,next,SIMPLE_NAME, line no: 606
MultiFields,SIMPLE_NAME, line no: 616,curField2,SIMPLE_NAME, line no: 607
MultiFields,SIMPLE_NAME, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
MultiFields,SIMPLE_NAME, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
MultiFields,SIMPLE_NAME, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
MultiFields,SIMPLE_NAME, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
MultiFields,SIMPLE_NAME, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
MultiFields,SIMPLE_NAME, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
MultiFields,SIMPLE_NAME, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
MultiFields,SIMPLE_NAME, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
MultiFields,SIMPLE_NAME, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
MultiFields,SIMPLE_NAME, line no: 616,stringValue,SIMPLE_NAME, line no: 609
MultiFields,SIMPLE_NAME, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
MultiFields,SIMPLE_NAME, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
MultiFields,SIMPLE_NAME, line no: 616,fenum1,SIMPLE_NAME, line no: 615
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
MultiFields,SIMPLE_NAME, line no: 616,fenum2,SIMPLE_NAME, line no: 616
MultiFields,SIMPLE_NAME, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
MultiFields,SIMPLE_NAME, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
MultiFields,SIMPLE_NAME, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
MultiFields,SIMPLE_NAME, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
MultiFields,SIMPLE_NAME, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
MultiFields,SIMPLE_NAME, line no: 616,"Different fields",STRING_LITERAL, line no: 620
MultiFields,SIMPLE_NAME, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
MultiFields,SIMPLE_NAME, line no: 616,terms1,SIMPLE_NAME, line no: 621
MultiFields,SIMPLE_NAME, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
MultiFields,SIMPLE_NAME, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
MultiFields,SIMPLE_NAME, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
MultiFields,SIMPLE_NAME, line no: 616,assertNull,SIMPLE_NAME, line no: 623
MultiFields,SIMPLE_NAME, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
MultiFields,SIMPLE_NAME, line no: 616,enum1,SIMPLE_NAME, line no: 626
MultiFields,SIMPLE_NAME, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
MultiFields,SIMPLE_NAME, line no: 616,terms2,SIMPLE_NAME, line no: 628
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
MultiFields,SIMPLE_NAME, line no: 616,enum2,SIMPLE_NAME, line no: 630
MultiFields,SIMPLE_NAME, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
MultiFields,SIMPLE_NAME, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
MultiFields,SIMPLE_NAME, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
MultiFields,SIMPLE_NAME, line no: 616,"Different terms",STRING_LITERAL, line no: 633
MultiFields,SIMPLE_NAME, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
MultiFields,SIMPLE_NAME, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
MultiFields,SIMPLE_NAME, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
MultiFields,SIMPLE_NAME, line no: 616,tp1,SIMPLE_NAME, line no: 634
MultiFields,SIMPLE_NAME, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
MultiFields,SIMPLE_NAME, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
MultiFields,SIMPLE_NAME, line no: 616,tp2,SIMPLE_NAME, line no: 635
MultiFields,SIMPLE_NAME, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
MultiFields,SIMPLE_NAME, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
MultiFields,SIMPLE_NAME, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
MultiFields,SIMPLE_NAME, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
MultiFields,SIMPLE_NAME, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
MultiFields,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
MultiFields,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
MultiFields,SIMPLE_NAME, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
MultiFields,SIMPLE_NAME, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
MultiFields,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
MultiFields,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
MultiFields,SIMPLE_NAME, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
MultiFields,SIMPLE_NAME, line no: 616,freq,SIMPLE_NAME, line no: 640
MultiFields,SIMPLE_NAME, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
MultiFields,SIMPLE_NAME, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
MultiFields,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
MultiFields,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
MultiFields,SIMPLE_NAME, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
MultiFields,SIMPLE_NAME, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
MultiFields,SIMPLE_NAME, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
MultiFields,SIMPLE_NAME, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
MultiFields,SIMPLE_NAME, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
MultiFields,SIMPLE_NAME, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
MultiFields,SIMPLE_NAME, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
MultiFields,SIMPLE_NAME, line no: 616,27,NUMBER_LITERAL, line no: 660
MultiFields,SIMPLE_NAME, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
MultiFields,SIMPLE_NAME, line no: 616,sis,SIMPLE_NAME, line no: 664
MultiFields,SIMPLE_NAME, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
MultiFields,SIMPLE_NAME, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
MultiFields,SIMPLE_NAME, line no: 616,read,SIMPLE_NAME, line no: 665
MultiFields,SIMPLE_NAME, line no: 616,r,SIMPLE_NAME, line no: 666
MultiFields,SIMPLE_NAME, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
MultiFields,SIMPLE_NAME, line no: 616,c,SIMPLE_NAME, line no: 667
MultiFields,SIMPLE_NAME, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
MultiFields,SIMPLE_NAME, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
MultiFields,SIMPLE_NAME, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
MultiFields,SIMPLE_NAME, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
MultiFields,SIMPLE_NAME, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
MultiFields,SIMPLE_NAME, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
MultiFields,SIMPLE_NAME, line no: 616,equals,SIMPLE_NAME, line no: 671
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
MultiFields,SIMPLE_NAME, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
MultiFields,SIMPLE_NAME, line no: 616,r2,SIMPLE_NAME, line no: 685
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
MultiFields,SIMPLE_NAME, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
MultiFields,SIMPLE_NAME, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
MultiFields,SIMPLE_NAME, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
MultiFields,SIMPLE_NAME, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
MultiFields,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
MultiFields,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
MultiFields,SIMPLE_NAME, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
MultiFields,SIMPLE_NAME, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
MultiFields,SIMPLE_NAME, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
MultiFields,SIMPLE_NAME, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
MultiFields,SIMPLE_NAME, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
MultiFields,SIMPLE_NAME, line no: 616,createDocument,SIMPLE_NAME, line no: 707
MultiFields,SIMPLE_NAME, line no: 616,id,SIMPLE_NAME, line no: 707
MultiFields,SIMPLE_NAME, line no: 616,customType,SIMPLE_NAME, line no: 709
MultiFields,SIMPLE_NAME, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
MultiFields,SIMPLE_NAME, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
MultiFields,SIMPLE_NAME, line no: 616,false,BOOLEAN_LITERAL, line no: 710
MultiFields,SIMPLE_NAME, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
MultiFields,SIMPLE_NAME, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
MultiFields,SIMPLE_NAME, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
MultiFields,SIMPLE_NAME, line no: 616,"id",STRING_LITERAL, line no: 713
MultiFields,SIMPLE_NAME, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
MultiFields,SIMPLE_NAME, line no: 616,Throwable,SIMPLE_NAME, line no: 720
MultiFields,SIMPLE_NAME, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
MultiFields,SIMPLE_NAME, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
MultiFields,SIMPLE_NAME, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
MultiFields,SIMPLE_NAME, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
MultiFields,SIMPLE_NAME, line no: 616,nsde,SIMPLE_NAME, line no: 725
MultiFields,SIMPLE_NAME, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
MultiFields,SIMPLE_NAME, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
MultiFields,SIMPLE_NAME, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
MultiFields,SIMPLE_NAME, line no: 616,"a",STRING_LITERAL, line no: 739
MultiFields,SIMPLE_NAME, line no: 616,commits,SIMPLE_NAME, line no: 744
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
MultiFields,SIMPLE_NAME, line no: 616,listCommits,SIMPLE_NAME, line no: 744
MultiFields,SIMPLE_NAME, line no: 616,commit,SIMPLE_NAME, line no: 745
MultiFields,SIMPLE_NAME, line no: 616,files,SIMPLE_NAME, line no: 746
MultiFields,SIMPLE_NAME, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
MultiFields,SIMPLE_NAME, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
MultiFields,SIMPLE_NAME, line no: 616,seen,SIMPLE_NAME, line no: 747
MultiFields,SIMPLE_NAME, line no: 616,fileName,SIMPLE_NAME, line no: 748
MultiFields,SIMPLE_NAME, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
MultiFields,SIMPLE_NAME, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
MultiFields,SIMPLE_NAME, line no: 616,"file ",STRING_LITERAL, line no: 749
MultiFields,SIMPLE_NAME, line no: 616," was duplicated",STRING_LITERAL, line no: 749
MultiFields,SIMPLE_NAME, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
MultiFields,SIMPLE_NAME, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
MultiFields,SIMPLE_NAME, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
MultiFields,SIMPLE_NAME, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
MultiFields,SIMPLE_NAME, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
MultiFields,SIMPLE_NAME, line no: 616,"number",STRING_LITERAL, line no: 768
MultiFields,SIMPLE_NAME, line no: 616,"17",STRING_LITERAL, line no: 768
MultiFields,SIMPLE_NAME, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
MultiFields,SIMPLE_NAME, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
MultiFields,SIMPLE_NAME, line no: 616,r1,SIMPLE_NAME, line no: 774
MultiFields,SIMPLE_NAME, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
MultiFields,SIMPLE_NAME, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
MultiFields,SIMPLE_NAME, line no: 616,ints,SIMPLE_NAME, line no: 775
MultiFields,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
MultiFields,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
MultiFields,SIMPLE_NAME, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
MultiFields,SIMPLE_NAME, line no: 616,getInts,SIMPLE_NAME, line no: 775
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
MultiFields,SIMPLE_NAME, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
MultiFields,SIMPLE_NAME, line no: 616,17,NUMBER_LITERAL, line no: 777
MultiFields,SIMPLE_NAME, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
MultiFields,SIMPLE_NAME, line no: 616,sub0,SIMPLE_NAME, line no: 787
MultiFields,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
MultiFields,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
MultiFields,SIMPLE_NAME, line no: 616,ints2,SIMPLE_NAME, line no: 788
MultiFields,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
MultiFields,SIMPLE_NAME, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
MultiFields,SIMPLE_NAME, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
MultiFields,SIMPLE_NAME, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
MultiFields,SIMPLE_NAME, line no: 616,"field",STRING_LITERAL, line no: 801
MultiFields,SIMPLE_NAME, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
MultiFields,SIMPLE_NAME, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
MultiFields,SIMPLE_NAME, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
MultiFields,SIMPLE_NAME, line no: 616,36,NUMBER_LITERAL, line no: 809
MultiFields,SIMPLE_NAME, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
MultiFields,SIMPLE_NAME, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
MultiFields,SIMPLE_NAME, line no: 616,subs,SIMPLE_NAME, line no: 816
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
MultiFields,SIMPLE_NAME, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
MultiFields,SIMPLE_NAME, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
MultiFields,SIMPLE_NAME, line no: 616,setCodec,SIMPLE_NAME, line no: 828
MultiFields,SIMPLE_NAME, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
MultiFields,SIMPLE_NAME, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
MultiFields,SIMPLE_NAME, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
MultiFields,SIMPLE_NAME, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
MultiFields,SIMPLE_NAME, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
MultiFields,SIMPLE_NAME, line no: 616,docFreq,SIMPLE_NAME, line no: 838
MultiFields,SIMPLE_NAME, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
MultiFields,SIMPLE_NAME, line no: 616,"f",STRING_LITERAL, line no: 838
MultiFields,SIMPLE_NAME, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
MultiFields,SIMPLE_NAME, line no: 616,ise,SIMPLE_NAME, line no: 840
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
MultiFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
MultiFields,SIMPLE_NAME, line no: 616,subReaders,SIMPLE_NAME, line no: 859
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
MultiFields,SIMPLE_NAME, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
MultiFields,SIMPLE_NAME, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
MultiFields,SIMPLE_NAME, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
MultiFields,SIMPLE_NAME, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
MultiFields,SIMPLE_NAME, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
MultiFields,SIMPLE_NAME, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
MultiFields,SIMPLE_NAME, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
MultiFields,SIMPLE_NAME, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
MultiFields,SIMPLE_NAME, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
MultiFields,SIMPLE_NAME, line no: 616,sdp,SIMPLE_NAME, line no: 898
MultiFields,SIMPLE_NAME, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
MultiFields,SIMPLE_NAME, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
MultiFields,SIMPLE_NAME, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
MultiFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
MultiFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
MultiFields,SIMPLE_NAME, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
MultiFields,SIMPLE_NAME, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
MultiFields,SIMPLE_NAME, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
MultiFields,SIMPLE_NAME, line no: 616,snapshot,SIMPLE_NAME, line no: 903
MultiFields,SIMPLE_NAME, line no: 616,"c1",STRING_LITERAL, line no: 903
MultiFields,SIMPLE_NAME, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
MultiFields,SIMPLE_NAME, line no: 616,"c2",STRING_LITERAL, line no: 906
MultiFields,SIMPLE_NAME, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
MultiFields,SIMPLE_NAME, line no: 616,"c3",STRING_LITERAL, line no: 909
MultiFields,SIMPLE_NAME, line no: 616,currentGen,SIMPLE_NAME, line no: 911
MultiFields,SIMPLE_NAME, line no: 616,ic,SIMPLE_NAME, line no: 912
MultiFields,SIMPLE_NAME, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
MultiFields,SIMPLE_NAME, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
MultiFields,SIMPLE_NAME, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
MultiFields,SIMPLE_NAME, line no: 616," commitGen=",STRING_LITERAL, line no: 913
MultiFields,SIMPLE_NAME, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
MultiFields,SIMPLE_NAME, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
MultiFields,SIMPLE_NAME, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
MultiFields,SIMPLE_NAME, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
MultiFields,SIMPLE_NAME, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
MultiFields,SIMPLE_NAME, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
MultiFields,SIMPLE_NAME, line no: 616,indexExists,SIMPLE_NAME, line no: 925
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
MultiFields,SIMPLE_NAME, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
MultiFields,SIMPLE_NAME, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
MultiFields,SIMPLE_NAME, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
MultiFields,SIMPLE_NAME, line no: 616,"a a b",STRING_LITERAL, line no: 938
MultiFields,SIMPLE_NAME, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
MultiFields,SIMPLE_NAME, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
MultiFields,SIMPLE_NAME, line no: 616,getReader,SIMPLE_NAME, line no: 940
MultiFields,SIMPLE_NAME, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,"b",STRING_LITERAL, line no: 944
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
MultiFields,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
MultiFields,SIMPLE_NAME, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
MultiFields,SIMPLE_NAME, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
MultiFields,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
MultiFields,SIMPLE_NAME, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
MultiFields,SIMPLE_NAME, line no: 616,closeCount,SIMPLE_NAME, line no: 964
MultiFields,SIMPLE_NAME, line no: 616,new int[1],ARRAY_CREATION, line no: 964
MultiFields,SIMPLE_NAME, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
MultiFields,SIMPLE_NAME, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
MultiFields,SIMPLE_NAME, line no: 616,listener,SIMPLE_NAME, line no: 965
MultiFields,SIMPLE_NAME, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
MultiFields,SIMPLE_NAME, line no: 616,onClose,SIMPLE_NAME, line no: 966
MultiFields,SIMPLE_NAME, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
MultiFields,SIMPLE_NAME, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
MultiFields,SIMPLE_NAME, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
MultiFields,SIMPLE_NAME, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
MultiFields,SIMPLE_NAME, line no: 616,reader2,SIMPLE_NAME, line no: 979
MultiFields,SIMPLE_NAME, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
MultiFields,SIMPLE_NAME, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
MultiFields,SIMPLE_NAME, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
MultiFields,SIMPLE_NAME, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
MultiFields,SIMPLE_NAME, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
MultiFields,SIMPLE_NAME, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
MultiFields,SIMPLE_NAME, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
MultiFields,SIMPLE_NAME, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
MultiFields,SIMPLE_NAME, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
MultiFields,SIMPLE_NAME, line no: 616,iae,SIMPLE_NAME, line no: 998
MultiFields,SIMPLE_NAME, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
MultiFields,SIMPLE_NAME, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
MultiFields,SIMPLE_NAME, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
MultiFields,SIMPLE_NAME, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
MultiFields,SIMPLE_NAME, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
MultiFields,SIMPLE_NAME, line no: 616,decRef,SIMPLE_NAME, line no: 1012
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
MultiFields,SIMPLE_NAME, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
MultiFields,SIMPLE_NAME, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
MultiFields,SIMPLE_NAME, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
MultiFields,SIMPLE_NAME, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
MultiFields,SIMPLE_NAME, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
MultiFields,SIMPLE_NAME, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
MultiFields,SIMPLE_NAME, line no: 616,threads,SIMPLE_NAME, line no: 1027
MultiFields,SIMPLE_NAME, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
MultiFields,SIMPLE_NAME, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
MultiFields,SIMPLE_NAME, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
MultiFields,SIMPLE_NAME, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
MultiFields,SIMPLE_NAME, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
MultiFields,SIMPLE_NAME, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
MultiFields,SIMPLE_NAME, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
MultiFields,SIMPLE_NAME, line no: 616,start,SIMPLE_NAME, line no: 1030
MultiFields,SIMPLE_NAME, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
MultiFields,SIMPLE_NAME, line no: 616,Thread,SIMPLE_NAME, line no: 1032
MultiFields,SIMPLE_NAME, line no: 616,sleep,SIMPLE_NAME, line no: 1032
MultiFields,SIMPLE_NAME, line no: 616,100,NUMBER_LITERAL, line no: 1032
MultiFields,SIMPLE_NAME, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
MultiFields,SIMPLE_NAME, line no: 616,join,SIMPLE_NAME, line no: 1039
MultiFields,SIMPLE_NAME, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
MultiFields,SIMPLE_NAME, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
MultiFields,SIMPLE_NAME, line no: 616,failed,SIMPLE_NAME, line no: 1040
MultiFields,SIMPLE_NAME, line no: 616,toInc,SIMPLE_NAME, line no: 1048
MultiFields,SIMPLE_NAME, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
MultiFields,SIMPLE_NAME, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
MultiFields,SIMPLE_NAME, line no: 616,this,THIS_EXPRESSION, line no: 1053
MultiFields,SIMPLE_NAME, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
MultiFields,SIMPLE_NAME, line no: 616,this.random,FIELD_ACCESS, line no: 1054
MultiFields,SIMPLE_NAME, line no: 616,@Override,, line no: 1057
MultiFields,SIMPLE_NAME, line no: 616,Override,SIMPLE_NAME, line no: 1057
MultiFields,SIMPLE_NAME, line no: 616,run,SIMPLE_NAME, line no: 1058
MultiFields,SIMPLE_NAME, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
MultiFields,SIMPLE_NAME, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
MultiFields,SIMPLE_NAME, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
MultiFields,SIMPLE_NAME, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
MultiFields,SIMPLE_NAME, line no: 616,failed=e,ASSIGNMENT, line no: 1066
MultiFields,SIMPLE_NAME, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
MultiFields,SIMPLE_NAME, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
MultiFields,SIMPLE_NAME, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
MultiFields,SIMPLE_NAME, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
MultiFields,SIMPLE_NAME, line no: 616,"field1",STRING_LITERAL, line no: 1075
MultiFields,SIMPLE_NAME, line no: 616,"foobar",STRING_LITERAL, line no: 1075
MultiFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
MultiFields,SIMPLE_NAME, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
MultiFields,SIMPLE_NAME, line no: 616,"field2",STRING_LITERAL, line no: 1076
MultiFields,SIMPLE_NAME, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
MultiFields,SIMPLE_NAME, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
MultiFields,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
MultiFields,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
MultiFields,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
MultiFields,SIMPLE_NAME, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
MultiFields,SIMPLE_NAME, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
MultiFields,SIMPLE_NAME, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
MultiFields,SIMPLE_NAME, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
MultiFields,SIMPLE_NAME, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,org,SIMPLE_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,apache,SIMPLE_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,lucene,SIMPLE_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,index,SIMPLE_NAME, line no: 1
getFields,SIMPLE_NAME, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
getFields,SIMPLE_NAME, line no: 616,java.io,QUALIFIED_NAME, line no: 20
getFields,SIMPLE_NAME, line no: 616,java,SIMPLE_NAME, line no: 20
getFields,SIMPLE_NAME, line no: 616,io,SIMPLE_NAME, line no: 20
getFields,SIMPLE_NAME, line no: 616,File,SIMPLE_NAME, line no: 20
getFields,SIMPLE_NAME, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
getFields,SIMPLE_NAME, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
getFields,SIMPLE_NAME, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
getFields,SIMPLE_NAME, line no: 616,IOException,SIMPLE_NAME, line no: 22
getFields,SIMPLE_NAME, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
getFields,SIMPLE_NAME, line no: 616,java.util,QUALIFIED_NAME, line no: 23
getFields,SIMPLE_NAME, line no: 616,util,SIMPLE_NAME, line no: 23
getFields,SIMPLE_NAME, line no: 616,Collection,SIMPLE_NAME, line no: 23
getFields,SIMPLE_NAME, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
getFields,SIMPLE_NAME, line no: 616,HashSet,SIMPLE_NAME, line no: 24
getFields,SIMPLE_NAME, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
getFields,SIMPLE_NAME, line no: 616,Iterator,SIMPLE_NAME, line no: 25
getFields,SIMPLE_NAME, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
getFields,SIMPLE_NAME, line no: 616,List,SIMPLE_NAME, line no: 26
getFields,SIMPLE_NAME, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
getFields,SIMPLE_NAME, line no: 616,Random,SIMPLE_NAME, line no: 27
getFields,SIMPLE_NAME, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
getFields,SIMPLE_NAME, line no: 616,Set,SIMPLE_NAME, line no: 28
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
getFields,SIMPLE_NAME, line no: 616,analysis,SIMPLE_NAME, line no: 30
getFields,SIMPLE_NAME, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
getFields,SIMPLE_NAME, line no: 616,codecs,SIMPLE_NAME, line no: 31
getFields,SIMPLE_NAME, line no: 616,lucene40,SIMPLE_NAME, line no: 31
getFields,SIMPLE_NAME, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
getFields,SIMPLE_NAME, line no: 616,document,SIMPLE_NAME, line no: 32
getFields,SIMPLE_NAME, line no: 616,Document,SIMPLE_NAME, line no: 32
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
getFields,SIMPLE_NAME, line no: 616,Field,SIMPLE_NAME, line no: 33
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
getFields,SIMPLE_NAME, line no: 616,FieldType,SIMPLE_NAME, line no: 34
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
getFields,SIMPLE_NAME, line no: 616,StoredField,SIMPLE_NAME, line no: 35
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
getFields,SIMPLE_NAME, line no: 616,StringField,SIMPLE_NAME, line no: 36
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
getFields,SIMPLE_NAME, line no: 616,TextField,SIMPLE_NAME, line no: 37
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
getFields,SIMPLE_NAME, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
getFields,SIMPLE_NAME, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
getFields,SIMPLE_NAME, line no: 616,search,SIMPLE_NAME, line no: 39
getFields,SIMPLE_NAME, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
getFields,SIMPLE_NAME, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
getFields,SIMPLE_NAME, line no: 616,store,SIMPLE_NAME, line no: 41
getFields,SIMPLE_NAME, line no: 616,Directory,SIMPLE_NAME, line no: 41
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
getFields,SIMPLE_NAME, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
getFields,SIMPLE_NAME, line no: 616,Bits,SIMPLE_NAME, line no: 43
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
getFields,SIMPLE_NAME, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
getFields,SIMPLE_NAME, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
getFields,SIMPLE_NAME, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
getFields,SIMPLE_NAME, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
getFields,SIMPLE_NAME, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
getFields,SIMPLE_NAME, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
getFields,SIMPLE_NAME, line no: 616,junit,SIMPLE_NAME, line no: 47
getFields,SIMPLE_NAME, line no: 616,Assume,SIMPLE_NAME, line no: 47
getFields,SIMPLE_NAME, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
getFields,SIMPLE_NAME, line no: 616,testDocument,SIMPLE_NAME, line no: 51
getFields,SIMPLE_NAME, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
getFields,SIMPLE_NAME, line no: 616,readers,SIMPLE_NAME, line no: 52
getFields,SIMPLE_NAME, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
getFields,SIMPLE_NAME, line no: 616,2,NUMBER_LITERAL, line no: 52
getFields,SIMPLE_NAME, line no: 616,dir,SIMPLE_NAME, line no: 53
getFields,SIMPLE_NAME, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
getFields,SIMPLE_NAME, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
getFields,SIMPLE_NAME, line no: 616,doc1,SIMPLE_NAME, line no: 54
getFields,SIMPLE_NAME, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
getFields,SIMPLE_NAME, line no: 616,doc2,SIMPLE_NAME, line no: 55
getFields,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
getFields,SIMPLE_NAME, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
getFields,SIMPLE_NAME, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
getFields,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
getFields,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
getFields,SIMPLE_NAME, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
getFields,SIMPLE_NAME, line no: 616,random(),METHOD_INVOCATION, line no: 58
getFields,SIMPLE_NAME, line no: 616,random,SIMPLE_NAME, line no: 58
getFields,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
getFields,SIMPLE_NAME, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
getFields,SIMPLE_NAME, line no: 616,reader,SIMPLE_NAME, line no: 60
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
getFields,SIMPLE_NAME, line no: 616,open,SIMPLE_NAME, line no: 60
getFields,SIMPLE_NAME, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
getFields,SIMPLE_NAME, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
getFields,SIMPLE_NAME, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
getFields,SIMPLE_NAME, line no: 616,null,NULL_LITERAL, line no: 61
getFields,SIMPLE_NAME, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
getFields,SIMPLE_NAME, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
getFields,SIMPLE_NAME, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
getFields,SIMPLE_NAME, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
getFields,SIMPLE_NAME, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
getFields,SIMPLE_NAME, line no: 616,0,NUMBER_LITERAL, line no: 64
getFields,SIMPLE_NAME, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
getFields,SIMPLE_NAME, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
getFields,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
getFields,SIMPLE_NAME, line no: 616,numFields,SIMPLE_NAME, line no: 66
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
getFields,SIMPLE_NAME, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
getFields,SIMPLE_NAME, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
getFields,SIMPLE_NAME, line no: 616,unstored,SIMPLE_NAME, line no: 66
getFields,SIMPLE_NAME, line no: 616,size,SIMPLE_NAME, line no: 66
getFields,SIMPLE_NAME, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
getFields,SIMPLE_NAME, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
getFields,SIMPLE_NAME, line no: 616,1,NUMBER_LITERAL, line no: 67
getFields,SIMPLE_NAME, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
getFields,SIMPLE_NAME, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
getFields,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
getFields,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
getFields,SIMPLE_NAME, line no: 616,Terms,SIMPLE_NAME, line no: 70
getFields,SIMPLE_NAME, line no: 616,vector,SIMPLE_NAME, line no: 70
getFields,SIMPLE_NAME, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
getFields,SIMPLE_NAME, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
getFields,SIMPLE_NAME, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
getFields,SIMPLE_NAME, line no: 616,terms,SIMPLE_NAME, line no: 70
getFields,SIMPLE_NAME, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
getFields,SIMPLE_NAME, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
getFields,SIMPLE_NAME, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
getFields,SIMPLE_NAME, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
getFields,SIMPLE_NAME, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
getFields,SIMPLE_NAME, line no: 616,close,SIMPLE_NAME, line no: 73
getFields,SIMPLE_NAME, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
getFields,SIMPLE_NAME, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
getFields,SIMPLE_NAME, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
getFields,SIMPLE_NAME, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
getFields,SIMPLE_NAME, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
getFields,SIMPLE_NAME, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
getFields,SIMPLE_NAME, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
getFields,SIMPLE_NAME, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
getFields,SIMPLE_NAME, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
getFields,SIMPLE_NAME, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
getFields,SIMPLE_NAME, line no: 616,addDoc,SIMPLE_NAME, line no: 81
getFields,SIMPLE_NAME, line no: 616,"test foo",STRING_LITERAL, line no: 81
getFields,SIMPLE_NAME, line no: 616,true,BOOLEAN_LITERAL, line no: 81
getFields,SIMPLE_NAME, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
getFields,SIMPLE_NAME, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
getFields,SIMPLE_NAME, line no: 616,"test blah",STRING_LITERAL, line no: 83
getFields,SIMPLE_NAME, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
getFields,SIMPLE_NAME, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
getFields,SIMPLE_NAME, line no: 616,"test wow",STRING_LITERAL, line no: 85
getFields,SIMPLE_NAME, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
getFields,SIMPLE_NAME, line no: 616,readers1,SIMPLE_NAME, line no: 87
getFields,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
getFields,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
getFields,SIMPLE_NAME, line no: 616,readers2,SIMPLE_NAME, line no: 88
getFields,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
getFields,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
getFields,SIMPLE_NAME, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
getFields,SIMPLE_NAME, line no: 616,mr2,SIMPLE_NAME, line no: 89
getFields,SIMPLE_NAME, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
getFields,SIMPLE_NAME, line no: 616,mr3,SIMPLE_NAME, line no: 90
getFields,SIMPLE_NAME, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
getFields,SIMPLE_NAME, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
getFields,SIMPLE_NAME, line no: 616,te2,SIMPLE_NAME, line no: 93
getFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
getFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
getFields,SIMPLE_NAME, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
getFields,SIMPLE_NAME, line no: 616,getTerms,SIMPLE_NAME, line no: 93
getFields,SIMPLE_NAME, line no: 616,"body",STRING_LITERAL, line no: 93
getFields,SIMPLE_NAME, line no: 616,iterator,SIMPLE_NAME, line no: 93
getFields,SIMPLE_NAME, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
getFields,SIMPLE_NAME, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
getFields,SIMPLE_NAME, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
getFields,SIMPLE_NAME, line no: 616,"wow",STRING_LITERAL, line no: 94
getFields,SIMPLE_NAME, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
getFields,SIMPLE_NAME, line no: 616,td,SIMPLE_NAME, line no: 95
getFields,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
getFields,SIMPLE_NAME, line no: 616,docs,SIMPLE_NAME, line no: 95
getFields,SIMPLE_NAME, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
getFields,SIMPLE_NAME, line no: 616,term,SIMPLE_NAME, line no: 97
getFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
getFields,SIMPLE_NAME, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
getFields,SIMPLE_NAME, line no: 616,te3,SIMPLE_NAME, line no: 102
getFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
getFields,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
getFields,SIMPLE_NAME, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
getFields,SIMPLE_NAME, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
getFields,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
getFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
getFields,SIMPLE_NAME, line no: 616,ret,SIMPLE_NAME, line no: 108
getFields,SIMPLE_NAME, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
getFields,SIMPLE_NAME, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
getFields,SIMPLE_NAME, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
getFields,SIMPLE_NAME, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
getFields,SIMPLE_NAME, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
getFields,SIMPLE_NAME, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
getFields,SIMPLE_NAME, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
getFields,SIMPLE_NAME, line no: 616,docID,SIMPLE_NAME, line no: 112
getFields,SIMPLE_NAME, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
getFields,SIMPLE_NAME, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
getFields,SIMPLE_NAME, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
getFields,SIMPLE_NAME, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
getFields,SIMPLE_NAME, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
getFields,SIMPLE_NAME, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
getFields,SIMPLE_NAME, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
getFields,SIMPLE_NAME, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
getFields,SIMPLE_NAME, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
getFields,SIMPLE_NAME, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
getFields,SIMPLE_NAME, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
getFields,SIMPLE_NAME, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
getFields,SIMPLE_NAME, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
getFields,SIMPLE_NAME, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
getFields,SIMPLE_NAME, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
getFields,SIMPLE_NAME, line no: 616,String,SIMPLE_NAME, line no: 127
getFields,SIMPLE_NAME, line no: 616,s,SIMPLE_NAME, line no: 127
getFields,SIMPLE_NAME, line no: 616,create,SIMPLE_NAME, line no: 127
getFields,SIMPLE_NAME, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
getFields,SIMPLE_NAME, line no: 616,iw,SIMPLE_NAME, line no: 128
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
getFields,SIMPLE_NAME, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
getFields,SIMPLE_NAME, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
getFields,SIMPLE_NAME, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
getFields,SIMPLE_NAME, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
getFields,SIMPLE_NAME, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
getFields,SIMPLE_NAME, line no: 616,CREATE,SIMPLE_NAME, line no: 131
getFields,SIMPLE_NAME, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
getFields,SIMPLE_NAME, line no: 616,APPEND,SIMPLE_NAME, line no: 131
getFields,SIMPLE_NAME, line no: 616,doc,SIMPLE_NAME, line no: 132
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
getFields,SIMPLE_NAME, line no: 616,add,SIMPLE_NAME, line no: 133
getFields,SIMPLE_NAME, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
getFields,SIMPLE_NAME, line no: 616,newTextField,SIMPLE_NAME, line no: 133
getFields,SIMPLE_NAME, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
getFields,SIMPLE_NAME, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
getFields,SIMPLE_NAME, line no: 616,Store,SIMPLE_NAME, line no: 133
getFields,SIMPLE_NAME, line no: 616,NO,SIMPLE_NAME, line no: 133
getFields,SIMPLE_NAME, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
getFields,SIMPLE_NAME, line no: 616,addDocument,SIMPLE_NAME, line no: 134
getFields,SIMPLE_NAME, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
getFields,SIMPLE_NAME, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
getFields,SIMPLE_NAME, line no: 616,Exception,SIMPLE_NAME, line no: 138
getFields,SIMPLE_NAME, line no: 616,d,SIMPLE_NAME, line no: 139
getFields,SIMPLE_NAME, line no: 616,writer,SIMPLE_NAME, line no: 140
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
getFields,SIMPLE_NAME, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
getFields,SIMPLE_NAME, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
getFields,SIMPLE_NAME, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
getFields,SIMPLE_NAME, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
getFields,SIMPLE_NAME, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
getFields,SIMPLE_NAME, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
getFields,SIMPLE_NAME, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
getFields,SIMPLE_NAME, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
getFields,SIMPLE_NAME, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
getFields,SIMPLE_NAME, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
getFields,SIMPLE_NAME, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
getFields,SIMPLE_NAME, line no: 616,customType3,SIMPLE_NAME, line no: 177
getFields,SIMPLE_NAME, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
getFields,SIMPLE_NAME, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
getFields,SIMPLE_NAME, line no: 616,setStored,SIMPLE_NAME, line no: 178
getFields,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
getFields,SIMPLE_NAME, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
getFields,SIMPLE_NAME, line no: 616,"keyword",STRING_LITERAL, line no: 180
getFields,SIMPLE_NAME, line no: 616,"test1",STRING_LITERAL, line no: 180
getFields,SIMPLE_NAME, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
getFields,SIMPLE_NAME, line no: 616,YES,SIMPLE_NAME, line no: 180
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
getFields,SIMPLE_NAME, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
getFields,SIMPLE_NAME, line no: 616,"text",STRING_LITERAL, line no: 181
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
getFields,SIMPLE_NAME, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
getFields,SIMPLE_NAME, line no: 616,"unindexed",STRING_LITERAL, line no: 182
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
getFields,SIMPLE_NAME, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
getFields,SIMPLE_NAME, line no: 616,"unstored",STRING_LITERAL, line no: 183
getFields,SIMPLE_NAME, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
getFields,SIMPLE_NAME, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
getFields,SIMPLE_NAME, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
getFields,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
getFields,SIMPLE_NAME, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
getFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
getFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
getFields,SIMPLE_NAME, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
getFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
getFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
getFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
getFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
getFields,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
getFields,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
getFields,SIMPLE_NAME, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
getFields,SIMPLE_NAME, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
getFields,SIMPLE_NAME, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
getFields,SIMPLE_NAME, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
getFields,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
getFields,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
getFields,SIMPLE_NAME, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
getFields,SIMPLE_NAME, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
getFields,SIMPLE_NAME, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
getFields,SIMPLE_NAME, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
getFields,SIMPLE_NAME, line no: 616,getConfig,SIMPLE_NAME, line no: 203
getFields,SIMPLE_NAME, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
getFields,SIMPLE_NAME, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
getFields,SIMPLE_NAME, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
getFields,SIMPLE_NAME, line no: 616,i,SIMPLE_NAME, line no: 204
getFields,SIMPLE_NAME, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
getFields,SIMPLE_NAME, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
getFields,SIMPLE_NAME, line no: 616,5,NUMBER_LITERAL, line no: 204
getFields,SIMPLE_NAME, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
getFields,SIMPLE_NAME, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
getFields,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
getFields,SIMPLE_NAME, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
getFields,SIMPLE_NAME, line no: 616,"keyword2",STRING_LITERAL, line no: 215
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
getFields,SIMPLE_NAME, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
getFields,SIMPLE_NAME, line no: 616,"text2",STRING_LITERAL, line no: 216
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
getFields,SIMPLE_NAME, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
getFields,SIMPLE_NAME, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
getFields,SIMPLE_NAME, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
getFields,SIMPLE_NAME, line no: 616,"unstored2",STRING_LITERAL, line no: 218
getFields,SIMPLE_NAME, line no: 616,customType5,SIMPLE_NAME, line no: 223
getFields,SIMPLE_NAME, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
getFields,SIMPLE_NAME, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
getFields,SIMPLE_NAME, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
getFields,SIMPLE_NAME, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
getFields,SIMPLE_NAME, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
getFields,SIMPLE_NAME, line no: 616,customType6,SIMPLE_NAME, line no: 225
getFields,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
getFields,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
getFields,SIMPLE_NAME, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
getFields,SIMPLE_NAME, line no: 616,customType7,SIMPLE_NAME, line no: 228
getFields,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
getFields,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
getFields,SIMPLE_NAME, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
getFields,SIMPLE_NAME, line no: 616,customType8,SIMPLE_NAME, line no: 231
getFields,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
getFields,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
getFields,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
getFields,SIMPLE_NAME, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
getFields,SIMPLE_NAME, line no: 616,"tvnot",STRING_LITERAL, line no: 238
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
getFields,SIMPLE_NAME, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
getFields,SIMPLE_NAME, line no: 616,"termvector",STRING_LITERAL, line no: 239
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
getFields,SIMPLE_NAME, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
getFields,SIMPLE_NAME, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
getFields,SIMPLE_NAME, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
getFields,SIMPLE_NAME, line no: 616,"tvposition",STRING_LITERAL, line no: 241
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
getFields,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
getFields,SIMPLE_NAME, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
getFields,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
getFields,SIMPLE_NAME, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
getFields,SIMPLE_NAME, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
getFields,SIMPLE_NAME, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
getFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
getFields,SIMPLE_NAME, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
getFields,SIMPLE_NAME, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
getFields,SIMPLE_NAME, line no: 616,name,SIMPLE_NAME, line no: 258
getFields,SIMPLE_NAME, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
getFields,SIMPLE_NAME, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
getFields,SIMPLE_NAME, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
getFields,SIMPLE_NAME, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
getFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
getFields,SIMPLE_NAME, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
getFields,SIMPLE_NAME, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
getFields,SIMPLE_NAME, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
getFields,SIMPLE_NAME, line no: 616,contains,SIMPLE_NAME, line no: 270
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
getFields,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
getFields,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
getFields,SIMPLE_NAME, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
getFields,SIMPLE_NAME, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
getFields,SIMPLE_NAME, line no: 616,11,NUMBER_LITERAL, line no: 285
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
getFields,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
getFields,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
getFields,SIMPLE_NAME, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
getFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
getFields,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
getFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
getFields,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
getFields,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
getFields,SIMPLE_NAME, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
getFields,SIMPLE_NAME, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
getFields,SIMPLE_NAME, line no: 616,toString,SIMPLE_NAME, line no: 304
getFields,SIMPLE_NAME, line no: 616,4,NUMBER_LITERAL, line no: 304
getFields,SIMPLE_NAME, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
getFields,SIMPLE_NAME, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
getFields,SIMPLE_NAME, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
getFields,SIMPLE_NAME, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
getFields,SIMPLE_NAME, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
getFields,SIMPLE_NAME, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
getFields,SIMPLE_NAME, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
getFields,SIMPLE_NAME, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
getFields,SIMPLE_NAME, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
getFields,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
getFields,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
getFields,SIMPLE_NAME, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
getFields,SIMPLE_NAME, line no: 616,msg,SIMPLE_NAME, line no: 348
getFields,SIMPLE_NAME, line no: 616,Term,SIMPLE_NAME, line no: 350
getFields,SIMPLE_NAME, line no: 616,expected,SIMPLE_NAME, line no: 351
getFields,SIMPLE_NAME, line no: 616,tdocs,SIMPLE_NAME, line no: 353
getFields,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
getFields,SIMPLE_NAME, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
getFields,SIMPLE_NAME, line no: 616,field,SIMPLE_NAME, line no: 354
getFields,SIMPLE_NAME, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
getFields,SIMPLE_NAME, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
getFields,SIMPLE_NAME, line no: 616,text,SIMPLE_NAME, line no: 355
getFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
getFields,SIMPLE_NAME, line no: 616,count,SIMPLE_NAME, line no: 359
getFields,SIMPLE_NAME, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
getFields,SIMPLE_NAME, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
getFields,SIMPLE_NAME, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
getFields,SIMPLE_NAME, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
getFields,SIMPLE_NAME, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
getFields,SIMPLE_NAME, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
getFields,SIMPLE_NAME, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
getFields,SIMPLE_NAME, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
getFields,SIMPLE_NAME, line no: 616,bin,SIMPLE_NAME, line no: 371
getFields,SIMPLE_NAME, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
getFields,SIMPLE_NAME, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
getFields,SIMPLE_NAME, line no: 616,3,NUMBER_LITERAL, line no: 371
getFields,SIMPLE_NAME, line no: 616,6,NUMBER_LITERAL, line no: 371
getFields,SIMPLE_NAME, line no: 616,7,NUMBER_LITERAL, line no: 371
getFields,SIMPLE_NAME, line no: 616,8,NUMBER_LITERAL, line no: 371
getFields,SIMPLE_NAME, line no: 616,9,NUMBER_LITERAL, line no: 371
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
getFields,SIMPLE_NAME, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
getFields,SIMPLE_NAME, line no: 616,10,NUMBER_LITERAL, line no: 375
getFields,SIMPLE_NAME, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
getFields,SIMPLE_NAME, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
getFields,SIMPLE_NAME, line no: 616,"document number ",STRING_LITERAL, line no: 376
getFields,SIMPLE_NAME, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
getFields,SIMPLE_NAME, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
getFields,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
getFields,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
getFields,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
getFields,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
getFields,SIMPLE_NAME, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
getFields,SIMPLE_NAME, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
getFields,SIMPLE_NAME, line no: 616,"bin1",STRING_LITERAL, line no: 384
getFields,SIMPLE_NAME, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
getFields,SIMPLE_NAME, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
getFields,SIMPLE_NAME, line no: 616,"junk",STRING_LITERAL, line no: 385
getFields,SIMPLE_NAME, line no: 616,"junk text",STRING_LITERAL, line no: 385
getFields,SIMPLE_NAME, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
getFields,SIMPLE_NAME, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
getFields,SIMPLE_NAME, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
getFields,SIMPLE_NAME, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
getFields,SIMPLE_NAME, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
getFields,SIMPLE_NAME, line no: 616,fields,SIMPLE_NAME, line no: 390
getFields,SIMPLE_NAME, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
getFields,SIMPLE_NAME, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
getFields,SIMPLE_NAME, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
getFields,SIMPLE_NAME, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
getFields,SIMPLE_NAME, line no: 616,length,SIMPLE_NAME, line no: 392
getFields,SIMPLE_NAME, line no: 616,b1,SIMPLE_NAME, line no: 393
getFields,SIMPLE_NAME, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
getFields,SIMPLE_NAME, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
getFields,SIMPLE_NAME, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
getFields,SIMPLE_NAME, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
getFields,SIMPLE_NAME, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
getFields,SIMPLE_NAME, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
getFields,SIMPLE_NAME, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
getFields,SIMPLE_NAME, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
getFields,SIMPLE_NAME, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
getFields,SIMPLE_NAME, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
getFields,SIMPLE_NAME, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
getFields,SIMPLE_NAME, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
getFields,SIMPLE_NAME, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
getFields,SIMPLE_NAME, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
getFields,SIMPLE_NAME, line no: 616,bytes,SIMPLE_NAME, line no: 398
getFields,SIMPLE_NAME, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
getFields,SIMPLE_NAME, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
getFields,SIMPLE_NAME, line no: 616,offset,SIMPLE_NAME, line no: 398
getFields,SIMPLE_NAME, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
getFields,SIMPLE_NAME, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
getFields,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
getFields,SIMPLE_NAME, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
getFields,SIMPLE_NAME, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
getFields,SIMPLE_NAME, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
getFields,SIMPLE_NAME, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
getFields,SIMPLE_NAME, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
getFields,SIMPLE_NAME, line no: 616,dirFile,SIMPLE_NAME, line no: 440
getFields,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
getFields,SIMPLE_NAME, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
getFields,SIMPLE_NAME, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
getFields,SIMPLE_NAME, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
getFields,SIMPLE_NAME, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
getFields,SIMPLE_NAME, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
getFields,SIMPLE_NAME, line no: 616,"test",STRING_LITERAL, line no: 443
getFields,SIMPLE_NAME, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
getFields,SIMPLE_NAME, line no: 616,rmDir,SIMPLE_NAME, line no: 448
getFields,SIMPLE_NAME, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
getFields,SIMPLE_NAME, line no: 616,reader1,SIMPLE_NAME, line no: 459
getFields,SIMPLE_NAME, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
getFields,SIMPLE_NAME, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
getFields,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
getFields,SIMPLE_NAME, line no: 616,"deletetest",STRING_LITERAL, line no: 469
getFields,SIMPLE_NAME, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
getFields,SIMPLE_NAME, line no: 616,fail,SIMPLE_NAME, line no: 473
getFields,SIMPLE_NAME, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
getFields,SIMPLE_NAME, line no: 616,e,SIMPLE_NAME, line no: 474
getFields,SIMPLE_NAME, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
getFields,SIMPLE_NAME, line no: 616,delete,SIMPLE_NAME, line no: 478
getFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
getFields,SIMPLE_NAME, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
getFields,SIMPLE_NAME, line no: 616,newStringField,SIMPLE_NAME, line no: 497
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
getFields,SIMPLE_NAME, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
getFields,SIMPLE_NAME, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
getFields,SIMPLE_NAME, line no: 616,newField,SIMPLE_NAME, line no: 499
getFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
getFields,SIMPLE_NAME, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
getFields,SIMPLE_NAME, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
getFields,SIMPLE_NAME, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
getFields,SIMPLE_NAME, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
getFields,SIMPLE_NAME, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
getFields,SIMPLE_NAME, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
getFields,SIMPLE_NAME, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
getFields,SIMPLE_NAME, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
getFields,SIMPLE_NAME, line no: 616,value,SIMPLE_NAME, line no: 541
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
getFields,SIMPLE_NAME, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
getFields,SIMPLE_NAME, line no: 616,"content",STRING_LITERAL, line no: 543
getFields,SIMPLE_NAME, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
getFields,SIMPLE_NAME, line no: 616,index1,SIMPLE_NAME, line no: 548
getFields,SIMPLE_NAME, line no: 616,index2,SIMPLE_NAME, line no: 548
getFields,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
getFields,SIMPLE_NAME, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
getFields,SIMPLE_NAME, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
getFields,SIMPLE_NAME, line no: 616,numDocs,SIMPLE_NAME, line no: 549
getFields,SIMPLE_NAME, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
getFields,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
getFields,SIMPLE_NAME, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
getFields,SIMPLE_NAME, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
getFields,SIMPLE_NAME, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
getFields,SIMPLE_NAME, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
getFields,SIMPLE_NAME, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
getFields,SIMPLE_NAME, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
getFields,SIMPLE_NAME, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
getFields,SIMPLE_NAME, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
getFields,SIMPLE_NAME, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
getFields,SIMPLE_NAME, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
getFields,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
getFields,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
getFields,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
getFields,SIMPLE_NAME, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
getFields,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
getFields,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
getFields,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
getFields,SIMPLE_NAME, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
getFields,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
getFields,SIMPLE_NAME, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
getFields,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
getFields,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
getFields,SIMPLE_NAME, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
getFields,SIMPLE_NAME, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
getFields,SIMPLE_NAME, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
getFields,SIMPLE_NAME, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
getFields,SIMPLE_NAME, line no: 616,fieldID,SIMPLE_NAME, line no: 559
getFields,SIMPLE_NAME, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
getFields,SIMPLE_NAME, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
getFields,SIMPLE_NAME, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
getFields,SIMPLE_NAME, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
getFields,SIMPLE_NAME, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
getFields,SIMPLE_NAME, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
getFields,SIMPLE_NAME, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
getFields,SIMPLE_NAME, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
getFields,SIMPLE_NAME, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
getFields,SIMPLE_NAME, line no: 616,curField,SIMPLE_NAME, line no: 567
getFields,SIMPLE_NAME, line no: 616,DocValues,SIMPLE_NAME, line no: 568
getFields,SIMPLE_NAME, line no: 616,norms1,SIMPLE_NAME, line no: 568
getFields,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
getFields,SIMPLE_NAME, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
getFields,SIMPLE_NAME, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
getFields,SIMPLE_NAME, line no: 616,norms2,SIMPLE_NAME, line no: 569
getFields,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
getFields,SIMPLE_NAME, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
getFields,SIMPLE_NAME, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
getFields,SIMPLE_NAME, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
getFields,SIMPLE_NAME, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
getFields,SIMPLE_NAME, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
getFields,SIMPLE_NAME, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
getFields,SIMPLE_NAME, line no: 616,getSource,SIMPLE_NAME, line no: 573
getFields,SIMPLE_NAME, line no: 616,getArray,SIMPLE_NAME, line no: 573
getFields,SIMPLE_NAME, line no: 616,b2,SIMPLE_NAME, line no: 574
getFields,SIMPLE_NAME, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
getFields,SIMPLE_NAME, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
getFields,SIMPLE_NAME, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
getFields,SIMPLE_NAME, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
getFields,SIMPLE_NAME, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
getFields,SIMPLE_NAME, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
getFields,SIMPLE_NAME, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
getFields,SIMPLE_NAME, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
getFields,SIMPLE_NAME, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
getFields,SIMPLE_NAME, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
getFields,SIMPLE_NAME, line no: 616," and field '",STRING_LITERAL, line no: 577
getFields,SIMPLE_NAME, line no: 616,"'.",STRING_LITERAL, line no: 577
getFields,SIMPLE_NAME, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
getFields,SIMPLE_NAME, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
getFields,SIMPLE_NAME, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
getFields,SIMPLE_NAME, line no: 616,assertSame,SIMPLE_NAME, line no: 582
getFields,SIMPLE_NAME, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
getFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
getFields,SIMPLE_NAME, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
getFields,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
getFields,SIMPLE_NAME, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
getFields,SIMPLE_NAME, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
getFields,SIMPLE_NAME, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
getFields,SIMPLE_NAME, line no: 616,"Doc ",STRING_LITERAL, line no: 590
getFields,SIMPLE_NAME, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
getFields,SIMPLE_NAME, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
getFields,SIMPLE_NAME, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
getFields,SIMPLE_NAME, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
getFields,SIMPLE_NAME, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
getFields,SIMPLE_NAME, line no: 616,get,SIMPLE_NAME, line no: 591
getFields,SIMPLE_NAME, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
getFields,SIMPLE_NAME, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
getFields,SIMPLE_NAME, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
getFields,SIMPLE_NAME, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
getFields,SIMPLE_NAME, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
getFields,SIMPLE_NAME, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
getFields,SIMPLE_NAME, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
getFields,SIMPLE_NAME, line no: 616,field1,SIMPLE_NAME, line no: 600
getFields,SIMPLE_NAME, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
getFields,SIMPLE_NAME, line no: 616,field2,SIMPLE_NAME, line no: 601
getFields,SIMPLE_NAME, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
getFields,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
getFields,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
getFields,SIMPLE_NAME, line no: 616,".",STRING_LITERAL, line no: 602
getFields,SIMPLE_NAME, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
getFields,SIMPLE_NAME, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
getFields,SIMPLE_NAME, line no: 616,itField1,SIMPLE_NAME, line no: 603
getFields,SIMPLE_NAME, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
getFields,SIMPLE_NAME, line no: 616,itField2,SIMPLE_NAME, line no: 604
getFields,SIMPLE_NAME, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
getFields,SIMPLE_NAME, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
getFields,SIMPLE_NAME, line no: 616,hasNext,SIMPLE_NAME, line no: 605
getFields,SIMPLE_NAME, line no: 616,curField1,SIMPLE_NAME, line no: 606
getFields,SIMPLE_NAME, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
getFields,SIMPLE_NAME, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
getFields,SIMPLE_NAME, line no: 616,next,SIMPLE_NAME, line no: 606
getFields,SIMPLE_NAME, line no: 616,curField2,SIMPLE_NAME, line no: 607
getFields,SIMPLE_NAME, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
getFields,SIMPLE_NAME, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
getFields,SIMPLE_NAME, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
getFields,SIMPLE_NAME, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
getFields,SIMPLE_NAME, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
getFields,SIMPLE_NAME, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
getFields,SIMPLE_NAME, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
getFields,SIMPLE_NAME, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
getFields,SIMPLE_NAME, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
getFields,SIMPLE_NAME, line no: 616,stringValue,SIMPLE_NAME, line no: 609
getFields,SIMPLE_NAME, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
getFields,SIMPLE_NAME, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
getFields,SIMPLE_NAME, line no: 616,fenum1,SIMPLE_NAME, line no: 615
getFields,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
getFields,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
getFields,SIMPLE_NAME, line no: 616,fenum2,SIMPLE_NAME, line no: 616
getFields,SIMPLE_NAME, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
getFields,SIMPLE_NAME, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
getFields,SIMPLE_NAME, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
getFields,SIMPLE_NAME, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
getFields,SIMPLE_NAME, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
getFields,SIMPLE_NAME, line no: 616,"Different fields",STRING_LITERAL, line no: 620
getFields,SIMPLE_NAME, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
getFields,SIMPLE_NAME, line no: 616,terms1,SIMPLE_NAME, line no: 621
getFields,SIMPLE_NAME, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
getFields,SIMPLE_NAME, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
getFields,SIMPLE_NAME, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
getFields,SIMPLE_NAME, line no: 616,assertNull,SIMPLE_NAME, line no: 623
getFields,SIMPLE_NAME, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
getFields,SIMPLE_NAME, line no: 616,enum1,SIMPLE_NAME, line no: 626
getFields,SIMPLE_NAME, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
getFields,SIMPLE_NAME, line no: 616,terms2,SIMPLE_NAME, line no: 628
getFields,SIMPLE_NAME, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
getFields,SIMPLE_NAME, line no: 616,enum2,SIMPLE_NAME, line no: 630
getFields,SIMPLE_NAME, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
getFields,SIMPLE_NAME, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
getFields,SIMPLE_NAME, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
getFields,SIMPLE_NAME, line no: 616,"Different terms",STRING_LITERAL, line no: 633
getFields,SIMPLE_NAME, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
getFields,SIMPLE_NAME, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
getFields,SIMPLE_NAME, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
getFields,SIMPLE_NAME, line no: 616,tp1,SIMPLE_NAME, line no: 634
getFields,SIMPLE_NAME, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
getFields,SIMPLE_NAME, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
getFields,SIMPLE_NAME, line no: 616,tp2,SIMPLE_NAME, line no: 635
getFields,SIMPLE_NAME, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
getFields,SIMPLE_NAME, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
getFields,SIMPLE_NAME, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
getFields,SIMPLE_NAME, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
getFields,SIMPLE_NAME, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
getFields,SIMPLE_NAME, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
getFields,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
getFields,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
getFields,SIMPLE_NAME, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
getFields,SIMPLE_NAME, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
getFields,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
getFields,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
getFields,SIMPLE_NAME, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
getFields,SIMPLE_NAME, line no: 616,freq,SIMPLE_NAME, line no: 640
getFields,SIMPLE_NAME, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
getFields,SIMPLE_NAME, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
getFields,SIMPLE_NAME, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
getFields,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
getFields,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
getFields,SIMPLE_NAME, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
getFields,SIMPLE_NAME, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
getFields,SIMPLE_NAME, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
getFields,SIMPLE_NAME, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
getFields,SIMPLE_NAME, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
getFields,SIMPLE_NAME, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
getFields,SIMPLE_NAME, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
getFields,SIMPLE_NAME, line no: 616,27,NUMBER_LITERAL, line no: 660
getFields,SIMPLE_NAME, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
getFields,SIMPLE_NAME, line no: 616,sis,SIMPLE_NAME, line no: 664
getFields,SIMPLE_NAME, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
getFields,SIMPLE_NAME, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
getFields,SIMPLE_NAME, line no: 616,read,SIMPLE_NAME, line no: 665
getFields,SIMPLE_NAME, line no: 616,r,SIMPLE_NAME, line no: 666
getFields,SIMPLE_NAME, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
getFields,SIMPLE_NAME, line no: 616,c,SIMPLE_NAME, line no: 667
getFields,SIMPLE_NAME, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
getFields,SIMPLE_NAME, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
getFields,SIMPLE_NAME, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
getFields,SIMPLE_NAME, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
getFields,SIMPLE_NAME, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
getFields,SIMPLE_NAME, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
getFields,SIMPLE_NAME, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
getFields,SIMPLE_NAME, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
getFields,SIMPLE_NAME, line no: 616,equals,SIMPLE_NAME, line no: 671
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
getFields,SIMPLE_NAME, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
getFields,SIMPLE_NAME, line no: 616,r2,SIMPLE_NAME, line no: 685
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
getFields,SIMPLE_NAME, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
getFields,SIMPLE_NAME, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
getFields,SIMPLE_NAME, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
getFields,SIMPLE_NAME, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
getFields,SIMPLE_NAME, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
getFields,SIMPLE_NAME, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
getFields,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
getFields,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
getFields,SIMPLE_NAME, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
getFields,SIMPLE_NAME, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
getFields,SIMPLE_NAME, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
getFields,SIMPLE_NAME, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
getFields,SIMPLE_NAME, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
getFields,SIMPLE_NAME, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
getFields,SIMPLE_NAME, line no: 616,createDocument,SIMPLE_NAME, line no: 707
getFields,SIMPLE_NAME, line no: 616,id,SIMPLE_NAME, line no: 707
getFields,SIMPLE_NAME, line no: 616,customType,SIMPLE_NAME, line no: 709
getFields,SIMPLE_NAME, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
getFields,SIMPLE_NAME, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
getFields,SIMPLE_NAME, line no: 616,false,BOOLEAN_LITERAL, line no: 710
getFields,SIMPLE_NAME, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
getFields,SIMPLE_NAME, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
getFields,SIMPLE_NAME, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
getFields,SIMPLE_NAME, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
getFields,SIMPLE_NAME, line no: 616,"id",STRING_LITERAL, line no: 713
getFields,SIMPLE_NAME, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
getFields,SIMPLE_NAME, line no: 616,Throwable,SIMPLE_NAME, line no: 720
getFields,SIMPLE_NAME, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
getFields,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
getFields,SIMPLE_NAME, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
getFields,SIMPLE_NAME, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
getFields,SIMPLE_NAME, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
getFields,SIMPLE_NAME, line no: 616,nsde,SIMPLE_NAME, line no: 725
getFields,SIMPLE_NAME, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
getFields,SIMPLE_NAME, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
getFields,SIMPLE_NAME, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
getFields,SIMPLE_NAME, line no: 616,"a",STRING_LITERAL, line no: 739
getFields,SIMPLE_NAME, line no: 616,commits,SIMPLE_NAME, line no: 744
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
getFields,SIMPLE_NAME, line no: 616,listCommits,SIMPLE_NAME, line no: 744
getFields,SIMPLE_NAME, line no: 616,commit,SIMPLE_NAME, line no: 745
getFields,SIMPLE_NAME, line no: 616,files,SIMPLE_NAME, line no: 746
getFields,SIMPLE_NAME, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
getFields,SIMPLE_NAME, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
getFields,SIMPLE_NAME, line no: 616,seen,SIMPLE_NAME, line no: 747
getFields,SIMPLE_NAME, line no: 616,fileName,SIMPLE_NAME, line no: 748
getFields,SIMPLE_NAME, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
getFields,SIMPLE_NAME, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
getFields,SIMPLE_NAME, line no: 616,"file ",STRING_LITERAL, line no: 749
getFields,SIMPLE_NAME, line no: 616," was duplicated",STRING_LITERAL, line no: 749
getFields,SIMPLE_NAME, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
getFields,SIMPLE_NAME, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
getFields,SIMPLE_NAME, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
getFields,SIMPLE_NAME, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
getFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
getFields,SIMPLE_NAME, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
getFields,SIMPLE_NAME, line no: 616,"number",STRING_LITERAL, line no: 768
getFields,SIMPLE_NAME, line no: 616,"17",STRING_LITERAL, line no: 768
getFields,SIMPLE_NAME, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
getFields,SIMPLE_NAME, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
getFields,SIMPLE_NAME, line no: 616,r1,SIMPLE_NAME, line no: 774
getFields,SIMPLE_NAME, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
getFields,SIMPLE_NAME, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
getFields,SIMPLE_NAME, line no: 616,ints,SIMPLE_NAME, line no: 775
getFields,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
getFields,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
getFields,SIMPLE_NAME, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
getFields,SIMPLE_NAME, line no: 616,getInts,SIMPLE_NAME, line no: 775
getFields,SIMPLE_NAME, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
getFields,SIMPLE_NAME, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
getFields,SIMPLE_NAME, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
getFields,SIMPLE_NAME, line no: 616,17,NUMBER_LITERAL, line no: 777
getFields,SIMPLE_NAME, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
getFields,SIMPLE_NAME, line no: 616,sub0,SIMPLE_NAME, line no: 787
getFields,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
getFields,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
getFields,SIMPLE_NAME, line no: 616,ints2,SIMPLE_NAME, line no: 788
getFields,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
getFields,SIMPLE_NAME, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
getFields,SIMPLE_NAME, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
getFields,SIMPLE_NAME, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
getFields,SIMPLE_NAME, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
getFields,SIMPLE_NAME, line no: 616,"field",STRING_LITERAL, line no: 801
getFields,SIMPLE_NAME, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
getFields,SIMPLE_NAME, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
getFields,SIMPLE_NAME, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
getFields,SIMPLE_NAME, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
getFields,SIMPLE_NAME, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
getFields,SIMPLE_NAME, line no: 616,36,NUMBER_LITERAL, line no: 809
getFields,SIMPLE_NAME, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
getFields,SIMPLE_NAME, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
getFields,SIMPLE_NAME, line no: 616,subs,SIMPLE_NAME, line no: 816
getFields,SIMPLE_NAME, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
getFields,SIMPLE_NAME, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
getFields,SIMPLE_NAME, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
getFields,SIMPLE_NAME, line no: 616,setCodec,SIMPLE_NAME, line no: 828
getFields,SIMPLE_NAME, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
getFields,SIMPLE_NAME, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
getFields,SIMPLE_NAME, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
getFields,SIMPLE_NAME, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
getFields,SIMPLE_NAME, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
getFields,SIMPLE_NAME, line no: 616,docFreq,SIMPLE_NAME, line no: 838
getFields,SIMPLE_NAME, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
getFields,SIMPLE_NAME, line no: 616,"f",STRING_LITERAL, line no: 838
getFields,SIMPLE_NAME, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
getFields,SIMPLE_NAME, line no: 616,ise,SIMPLE_NAME, line no: 840
getFields,SIMPLE_NAME, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
getFields,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
getFields,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
getFields,SIMPLE_NAME, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
getFields,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
getFields,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
getFields,SIMPLE_NAME, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
getFields,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
getFields,SIMPLE_NAME, line no: 616,subReaders,SIMPLE_NAME, line no: 859
getFields,SIMPLE_NAME, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
getFields,SIMPLE_NAME, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
getFields,SIMPLE_NAME, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
getFields,SIMPLE_NAME, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
getFields,SIMPLE_NAME, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
getFields,SIMPLE_NAME, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
getFields,SIMPLE_NAME, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
getFields,SIMPLE_NAME, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
getFields,SIMPLE_NAME, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
getFields,SIMPLE_NAME, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
getFields,SIMPLE_NAME, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
getFields,SIMPLE_NAME, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
getFields,SIMPLE_NAME, line no: 616,sdp,SIMPLE_NAME, line no: 898
getFields,SIMPLE_NAME, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
getFields,SIMPLE_NAME, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
getFields,SIMPLE_NAME, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
getFields,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
getFields,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
getFields,SIMPLE_NAME, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
getFields,SIMPLE_NAME, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
getFields,SIMPLE_NAME, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
getFields,SIMPLE_NAME, line no: 616,snapshot,SIMPLE_NAME, line no: 903
getFields,SIMPLE_NAME, line no: 616,"c1",STRING_LITERAL, line no: 903
getFields,SIMPLE_NAME, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
getFields,SIMPLE_NAME, line no: 616,"c2",STRING_LITERAL, line no: 906
getFields,SIMPLE_NAME, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
getFields,SIMPLE_NAME, line no: 616,"c3",STRING_LITERAL, line no: 909
getFields,SIMPLE_NAME, line no: 616,currentGen,SIMPLE_NAME, line no: 911
getFields,SIMPLE_NAME, line no: 616,ic,SIMPLE_NAME, line no: 912
getFields,SIMPLE_NAME, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
getFields,SIMPLE_NAME, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
getFields,SIMPLE_NAME, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
getFields,SIMPLE_NAME, line no: 616," commitGen=",STRING_LITERAL, line no: 913
getFields,SIMPLE_NAME, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
getFields,SIMPLE_NAME, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
getFields,SIMPLE_NAME, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
getFields,SIMPLE_NAME, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
getFields,SIMPLE_NAME, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
getFields,SIMPLE_NAME, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
getFields,SIMPLE_NAME, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
getFields,SIMPLE_NAME, line no: 616,indexExists,SIMPLE_NAME, line no: 925
getFields,SIMPLE_NAME, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
getFields,SIMPLE_NAME, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
getFields,SIMPLE_NAME, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
getFields,SIMPLE_NAME, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
getFields,SIMPLE_NAME, line no: 616,"a a b",STRING_LITERAL, line no: 938
getFields,SIMPLE_NAME, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
getFields,SIMPLE_NAME, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
getFields,SIMPLE_NAME, line no: 616,getReader,SIMPLE_NAME, line no: 940
getFields,SIMPLE_NAME, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
getFields,SIMPLE_NAME, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
getFields,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
getFields,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
getFields,SIMPLE_NAME, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
getFields,SIMPLE_NAME, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
getFields,SIMPLE_NAME, line no: 616,"b",STRING_LITERAL, line no: 944
getFields,SIMPLE_NAME, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
getFields,SIMPLE_NAME, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
getFields,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
getFields,SIMPLE_NAME, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
getFields,SIMPLE_NAME, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
getFields,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
getFields,SIMPLE_NAME, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
getFields,SIMPLE_NAME, line no: 616,closeCount,SIMPLE_NAME, line no: 964
getFields,SIMPLE_NAME, line no: 616,new int[1],ARRAY_CREATION, line no: 964
getFields,SIMPLE_NAME, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
getFields,SIMPLE_NAME, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
getFields,SIMPLE_NAME, line no: 616,listener,SIMPLE_NAME, line no: 965
getFields,SIMPLE_NAME, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
getFields,SIMPLE_NAME, line no: 616,onClose,SIMPLE_NAME, line no: 966
getFields,SIMPLE_NAME, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
getFields,SIMPLE_NAME, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
getFields,SIMPLE_NAME, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
getFields,SIMPLE_NAME, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
getFields,SIMPLE_NAME, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
getFields,SIMPLE_NAME, line no: 616,reader2,SIMPLE_NAME, line no: 979
getFields,SIMPLE_NAME, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
getFields,SIMPLE_NAME, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
getFields,SIMPLE_NAME, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
getFields,SIMPLE_NAME, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
getFields,SIMPLE_NAME, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
getFields,SIMPLE_NAME, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
getFields,SIMPLE_NAME, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
getFields,SIMPLE_NAME, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
getFields,SIMPLE_NAME, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
getFields,SIMPLE_NAME, line no: 616,iae,SIMPLE_NAME, line no: 998
getFields,SIMPLE_NAME, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
getFields,SIMPLE_NAME, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
getFields,SIMPLE_NAME, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
getFields,SIMPLE_NAME, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
getFields,SIMPLE_NAME, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
getFields,SIMPLE_NAME, line no: 616,decRef,SIMPLE_NAME, line no: 1012
getFields,SIMPLE_NAME, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
getFields,SIMPLE_NAME, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
getFields,SIMPLE_NAME, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
getFields,SIMPLE_NAME, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
getFields,SIMPLE_NAME, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
getFields,SIMPLE_NAME, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
getFields,SIMPLE_NAME, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
getFields,SIMPLE_NAME, line no: 616,threads,SIMPLE_NAME, line no: 1027
getFields,SIMPLE_NAME, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
getFields,SIMPLE_NAME, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
getFields,SIMPLE_NAME, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
getFields,SIMPLE_NAME, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
getFields,SIMPLE_NAME, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
getFields,SIMPLE_NAME, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
getFields,SIMPLE_NAME, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
getFields,SIMPLE_NAME, line no: 616,start,SIMPLE_NAME, line no: 1030
getFields,SIMPLE_NAME, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
getFields,SIMPLE_NAME, line no: 616,Thread,SIMPLE_NAME, line no: 1032
getFields,SIMPLE_NAME, line no: 616,sleep,SIMPLE_NAME, line no: 1032
getFields,SIMPLE_NAME, line no: 616,100,NUMBER_LITERAL, line no: 1032
getFields,SIMPLE_NAME, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
getFields,SIMPLE_NAME, line no: 616,join,SIMPLE_NAME, line no: 1039
getFields,SIMPLE_NAME, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
getFields,SIMPLE_NAME, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
getFields,SIMPLE_NAME, line no: 616,failed,SIMPLE_NAME, line no: 1040
getFields,SIMPLE_NAME, line no: 616,toInc,SIMPLE_NAME, line no: 1048
getFields,SIMPLE_NAME, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
getFields,SIMPLE_NAME, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
getFields,SIMPLE_NAME, line no: 616,this,THIS_EXPRESSION, line no: 1053
getFields,SIMPLE_NAME, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
getFields,SIMPLE_NAME, line no: 616,this.random,FIELD_ACCESS, line no: 1054
getFields,SIMPLE_NAME, line no: 616,@Override,, line no: 1057
getFields,SIMPLE_NAME, line no: 616,Override,SIMPLE_NAME, line no: 1057
getFields,SIMPLE_NAME, line no: 616,run,SIMPLE_NAME, line no: 1058
getFields,SIMPLE_NAME, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
getFields,SIMPLE_NAME, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
getFields,SIMPLE_NAME, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
getFields,SIMPLE_NAME, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
getFields,SIMPLE_NAME, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
getFields,SIMPLE_NAME, line no: 616,failed=e,ASSIGNMENT, line no: 1066
getFields,SIMPLE_NAME, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
getFields,SIMPLE_NAME, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
getFields,SIMPLE_NAME, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
getFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
getFields,SIMPLE_NAME, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
getFields,SIMPLE_NAME, line no: 616,"field1",STRING_LITERAL, line no: 1075
getFields,SIMPLE_NAME, line no: 616,"foobar",STRING_LITERAL, line no: 1075
getFields,SIMPLE_NAME, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
getFields,SIMPLE_NAME, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
getFields,SIMPLE_NAME, line no: 616,"field2",STRING_LITERAL, line no: 1076
getFields,SIMPLE_NAME, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
getFields,SIMPLE_NAME, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
getFields,SIMPLE_NAME, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
getFields,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
getFields,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
getFields,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
getFields,SIMPLE_NAME, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
getFields,SIMPLE_NAME, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
getFields,SIMPLE_NAME, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
getFields,SIMPLE_NAME, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
getFields,SIMPLE_NAME, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,org,SIMPLE_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,apache,SIMPLE_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,lucene,SIMPLE_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,index,SIMPLE_NAME, line no: 1
index1,SIMPLE_NAME, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
index1,SIMPLE_NAME, line no: 616,java.io,QUALIFIED_NAME, line no: 20
index1,SIMPLE_NAME, line no: 616,java,SIMPLE_NAME, line no: 20
index1,SIMPLE_NAME, line no: 616,io,SIMPLE_NAME, line no: 20
index1,SIMPLE_NAME, line no: 616,File,SIMPLE_NAME, line no: 20
index1,SIMPLE_NAME, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
index1,SIMPLE_NAME, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
index1,SIMPLE_NAME, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
index1,SIMPLE_NAME, line no: 616,IOException,SIMPLE_NAME, line no: 22
index1,SIMPLE_NAME, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
index1,SIMPLE_NAME, line no: 616,java.util,QUALIFIED_NAME, line no: 23
index1,SIMPLE_NAME, line no: 616,util,SIMPLE_NAME, line no: 23
index1,SIMPLE_NAME, line no: 616,Collection,SIMPLE_NAME, line no: 23
index1,SIMPLE_NAME, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
index1,SIMPLE_NAME, line no: 616,HashSet,SIMPLE_NAME, line no: 24
index1,SIMPLE_NAME, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
index1,SIMPLE_NAME, line no: 616,Iterator,SIMPLE_NAME, line no: 25
index1,SIMPLE_NAME, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
index1,SIMPLE_NAME, line no: 616,List,SIMPLE_NAME, line no: 26
index1,SIMPLE_NAME, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
index1,SIMPLE_NAME, line no: 616,Random,SIMPLE_NAME, line no: 27
index1,SIMPLE_NAME, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
index1,SIMPLE_NAME, line no: 616,Set,SIMPLE_NAME, line no: 28
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
index1,SIMPLE_NAME, line no: 616,analysis,SIMPLE_NAME, line no: 30
index1,SIMPLE_NAME, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
index1,SIMPLE_NAME, line no: 616,codecs,SIMPLE_NAME, line no: 31
index1,SIMPLE_NAME, line no: 616,lucene40,SIMPLE_NAME, line no: 31
index1,SIMPLE_NAME, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
index1,SIMPLE_NAME, line no: 616,document,SIMPLE_NAME, line no: 32
index1,SIMPLE_NAME, line no: 616,Document,SIMPLE_NAME, line no: 32
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
index1,SIMPLE_NAME, line no: 616,Field,SIMPLE_NAME, line no: 33
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
index1,SIMPLE_NAME, line no: 616,FieldType,SIMPLE_NAME, line no: 34
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
index1,SIMPLE_NAME, line no: 616,StoredField,SIMPLE_NAME, line no: 35
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
index1,SIMPLE_NAME, line no: 616,StringField,SIMPLE_NAME, line no: 36
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
index1,SIMPLE_NAME, line no: 616,TextField,SIMPLE_NAME, line no: 37
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
index1,SIMPLE_NAME, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
index1,SIMPLE_NAME, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
index1,SIMPLE_NAME, line no: 616,search,SIMPLE_NAME, line no: 39
index1,SIMPLE_NAME, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
index1,SIMPLE_NAME, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
index1,SIMPLE_NAME, line no: 616,store,SIMPLE_NAME, line no: 41
index1,SIMPLE_NAME, line no: 616,Directory,SIMPLE_NAME, line no: 41
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
index1,SIMPLE_NAME, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
index1,SIMPLE_NAME, line no: 616,Bits,SIMPLE_NAME, line no: 43
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
index1,SIMPLE_NAME, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
index1,SIMPLE_NAME, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
index1,SIMPLE_NAME, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
index1,SIMPLE_NAME, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
index1,SIMPLE_NAME, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
index1,SIMPLE_NAME, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
index1,SIMPLE_NAME, line no: 616,junit,SIMPLE_NAME, line no: 47
index1,SIMPLE_NAME, line no: 616,Assume,SIMPLE_NAME, line no: 47
index1,SIMPLE_NAME, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
index1,SIMPLE_NAME, line no: 616,testDocument,SIMPLE_NAME, line no: 51
index1,SIMPLE_NAME, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
index1,SIMPLE_NAME, line no: 616,readers,SIMPLE_NAME, line no: 52
index1,SIMPLE_NAME, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
index1,SIMPLE_NAME, line no: 616,2,NUMBER_LITERAL, line no: 52
index1,SIMPLE_NAME, line no: 616,dir,SIMPLE_NAME, line no: 53
index1,SIMPLE_NAME, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
index1,SIMPLE_NAME, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
index1,SIMPLE_NAME, line no: 616,doc1,SIMPLE_NAME, line no: 54
index1,SIMPLE_NAME, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
index1,SIMPLE_NAME, line no: 616,doc2,SIMPLE_NAME, line no: 55
index1,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
index1,SIMPLE_NAME, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
index1,SIMPLE_NAME, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
index1,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
index1,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
index1,SIMPLE_NAME, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
index1,SIMPLE_NAME, line no: 616,random(),METHOD_INVOCATION, line no: 58
index1,SIMPLE_NAME, line no: 616,random,SIMPLE_NAME, line no: 58
index1,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
index1,SIMPLE_NAME, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
index1,SIMPLE_NAME, line no: 616,reader,SIMPLE_NAME, line no: 60
index1,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
index1,SIMPLE_NAME, line no: 616,open,SIMPLE_NAME, line no: 60
index1,SIMPLE_NAME, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
index1,SIMPLE_NAME, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
index1,SIMPLE_NAME, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
index1,SIMPLE_NAME, line no: 616,null,NULL_LITERAL, line no: 61
index1,SIMPLE_NAME, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
index1,SIMPLE_NAME, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
index1,SIMPLE_NAME, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
index1,SIMPLE_NAME, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
index1,SIMPLE_NAME, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
index1,SIMPLE_NAME, line no: 616,0,NUMBER_LITERAL, line no: 64
index1,SIMPLE_NAME, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
index1,SIMPLE_NAME, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
index1,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
index1,SIMPLE_NAME, line no: 616,numFields,SIMPLE_NAME, line no: 66
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
index1,SIMPLE_NAME, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
index1,SIMPLE_NAME, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
index1,SIMPLE_NAME, line no: 616,unstored,SIMPLE_NAME, line no: 66
index1,SIMPLE_NAME, line no: 616,size,SIMPLE_NAME, line no: 66
index1,SIMPLE_NAME, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
index1,SIMPLE_NAME, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
index1,SIMPLE_NAME, line no: 616,1,NUMBER_LITERAL, line no: 67
index1,SIMPLE_NAME, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
index1,SIMPLE_NAME, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
index1,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
index1,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
index1,SIMPLE_NAME, line no: 616,Terms,SIMPLE_NAME, line no: 70
index1,SIMPLE_NAME, line no: 616,vector,SIMPLE_NAME, line no: 70
index1,SIMPLE_NAME, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
index1,SIMPLE_NAME, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
index1,SIMPLE_NAME, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
index1,SIMPLE_NAME, line no: 616,terms,SIMPLE_NAME, line no: 70
index1,SIMPLE_NAME, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
index1,SIMPLE_NAME, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
index1,SIMPLE_NAME, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
index1,SIMPLE_NAME, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
index1,SIMPLE_NAME, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
index1,SIMPLE_NAME, line no: 616,close,SIMPLE_NAME, line no: 73
index1,SIMPLE_NAME, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
index1,SIMPLE_NAME, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
index1,SIMPLE_NAME, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
index1,SIMPLE_NAME, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
index1,SIMPLE_NAME, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
index1,SIMPLE_NAME, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
index1,SIMPLE_NAME, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
index1,SIMPLE_NAME, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
index1,SIMPLE_NAME, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
index1,SIMPLE_NAME, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
index1,SIMPLE_NAME, line no: 616,addDoc,SIMPLE_NAME, line no: 81
index1,SIMPLE_NAME, line no: 616,"test foo",STRING_LITERAL, line no: 81
index1,SIMPLE_NAME, line no: 616,true,BOOLEAN_LITERAL, line no: 81
index1,SIMPLE_NAME, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
index1,SIMPLE_NAME, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
index1,SIMPLE_NAME, line no: 616,"test blah",STRING_LITERAL, line no: 83
index1,SIMPLE_NAME, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
index1,SIMPLE_NAME, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
index1,SIMPLE_NAME, line no: 616,"test wow",STRING_LITERAL, line no: 85
index1,SIMPLE_NAME, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
index1,SIMPLE_NAME, line no: 616,readers1,SIMPLE_NAME, line no: 87
index1,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
index1,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
index1,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
index1,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
index1,SIMPLE_NAME, line no: 616,readers2,SIMPLE_NAME, line no: 88
index1,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
index1,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
index1,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
index1,SIMPLE_NAME, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
index1,SIMPLE_NAME, line no: 616,mr2,SIMPLE_NAME, line no: 89
index1,SIMPLE_NAME, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
index1,SIMPLE_NAME, line no: 616,mr3,SIMPLE_NAME, line no: 90
index1,SIMPLE_NAME, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
index1,SIMPLE_NAME, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
index1,SIMPLE_NAME, line no: 616,te2,SIMPLE_NAME, line no: 93
index1,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
index1,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
index1,SIMPLE_NAME, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
index1,SIMPLE_NAME, line no: 616,getTerms,SIMPLE_NAME, line no: 93
index1,SIMPLE_NAME, line no: 616,"body",STRING_LITERAL, line no: 93
index1,SIMPLE_NAME, line no: 616,iterator,SIMPLE_NAME, line no: 93
index1,SIMPLE_NAME, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
index1,SIMPLE_NAME, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
index1,SIMPLE_NAME, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
index1,SIMPLE_NAME, line no: 616,"wow",STRING_LITERAL, line no: 94
index1,SIMPLE_NAME, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
index1,SIMPLE_NAME, line no: 616,td,SIMPLE_NAME, line no: 95
index1,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
index1,SIMPLE_NAME, line no: 616,docs,SIMPLE_NAME, line no: 95
index1,SIMPLE_NAME, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
index1,SIMPLE_NAME, line no: 616,term,SIMPLE_NAME, line no: 97
index1,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
index1,SIMPLE_NAME, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
index1,SIMPLE_NAME, line no: 616,te3,SIMPLE_NAME, line no: 102
index1,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
index1,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
index1,SIMPLE_NAME, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
index1,SIMPLE_NAME, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
index1,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
index1,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
index1,SIMPLE_NAME, line no: 616,ret,SIMPLE_NAME, line no: 108
index1,SIMPLE_NAME, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
index1,SIMPLE_NAME, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
index1,SIMPLE_NAME, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
index1,SIMPLE_NAME, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
index1,SIMPLE_NAME, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
index1,SIMPLE_NAME, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
index1,SIMPLE_NAME, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
index1,SIMPLE_NAME, line no: 616,docID,SIMPLE_NAME, line no: 112
index1,SIMPLE_NAME, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
index1,SIMPLE_NAME, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
index1,SIMPLE_NAME, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
index1,SIMPLE_NAME, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
index1,SIMPLE_NAME, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
index1,SIMPLE_NAME, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
index1,SIMPLE_NAME, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
index1,SIMPLE_NAME, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
index1,SIMPLE_NAME, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
index1,SIMPLE_NAME, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
index1,SIMPLE_NAME, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
index1,SIMPLE_NAME, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
index1,SIMPLE_NAME, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
index1,SIMPLE_NAME, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
index1,SIMPLE_NAME, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
index1,SIMPLE_NAME, line no: 616,String,SIMPLE_NAME, line no: 127
index1,SIMPLE_NAME, line no: 616,s,SIMPLE_NAME, line no: 127
index1,SIMPLE_NAME, line no: 616,create,SIMPLE_NAME, line no: 127
index1,SIMPLE_NAME, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
index1,SIMPLE_NAME, line no: 616,iw,SIMPLE_NAME, line no: 128
index1,SIMPLE_NAME, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
index1,SIMPLE_NAME, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
index1,SIMPLE_NAME, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
index1,SIMPLE_NAME, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
index1,SIMPLE_NAME, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
index1,SIMPLE_NAME, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
index1,SIMPLE_NAME, line no: 616,CREATE,SIMPLE_NAME, line no: 131
index1,SIMPLE_NAME, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
index1,SIMPLE_NAME, line no: 616,APPEND,SIMPLE_NAME, line no: 131
index1,SIMPLE_NAME, line no: 616,doc,SIMPLE_NAME, line no: 132
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
index1,SIMPLE_NAME, line no: 616,add,SIMPLE_NAME, line no: 133
index1,SIMPLE_NAME, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
index1,SIMPLE_NAME, line no: 616,newTextField,SIMPLE_NAME, line no: 133
index1,SIMPLE_NAME, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
index1,SIMPLE_NAME, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
index1,SIMPLE_NAME, line no: 616,Store,SIMPLE_NAME, line no: 133
index1,SIMPLE_NAME, line no: 616,NO,SIMPLE_NAME, line no: 133
index1,SIMPLE_NAME, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
index1,SIMPLE_NAME, line no: 616,addDocument,SIMPLE_NAME, line no: 134
index1,SIMPLE_NAME, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
index1,SIMPLE_NAME, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
index1,SIMPLE_NAME, line no: 616,Exception,SIMPLE_NAME, line no: 138
index1,SIMPLE_NAME, line no: 616,d,SIMPLE_NAME, line no: 139
index1,SIMPLE_NAME, line no: 616,writer,SIMPLE_NAME, line no: 140
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
index1,SIMPLE_NAME, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
index1,SIMPLE_NAME, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
index1,SIMPLE_NAME, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
index1,SIMPLE_NAME, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
index1,SIMPLE_NAME, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
index1,SIMPLE_NAME, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
index1,SIMPLE_NAME, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
index1,SIMPLE_NAME, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
index1,SIMPLE_NAME, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
index1,SIMPLE_NAME, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
index1,SIMPLE_NAME, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
index1,SIMPLE_NAME, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
index1,SIMPLE_NAME, line no: 616,customType3,SIMPLE_NAME, line no: 177
index1,SIMPLE_NAME, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
index1,SIMPLE_NAME, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
index1,SIMPLE_NAME, line no: 616,setStored,SIMPLE_NAME, line no: 178
index1,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
index1,SIMPLE_NAME, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
index1,SIMPLE_NAME, line no: 616,"keyword",STRING_LITERAL, line no: 180
index1,SIMPLE_NAME, line no: 616,"test1",STRING_LITERAL, line no: 180
index1,SIMPLE_NAME, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
index1,SIMPLE_NAME, line no: 616,YES,SIMPLE_NAME, line no: 180
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
index1,SIMPLE_NAME, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
index1,SIMPLE_NAME, line no: 616,"text",STRING_LITERAL, line no: 181
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
index1,SIMPLE_NAME, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
index1,SIMPLE_NAME, line no: 616,"unindexed",STRING_LITERAL, line no: 182
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
index1,SIMPLE_NAME, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
index1,SIMPLE_NAME, line no: 616,"unstored",STRING_LITERAL, line no: 183
index1,SIMPLE_NAME, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
index1,SIMPLE_NAME, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
index1,SIMPLE_NAME, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
index1,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
index1,SIMPLE_NAME, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
index1,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
index1,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
index1,SIMPLE_NAME, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
index1,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
index1,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
index1,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
index1,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
index1,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
index1,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
index1,SIMPLE_NAME, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
index1,SIMPLE_NAME, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
index1,SIMPLE_NAME, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
index1,SIMPLE_NAME, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
index1,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
index1,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
index1,SIMPLE_NAME, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
index1,SIMPLE_NAME, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
index1,SIMPLE_NAME, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
index1,SIMPLE_NAME, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
index1,SIMPLE_NAME, line no: 616,getConfig,SIMPLE_NAME, line no: 203
index1,SIMPLE_NAME, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
index1,SIMPLE_NAME, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
index1,SIMPLE_NAME, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
index1,SIMPLE_NAME, line no: 616,i,SIMPLE_NAME, line no: 204
index1,SIMPLE_NAME, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
index1,SIMPLE_NAME, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
index1,SIMPLE_NAME, line no: 616,5,NUMBER_LITERAL, line no: 204
index1,SIMPLE_NAME, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
index1,SIMPLE_NAME, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
index1,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
index1,SIMPLE_NAME, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
index1,SIMPLE_NAME, line no: 616,"keyword2",STRING_LITERAL, line no: 215
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
index1,SIMPLE_NAME, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
index1,SIMPLE_NAME, line no: 616,"text2",STRING_LITERAL, line no: 216
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
index1,SIMPLE_NAME, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
index1,SIMPLE_NAME, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
index1,SIMPLE_NAME, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
index1,SIMPLE_NAME, line no: 616,"unstored2",STRING_LITERAL, line no: 218
index1,SIMPLE_NAME, line no: 616,customType5,SIMPLE_NAME, line no: 223
index1,SIMPLE_NAME, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
index1,SIMPLE_NAME, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
index1,SIMPLE_NAME, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
index1,SIMPLE_NAME, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
index1,SIMPLE_NAME, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
index1,SIMPLE_NAME, line no: 616,customType6,SIMPLE_NAME, line no: 225
index1,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
index1,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
index1,SIMPLE_NAME, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
index1,SIMPLE_NAME, line no: 616,customType7,SIMPLE_NAME, line no: 228
index1,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
index1,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
index1,SIMPLE_NAME, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
index1,SIMPLE_NAME, line no: 616,customType8,SIMPLE_NAME, line no: 231
index1,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
index1,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
index1,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
index1,SIMPLE_NAME, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
index1,SIMPLE_NAME, line no: 616,"tvnot",STRING_LITERAL, line no: 238
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
index1,SIMPLE_NAME, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
index1,SIMPLE_NAME, line no: 616,"termvector",STRING_LITERAL, line no: 239
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
index1,SIMPLE_NAME, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
index1,SIMPLE_NAME, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
index1,SIMPLE_NAME, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
index1,SIMPLE_NAME, line no: 616,"tvposition",STRING_LITERAL, line no: 241
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
index1,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
index1,SIMPLE_NAME, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
index1,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
index1,SIMPLE_NAME, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
index1,SIMPLE_NAME, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
index1,SIMPLE_NAME, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
index1,SIMPLE_NAME, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
index1,SIMPLE_NAME, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
index1,SIMPLE_NAME, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
index1,SIMPLE_NAME, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
index1,SIMPLE_NAME, line no: 616,name,SIMPLE_NAME, line no: 258
index1,SIMPLE_NAME, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
index1,SIMPLE_NAME, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
index1,SIMPLE_NAME, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
index1,SIMPLE_NAME, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
index1,SIMPLE_NAME, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
index1,SIMPLE_NAME, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
index1,SIMPLE_NAME, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
index1,SIMPLE_NAME, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
index1,SIMPLE_NAME, line no: 616,contains,SIMPLE_NAME, line no: 270
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
index1,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
index1,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
index1,SIMPLE_NAME, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
index1,SIMPLE_NAME, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
index1,SIMPLE_NAME, line no: 616,11,NUMBER_LITERAL, line no: 285
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
index1,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
index1,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
index1,SIMPLE_NAME, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
index1,SIMPLE_NAME, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
index1,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
index1,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
index1,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
index1,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
index1,SIMPLE_NAME, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
index1,SIMPLE_NAME, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
index1,SIMPLE_NAME, line no: 616,toString,SIMPLE_NAME, line no: 304
index1,SIMPLE_NAME, line no: 616,4,NUMBER_LITERAL, line no: 304
index1,SIMPLE_NAME, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
index1,SIMPLE_NAME, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
index1,SIMPLE_NAME, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
index1,SIMPLE_NAME, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
index1,SIMPLE_NAME, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
index1,SIMPLE_NAME, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
index1,SIMPLE_NAME, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
index1,SIMPLE_NAME, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
index1,SIMPLE_NAME, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
index1,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
index1,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
index1,SIMPLE_NAME, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
index1,SIMPLE_NAME, line no: 616,msg,SIMPLE_NAME, line no: 348
index1,SIMPLE_NAME, line no: 616,Term,SIMPLE_NAME, line no: 350
index1,SIMPLE_NAME, line no: 616,expected,SIMPLE_NAME, line no: 351
index1,SIMPLE_NAME, line no: 616,tdocs,SIMPLE_NAME, line no: 353
index1,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
index1,SIMPLE_NAME, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
index1,SIMPLE_NAME, line no: 616,field,SIMPLE_NAME, line no: 354
index1,SIMPLE_NAME, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
index1,SIMPLE_NAME, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
index1,SIMPLE_NAME, line no: 616,text,SIMPLE_NAME, line no: 355
index1,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
index1,SIMPLE_NAME, line no: 616,count,SIMPLE_NAME, line no: 359
index1,SIMPLE_NAME, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
index1,SIMPLE_NAME, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
index1,SIMPLE_NAME, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
index1,SIMPLE_NAME, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
index1,SIMPLE_NAME, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
index1,SIMPLE_NAME, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
index1,SIMPLE_NAME, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
index1,SIMPLE_NAME, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
index1,SIMPLE_NAME, line no: 616,bin,SIMPLE_NAME, line no: 371
index1,SIMPLE_NAME, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
index1,SIMPLE_NAME, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
index1,SIMPLE_NAME, line no: 616,3,NUMBER_LITERAL, line no: 371
index1,SIMPLE_NAME, line no: 616,6,NUMBER_LITERAL, line no: 371
index1,SIMPLE_NAME, line no: 616,7,NUMBER_LITERAL, line no: 371
index1,SIMPLE_NAME, line no: 616,8,NUMBER_LITERAL, line no: 371
index1,SIMPLE_NAME, line no: 616,9,NUMBER_LITERAL, line no: 371
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
index1,SIMPLE_NAME, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
index1,SIMPLE_NAME, line no: 616,10,NUMBER_LITERAL, line no: 375
index1,SIMPLE_NAME, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
index1,SIMPLE_NAME, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
index1,SIMPLE_NAME, line no: 616,"document number ",STRING_LITERAL, line no: 376
index1,SIMPLE_NAME, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
index1,SIMPLE_NAME, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
index1,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
index1,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
index1,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
index1,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
index1,SIMPLE_NAME, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
index1,SIMPLE_NAME, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
index1,SIMPLE_NAME, line no: 616,"bin1",STRING_LITERAL, line no: 384
index1,SIMPLE_NAME, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
index1,SIMPLE_NAME, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
index1,SIMPLE_NAME, line no: 616,"junk",STRING_LITERAL, line no: 385
index1,SIMPLE_NAME, line no: 616,"junk text",STRING_LITERAL, line no: 385
index1,SIMPLE_NAME, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
index1,SIMPLE_NAME, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
index1,SIMPLE_NAME, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
index1,SIMPLE_NAME, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
index1,SIMPLE_NAME, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
index1,SIMPLE_NAME, line no: 616,fields,SIMPLE_NAME, line no: 390
index1,SIMPLE_NAME, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
index1,SIMPLE_NAME, line no: 616,getFields,SIMPLE_NAME, line no: 390
index1,SIMPLE_NAME, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
index1,SIMPLE_NAME, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
index1,SIMPLE_NAME, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
index1,SIMPLE_NAME, line no: 616,length,SIMPLE_NAME, line no: 392
index1,SIMPLE_NAME, line no: 616,b1,SIMPLE_NAME, line no: 393
index1,SIMPLE_NAME, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
index1,SIMPLE_NAME, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
index1,SIMPLE_NAME, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
index1,SIMPLE_NAME, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
index1,SIMPLE_NAME, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
index1,SIMPLE_NAME, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
index1,SIMPLE_NAME, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
index1,SIMPLE_NAME, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
index1,SIMPLE_NAME, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
index1,SIMPLE_NAME, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
index1,SIMPLE_NAME, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
index1,SIMPLE_NAME, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
index1,SIMPLE_NAME, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
index1,SIMPLE_NAME, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
index1,SIMPLE_NAME, line no: 616,bytes,SIMPLE_NAME, line no: 398
index1,SIMPLE_NAME, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
index1,SIMPLE_NAME, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
index1,SIMPLE_NAME, line no: 616,offset,SIMPLE_NAME, line no: 398
index1,SIMPLE_NAME, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
index1,SIMPLE_NAME, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
index1,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
index1,SIMPLE_NAME, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
index1,SIMPLE_NAME, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
index1,SIMPLE_NAME, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
index1,SIMPLE_NAME, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
index1,SIMPLE_NAME, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
index1,SIMPLE_NAME, line no: 616,dirFile,SIMPLE_NAME, line no: 440
index1,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
index1,SIMPLE_NAME, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
index1,SIMPLE_NAME, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
index1,SIMPLE_NAME, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
index1,SIMPLE_NAME, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
index1,SIMPLE_NAME, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
index1,SIMPLE_NAME, line no: 616,"test",STRING_LITERAL, line no: 443
index1,SIMPLE_NAME, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
index1,SIMPLE_NAME, line no: 616,rmDir,SIMPLE_NAME, line no: 448
index1,SIMPLE_NAME, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
index1,SIMPLE_NAME, line no: 616,reader1,SIMPLE_NAME, line no: 459
index1,SIMPLE_NAME, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
index1,SIMPLE_NAME, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
index1,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
index1,SIMPLE_NAME, line no: 616,"deletetest",STRING_LITERAL, line no: 469
index1,SIMPLE_NAME, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
index1,SIMPLE_NAME, line no: 616,fail,SIMPLE_NAME, line no: 473
index1,SIMPLE_NAME, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
index1,SIMPLE_NAME, line no: 616,e,SIMPLE_NAME, line no: 474
index1,SIMPLE_NAME, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
index1,SIMPLE_NAME, line no: 616,delete,SIMPLE_NAME, line no: 478
index1,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
index1,SIMPLE_NAME, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
index1,SIMPLE_NAME, line no: 616,newStringField,SIMPLE_NAME, line no: 497
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
index1,SIMPLE_NAME, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
index1,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
index1,SIMPLE_NAME, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
index1,SIMPLE_NAME, line no: 616,newField,SIMPLE_NAME, line no: 499
index1,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
index1,SIMPLE_NAME, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
index1,SIMPLE_NAME, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
index1,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
index1,SIMPLE_NAME, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
index1,SIMPLE_NAME, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
index1,SIMPLE_NAME, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
index1,SIMPLE_NAME, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
index1,SIMPLE_NAME, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
index1,SIMPLE_NAME, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
index1,SIMPLE_NAME, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
index1,SIMPLE_NAME, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
index1,SIMPLE_NAME, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
index1,SIMPLE_NAME, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
index1,SIMPLE_NAME, line no: 616,value,SIMPLE_NAME, line no: 541
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
index1,SIMPLE_NAME, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
index1,SIMPLE_NAME, line no: 616,"content",STRING_LITERAL, line no: 543
index1,SIMPLE_NAME, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
index1,SIMPLE_NAME, line no: 616,index2,SIMPLE_NAME, line no: 548
index1,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
index1,SIMPLE_NAME, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
index1,SIMPLE_NAME, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
index1,SIMPLE_NAME, line no: 616,numDocs,SIMPLE_NAME, line no: 549
index1,SIMPLE_NAME, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
index1,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
index1,SIMPLE_NAME, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
index1,SIMPLE_NAME, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
index1,SIMPLE_NAME, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
index1,SIMPLE_NAME, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
index1,SIMPLE_NAME, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
index1,SIMPLE_NAME, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
index1,SIMPLE_NAME, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
index1,SIMPLE_NAME, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
index1,SIMPLE_NAME, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
index1,SIMPLE_NAME, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
index1,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
index1,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
index1,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
index1,SIMPLE_NAME, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
index1,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
index1,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
index1,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
index1,SIMPLE_NAME, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
index1,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
index1,SIMPLE_NAME, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
index1,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
index1,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
index1,SIMPLE_NAME, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
index1,SIMPLE_NAME, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
index1,SIMPLE_NAME, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
index1,SIMPLE_NAME, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
index1,SIMPLE_NAME, line no: 616,fieldID,SIMPLE_NAME, line no: 559
index1,SIMPLE_NAME, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
index1,SIMPLE_NAME, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
index1,SIMPLE_NAME, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
index1,SIMPLE_NAME, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
index1,SIMPLE_NAME, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
index1,SIMPLE_NAME, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
index1,SIMPLE_NAME, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
index1,SIMPLE_NAME, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
index1,SIMPLE_NAME, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
index1,SIMPLE_NAME, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
index1,SIMPLE_NAME, line no: 616,curField,SIMPLE_NAME, line no: 567
index1,SIMPLE_NAME, line no: 616,DocValues,SIMPLE_NAME, line no: 568
index1,SIMPLE_NAME, line no: 616,norms1,SIMPLE_NAME, line no: 568
index1,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
index1,SIMPLE_NAME, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
index1,SIMPLE_NAME, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
index1,SIMPLE_NAME, line no: 616,norms2,SIMPLE_NAME, line no: 569
index1,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
index1,SIMPLE_NAME, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
index1,SIMPLE_NAME, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
index1,SIMPLE_NAME, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
index1,SIMPLE_NAME, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
index1,SIMPLE_NAME, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
index1,SIMPLE_NAME, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
index1,SIMPLE_NAME, line no: 616,getSource,SIMPLE_NAME, line no: 573
index1,SIMPLE_NAME, line no: 616,getArray,SIMPLE_NAME, line no: 573
index1,SIMPLE_NAME, line no: 616,b2,SIMPLE_NAME, line no: 574
index1,SIMPLE_NAME, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
index1,SIMPLE_NAME, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
index1,SIMPLE_NAME, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
index1,SIMPLE_NAME, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
index1,SIMPLE_NAME, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
index1,SIMPLE_NAME, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
index1,SIMPLE_NAME, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
index1,SIMPLE_NAME, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
index1,SIMPLE_NAME, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
index1,SIMPLE_NAME, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
index1,SIMPLE_NAME, line no: 616," and field '",STRING_LITERAL, line no: 577
index1,SIMPLE_NAME, line no: 616,"'.",STRING_LITERAL, line no: 577
index1,SIMPLE_NAME, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
index1,SIMPLE_NAME, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
index1,SIMPLE_NAME, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
index1,SIMPLE_NAME, line no: 616,assertSame,SIMPLE_NAME, line no: 582
index1,SIMPLE_NAME, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
index1,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
index1,SIMPLE_NAME, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
index1,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
index1,SIMPLE_NAME, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
index1,SIMPLE_NAME, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
index1,SIMPLE_NAME, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
index1,SIMPLE_NAME, line no: 616,"Doc ",STRING_LITERAL, line no: 590
index1,SIMPLE_NAME, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
index1,SIMPLE_NAME, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
index1,SIMPLE_NAME, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
index1,SIMPLE_NAME, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
index1,SIMPLE_NAME, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
index1,SIMPLE_NAME, line no: 616,get,SIMPLE_NAME, line no: 591
index1,SIMPLE_NAME, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
index1,SIMPLE_NAME, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
index1,SIMPLE_NAME, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
index1,SIMPLE_NAME, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
index1,SIMPLE_NAME, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
index1,SIMPLE_NAME, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
index1,SIMPLE_NAME, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
index1,SIMPLE_NAME, line no: 616,field1,SIMPLE_NAME, line no: 600
index1,SIMPLE_NAME, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
index1,SIMPLE_NAME, line no: 616,field2,SIMPLE_NAME, line no: 601
index1,SIMPLE_NAME, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
index1,SIMPLE_NAME, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
index1,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
index1,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
index1,SIMPLE_NAME, line no: 616,".",STRING_LITERAL, line no: 602
index1,SIMPLE_NAME, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
index1,SIMPLE_NAME, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
index1,SIMPLE_NAME, line no: 616,itField1,SIMPLE_NAME, line no: 603
index1,SIMPLE_NAME, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
index1,SIMPLE_NAME, line no: 616,itField2,SIMPLE_NAME, line no: 604
index1,SIMPLE_NAME, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
index1,SIMPLE_NAME, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
index1,SIMPLE_NAME, line no: 616,hasNext,SIMPLE_NAME, line no: 605
index1,SIMPLE_NAME, line no: 616,curField1,SIMPLE_NAME, line no: 606
index1,SIMPLE_NAME, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
index1,SIMPLE_NAME, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
index1,SIMPLE_NAME, line no: 616,next,SIMPLE_NAME, line no: 606
index1,SIMPLE_NAME, line no: 616,curField2,SIMPLE_NAME, line no: 607
index1,SIMPLE_NAME, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
index1,SIMPLE_NAME, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
index1,SIMPLE_NAME, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
index1,SIMPLE_NAME, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
index1,SIMPLE_NAME, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
index1,SIMPLE_NAME, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
index1,SIMPLE_NAME, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
index1,SIMPLE_NAME, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
index1,SIMPLE_NAME, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
index1,SIMPLE_NAME, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
index1,SIMPLE_NAME, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
index1,SIMPLE_NAME, line no: 616,stringValue,SIMPLE_NAME, line no: 609
index1,SIMPLE_NAME, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
index1,SIMPLE_NAME, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
index1,SIMPLE_NAME, line no: 616,fenum1,SIMPLE_NAME, line no: 615
index1,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
index1,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
index1,SIMPLE_NAME, line no: 616,fenum2,SIMPLE_NAME, line no: 616
index1,SIMPLE_NAME, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
index1,SIMPLE_NAME, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
index1,SIMPLE_NAME, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
index1,SIMPLE_NAME, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
index1,SIMPLE_NAME, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
index1,SIMPLE_NAME, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
index1,SIMPLE_NAME, line no: 616,"Different fields",STRING_LITERAL, line no: 620
index1,SIMPLE_NAME, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
index1,SIMPLE_NAME, line no: 616,terms1,SIMPLE_NAME, line no: 621
index1,SIMPLE_NAME, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
index1,SIMPLE_NAME, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
index1,SIMPLE_NAME, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
index1,SIMPLE_NAME, line no: 616,assertNull,SIMPLE_NAME, line no: 623
index1,SIMPLE_NAME, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
index1,SIMPLE_NAME, line no: 616,enum1,SIMPLE_NAME, line no: 626
index1,SIMPLE_NAME, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
index1,SIMPLE_NAME, line no: 616,terms2,SIMPLE_NAME, line no: 628
index1,SIMPLE_NAME, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
index1,SIMPLE_NAME, line no: 616,enum2,SIMPLE_NAME, line no: 630
index1,SIMPLE_NAME, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
index1,SIMPLE_NAME, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
index1,SIMPLE_NAME, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
index1,SIMPLE_NAME, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
index1,SIMPLE_NAME, line no: 616,"Different terms",STRING_LITERAL, line no: 633
index1,SIMPLE_NAME, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
index1,SIMPLE_NAME, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
index1,SIMPLE_NAME, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
index1,SIMPLE_NAME, line no: 616,tp1,SIMPLE_NAME, line no: 634
index1,SIMPLE_NAME, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
index1,SIMPLE_NAME, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
index1,SIMPLE_NAME, line no: 616,tp2,SIMPLE_NAME, line no: 635
index1,SIMPLE_NAME, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
index1,SIMPLE_NAME, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
index1,SIMPLE_NAME, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
index1,SIMPLE_NAME, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
index1,SIMPLE_NAME, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
index1,SIMPLE_NAME, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
index1,SIMPLE_NAME, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
index1,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
index1,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
index1,SIMPLE_NAME, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
index1,SIMPLE_NAME, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
index1,SIMPLE_NAME, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
index1,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
index1,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
index1,SIMPLE_NAME, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
index1,SIMPLE_NAME, line no: 616,freq,SIMPLE_NAME, line no: 640
index1,SIMPLE_NAME, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
index1,SIMPLE_NAME, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
index1,SIMPLE_NAME, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
index1,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
index1,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
index1,SIMPLE_NAME, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
index1,SIMPLE_NAME, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
index1,SIMPLE_NAME, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
index1,SIMPLE_NAME, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
index1,SIMPLE_NAME, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
index1,SIMPLE_NAME, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
index1,SIMPLE_NAME, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
index1,SIMPLE_NAME, line no: 616,27,NUMBER_LITERAL, line no: 660
index1,SIMPLE_NAME, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
index1,SIMPLE_NAME, line no: 616,sis,SIMPLE_NAME, line no: 664
index1,SIMPLE_NAME, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
index1,SIMPLE_NAME, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
index1,SIMPLE_NAME, line no: 616,read,SIMPLE_NAME, line no: 665
index1,SIMPLE_NAME, line no: 616,r,SIMPLE_NAME, line no: 666
index1,SIMPLE_NAME, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
index1,SIMPLE_NAME, line no: 616,c,SIMPLE_NAME, line no: 667
index1,SIMPLE_NAME, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
index1,SIMPLE_NAME, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
index1,SIMPLE_NAME, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
index1,SIMPLE_NAME, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
index1,SIMPLE_NAME, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
index1,SIMPLE_NAME, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
index1,SIMPLE_NAME, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
index1,SIMPLE_NAME, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
index1,SIMPLE_NAME, line no: 616,equals,SIMPLE_NAME, line no: 671
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
index1,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
index1,SIMPLE_NAME, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
index1,SIMPLE_NAME, line no: 616,r2,SIMPLE_NAME, line no: 685
index1,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
index1,SIMPLE_NAME, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
index1,SIMPLE_NAME, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
index1,SIMPLE_NAME, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
index1,SIMPLE_NAME, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
index1,SIMPLE_NAME, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
index1,SIMPLE_NAME, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
index1,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
index1,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
index1,SIMPLE_NAME, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
index1,SIMPLE_NAME, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
index1,SIMPLE_NAME, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
index1,SIMPLE_NAME, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
index1,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
index1,SIMPLE_NAME, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
index1,SIMPLE_NAME, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
index1,SIMPLE_NAME, line no: 616,createDocument,SIMPLE_NAME, line no: 707
index1,SIMPLE_NAME, line no: 616,id,SIMPLE_NAME, line no: 707
index1,SIMPLE_NAME, line no: 616,customType,SIMPLE_NAME, line no: 709
index1,SIMPLE_NAME, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
index1,SIMPLE_NAME, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
index1,SIMPLE_NAME, line no: 616,false,BOOLEAN_LITERAL, line no: 710
index1,SIMPLE_NAME, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
index1,SIMPLE_NAME, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
index1,SIMPLE_NAME, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
index1,SIMPLE_NAME, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
index1,SIMPLE_NAME, line no: 616,"id",STRING_LITERAL, line no: 713
index1,SIMPLE_NAME, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
index1,SIMPLE_NAME, line no: 616,Throwable,SIMPLE_NAME, line no: 720
index1,SIMPLE_NAME, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
index1,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
index1,SIMPLE_NAME, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
index1,SIMPLE_NAME, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
index1,SIMPLE_NAME, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
index1,SIMPLE_NAME, line no: 616,nsde,SIMPLE_NAME, line no: 725
index1,SIMPLE_NAME, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
index1,SIMPLE_NAME, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
index1,SIMPLE_NAME, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
index1,SIMPLE_NAME, line no: 616,"a",STRING_LITERAL, line no: 739
index1,SIMPLE_NAME, line no: 616,commits,SIMPLE_NAME, line no: 744
index1,SIMPLE_NAME, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
index1,SIMPLE_NAME, line no: 616,listCommits,SIMPLE_NAME, line no: 744
index1,SIMPLE_NAME, line no: 616,commit,SIMPLE_NAME, line no: 745
index1,SIMPLE_NAME, line no: 616,files,SIMPLE_NAME, line no: 746
index1,SIMPLE_NAME, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
index1,SIMPLE_NAME, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
index1,SIMPLE_NAME, line no: 616,seen,SIMPLE_NAME, line no: 747
index1,SIMPLE_NAME, line no: 616,fileName,SIMPLE_NAME, line no: 748
index1,SIMPLE_NAME, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
index1,SIMPLE_NAME, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
index1,SIMPLE_NAME, line no: 616,"file ",STRING_LITERAL, line no: 749
index1,SIMPLE_NAME, line no: 616," was duplicated",STRING_LITERAL, line no: 749
index1,SIMPLE_NAME, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
index1,SIMPLE_NAME, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
index1,SIMPLE_NAME, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
index1,SIMPLE_NAME, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
index1,SIMPLE_NAME, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
index1,SIMPLE_NAME, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
index1,SIMPLE_NAME, line no: 616,"number",STRING_LITERAL, line no: 768
index1,SIMPLE_NAME, line no: 616,"17",STRING_LITERAL, line no: 768
index1,SIMPLE_NAME, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
index1,SIMPLE_NAME, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
index1,SIMPLE_NAME, line no: 616,r1,SIMPLE_NAME, line no: 774
index1,SIMPLE_NAME, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
index1,SIMPLE_NAME, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
index1,SIMPLE_NAME, line no: 616,ints,SIMPLE_NAME, line no: 775
index1,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
index1,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
index1,SIMPLE_NAME, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
index1,SIMPLE_NAME, line no: 616,getInts,SIMPLE_NAME, line no: 775
index1,SIMPLE_NAME, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
index1,SIMPLE_NAME, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
index1,SIMPLE_NAME, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
index1,SIMPLE_NAME, line no: 616,17,NUMBER_LITERAL, line no: 777
index1,SIMPLE_NAME, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
index1,SIMPLE_NAME, line no: 616,sub0,SIMPLE_NAME, line no: 787
index1,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
index1,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
index1,SIMPLE_NAME, line no: 616,ints2,SIMPLE_NAME, line no: 788
index1,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
index1,SIMPLE_NAME, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
index1,SIMPLE_NAME, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
index1,SIMPLE_NAME, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
index1,SIMPLE_NAME, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
index1,SIMPLE_NAME, line no: 616,"field",STRING_LITERAL, line no: 801
index1,SIMPLE_NAME, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
index1,SIMPLE_NAME, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
index1,SIMPLE_NAME, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
index1,SIMPLE_NAME, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
index1,SIMPLE_NAME, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
index1,SIMPLE_NAME, line no: 616,36,NUMBER_LITERAL, line no: 809
index1,SIMPLE_NAME, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
index1,SIMPLE_NAME, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
index1,SIMPLE_NAME, line no: 616,subs,SIMPLE_NAME, line no: 816
index1,SIMPLE_NAME, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
index1,SIMPLE_NAME, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
index1,SIMPLE_NAME, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
index1,SIMPLE_NAME, line no: 616,setCodec,SIMPLE_NAME, line no: 828
index1,SIMPLE_NAME, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
index1,SIMPLE_NAME, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
index1,SIMPLE_NAME, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
index1,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
index1,SIMPLE_NAME, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
index1,SIMPLE_NAME, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
index1,SIMPLE_NAME, line no: 616,docFreq,SIMPLE_NAME, line no: 838
index1,SIMPLE_NAME, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
index1,SIMPLE_NAME, line no: 616,"f",STRING_LITERAL, line no: 838
index1,SIMPLE_NAME, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
index1,SIMPLE_NAME, line no: 616,ise,SIMPLE_NAME, line no: 840
index1,SIMPLE_NAME, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
index1,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
index1,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
index1,SIMPLE_NAME, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
index1,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
index1,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
index1,SIMPLE_NAME, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
index1,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
index1,SIMPLE_NAME, line no: 616,subReaders,SIMPLE_NAME, line no: 859
index1,SIMPLE_NAME, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
index1,SIMPLE_NAME, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
index1,SIMPLE_NAME, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
index1,SIMPLE_NAME, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
index1,SIMPLE_NAME, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
index1,SIMPLE_NAME, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
index1,SIMPLE_NAME, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
index1,SIMPLE_NAME, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
index1,SIMPLE_NAME, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
index1,SIMPLE_NAME, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
index1,SIMPLE_NAME, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
index1,SIMPLE_NAME, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
index1,SIMPLE_NAME, line no: 616,sdp,SIMPLE_NAME, line no: 898
index1,SIMPLE_NAME, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
index1,SIMPLE_NAME, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
index1,SIMPLE_NAME, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
index1,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
index1,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
index1,SIMPLE_NAME, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
index1,SIMPLE_NAME, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
index1,SIMPLE_NAME, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
index1,SIMPLE_NAME, line no: 616,snapshot,SIMPLE_NAME, line no: 903
index1,SIMPLE_NAME, line no: 616,"c1",STRING_LITERAL, line no: 903
index1,SIMPLE_NAME, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
index1,SIMPLE_NAME, line no: 616,"c2",STRING_LITERAL, line no: 906
index1,SIMPLE_NAME, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
index1,SIMPLE_NAME, line no: 616,"c3",STRING_LITERAL, line no: 909
index1,SIMPLE_NAME, line no: 616,currentGen,SIMPLE_NAME, line no: 911
index1,SIMPLE_NAME, line no: 616,ic,SIMPLE_NAME, line no: 912
index1,SIMPLE_NAME, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
index1,SIMPLE_NAME, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
index1,SIMPLE_NAME, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
index1,SIMPLE_NAME, line no: 616," commitGen=",STRING_LITERAL, line no: 913
index1,SIMPLE_NAME, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
index1,SIMPLE_NAME, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
index1,SIMPLE_NAME, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
index1,SIMPLE_NAME, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
index1,SIMPLE_NAME, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
index1,SIMPLE_NAME, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
index1,SIMPLE_NAME, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
index1,SIMPLE_NAME, line no: 616,indexExists,SIMPLE_NAME, line no: 925
index1,SIMPLE_NAME, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
index1,SIMPLE_NAME, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
index1,SIMPLE_NAME, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
index1,SIMPLE_NAME, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
index1,SIMPLE_NAME, line no: 616,"a a b",STRING_LITERAL, line no: 938
index1,SIMPLE_NAME, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
index1,SIMPLE_NAME, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
index1,SIMPLE_NAME, line no: 616,getReader,SIMPLE_NAME, line no: 940
index1,SIMPLE_NAME, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
index1,SIMPLE_NAME, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
index1,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
index1,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
index1,SIMPLE_NAME, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
index1,SIMPLE_NAME, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
index1,SIMPLE_NAME, line no: 616,"b",STRING_LITERAL, line no: 944
index1,SIMPLE_NAME, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
index1,SIMPLE_NAME, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
index1,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
index1,SIMPLE_NAME, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
index1,SIMPLE_NAME, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
index1,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
index1,SIMPLE_NAME, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
index1,SIMPLE_NAME, line no: 616,closeCount,SIMPLE_NAME, line no: 964
index1,SIMPLE_NAME, line no: 616,new int[1],ARRAY_CREATION, line no: 964
index1,SIMPLE_NAME, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
index1,SIMPLE_NAME, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
index1,SIMPLE_NAME, line no: 616,listener,SIMPLE_NAME, line no: 965
index1,SIMPLE_NAME, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
index1,SIMPLE_NAME, line no: 616,onClose,SIMPLE_NAME, line no: 966
index1,SIMPLE_NAME, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
index1,SIMPLE_NAME, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
index1,SIMPLE_NAME, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
index1,SIMPLE_NAME, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
index1,SIMPLE_NAME, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
index1,SIMPLE_NAME, line no: 616,reader2,SIMPLE_NAME, line no: 979
index1,SIMPLE_NAME, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
index1,SIMPLE_NAME, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
index1,SIMPLE_NAME, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
index1,SIMPLE_NAME, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
index1,SIMPLE_NAME, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
index1,SIMPLE_NAME, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
index1,SIMPLE_NAME, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
index1,SIMPLE_NAME, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
index1,SIMPLE_NAME, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
index1,SIMPLE_NAME, line no: 616,iae,SIMPLE_NAME, line no: 998
index1,SIMPLE_NAME, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
index1,SIMPLE_NAME, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
index1,SIMPLE_NAME, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
index1,SIMPLE_NAME, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
index1,SIMPLE_NAME, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
index1,SIMPLE_NAME, line no: 616,decRef,SIMPLE_NAME, line no: 1012
index1,SIMPLE_NAME, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
index1,SIMPLE_NAME, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
index1,SIMPLE_NAME, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
index1,SIMPLE_NAME, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
index1,SIMPLE_NAME, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
index1,SIMPLE_NAME, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
index1,SIMPLE_NAME, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
index1,SIMPLE_NAME, line no: 616,threads,SIMPLE_NAME, line no: 1027
index1,SIMPLE_NAME, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
index1,SIMPLE_NAME, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
index1,SIMPLE_NAME, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
index1,SIMPLE_NAME, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
index1,SIMPLE_NAME, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
index1,SIMPLE_NAME, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
index1,SIMPLE_NAME, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
index1,SIMPLE_NAME, line no: 616,start,SIMPLE_NAME, line no: 1030
index1,SIMPLE_NAME, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
index1,SIMPLE_NAME, line no: 616,Thread,SIMPLE_NAME, line no: 1032
index1,SIMPLE_NAME, line no: 616,sleep,SIMPLE_NAME, line no: 1032
index1,SIMPLE_NAME, line no: 616,100,NUMBER_LITERAL, line no: 1032
index1,SIMPLE_NAME, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
index1,SIMPLE_NAME, line no: 616,join,SIMPLE_NAME, line no: 1039
index1,SIMPLE_NAME, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
index1,SIMPLE_NAME, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
index1,SIMPLE_NAME, line no: 616,failed,SIMPLE_NAME, line no: 1040
index1,SIMPLE_NAME, line no: 616,toInc,SIMPLE_NAME, line no: 1048
index1,SIMPLE_NAME, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
index1,SIMPLE_NAME, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
index1,SIMPLE_NAME, line no: 616,this,THIS_EXPRESSION, line no: 1053
index1,SIMPLE_NAME, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
index1,SIMPLE_NAME, line no: 616,this.random,FIELD_ACCESS, line no: 1054
index1,SIMPLE_NAME, line no: 616,@Override,, line no: 1057
index1,SIMPLE_NAME, line no: 616,Override,SIMPLE_NAME, line no: 1057
index1,SIMPLE_NAME, line no: 616,run,SIMPLE_NAME, line no: 1058
index1,SIMPLE_NAME, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
index1,SIMPLE_NAME, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
index1,SIMPLE_NAME, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
index1,SIMPLE_NAME, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
index1,SIMPLE_NAME, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
index1,SIMPLE_NAME, line no: 616,failed=e,ASSIGNMENT, line no: 1066
index1,SIMPLE_NAME, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
index1,SIMPLE_NAME, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
index1,SIMPLE_NAME, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
index1,SIMPLE_NAME, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
index1,SIMPLE_NAME, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
index1,SIMPLE_NAME, line no: 616,"field1",STRING_LITERAL, line no: 1075
index1,SIMPLE_NAME, line no: 616,"foobar",STRING_LITERAL, line no: 1075
index1,SIMPLE_NAME, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
index1,SIMPLE_NAME, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
index1,SIMPLE_NAME, line no: 616,"field2",STRING_LITERAL, line no: 1076
index1,SIMPLE_NAME, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
index1,SIMPLE_NAME, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
index1,SIMPLE_NAME, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
index1,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
index1,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
index1,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
index1,SIMPLE_NAME, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
index1,SIMPLE_NAME, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
index1,SIMPLE_NAME, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
index1,SIMPLE_NAME, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
index1,SIMPLE_NAME, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.index,QUALIFIED_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene,QUALIFIED_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,org.apache,QUALIFIED_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,org,SIMPLE_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,apache,SIMPLE_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,lucene,SIMPLE_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,index,SIMPLE_NAME, line no: 1
iterator,SIMPLE_NAME, line no: 616,java.io.File,QUALIFIED_NAME, line no: 20
iterator,SIMPLE_NAME, line no: 616,java.io,QUALIFIED_NAME, line no: 20
iterator,SIMPLE_NAME, line no: 616,java,SIMPLE_NAME, line no: 20
iterator,SIMPLE_NAME, line no: 616,io,SIMPLE_NAME, line no: 20
iterator,SIMPLE_NAME, line no: 616,File,SIMPLE_NAME, line no: 20
iterator,SIMPLE_NAME, line no: 616,java.io.FileNotFoundException,QUALIFIED_NAME, line no: 21
iterator,SIMPLE_NAME, line no: 616,FileNotFoundException,SIMPLE_NAME, line no: 21
iterator,SIMPLE_NAME, line no: 616,java.io.IOException,QUALIFIED_NAME, line no: 22
iterator,SIMPLE_NAME, line no: 616,IOException,SIMPLE_NAME, line no: 22
iterator,SIMPLE_NAME, line no: 616,java.util.Collection,QUALIFIED_NAME, line no: 23
iterator,SIMPLE_NAME, line no: 616,java.util,QUALIFIED_NAME, line no: 23
iterator,SIMPLE_NAME, line no: 616,util,SIMPLE_NAME, line no: 23
iterator,SIMPLE_NAME, line no: 616,Collection,SIMPLE_NAME, line no: 23
iterator,SIMPLE_NAME, line no: 616,java.util.HashSet,QUALIFIED_NAME, line no: 24
iterator,SIMPLE_NAME, line no: 616,HashSet,SIMPLE_NAME, line no: 24
iterator,SIMPLE_NAME, line no: 616,java.util.Iterator,QUALIFIED_NAME, line no: 25
iterator,SIMPLE_NAME, line no: 616,Iterator,SIMPLE_NAME, line no: 25
iterator,SIMPLE_NAME, line no: 616,java.util.List,QUALIFIED_NAME, line no: 26
iterator,SIMPLE_NAME, line no: 616,List,SIMPLE_NAME, line no: 26
iterator,SIMPLE_NAME, line no: 616,java.util.Random,QUALIFIED_NAME, line no: 27
iterator,SIMPLE_NAME, line no: 616,Random,SIMPLE_NAME, line no: 27
iterator,SIMPLE_NAME, line no: 616,java.util.Set,QUALIFIED_NAME, line no: 28
iterator,SIMPLE_NAME, line no: 616,Set,SIMPLE_NAME, line no: 28
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis.MockAnalyzer,QUALIFIED_NAME, line no: 30
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.analysis,QUALIFIED_NAME, line no: 30
iterator,SIMPLE_NAME, line no: 616,analysis,SIMPLE_NAME, line no: 30
iterator,SIMPLE_NAME, line no: 616,MockAnalyzer,SIMPLE_NAME, line no: 30
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat,QUALIFIED_NAME, line no: 31
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs.lucene40,QUALIFIED_NAME, line no: 31
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.codecs,QUALIFIED_NAME, line no: 31
iterator,SIMPLE_NAME, line no: 616,codecs,SIMPLE_NAME, line no: 31
iterator,SIMPLE_NAME, line no: 616,lucene40,SIMPLE_NAME, line no: 31
iterator,SIMPLE_NAME, line no: 616,Lucene40PostingsFormat,SIMPLE_NAME, line no: 31
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Document,QUALIFIED_NAME, line no: 32
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document,QUALIFIED_NAME, line no: 32
iterator,SIMPLE_NAME, line no: 616,document,SIMPLE_NAME, line no: 32
iterator,SIMPLE_NAME, line no: 616,Document,SIMPLE_NAME, line no: 32
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document.Field,QUALIFIED_NAME, line no: 33
iterator,SIMPLE_NAME, line no: 616,Field,SIMPLE_NAME, line no: 33
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document.FieldType,QUALIFIED_NAME, line no: 34
iterator,SIMPLE_NAME, line no: 616,FieldType,SIMPLE_NAME, line no: 34
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StoredField,QUALIFIED_NAME, line no: 35
iterator,SIMPLE_NAME, line no: 616,StoredField,SIMPLE_NAME, line no: 35
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document.StringField,QUALIFIED_NAME, line no: 36
iterator,SIMPLE_NAME, line no: 616,StringField,SIMPLE_NAME, line no: 36
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.document.TextField,QUALIFIED_NAME, line no: 37
iterator,SIMPLE_NAME, line no: 616,TextField,SIMPLE_NAME, line no: 37
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig.OpenMode,QUALIFIED_NAME, line no: 38
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.index.IndexWriterConfig,QUALIFIED_NAME, line no: 38
iterator,SIMPLE_NAME, line no: 616,IndexWriterConfig,SIMPLE_NAME, line no: 38
iterator,SIMPLE_NAME, line no: 616,OpenMode,SIMPLE_NAME, line no: 38
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.search.DocIdSetIterator,QUALIFIED_NAME, line no: 39
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.search,QUALIFIED_NAME, line no: 39
iterator,SIMPLE_NAME, line no: 616,search,SIMPLE_NAME, line no: 39
iterator,SIMPLE_NAME, line no: 616,DocIdSetIterator,SIMPLE_NAME, line no: 39
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.search.FieldCache,QUALIFIED_NAME, line no: 40
iterator,SIMPLE_NAME, line no: 616,FieldCache,SIMPLE_NAME, line no: 40
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.store.Directory,QUALIFIED_NAME, line no: 41
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.store,QUALIFIED_NAME, line no: 41
iterator,SIMPLE_NAME, line no: 616,store,SIMPLE_NAME, line no: 41
iterator,SIMPLE_NAME, line no: 616,Directory,SIMPLE_NAME, line no: 41
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.store.NoSuchDirectoryException,QUALIFIED_NAME, line no: 42
iterator,SIMPLE_NAME, line no: 616,NoSuchDirectoryException,SIMPLE_NAME, line no: 42
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.util.Bits,QUALIFIED_NAME, line no: 43
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.util,QUALIFIED_NAME, line no: 43
iterator,SIMPLE_NAME, line no: 616,Bits,SIMPLE_NAME, line no: 43
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.util.BytesRef,QUALIFIED_NAME, line no: 44
iterator,SIMPLE_NAME, line no: 616,BytesRef,SIMPLE_NAME, line no: 44
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.util.LuceneTestCase,QUALIFIED_NAME, line no: 45
iterator,SIMPLE_NAME, line no: 616,LuceneTestCase,SIMPLE_NAME, line no: 45
iterator,SIMPLE_NAME, line no: 616,org.apache.lucene.util._TestUtil,QUALIFIED_NAME, line no: 46
iterator,SIMPLE_NAME, line no: 616,_TestUtil,SIMPLE_NAME, line no: 46
iterator,SIMPLE_NAME, line no: 616,org.junit.Assume,QUALIFIED_NAME, line no: 47
iterator,SIMPLE_NAME, line no: 616,org.junit,QUALIFIED_NAME, line no: 47
iterator,SIMPLE_NAME, line no: 616,junit,SIMPLE_NAME, line no: 47
iterator,SIMPLE_NAME, line no: 616,Assume,SIMPLE_NAME, line no: 47
iterator,SIMPLE_NAME, line no: 616,TestDirectoryReader,SIMPLE_NAME, line no: 49
iterator,SIMPLE_NAME, line no: 616,testDocument,SIMPLE_NAME, line no: 51
iterator,SIMPLE_NAME, line no: 616,SegmentReader,SIMPLE_NAME, line no: 52
iterator,SIMPLE_NAME, line no: 616,readers,SIMPLE_NAME, line no: 52
iterator,SIMPLE_NAME, line no: 616,new SegmentReader[2],ARRAY_CREATION, line no: 52
iterator,SIMPLE_NAME, line no: 616,2,NUMBER_LITERAL, line no: 52
iterator,SIMPLE_NAME, line no: 616,dir,SIMPLE_NAME, line no: 53
iterator,SIMPLE_NAME, line no: 616,newDirectory(),METHOD_INVOCATION, line no: 53
iterator,SIMPLE_NAME, line no: 616,newDirectory,SIMPLE_NAME, line no: 53
iterator,SIMPLE_NAME, line no: 616,doc1,SIMPLE_NAME, line no: 54
iterator,SIMPLE_NAME, line no: 616,new Document(),CLASS_INSTANCE_CREATION, line no: 54
iterator,SIMPLE_NAME, line no: 616,doc2,SIMPLE_NAME, line no: 55
iterator,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc1),METHOD_INVOCATION, line no: 56
iterator,SIMPLE_NAME, line no: 616,DocHelper,SIMPLE_NAME, line no: 56
iterator,SIMPLE_NAME, line no: 616,setupDoc,SIMPLE_NAME, line no: 56
iterator,SIMPLE_NAME, line no: 616,DocHelper.setupDoc(doc2),METHOD_INVOCATION, line no: 57
iterator,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc1),METHOD_INVOCATION, line no: 58
iterator,SIMPLE_NAME, line no: 616,writeDoc,SIMPLE_NAME, line no: 58
iterator,SIMPLE_NAME, line no: 616,random(),METHOD_INVOCATION, line no: 58
iterator,SIMPLE_NAME, line no: 616,random,SIMPLE_NAME, line no: 58
iterator,SIMPLE_NAME, line no: 616,DocHelper.writeDoc(random() dir doc2),METHOD_INVOCATION, line no: 59
iterator,SIMPLE_NAME, line no: 616,DirectoryReader,SIMPLE_NAME, line no: 60
iterator,SIMPLE_NAME, line no: 616,reader,SIMPLE_NAME, line no: 60
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir),METHOD_INVOCATION, line no: 60
iterator,SIMPLE_NAME, line no: 616,open,SIMPLE_NAME, line no: 60
iterator,SIMPLE_NAME, line no: 616,assertTrue(reader != null),METHOD_INVOCATION, line no: 61
iterator,SIMPLE_NAME, line no: 616,assertTrue,SIMPLE_NAME, line no: 61
iterator,SIMPLE_NAME, line no: 616,reader != null,INFIX_EXPRESSION, line no: 61
iterator,SIMPLE_NAME, line no: 616,null,NULL_LITERAL, line no: 61
iterator,SIMPLE_NAME, line no: 616,assertTrue(reader instanceof StandardDirectoryReader),METHOD_INVOCATION, line no: 62
iterator,SIMPLE_NAME, line no: 616,reader instanceof StandardDirectoryReader,INSTANCEOF_EXPRESSION, line no: 62
iterator,SIMPLE_NAME, line no: 616,StandardDirectoryReader,SIMPLE_NAME, line no: 62
iterator,SIMPLE_NAME, line no: 616,newDoc1,SIMPLE_NAME, line no: 64
iterator,SIMPLE_NAME, line no: 616,reader.document(0),METHOD_INVOCATION, line no: 64
iterator,SIMPLE_NAME, line no: 616,0,NUMBER_LITERAL, line no: 64
iterator,SIMPLE_NAME, line no: 616,assertTrue(newDoc1 != null),METHOD_INVOCATION, line no: 65
iterator,SIMPLE_NAME, line no: 616,newDoc1 != null,INFIX_EXPRESSION, line no: 65
iterator,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 66
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc1),METHOD_INVOCATION, line no: 66
iterator,SIMPLE_NAME, line no: 616,numFields,SIMPLE_NAME, line no: 66
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 66
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc1),METHOD_INVOCATION, line no: 66
iterator,SIMPLE_NAME, line no: 616,DocHelper.unstored.size(),METHOD_INVOCATION, line no: 66
iterator,SIMPLE_NAME, line no: 616,DocHelper.unstored,QUALIFIED_NAME, line no: 66
iterator,SIMPLE_NAME, line no: 616,unstored,SIMPLE_NAME, line no: 66
iterator,SIMPLE_NAME, line no: 616,size,SIMPLE_NAME, line no: 66
iterator,SIMPLE_NAME, line no: 616,newDoc2,SIMPLE_NAME, line no: 67
iterator,SIMPLE_NAME, line no: 616,reader.document(1),METHOD_INVOCATION, line no: 67
iterator,SIMPLE_NAME, line no: 616,1,NUMBER_LITERAL, line no: 67
iterator,SIMPLE_NAME, line no: 616,assertTrue(newDoc2 != null),METHOD_INVOCATION, line no: 68
iterator,SIMPLE_NAME, line no: 616,newDoc2 != null,INFIX_EXPRESSION, line no: 68
iterator,SIMPLE_NAME, line no: 616,assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size()),METHOD_INVOCATION, line no: 69
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(newDoc2),METHOD_INVOCATION, line no: 69
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2) - DocHelper.unstored.size(),INFIX_EXPRESSION, line no: 69
iterator,SIMPLE_NAME, line no: 616,DocHelper.numFields(doc2),METHOD_INVOCATION, line no: 69
iterator,SIMPLE_NAME, line no: 616,Terms,SIMPLE_NAME, line no: 70
iterator,SIMPLE_NAME, line no: 616,vector,SIMPLE_NAME, line no: 70
iterator,SIMPLE_NAME, line no: 616,reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY),METHOD_INVOCATION, line no: 70
iterator,SIMPLE_NAME, line no: 616,reader.getTermVectors(0),METHOD_INVOCATION, line no: 70
iterator,SIMPLE_NAME, line no: 616,getTermVectors,SIMPLE_NAME, line no: 70
iterator,SIMPLE_NAME, line no: 616,terms,SIMPLE_NAME, line no: 70
iterator,SIMPLE_NAME, line no: 616,DocHelper.TEXT_FIELD_2_KEY,QUALIFIED_NAME, line no: 70
iterator,SIMPLE_NAME, line no: 616,TEXT_FIELD_2_KEY,SIMPLE_NAME, line no: 70
iterator,SIMPLE_NAME, line no: 616,assertNotNull(vector),METHOD_INVOCATION, line no: 71
iterator,SIMPLE_NAME, line no: 616,assertNotNull,SIMPLE_NAME, line no: 71
iterator,SIMPLE_NAME, line no: 616,reader.close(),METHOD_INVOCATION, line no: 73
iterator,SIMPLE_NAME, line no: 616,close,SIMPLE_NAME, line no: 73
iterator,SIMPLE_NAME, line no: 616,readers[0] != null,INFIX_EXPRESSION, line no: 74
iterator,SIMPLE_NAME, line no: 616,readers[0],ARRAY_ACCESS, line no: 74
iterator,SIMPLE_NAME, line no: 616,readers[0].close(),METHOD_INVOCATION, line no: 74
iterator,SIMPLE_NAME, line no: 616,readers[1] != null,INFIX_EXPRESSION, line no: 75
iterator,SIMPLE_NAME, line no: 616,readers[1],ARRAY_ACCESS, line no: 75
iterator,SIMPLE_NAME, line no: 616,readers[1].close(),METHOD_INVOCATION, line no: 75
iterator,SIMPLE_NAME, line no: 616,dir.close(),METHOD_INVOCATION, line no: 76
iterator,SIMPLE_NAME, line no: 616,testMultiTermDocs,SIMPLE_NAME, line no: 79
iterator,SIMPLE_NAME, line no: 616,ramDir1,SIMPLE_NAME, line no: 80
iterator,SIMPLE_NAME, line no: 616,addDoc(random() ramDir1 "test foo" true),METHOD_INVOCATION, line no: 81
iterator,SIMPLE_NAME, line no: 616,addDoc,SIMPLE_NAME, line no: 81
iterator,SIMPLE_NAME, line no: 616,"test foo",STRING_LITERAL, line no: 81
iterator,SIMPLE_NAME, line no: 616,true,BOOLEAN_LITERAL, line no: 81
iterator,SIMPLE_NAME, line no: 616,ramDir2,SIMPLE_NAME, line no: 82
iterator,SIMPLE_NAME, line no: 616,addDoc(random() ramDir2 "test blah" true),METHOD_INVOCATION, line no: 83
iterator,SIMPLE_NAME, line no: 616,"test blah",STRING_LITERAL, line no: 83
iterator,SIMPLE_NAME, line no: 616,ramDir3,SIMPLE_NAME, line no: 84
iterator,SIMPLE_NAME, line no: 616,addDoc(random() ramDir3 "test wow" true),METHOD_INVOCATION, line no: 85
iterator,SIMPLE_NAME, line no: 616,"test wow",STRING_LITERAL, line no: 85
iterator,SIMPLE_NAME, line no: 616,IndexReader,SIMPLE_NAME, line no: 87
iterator,SIMPLE_NAME, line no: 616,readers1,SIMPLE_NAME, line no: 87
iterator,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 87
iterator,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 87
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir1),METHOD_INVOCATION, line no: 87
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir3),METHOD_INVOCATION, line no: 87
iterator,SIMPLE_NAME, line no: 616,readers2,SIMPLE_NAME, line no: 88
iterator,SIMPLE_NAME, line no: 616,new IndexReader[]{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_CREATION, line no: 88
iterator,SIMPLE_NAME, line no: 616,{DirectoryReader.open(ramDir1) DirectoryReader.open(ramDir2) DirectoryReader.open(ramDir3)},ARRAY_INITIALIZER, line no: 88
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.open(ramDir2),METHOD_INVOCATION, line no: 88
iterator,SIMPLE_NAME, line no: 616,MultiReader,SIMPLE_NAME, line no: 89
iterator,SIMPLE_NAME, line no: 616,mr2,SIMPLE_NAME, line no: 89
iterator,SIMPLE_NAME, line no: 616,new MultiReader(readers1),CLASS_INSTANCE_CREATION, line no: 89
iterator,SIMPLE_NAME, line no: 616,mr3,SIMPLE_NAME, line no: 90
iterator,SIMPLE_NAME, line no: 616,new MultiReader(readers2),CLASS_INSTANCE_CREATION, line no: 90
iterator,SIMPLE_NAME, line no: 616,TermsEnum,SIMPLE_NAME, line no: 93
iterator,SIMPLE_NAME, line no: 616,te2,SIMPLE_NAME, line no: 93
iterator,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body").iterator(null),METHOD_INVOCATION, line no: 93
iterator,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr2 "body"),METHOD_INVOCATION, line no: 93
iterator,SIMPLE_NAME, line no: 616,MultiFields,SIMPLE_NAME, line no: 93
iterator,SIMPLE_NAME, line no: 616,getTerms,SIMPLE_NAME, line no: 93
iterator,SIMPLE_NAME, line no: 616,"body",STRING_LITERAL, line no: 93
iterator,SIMPLE_NAME, line no: 616,te2.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 94
iterator,SIMPLE_NAME, line no: 616,seekCeil,SIMPLE_NAME, line no: 94
iterator,SIMPLE_NAME, line no: 616,new BytesRef("wow"),CLASS_INSTANCE_CREATION, line no: 94
iterator,SIMPLE_NAME, line no: 616,"wow",STRING_LITERAL, line no: 94
iterator,SIMPLE_NAME, line no: 616,DocsEnum,SIMPLE_NAME, line no: 95
iterator,SIMPLE_NAME, line no: 616,td,SIMPLE_NAME, line no: 95
iterator,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() mr2 "body" te2.term() MultiFields.getLiveDocs(mr2) null 0),METHOD_INVOCATION, line no: 95
iterator,SIMPLE_NAME, line no: 616,docs,SIMPLE_NAME, line no: 95
iterator,SIMPLE_NAME, line no: 616,te2.term(),METHOD_INVOCATION, line no: 97
iterator,SIMPLE_NAME, line no: 616,term,SIMPLE_NAME, line no: 97
iterator,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr2),METHOD_INVOCATION, line no: 98
iterator,SIMPLE_NAME, line no: 616,getLiveDocs,SIMPLE_NAME, line no: 98
iterator,SIMPLE_NAME, line no: 616,te3,SIMPLE_NAME, line no: 102
iterator,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body").iterator(null),METHOD_INVOCATION, line no: 102
iterator,SIMPLE_NAME, line no: 616,MultiFields.getTerms(mr3 "body"),METHOD_INVOCATION, line no: 102
iterator,SIMPLE_NAME, line no: 616,te3.seekCeil(new BytesRef("wow")),METHOD_INVOCATION, line no: 103
iterator,SIMPLE_NAME, line no: 616,td=_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),ASSIGNMENT, line no: 104
iterator,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() te3 MultiFields.getLiveDocs(mr3) td 0),METHOD_INVOCATION, line no: 104
iterator,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(mr3),METHOD_INVOCATION, line no: 104
iterator,SIMPLE_NAME, line no: 616,ret,SIMPLE_NAME, line no: 108
iterator,SIMPLE_NAME, line no: 616,td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 112
iterator,SIMPLE_NAME, line no: 616,td.nextDoc(),METHOD_INVOCATION, line no: 112
iterator,SIMPLE_NAME, line no: 616,nextDoc,SIMPLE_NAME, line no: 112
iterator,SIMPLE_NAME, line no: 616,DocIdSetIterator.NO_MORE_DOCS,QUALIFIED_NAME, line no: 112
iterator,SIMPLE_NAME, line no: 616,NO_MORE_DOCS,SIMPLE_NAME, line no: 112
iterator,SIMPLE_NAME, line no: 616,ret+=td.docID(),ASSIGNMENT, line no: 112
iterator,SIMPLE_NAME, line no: 616,td.docID(),METHOD_INVOCATION, line no: 112
iterator,SIMPLE_NAME, line no: 616,docID,SIMPLE_NAME, line no: 112
iterator,SIMPLE_NAME, line no: 616,assertTrue(ret > 0),METHOD_INVOCATION, line no: 116
iterator,SIMPLE_NAME, line no: 616,ret > 0,INFIX_EXPRESSION, line no: 116
iterator,SIMPLE_NAME, line no: 616,readers1[0].close(),METHOD_INVOCATION, line no: 117
iterator,SIMPLE_NAME, line no: 616,readers1[0],ARRAY_ACCESS, line no: 117
iterator,SIMPLE_NAME, line no: 616,readers1[1].close(),METHOD_INVOCATION, line no: 118
iterator,SIMPLE_NAME, line no: 616,readers1[1],ARRAY_ACCESS, line no: 118
iterator,SIMPLE_NAME, line no: 616,readers2[0].close(),METHOD_INVOCATION, line no: 119
iterator,SIMPLE_NAME, line no: 616,readers2[0],ARRAY_ACCESS, line no: 119
iterator,SIMPLE_NAME, line no: 616,readers2[1].close(),METHOD_INVOCATION, line no: 120
iterator,SIMPLE_NAME, line no: 616,readers2[1],ARRAY_ACCESS, line no: 120
iterator,SIMPLE_NAME, line no: 616,readers2[2].close(),METHOD_INVOCATION, line no: 121
iterator,SIMPLE_NAME, line no: 616,readers2[2],ARRAY_ACCESS, line no: 121
iterator,SIMPLE_NAME, line no: 616,ramDir1.close(),METHOD_INVOCATION, line no: 122
iterator,SIMPLE_NAME, line no: 616,ramDir2.close(),METHOD_INVOCATION, line no: 123
iterator,SIMPLE_NAME, line no: 616,ramDir3.close(),METHOD_INVOCATION, line no: 124
iterator,SIMPLE_NAME, line no: 616,String,SIMPLE_NAME, line no: 127
iterator,SIMPLE_NAME, line no: 616,s,SIMPLE_NAME, line no: 127
iterator,SIMPLE_NAME, line no: 616,create,SIMPLE_NAME, line no: 127
iterator,SIMPLE_NAME, line no: 616,IndexWriter,SIMPLE_NAME, line no: 128
iterator,SIMPLE_NAME, line no: 616,iw,SIMPLE_NAME, line no: 128
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(ramDir1 newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 128
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)).setOpenMode(create ? OpenMode.CREATE : OpenMode.APPEND),METHOD_INVOCATION, line no: 128
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random)),METHOD_INVOCATION, line no: 128
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig,SIMPLE_NAME, line no: 128
iterator,SIMPLE_NAME, line no: 616,TEST_VERSION_CURRENT,SIMPLE_NAME, line no: 129
iterator,SIMPLE_NAME, line no: 616,new MockAnalyzer(random),CLASS_INSTANCE_CREATION, line no: 130
iterator,SIMPLE_NAME, line no: 616,setOpenMode,SIMPLE_NAME, line no: 130
iterator,SIMPLE_NAME, line no: 616,create ? OpenMode.CREATE : OpenMode.APPEND,CONDITIONAL_EXPRESSION, line no: 131
iterator,SIMPLE_NAME, line no: 616,OpenMode.CREATE,QUALIFIED_NAME, line no: 131
iterator,SIMPLE_NAME, line no: 616,CREATE,SIMPLE_NAME, line no: 131
iterator,SIMPLE_NAME, line no: 616,OpenMode.APPEND,QUALIFIED_NAME, line no: 131
iterator,SIMPLE_NAME, line no: 616,APPEND,SIMPLE_NAME, line no: 131
iterator,SIMPLE_NAME, line no: 616,doc,SIMPLE_NAME, line no: 132
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("body" s Field.Store.NO)),METHOD_INVOCATION, line no: 133
iterator,SIMPLE_NAME, line no: 616,add,SIMPLE_NAME, line no: 133
iterator,SIMPLE_NAME, line no: 616,newTextField("body" s Field.Store.NO),METHOD_INVOCATION, line no: 133
iterator,SIMPLE_NAME, line no: 616,newTextField,SIMPLE_NAME, line no: 133
iterator,SIMPLE_NAME, line no: 616,Field.Store.NO,QUALIFIED_NAME, line no: 133
iterator,SIMPLE_NAME, line no: 616,Field.Store,QUALIFIED_NAME, line no: 133
iterator,SIMPLE_NAME, line no: 616,Store,SIMPLE_NAME, line no: 133
iterator,SIMPLE_NAME, line no: 616,NO,SIMPLE_NAME, line no: 133
iterator,SIMPLE_NAME, line no: 616,iw.addDocument(doc),METHOD_INVOCATION, line no: 134
iterator,SIMPLE_NAME, line no: 616,addDocument,SIMPLE_NAME, line no: 134
iterator,SIMPLE_NAME, line no: 616,iw.close(),METHOD_INVOCATION, line no: 135
iterator,SIMPLE_NAME, line no: 616,testIsCurrent,SIMPLE_NAME, line no: 138
iterator,SIMPLE_NAME, line no: 616,Exception,SIMPLE_NAME, line no: 138
iterator,SIMPLE_NAME, line no: 616,d,SIMPLE_NAME, line no: 139
iterator,SIMPLE_NAME, line no: 616,writer,SIMPLE_NAME, line no: 140
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 140
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())),METHOD_INVOCATION, line no: 140
iterator,SIMPLE_NAME, line no: 616,new MockAnalyzer(random()),CLASS_INSTANCE_CREATION, line no: 141
iterator,SIMPLE_NAME, line no: 616,addDocumentWithFields(writer),METHOD_INVOCATION, line no: 142
iterator,SIMPLE_NAME, line no: 616,addDocumentWithFields,SIMPLE_NAME, line no: 142
iterator,SIMPLE_NAME, line no: 616,writer.close(),METHOD_INVOCATION, line no: 143
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.open(d),METHOD_INVOCATION, line no: 145
iterator,SIMPLE_NAME, line no: 616,assertTrue(reader.isCurrent()),METHOD_INVOCATION, line no: 146
iterator,SIMPLE_NAME, line no: 616,reader.isCurrent(),METHOD_INVOCATION, line no: 146
iterator,SIMPLE_NAME, line no: 616,isCurrent,SIMPLE_NAME, line no: 146
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),ASSIGNMENT, line no: 148
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND)),CLASS_INSTANCE_CREATION, line no: 148
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND),METHOD_INVOCATION, line no: 148
iterator,SIMPLE_NAME, line no: 616,assertFalse(reader.isCurrent()),METHOD_INVOCATION, line no: 152
iterator,SIMPLE_NAME, line no: 616,assertFalse,SIMPLE_NAME, line no: 152
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 154
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 154
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE),METHOD_INVOCATION, line no: 154
iterator,SIMPLE_NAME, line no: 616,d.close(),METHOD_INVOCATION, line no: 160
iterator,SIMPLE_NAME, line no: 616,testGetFieldNames,SIMPLE_NAME, line no: 167
iterator,SIMPLE_NAME, line no: 616,customType3,SIMPLE_NAME, line no: 177
iterator,SIMPLE_NAME, line no: 616,new FieldType(),CLASS_INSTANCE_CREATION, line no: 177
iterator,SIMPLE_NAME, line no: 616,customType3.setStored(true),METHOD_INVOCATION, line no: 178
iterator,SIMPLE_NAME, line no: 616,setStored,SIMPLE_NAME, line no: 178
iterator,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 180
iterator,SIMPLE_NAME, line no: 616,new StringField("keyword" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 180
iterator,SIMPLE_NAME, line no: 616,"keyword",STRING_LITERAL, line no: 180
iterator,SIMPLE_NAME, line no: 616,"test1",STRING_LITERAL, line no: 180
iterator,SIMPLE_NAME, line no: 616,Field.Store.YES,QUALIFIED_NAME, line no: 180
iterator,SIMPLE_NAME, line no: 616,YES,SIMPLE_NAME, line no: 180
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 181
iterator,SIMPLE_NAME, line no: 616,new TextField("text" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 181
iterator,SIMPLE_NAME, line no: 616,"text",STRING_LITERAL, line no: 181
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 182
iterator,SIMPLE_NAME, line no: 616,new Field("unindexed" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 182
iterator,SIMPLE_NAME, line no: 616,"unindexed",STRING_LITERAL, line no: 182
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 183
iterator,SIMPLE_NAME, line no: 616,new TextField("unstored" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 183
iterator,SIMPLE_NAME, line no: 616,"unstored",STRING_LITERAL, line no: 183
iterator,SIMPLE_NAME, line no: 616,writer.addDocument(doc),METHOD_INVOCATION, line no: 184
iterator,SIMPLE_NAME, line no: 616,FieldInfos,SIMPLE_NAME, line no: 189
iterator,SIMPLE_NAME, line no: 616,fieldInfos,SIMPLE_NAME, line no: 189
iterator,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(reader),METHOD_INVOCATION, line no: 189
iterator,SIMPLE_NAME, line no: 616,getMergedFieldInfos,SIMPLE_NAME, line no: 189
iterator,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("keyword")),METHOD_INVOCATION, line no: 190
iterator,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("keyword"),METHOD_INVOCATION, line no: 190
iterator,SIMPLE_NAME, line no: 616,fieldInfo,SIMPLE_NAME, line no: 190
iterator,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("text")),METHOD_INVOCATION, line no: 191
iterator,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("text"),METHOD_INVOCATION, line no: 191
iterator,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unindexed")),METHOD_INVOCATION, line no: 192
iterator,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unindexed"),METHOD_INVOCATION, line no: 192
iterator,SIMPLE_NAME, line no: 616,assertNotNull(fieldInfos.fieldInfo("unstored")),METHOD_INVOCATION, line no: 193
iterator,SIMPLE_NAME, line no: 616,fieldInfos.fieldInfo("unstored"),METHOD_INVOCATION, line no: 193
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 196
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 196
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 198
iterator,SIMPLE_NAME, line no: 616,setMergePolicy,SIMPLE_NAME, line no: 200
iterator,SIMPLE_NAME, line no: 616,newLogMergePolicy(),METHOD_INVOCATION, line no: 200
iterator,SIMPLE_NAME, line no: 616,newLogMergePolicy,SIMPLE_NAME, line no: 200
iterator,SIMPLE_NAME, line no: 616,mergeFactor,SIMPLE_NAME, line no: 203
iterator,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor(),METHOD_INVOCATION, line no: 203
iterator,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()),PARENTHESIZED_EXPRESSION, line no: 203
iterator,SIMPLE_NAME, line no: 616,(LogMergePolicy)writer.getConfig().getMergePolicy(),CAST_EXPRESSION, line no: 203
iterator,SIMPLE_NAME, line no: 616,LogMergePolicy,SIMPLE_NAME, line no: 203
iterator,SIMPLE_NAME, line no: 616,writer.getConfig().getMergePolicy(),METHOD_INVOCATION, line no: 203
iterator,SIMPLE_NAME, line no: 616,writer.getConfig(),METHOD_INVOCATION, line no: 203
iterator,SIMPLE_NAME, line no: 616,getConfig,SIMPLE_NAME, line no: 203
iterator,SIMPLE_NAME, line no: 616,getMergePolicy,SIMPLE_NAME, line no: 203
iterator,SIMPLE_NAME, line no: 616,getMergeFactor,SIMPLE_NAME, line no: 203
iterator,SIMPLE_NAME, line no: 616,int i=0,VARIABLE_DECLARATION_EXPRESSION, line no: 204
iterator,SIMPLE_NAME, line no: 616,i,SIMPLE_NAME, line no: 204
iterator,SIMPLE_NAME, line no: 616,i < 5 * mergeFactor,INFIX_EXPRESSION, line no: 204
iterator,SIMPLE_NAME, line no: 616,5 * mergeFactor,INFIX_EXPRESSION, line no: 204
iterator,SIMPLE_NAME, line no: 616,5,NUMBER_LITERAL, line no: 204
iterator,SIMPLE_NAME, line no: 616,i++,POSTFIX_EXPRESSION, line no: 204
iterator,SIMPLE_NAME, line no: 616,doc=new Document(),ASSIGNMENT, line no: 205
iterator,SIMPLE_NAME, line no: 616,doc.add(new StringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 215
iterator,SIMPLE_NAME, line no: 616,new StringField("keyword2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 215
iterator,SIMPLE_NAME, line no: 616,"keyword2",STRING_LITERAL, line no: 215
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 216
iterator,SIMPLE_NAME, line no: 616,new TextField("text2" "test1" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 216
iterator,SIMPLE_NAME, line no: 616,"text2",STRING_LITERAL, line no: 216
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 217
iterator,SIMPLE_NAME, line no: 616,new Field("unindexed2" "test1" customType3),CLASS_INSTANCE_CREATION, line no: 217
iterator,SIMPLE_NAME, line no: 616,"unindexed2",STRING_LITERAL, line no: 217
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("unstored2" "test1" Field.Store.NO)),METHOD_INVOCATION, line no: 218
iterator,SIMPLE_NAME, line no: 616,new TextField("unstored2" "test1" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 218
iterator,SIMPLE_NAME, line no: 616,"unstored2",STRING_LITERAL, line no: 218
iterator,SIMPLE_NAME, line no: 616,customType5,SIMPLE_NAME, line no: 223
iterator,SIMPLE_NAME, line no: 616,new FieldType(TextField.TYPE_STORED),CLASS_INSTANCE_CREATION, line no: 223
iterator,SIMPLE_NAME, line no: 616,TextField.TYPE_STORED,QUALIFIED_NAME, line no: 223
iterator,SIMPLE_NAME, line no: 616,TYPE_STORED,SIMPLE_NAME, line no: 223
iterator,SIMPLE_NAME, line no: 616,customType5.setStoreTermVectors(true),METHOD_INVOCATION, line no: 224
iterator,SIMPLE_NAME, line no: 616,setStoreTermVectors,SIMPLE_NAME, line no: 224
iterator,SIMPLE_NAME, line no: 616,customType6,SIMPLE_NAME, line no: 225
iterator,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectors(true),METHOD_INVOCATION, line no: 226
iterator,SIMPLE_NAME, line no: 616,customType6.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 227
iterator,SIMPLE_NAME, line no: 616,setStoreTermVectorOffsets,SIMPLE_NAME, line no: 227
iterator,SIMPLE_NAME, line no: 616,customType7,SIMPLE_NAME, line no: 228
iterator,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectors(true),METHOD_INVOCATION, line no: 229
iterator,SIMPLE_NAME, line no: 616,customType7.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 230
iterator,SIMPLE_NAME, line no: 616,setStoreTermVectorPositions,SIMPLE_NAME, line no: 230
iterator,SIMPLE_NAME, line no: 616,customType8,SIMPLE_NAME, line no: 231
iterator,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectors(true),METHOD_INVOCATION, line no: 232
iterator,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorOffsets(true),METHOD_INVOCATION, line no: 233
iterator,SIMPLE_NAME, line no: 616,customType8.setStoreTermVectorPositions(true),METHOD_INVOCATION, line no: 234
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 238
iterator,SIMPLE_NAME, line no: 616,new TextField("tvnot" "tvnot" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 238
iterator,SIMPLE_NAME, line no: 616,"tvnot",STRING_LITERAL, line no: 238
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 239
iterator,SIMPLE_NAME, line no: 616,new Field("termvector" "termvector" customType5),CLASS_INSTANCE_CREATION, line no: 239
iterator,SIMPLE_NAME, line no: 616,"termvector",STRING_LITERAL, line no: 239
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 240
iterator,SIMPLE_NAME, line no: 616,new Field("tvoffset" "tvoffset" customType6),CLASS_INSTANCE_CREATION, line no: 240
iterator,SIMPLE_NAME, line no: 616,"tvoffset",STRING_LITERAL, line no: 240
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 241
iterator,SIMPLE_NAME, line no: 616,new Field("tvposition" "tvposition" customType7),CLASS_INSTANCE_CREATION, line no: 241
iterator,SIMPLE_NAME, line no: 616,"tvposition",STRING_LITERAL, line no: 241
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 242
iterator,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "tvpositionoffset" customType8),CLASS_INSTANCE_CREATION, line no: 242
iterator,SIMPLE_NAME, line no: 616,"tvpositionoffset",STRING_LITERAL, line no: 242
iterator,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(d),ASSIGNMENT, line no: 249
iterator,SIMPLE_NAME, line no: 616,fieldInfos=MultiFields.getMergedFieldInfos(reader),ASSIGNMENT, line no: 250
iterator,SIMPLE_NAME, line no: 616,allFieldNames,SIMPLE_NAME, line no: 252
iterator,SIMPLE_NAME, line no: 616,new HashSet<String>(),CLASS_INSTANCE_CREATION, line no: 252
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames,SIMPLE_NAME, line no: 253
iterator,SIMPLE_NAME, line no: 616,notIndexedFieldNames,SIMPLE_NAME, line no: 254
iterator,SIMPLE_NAME, line no: 616,tvFieldNames,SIMPLE_NAME, line no: 255
iterator,SIMPLE_NAME, line no: 616,FieldInfo,SIMPLE_NAME, line no: 257
iterator,SIMPLE_NAME, line no: 616,name,SIMPLE_NAME, line no: 258
iterator,SIMPLE_NAME, line no: 616,fieldInfo.name,QUALIFIED_NAME, line no: 258
iterator,SIMPLE_NAME, line no: 616,allFieldNames.add(name),METHOD_INVOCATION, line no: 259
iterator,SIMPLE_NAME, line no: 616,fieldInfo.isIndexed(),METHOD_INVOCATION, line no: 260
iterator,SIMPLE_NAME, line no: 616,isIndexed,SIMPLE_NAME, line no: 260
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.add(name),METHOD_INVOCATION, line no: 261
iterator,SIMPLE_NAME, line no: 616,notIndexedFieldNames.add(name),METHOD_INVOCATION, line no: 263
iterator,SIMPLE_NAME, line no: 616,fieldInfo.hasVectors(),METHOD_INVOCATION, line no: 265
iterator,SIMPLE_NAME, line no: 616,hasVectors,SIMPLE_NAME, line no: 265
iterator,SIMPLE_NAME, line no: 616,tvFieldNames.add(name),METHOD_INVOCATION, line no: 266
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 270
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 270
iterator,SIMPLE_NAME, line no: 616,contains,SIMPLE_NAME, line no: 270
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text")),METHOD_INVOCATION, line no: 271
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("text"),METHOD_INVOCATION, line no: 271
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 272
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 272
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 273
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 273
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 274
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 274
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("text2")),METHOD_INVOCATION, line no: 275
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("text2"),METHOD_INVOCATION, line no: 275
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 276
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 276
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 277
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 277
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 278
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 278
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 279
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 279
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 280
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 280
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 281
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 281
iterator,SIMPLE_NAME, line no: 616,assertTrue(allFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 282
iterator,SIMPLE_NAME, line no: 616,allFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 282
iterator,SIMPLE_NAME, line no: 616,assertEquals(11 indexedFieldNames.size()),METHOD_INVOCATION, line no: 285
iterator,SIMPLE_NAME, line no: 616,assertEquals,SIMPLE_NAME, line no: 285
iterator,SIMPLE_NAME, line no: 616,11,NUMBER_LITERAL, line no: 285
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.size(),METHOD_INVOCATION, line no: 285
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword")),METHOD_INVOCATION, line no: 286
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword"),METHOD_INVOCATION, line no: 286
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text")),METHOD_INVOCATION, line no: 287
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text"),METHOD_INVOCATION, line no: 287
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored")),METHOD_INVOCATION, line no: 288
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored"),METHOD_INVOCATION, line no: 288
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("keyword2")),METHOD_INVOCATION, line no: 289
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("keyword2"),METHOD_INVOCATION, line no: 289
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("text2")),METHOD_INVOCATION, line no: 290
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("text2"),METHOD_INVOCATION, line no: 290
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("unstored2")),METHOD_INVOCATION, line no: 291
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("unstored2"),METHOD_INVOCATION, line no: 291
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvnot")),METHOD_INVOCATION, line no: 292
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvnot"),METHOD_INVOCATION, line no: 292
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 293
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 293
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvposition")),METHOD_INVOCATION, line no: 294
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvposition"),METHOD_INVOCATION, line no: 294
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvoffset")),METHOD_INVOCATION, line no: 295
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvoffset"),METHOD_INVOCATION, line no: 295
iterator,SIMPLE_NAME, line no: 616,assertTrue(indexedFieldNames.contains("tvpositionoffset")),METHOD_INVOCATION, line no: 296
iterator,SIMPLE_NAME, line no: 616,indexedFieldNames.contains("tvpositionoffset"),METHOD_INVOCATION, line no: 296
iterator,SIMPLE_NAME, line no: 616,assertEquals(2 notIndexedFieldNames.size()),METHOD_INVOCATION, line no: 299
iterator,SIMPLE_NAME, line no: 616,notIndexedFieldNames.size(),METHOD_INVOCATION, line no: 299
iterator,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed")),METHOD_INVOCATION, line no: 300
iterator,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed"),METHOD_INVOCATION, line no: 300
iterator,SIMPLE_NAME, line no: 616,assertTrue(notIndexedFieldNames.contains("unindexed2")),METHOD_INVOCATION, line no: 301
iterator,SIMPLE_NAME, line no: 616,notIndexedFieldNames.contains("unindexed2"),METHOD_INVOCATION, line no: 301
iterator,SIMPLE_NAME, line no: 616,assertEquals(tvFieldNames.toString() 4 tvFieldNames.size()),METHOD_INVOCATION, line no: 304
iterator,SIMPLE_NAME, line no: 616,tvFieldNames.toString(),METHOD_INVOCATION, line no: 304
iterator,SIMPLE_NAME, line no: 616,toString,SIMPLE_NAME, line no: 304
iterator,SIMPLE_NAME, line no: 616,4,NUMBER_LITERAL, line no: 304
iterator,SIMPLE_NAME, line no: 616,tvFieldNames.size(),METHOD_INVOCATION, line no: 304
iterator,SIMPLE_NAME, line no: 616,assertTrue(tvFieldNames.contains("termvector")),METHOD_INVOCATION, line no: 305
iterator,SIMPLE_NAME, line no: 616,tvFieldNames.contains("termvector"),METHOD_INVOCATION, line no: 305
iterator,SIMPLE_NAME, line no: 616,testTermVectors,SIMPLE_NAME, line no: 311
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 314
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()),METHOD_INVOCATION, line no: 316
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("tvnot" "one two two three three three" Field.Store.YES)),METHOD_INVOCATION, line no: 336
iterator,SIMPLE_NAME, line no: 616,new TextField("tvnot" "one two two three three three" Field.Store.YES),CLASS_INSTANCE_CREATION, line no: 336
iterator,SIMPLE_NAME, line no: 616,"one two two three three three",STRING_LITERAL, line no: 336
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("termvector" "one two two three three three" customType5)),METHOD_INVOCATION, line no: 337
iterator,SIMPLE_NAME, line no: 616,new Field("termvector" "one two two three three three" customType5),CLASS_INSTANCE_CREATION, line no: 337
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("tvoffset" "one two two three three three" customType6)),METHOD_INVOCATION, line no: 338
iterator,SIMPLE_NAME, line no: 616,new Field("tvoffset" "one two two three three three" customType6),CLASS_INSTANCE_CREATION, line no: 338
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("tvposition" "one two two three three three" customType7)),METHOD_INVOCATION, line no: 339
iterator,SIMPLE_NAME, line no: 616,new Field("tvposition" "one two two three three three" customType7),CLASS_INSTANCE_CREATION, line no: 339
iterator,SIMPLE_NAME, line no: 616,doc.add(new Field("tvpositionoffset" "one two two three three three" customType8)),METHOD_INVOCATION, line no: 340
iterator,SIMPLE_NAME, line no: 616,new Field("tvpositionoffset" "one two two three three three" customType8),CLASS_INSTANCE_CREATION, line no: 340
iterator,SIMPLE_NAME, line no: 616,assertTermDocsCount,SIMPLE_NAME, line no: 348
iterator,SIMPLE_NAME, line no: 616,msg,SIMPLE_NAME, line no: 348
iterator,SIMPLE_NAME, line no: 616,Term,SIMPLE_NAME, line no: 350
iterator,SIMPLE_NAME, line no: 616,expected,SIMPLE_NAME, line no: 351
iterator,SIMPLE_NAME, line no: 616,tdocs,SIMPLE_NAME, line no: 353
iterator,SIMPLE_NAME, line no: 616,_TestUtil.docs(random() reader term.field() new BytesRef(term.text()) MultiFields.getLiveDocs(reader) null 0),METHOD_INVOCATION, line no: 353
iterator,SIMPLE_NAME, line no: 616,term.field(),METHOD_INVOCATION, line no: 354
iterator,SIMPLE_NAME, line no: 616,field,SIMPLE_NAME, line no: 354
iterator,SIMPLE_NAME, line no: 616,new BytesRef(term.text()),CLASS_INSTANCE_CREATION, line no: 355
iterator,SIMPLE_NAME, line no: 616,term.text(),METHOD_INVOCATION, line no: 355
iterator,SIMPLE_NAME, line no: 616,text,SIMPLE_NAME, line no: 355
iterator,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(reader),METHOD_INVOCATION, line no: 356
iterator,SIMPLE_NAME, line no: 616,count,SIMPLE_NAME, line no: 359
iterator,SIMPLE_NAME, line no: 616,tdocs != null,INFIX_EXPRESSION, line no: 360
iterator,SIMPLE_NAME, line no: 616,tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 361
iterator,SIMPLE_NAME, line no: 616,tdocs.nextDoc(),METHOD_INVOCATION, line no: 361
iterator,SIMPLE_NAME, line no: 616,count++,POSTFIX_EXPRESSION, line no: 362
iterator,SIMPLE_NAME, line no: 616,assertEquals(msg + "  count mismatch" expected count),METHOD_INVOCATION, line no: 365
iterator,SIMPLE_NAME, line no: 616,msg + "  count mismatch",INFIX_EXPRESSION, line no: 365
iterator,SIMPLE_NAME, line no: 616,"  count mismatch",STRING_LITERAL, line no: 365
iterator,SIMPLE_NAME, line no: 616,testBinaryFields,SIMPLE_NAME, line no: 369
iterator,SIMPLE_NAME, line no: 616,bin,SIMPLE_NAME, line no: 371
iterator,SIMPLE_NAME, line no: 616,new byte[]{0 1 2 3 4 5 6 7 8 9},ARRAY_CREATION, line no: 371
iterator,SIMPLE_NAME, line no: 616,{0 1 2 3 4 5 6 7 8 9},ARRAY_INITIALIZER, line no: 371
iterator,SIMPLE_NAME, line no: 616,3,NUMBER_LITERAL, line no: 371
iterator,SIMPLE_NAME, line no: 616,6,NUMBER_LITERAL, line no: 371
iterator,SIMPLE_NAME, line no: 616,7,NUMBER_LITERAL, line no: 371
iterator,SIMPLE_NAME, line no: 616,8,NUMBER_LITERAL, line no: 371
iterator,SIMPLE_NAME, line no: 616,9,NUMBER_LITERAL, line no: 371
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 373
iterator,SIMPLE_NAME, line no: 616,i < 10,INFIX_EXPRESSION, line no: 375
iterator,SIMPLE_NAME, line no: 616,10,NUMBER_LITERAL, line no: 375
iterator,SIMPLE_NAME, line no: 616,addDoc(writer "document number " + (i + 1)),METHOD_INVOCATION, line no: 376
iterator,SIMPLE_NAME, line no: 616,"document number " + (i + 1),INFIX_EXPRESSION, line no: 376
iterator,SIMPLE_NAME, line no: 616,"document number ",STRING_LITERAL, line no: 376
iterator,SIMPLE_NAME, line no: 616,(i + 1),PARENTHESIZED_EXPRESSION, line no: 376
iterator,SIMPLE_NAME, line no: 616,i + 1,INFIX_EXPRESSION, line no: 376
iterator,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields(writer),METHOD_INVOCATION, line no: 378
iterator,SIMPLE_NAME, line no: 616,addDocumentWithDifferentFields,SIMPLE_NAME, line no: 378
iterator,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields(writer),METHOD_INVOCATION, line no: 379
iterator,SIMPLE_NAME, line no: 616,addDocumentWithTermVectorFields,SIMPLE_NAME, line no: 379
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),ASSIGNMENT, line no: 382
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy())),CLASS_INSTANCE_CREATION, line no: 382
iterator,SIMPLE_NAME, line no: 616,doc.add(new StoredField("bin1" bin)),METHOD_INVOCATION, line no: 384
iterator,SIMPLE_NAME, line no: 616,new StoredField("bin1" bin),CLASS_INSTANCE_CREATION, line no: 384
iterator,SIMPLE_NAME, line no: 616,"bin1",STRING_LITERAL, line no: 384
iterator,SIMPLE_NAME, line no: 616,doc.add(new TextField("junk" "junk text" Field.Store.NO)),METHOD_INVOCATION, line no: 385
iterator,SIMPLE_NAME, line no: 616,new TextField("junk" "junk text" Field.Store.NO),CLASS_INSTANCE_CREATION, line no: 385
iterator,SIMPLE_NAME, line no: 616,"junk",STRING_LITERAL, line no: 385
iterator,SIMPLE_NAME, line no: 616,"junk text",STRING_LITERAL, line no: 385
iterator,SIMPLE_NAME, line no: 616,reader.document(reader.maxDoc() - 1),METHOD_INVOCATION, line no: 389
iterator,SIMPLE_NAME, line no: 616,reader.maxDoc() - 1,INFIX_EXPRESSION, line no: 389
iterator,SIMPLE_NAME, line no: 616,reader.maxDoc(),METHOD_INVOCATION, line no: 389
iterator,SIMPLE_NAME, line no: 616,maxDoc,SIMPLE_NAME, line no: 389
iterator,SIMPLE_NAME, line no: 616,IndexableField,SIMPLE_NAME, line no: 390
iterator,SIMPLE_NAME, line no: 616,fields,SIMPLE_NAME, line no: 390
iterator,SIMPLE_NAME, line no: 616,doc2.getFields("bin1"),METHOD_INVOCATION, line no: 390
iterator,SIMPLE_NAME, line no: 616,getFields,SIMPLE_NAME, line no: 390
iterator,SIMPLE_NAME, line no: 616,assertNotNull(fields),METHOD_INVOCATION, line no: 391
iterator,SIMPLE_NAME, line no: 616,assertEquals(1 fields.length),METHOD_INVOCATION, line no: 392
iterator,SIMPLE_NAME, line no: 616,fields.length,QUALIFIED_NAME, line no: 392
iterator,SIMPLE_NAME, line no: 616,length,SIMPLE_NAME, line no: 392
iterator,SIMPLE_NAME, line no: 616,b1,SIMPLE_NAME, line no: 393
iterator,SIMPLE_NAME, line no: 616,fields[0],ARRAY_ACCESS, line no: 393
iterator,SIMPLE_NAME, line no: 616,assertTrue(b1.binaryValue() != null),METHOD_INVOCATION, line no: 394
iterator,SIMPLE_NAME, line no: 616,b1.binaryValue() != null,INFIX_EXPRESSION, line no: 394
iterator,SIMPLE_NAME, line no: 616,b1.binaryValue(),METHOD_INVOCATION, line no: 394
iterator,SIMPLE_NAME, line no: 616,binaryValue,SIMPLE_NAME, line no: 394
iterator,SIMPLE_NAME, line no: 616,bytesRef,SIMPLE_NAME, line no: 395
iterator,SIMPLE_NAME, line no: 616,assertEquals(bin.length bytesRef.length),METHOD_INVOCATION, line no: 396
iterator,SIMPLE_NAME, line no: 616,bin.length,QUALIFIED_NAME, line no: 396
iterator,SIMPLE_NAME, line no: 616,bytesRef.length,QUALIFIED_NAME, line no: 396
iterator,SIMPLE_NAME, line no: 616,i < bin.length,INFIX_EXPRESSION, line no: 397
iterator,SIMPLE_NAME, line no: 616,assertEquals(bin[i] bytesRef.bytes[i + bytesRef.offset]),METHOD_INVOCATION, line no: 398
iterator,SIMPLE_NAME, line no: 616,bin[i],ARRAY_ACCESS, line no: 398
iterator,SIMPLE_NAME, line no: 616,bytesRef.bytes[i + bytesRef.offset],ARRAY_ACCESS, line no: 398
iterator,SIMPLE_NAME, line no: 616,bytesRef.bytes,QUALIFIED_NAME, line no: 398
iterator,SIMPLE_NAME, line no: 616,bytes,SIMPLE_NAME, line no: 398
iterator,SIMPLE_NAME, line no: 616,i + bytesRef.offset,INFIX_EXPRESSION, line no: 398
iterator,SIMPLE_NAME, line no: 616,bytesRef.offset,QUALIFIED_NAME, line no: 398
iterator,SIMPLE_NAME, line no: 616,offset,SIMPLE_NAME, line no: 398
iterator,SIMPLE_NAME, line no: 616,writer.forceMerge(1),METHOD_INVOCATION, line no: 405
iterator,SIMPLE_NAME, line no: 616,forceMerge,SIMPLE_NAME, line no: 405
iterator,SIMPLE_NAME, line no: 616,reader=DirectoryReader.open(dir),ASSIGNMENT, line no: 407
iterator,SIMPLE_NAME, line no: 616,doc2=reader.document(reader.maxDoc() - 1),ASSIGNMENT, line no: 408
iterator,SIMPLE_NAME, line no: 616,fields=doc2.getFields("bin1"),ASSIGNMENT, line no: 409
iterator,SIMPLE_NAME, line no: 616,b1=fields[0],ASSIGNMENT, line no: 412
iterator,SIMPLE_NAME, line no: 616,bytesRef=b1.binaryValue(),ASSIGNMENT, line no: 414
iterator,SIMPLE_NAME, line no: 616,testFilesOpenClose,SIMPLE_NAME, line no: 438
iterator,SIMPLE_NAME, line no: 616,dirFile,SIMPLE_NAME, line no: 440
iterator,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("TestIndexReader.testFilesOpenClose"),METHOD_INVOCATION, line no: 440
iterator,SIMPLE_NAME, line no: 616,getTempDir,SIMPLE_NAME, line no: 440
iterator,SIMPLE_NAME, line no: 616,"TestIndexReader.testFilesOpenClose",STRING_LITERAL, line no: 440
iterator,SIMPLE_NAME, line no: 616,newFSDirectory(dirFile),METHOD_INVOCATION, line no: 441
iterator,SIMPLE_NAME, line no: 616,newFSDirectory,SIMPLE_NAME, line no: 441
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random()))),CLASS_INSTANCE_CREATION, line no: 442
iterator,SIMPLE_NAME, line no: 616,addDoc(writer "test"),METHOD_INVOCATION, line no: 443
iterator,SIMPLE_NAME, line no: 616,"test",STRING_LITERAL, line no: 443
iterator,SIMPLE_NAME, line no: 616,_TestUtil.rmDir(dirFile),METHOD_INVOCATION, line no: 448
iterator,SIMPLE_NAME, line no: 616,rmDir,SIMPLE_NAME, line no: 448
iterator,SIMPLE_NAME, line no: 616,dir=newFSDirectory(dirFile),ASSIGNMENT, line no: 449
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),ASSIGNMENT, line no: 452
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE)),CLASS_INSTANCE_CREATION, line no: 452
iterator,SIMPLE_NAME, line no: 616,reader1,SIMPLE_NAME, line no: 459
iterator,SIMPLE_NAME, line no: 616,reader1.close(),METHOD_INVOCATION, line no: 460
iterator,SIMPLE_NAME, line no: 616,testOpenReaderAfterDelete,SIMPLE_NAME, line no: 468
iterator,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("deletetest"),METHOD_INVOCATION, line no: 469
iterator,SIMPLE_NAME, line no: 616,"deletetest",STRING_LITERAL, line no: 469
iterator,SIMPLE_NAME, line no: 616,fail("expected FileNotFoundException"),METHOD_INVOCATION, line no: 473
iterator,SIMPLE_NAME, line no: 616,fail,SIMPLE_NAME, line no: 473
iterator,SIMPLE_NAME, line no: 616,"expected FileNotFoundException",STRING_LITERAL, line no: 473
iterator,SIMPLE_NAME, line no: 616,e,SIMPLE_NAME, line no: 474
iterator,SIMPLE_NAME, line no: 616,dirFile.delete(),METHOD_INVOCATION, line no: 478
iterator,SIMPLE_NAME, line no: 616,delete,SIMPLE_NAME, line no: 478
iterator,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 497
iterator,SIMPLE_NAME, line no: 616,newStringField("keyword" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 497
iterator,SIMPLE_NAME, line no: 616,newStringField,SIMPLE_NAME, line no: 497
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("text" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 498
iterator,SIMPLE_NAME, line no: 616,newTextField("text" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 498
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed" "test1" customType3)),METHOD_INVOCATION, line no: 499
iterator,SIMPLE_NAME, line no: 616,newField("unindexed" "test1" customType3),METHOD_INVOCATION, line no: 499
iterator,SIMPLE_NAME, line no: 616,newField,SIMPLE_NAME, line no: 499
iterator,SIMPLE_NAME, line no: 616,doc.add(newStringField("keyword2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 510
iterator,SIMPLE_NAME, line no: 616,newStringField("keyword2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 510
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("text2" "test1" Field.Store.YES)),METHOD_INVOCATION, line no: 511
iterator,SIMPLE_NAME, line no: 616,newTextField("text2" "test1" Field.Store.YES),METHOD_INVOCATION, line no: 511
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("unindexed2" "test1" customType3)),METHOD_INVOCATION, line no: 512
iterator,SIMPLE_NAME, line no: 616,newField("unindexed2" "test1" customType3),METHOD_INVOCATION, line no: 512
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("tvnot" "tvnot" Field.Store.YES)),METHOD_INVOCATION, line no: 532
iterator,SIMPLE_NAME, line no: 616,newTextField("tvnot" "tvnot" Field.Store.YES),METHOD_INVOCATION, line no: 532
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("termvector" "termvector" customType5)),METHOD_INVOCATION, line no: 533
iterator,SIMPLE_NAME, line no: 616,newField("termvector" "termvector" customType5),METHOD_INVOCATION, line no: 533
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("tvoffset" "tvoffset" customType6)),METHOD_INVOCATION, line no: 534
iterator,SIMPLE_NAME, line no: 616,newField("tvoffset" "tvoffset" customType6),METHOD_INVOCATION, line no: 534
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("tvposition" "tvposition" customType7)),METHOD_INVOCATION, line no: 535
iterator,SIMPLE_NAME, line no: 616,newField("tvposition" "tvposition" customType7),METHOD_INVOCATION, line no: 535
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("tvpositionoffset" "tvpositionoffset" customType8)),METHOD_INVOCATION, line no: 536
iterator,SIMPLE_NAME, line no: 616,newField("tvpositionoffset" "tvpositionoffset" customType8),METHOD_INVOCATION, line no: 536
iterator,SIMPLE_NAME, line no: 616,value,SIMPLE_NAME, line no: 541
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("content" value Field.Store.NO)),METHOD_INVOCATION, line no: 543
iterator,SIMPLE_NAME, line no: 616,newTextField("content" value Field.Store.NO),METHOD_INVOCATION, line no: 543
iterator,SIMPLE_NAME, line no: 616,"content",STRING_LITERAL, line no: 543
iterator,SIMPLE_NAME, line no: 616,assertIndexEquals,SIMPLE_NAME, line no: 548
iterator,SIMPLE_NAME, line no: 616,index1,SIMPLE_NAME, line no: 548
iterator,SIMPLE_NAME, line no: 616,index2,SIMPLE_NAME, line no: 548
iterator,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for numDocs." index1.numDocs() index2.numDocs()),METHOD_INVOCATION, line no: 549
iterator,SIMPLE_NAME, line no: 616,"IndexReaders have different values for numDocs.",STRING_LITERAL, line no: 549
iterator,SIMPLE_NAME, line no: 616,index1.numDocs(),METHOD_INVOCATION, line no: 549
iterator,SIMPLE_NAME, line no: 616,numDocs,SIMPLE_NAME, line no: 549
iterator,SIMPLE_NAME, line no: 616,index2.numDocs(),METHOD_INVOCATION, line no: 549
iterator,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different values for maxDoc." index1.maxDoc() index2.maxDoc()),METHOD_INVOCATION, line no: 550
iterator,SIMPLE_NAME, line no: 616,"IndexReaders have different values for maxDoc.",STRING_LITERAL, line no: 550
iterator,SIMPLE_NAME, line no: 616,index1.maxDoc(),METHOD_INVOCATION, line no: 550
iterator,SIMPLE_NAME, line no: 616,index2.maxDoc(),METHOD_INVOCATION, line no: 550
iterator,SIMPLE_NAME, line no: 616,assertEquals("Only one IndexReader has deletions." index1.hasDeletions() index2.hasDeletions()),METHOD_INVOCATION, line no: 551
iterator,SIMPLE_NAME, line no: 616,"Only one IndexReader has deletions.",STRING_LITERAL, line no: 551
iterator,SIMPLE_NAME, line no: 616,index1.hasDeletions(),METHOD_INVOCATION, line no: 551
iterator,SIMPLE_NAME, line no: 616,hasDeletions,SIMPLE_NAME, line no: 551
iterator,SIMPLE_NAME, line no: 616,index2.hasDeletions(),METHOD_INVOCATION, line no: 551
iterator,SIMPLE_NAME, line no: 616,assertEquals("Single segment test differs." index1.getSequentialSubReaders().size() == 1 index2.getSequentialSubReaders().size() == 1),METHOD_INVOCATION, line no: 552
iterator,SIMPLE_NAME, line no: 616,"Single segment test differs.",STRING_LITERAL, line no: 552
iterator,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
iterator,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
iterator,SIMPLE_NAME, line no: 616,index1.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
iterator,SIMPLE_NAME, line no: 616,getSequentialSubReaders,SIMPLE_NAME, line no: 552
iterator,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size() == 1,INFIX_EXPRESSION, line no: 552
iterator,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders().size(),METHOD_INVOCATION, line no: 552
iterator,SIMPLE_NAME, line no: 616,index2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 552
iterator,SIMPLE_NAME, line no: 616,fieldInfos1,SIMPLE_NAME, line no: 555
iterator,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index1),METHOD_INVOCATION, line no: 555
iterator,SIMPLE_NAME, line no: 616,fieldInfos2,SIMPLE_NAME, line no: 556
iterator,SIMPLE_NAME, line no: 616,MultiFields.getMergedFieldInfos(index2),METHOD_INVOCATION, line no: 556
iterator,SIMPLE_NAME, line no: 616,assertEquals("IndexReaders have different numbers of fields." fieldInfos1.size() fieldInfos2.size()),METHOD_INVOCATION, line no: 557
iterator,SIMPLE_NAME, line no: 616,"IndexReaders have different numbers of fields.",STRING_LITERAL, line no: 557
iterator,SIMPLE_NAME, line no: 616,fieldInfos1.size(),METHOD_INVOCATION, line no: 557
iterator,SIMPLE_NAME, line no: 616,fieldInfos2.size(),METHOD_INVOCATION, line no: 557
iterator,SIMPLE_NAME, line no: 616,int fieldID=0,VARIABLE_DECLARATION_EXPRESSION, line no: 559
iterator,SIMPLE_NAME, line no: 616,fieldID,SIMPLE_NAME, line no: 559
iterator,SIMPLE_NAME, line no: 616,fieldID < numFields,INFIX_EXPRESSION, line no: 559
iterator,SIMPLE_NAME, line no: 616,fieldID++,POSTFIX_EXPRESSION, line no: 559
iterator,SIMPLE_NAME, line no: 616,fieldInfo1,SIMPLE_NAME, line no: 560
iterator,SIMPLE_NAME, line no: 616,fieldInfos1.fieldInfo(fieldID),METHOD_INVOCATION, line no: 560
iterator,SIMPLE_NAME, line no: 616,fieldInfo2,SIMPLE_NAME, line no: 561
iterator,SIMPLE_NAME, line no: 616,fieldInfos2.fieldInfo(fieldID),METHOD_INVOCATION, line no: 561
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different field names." fieldInfo1.name fieldInfo2.name),METHOD_INVOCATION, line no: 562
iterator,SIMPLE_NAME, line no: 616,"Different field names.",STRING_LITERAL, line no: 562
iterator,SIMPLE_NAME, line no: 616,fieldInfo1.name,QUALIFIED_NAME, line no: 562
iterator,SIMPLE_NAME, line no: 616,fieldInfo2.name,QUALIFIED_NAME, line no: 562
iterator,SIMPLE_NAME, line no: 616,curField,SIMPLE_NAME, line no: 567
iterator,SIMPLE_NAME, line no: 616,DocValues,SIMPLE_NAME, line no: 568
iterator,SIMPLE_NAME, line no: 616,norms1,SIMPLE_NAME, line no: 568
iterator,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index1 curField),METHOD_INVOCATION, line no: 568
iterator,SIMPLE_NAME, line no: 616,MultiDocValues,SIMPLE_NAME, line no: 568
iterator,SIMPLE_NAME, line no: 616,getNormDocValues,SIMPLE_NAME, line no: 568
iterator,SIMPLE_NAME, line no: 616,norms2,SIMPLE_NAME, line no: 569
iterator,SIMPLE_NAME, line no: 616,MultiDocValues.getNormDocValues(index2 curField),METHOD_INVOCATION, line no: 569
iterator,SIMPLE_NAME, line no: 616,norms1 != null && norms2 != null,INFIX_EXPRESSION, line no: 570
iterator,SIMPLE_NAME, line no: 616,norms1 != null,INFIX_EXPRESSION, line no: 570
iterator,SIMPLE_NAME, line no: 616,norms2 != null,INFIX_EXPRESSION, line no: 570
iterator,SIMPLE_NAME, line no: 616,(byte[])norms1.getSource().getArray(),CAST_EXPRESSION, line no: 573
iterator,SIMPLE_NAME, line no: 616,norms1.getSource().getArray(),METHOD_INVOCATION, line no: 573
iterator,SIMPLE_NAME, line no: 616,norms1.getSource(),METHOD_INVOCATION, line no: 573
iterator,SIMPLE_NAME, line no: 616,getSource,SIMPLE_NAME, line no: 573
iterator,SIMPLE_NAME, line no: 616,getArray,SIMPLE_NAME, line no: 573
iterator,SIMPLE_NAME, line no: 616,b2,SIMPLE_NAME, line no: 574
iterator,SIMPLE_NAME, line no: 616,(byte[])norms2.getSource().getArray(),CAST_EXPRESSION, line no: 574
iterator,SIMPLE_NAME, line no: 616,norms2.getSource().getArray(),METHOD_INVOCATION, line no: 574
iterator,SIMPLE_NAME, line no: 616,norms2.getSource(),METHOD_INVOCATION, line no: 574
iterator,SIMPLE_NAME, line no: 616,assertEquals(b1.length b2.length),METHOD_INVOCATION, line no: 575
iterator,SIMPLE_NAME, line no: 616,b1.length,QUALIFIED_NAME, line no: 575
iterator,SIMPLE_NAME, line no: 616,b2.length,QUALIFIED_NAME, line no: 575
iterator,SIMPLE_NAME, line no: 616,i < b1.length,INFIX_EXPRESSION, line no: 576
iterator,SIMPLE_NAME, line no: 616,assertEquals("Norm different for doc " + i + " and field '"+ curField+ "'." b1[i] b2[i]),METHOD_INVOCATION, line no: 577
iterator,SIMPLE_NAME, line no: 616,"Norm different for doc " + i + " and field '"+ curField+ "'.",INFIX_EXPRESSION, line no: 577
iterator,SIMPLE_NAME, line no: 616,"Norm different for doc ",STRING_LITERAL, line no: 577
iterator,SIMPLE_NAME, line no: 616," and field '",STRING_LITERAL, line no: 577
iterator,SIMPLE_NAME, line no: 616,"'.",STRING_LITERAL, line no: 577
iterator,SIMPLE_NAME, line no: 616,b1[i],ARRAY_ACCESS, line no: 577
iterator,SIMPLE_NAME, line no: 616,b2[i],ARRAY_ACCESS, line no: 577
iterator,SIMPLE_NAME, line no: 616,assertSame(norms1 norms2),METHOD_INVOCATION, line no: 582
iterator,SIMPLE_NAME, line no: 616,assertSame,SIMPLE_NAME, line no: 582
iterator,SIMPLE_NAME, line no: 616,liveDocs1,SIMPLE_NAME, line no: 587
iterator,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index1),METHOD_INVOCATION, line no: 587
iterator,SIMPLE_NAME, line no: 616,liveDocs2,SIMPLE_NAME, line no: 588
iterator,SIMPLE_NAME, line no: 616,MultiFields.getLiveDocs(index2),METHOD_INVOCATION, line no: 588
iterator,SIMPLE_NAME, line no: 616,i < index1.maxDoc(),INFIX_EXPRESSION, line no: 589
iterator,SIMPLE_NAME, line no: 616,assertEquals("Doc " + i + " only deleted in one index." liveDocs1 == null || !liveDocs1.get(i) liveDocs2 == null || !liveDocs2.get(i)),METHOD_INVOCATION, line no: 590
iterator,SIMPLE_NAME, line no: 616,"Doc " + i + " only deleted in one index.",INFIX_EXPRESSION, line no: 590
iterator,SIMPLE_NAME, line no: 616,"Doc ",STRING_LITERAL, line no: 590
iterator,SIMPLE_NAME, line no: 616," only deleted in one index.",STRING_LITERAL, line no: 590
iterator,SIMPLE_NAME, line no: 616,liveDocs1 == null || !liveDocs1.get(i),INFIX_EXPRESSION, line no: 591
iterator,SIMPLE_NAME, line no: 616,liveDocs1 == null,INFIX_EXPRESSION, line no: 591
iterator,SIMPLE_NAME, line no: 616,!liveDocs1.get(i),PREFIX_EXPRESSION, line no: 591
iterator,SIMPLE_NAME, line no: 616,liveDocs1.get(i),METHOD_INVOCATION, line no: 591
iterator,SIMPLE_NAME, line no: 616,get,SIMPLE_NAME, line no: 591
iterator,SIMPLE_NAME, line no: 616,liveDocs2 == null || !liveDocs2.get(i),INFIX_EXPRESSION, line no: 592
iterator,SIMPLE_NAME, line no: 616,liveDocs2 == null,INFIX_EXPRESSION, line no: 592
iterator,SIMPLE_NAME, line no: 616,!liveDocs2.get(i),PREFIX_EXPRESSION, line no: 592
iterator,SIMPLE_NAME, line no: 616,liveDocs2.get(i),METHOD_INVOCATION, line no: 592
iterator,SIMPLE_NAME, line no: 616,liveDocs1 == null || liveDocs1.get(i),INFIX_EXPRESSION, line no: 597
iterator,SIMPLE_NAME, line no: 616,index1.document(i),METHOD_INVOCATION, line no: 598
iterator,SIMPLE_NAME, line no: 616,index2.document(i),METHOD_INVOCATION, line no: 599
iterator,SIMPLE_NAME, line no: 616,field1,SIMPLE_NAME, line no: 600
iterator,SIMPLE_NAME, line no: 616,doc1.getFields(),METHOD_INVOCATION, line no: 600
iterator,SIMPLE_NAME, line no: 616,field2,SIMPLE_NAME, line no: 601
iterator,SIMPLE_NAME, line no: 616,doc2.getFields(),METHOD_INVOCATION, line no: 601
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different numbers of fields for doc " + i + "." field1.size() field2.size()),METHOD_INVOCATION, line no: 602
iterator,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc " + i + ".",INFIX_EXPRESSION, line no: 602
iterator,SIMPLE_NAME, line no: 616,"Different numbers of fields for doc ",STRING_LITERAL, line no: 602
iterator,SIMPLE_NAME, line no: 616,".",STRING_LITERAL, line no: 602
iterator,SIMPLE_NAME, line no: 616,field1.size(),METHOD_INVOCATION, line no: 602
iterator,SIMPLE_NAME, line no: 616,field2.size(),METHOD_INVOCATION, line no: 602
iterator,SIMPLE_NAME, line no: 616,itField1,SIMPLE_NAME, line no: 603
iterator,SIMPLE_NAME, line no: 616,field1.iterator(),METHOD_INVOCATION, line no: 603
iterator,SIMPLE_NAME, line no: 616,itField2,SIMPLE_NAME, line no: 604
iterator,SIMPLE_NAME, line no: 616,field2.iterator(),METHOD_INVOCATION, line no: 604
iterator,SIMPLE_NAME, line no: 616,itField1.hasNext(),METHOD_INVOCATION, line no: 605
iterator,SIMPLE_NAME, line no: 616,hasNext,SIMPLE_NAME, line no: 605
iterator,SIMPLE_NAME, line no: 616,curField1,SIMPLE_NAME, line no: 606
iterator,SIMPLE_NAME, line no: 616,(Field)itField1.next(),CAST_EXPRESSION, line no: 606
iterator,SIMPLE_NAME, line no: 616,itField1.next(),METHOD_INVOCATION, line no: 606
iterator,SIMPLE_NAME, line no: 616,next,SIMPLE_NAME, line no: 606
iterator,SIMPLE_NAME, line no: 616,curField2,SIMPLE_NAME, line no: 607
iterator,SIMPLE_NAME, line no: 616,(Field)itField2.next(),CAST_EXPRESSION, line no: 607
iterator,SIMPLE_NAME, line no: 616,itField2.next(),METHOD_INVOCATION, line no: 607
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different fields names for doc " + i + "." curField1.name() curField2.name()),METHOD_INVOCATION, line no: 608
iterator,SIMPLE_NAME, line no: 616,"Different fields names for doc " + i + ".",INFIX_EXPRESSION, line no: 608
iterator,SIMPLE_NAME, line no: 616,"Different fields names for doc ",STRING_LITERAL, line no: 608
iterator,SIMPLE_NAME, line no: 616,curField1.name(),METHOD_INVOCATION, line no: 608
iterator,SIMPLE_NAME, line no: 616,curField2.name(),METHOD_INVOCATION, line no: 608
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different field values for doc " + i + "." curField1.stringValue() curField2.stringValue()),METHOD_INVOCATION, line no: 609
iterator,SIMPLE_NAME, line no: 616,"Different field values for doc " + i + ".",INFIX_EXPRESSION, line no: 609
iterator,SIMPLE_NAME, line no: 616,"Different field values for doc ",STRING_LITERAL, line no: 609
iterator,SIMPLE_NAME, line no: 616,curField1.stringValue(),METHOD_INVOCATION, line no: 609
iterator,SIMPLE_NAME, line no: 616,stringValue,SIMPLE_NAME, line no: 609
iterator,SIMPLE_NAME, line no: 616,curField2.stringValue(),METHOD_INVOCATION, line no: 609
iterator,SIMPLE_NAME, line no: 616,FieldsEnum,SIMPLE_NAME, line no: 615
iterator,SIMPLE_NAME, line no: 616,fenum1,SIMPLE_NAME, line no: 615
iterator,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1).iterator(),METHOD_INVOCATION, line no: 615
iterator,SIMPLE_NAME, line no: 616,MultiFields.getFields(index1),METHOD_INVOCATION, line no: 615
iterator,SIMPLE_NAME, line no: 616,fenum2,SIMPLE_NAME, line no: 616
iterator,SIMPLE_NAME, line no: 616,liveDocs,SIMPLE_NAME, line no: 618
iterator,SIMPLE_NAME, line no: 616,(field1=fenum1.next()) != null,INFIX_EXPRESSION, line no: 619
iterator,SIMPLE_NAME, line no: 616,(field1=fenum1.next()),PARENTHESIZED_EXPRESSION, line no: 619
iterator,SIMPLE_NAME, line no: 616,field1=fenum1.next(),ASSIGNMENT, line no: 619
iterator,SIMPLE_NAME, line no: 616,fenum1.next(),METHOD_INVOCATION, line no: 619
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different fields" field1 fenum2.next()),METHOD_INVOCATION, line no: 620
iterator,SIMPLE_NAME, line no: 616,"Different fields",STRING_LITERAL, line no: 620
iterator,SIMPLE_NAME, line no: 616,fenum2.next(),METHOD_INVOCATION, line no: 620
iterator,SIMPLE_NAME, line no: 616,terms1,SIMPLE_NAME, line no: 621
iterator,SIMPLE_NAME, line no: 616,fenum1.terms(),METHOD_INVOCATION, line no: 621
iterator,SIMPLE_NAME, line no: 616,terms1 == null,INFIX_EXPRESSION, line no: 622
iterator,SIMPLE_NAME, line no: 616,assertNull(fenum2.terms()),METHOD_INVOCATION, line no: 623
iterator,SIMPLE_NAME, line no: 616,assertNull,SIMPLE_NAME, line no: 623
iterator,SIMPLE_NAME, line no: 616,fenum2.terms(),METHOD_INVOCATION, line no: 623
iterator,SIMPLE_NAME, line no: 616,enum1,SIMPLE_NAME, line no: 626
iterator,SIMPLE_NAME, line no: 616,terms1.iterator(null),METHOD_INVOCATION, line no: 626
iterator,SIMPLE_NAME, line no: 616,terms2,SIMPLE_NAME, line no: 628
iterator,SIMPLE_NAME, line no: 616,assertNotNull(terms2),METHOD_INVOCATION, line no: 629
iterator,SIMPLE_NAME, line no: 616,enum2,SIMPLE_NAME, line no: 630
iterator,SIMPLE_NAME, line no: 616,terms2.iterator(null),METHOD_INVOCATION, line no: 630
iterator,SIMPLE_NAME, line no: 616,enum1.next() != null,INFIX_EXPRESSION, line no: 632
iterator,SIMPLE_NAME, line no: 616,enum1.next(),METHOD_INVOCATION, line no: 632
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different terms" enum1.term() enum2.next()),METHOD_INVOCATION, line no: 633
iterator,SIMPLE_NAME, line no: 616,"Different terms",STRING_LITERAL, line no: 633
iterator,SIMPLE_NAME, line no: 616,enum1.term(),METHOD_INVOCATION, line no: 633
iterator,SIMPLE_NAME, line no: 616,enum2.next(),METHOD_INVOCATION, line no: 633
iterator,SIMPLE_NAME, line no: 616,DocsAndPositionsEnum,SIMPLE_NAME, line no: 634
iterator,SIMPLE_NAME, line no: 616,tp1,SIMPLE_NAME, line no: 634
iterator,SIMPLE_NAME, line no: 616,enum1.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 634
iterator,SIMPLE_NAME, line no: 616,docsAndPositions,SIMPLE_NAME, line no: 634
iterator,SIMPLE_NAME, line no: 616,tp2,SIMPLE_NAME, line no: 635
iterator,SIMPLE_NAME, line no: 616,enum2.docsAndPositions(liveDocs null),METHOD_INVOCATION, line no: 635
iterator,SIMPLE_NAME, line no: 616,tp1.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 637
iterator,SIMPLE_NAME, line no: 616,tp1.nextDoc(),METHOD_INVOCATION, line no: 637
iterator,SIMPLE_NAME, line no: 616,assertTrue(tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS),METHOD_INVOCATION, line no: 638
iterator,SIMPLE_NAME, line no: 616,tp2.nextDoc() != DocIdSetIterator.NO_MORE_DOCS,INFIX_EXPRESSION, line no: 638
iterator,SIMPLE_NAME, line no: 616,tp2.nextDoc(),METHOD_INVOCATION, line no: 638
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different doc id in postinglist of term " + enum1.term() + "." tp1.docID() tp2.docID()),METHOD_INVOCATION, line no: 639
iterator,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 639
iterator,SIMPLE_NAME, line no: 616,"Different doc id in postinglist of term ",STRING_LITERAL, line no: 639
iterator,SIMPLE_NAME, line no: 616,tp1.docID(),METHOD_INVOCATION, line no: 639
iterator,SIMPLE_NAME, line no: 616,tp2.docID(),METHOD_INVOCATION, line no: 639
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different term frequence in postinglist of term " + enum1.term() + "." tp1.freq() tp2.freq()),METHOD_INVOCATION, line no: 640
iterator,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 640
iterator,SIMPLE_NAME, line no: 616,"Different term frequence in postinglist of term ",STRING_LITERAL, line no: 640
iterator,SIMPLE_NAME, line no: 616,tp1.freq(),METHOD_INVOCATION, line no: 640
iterator,SIMPLE_NAME, line no: 616,freq,SIMPLE_NAME, line no: 640
iterator,SIMPLE_NAME, line no: 616,tp2.freq(),METHOD_INVOCATION, line no: 640
iterator,SIMPLE_NAME, line no: 616,i < tp1.freq(),INFIX_EXPRESSION, line no: 641
iterator,SIMPLE_NAME, line no: 616,assertEquals("Different positions in postinglist of term " + enum1.term() + "." tp1.nextPosition() tp2.nextPosition()),METHOD_INVOCATION, line no: 642
iterator,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term " + enum1.term() + ".",INFIX_EXPRESSION, line no: 642
iterator,SIMPLE_NAME, line no: 616,"Different positions in postinglist of term ",STRING_LITERAL, line no: 642
iterator,SIMPLE_NAME, line no: 616,tp1.nextPosition(),METHOD_INVOCATION, line no: 642
iterator,SIMPLE_NAME, line no: 616,nextPosition,SIMPLE_NAME, line no: 642
iterator,SIMPLE_NAME, line no: 616,tp2.nextPosition(),METHOD_INVOCATION, line no: 642
iterator,SIMPLE_NAME, line no: 616,testGetIndexCommit,SIMPLE_NAME, line no: 649
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 654
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 656
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 656
iterator,SIMPLE_NAME, line no: 616,setMaxBufferedDocs,SIMPLE_NAME, line no: 657
iterator,SIMPLE_NAME, line no: 616,newLogMergePolicy(10),METHOD_INVOCATION, line no: 658
iterator,SIMPLE_NAME, line no: 616,i < 27,INFIX_EXPRESSION, line no: 660
iterator,SIMPLE_NAME, line no: 616,27,NUMBER_LITERAL, line no: 660
iterator,SIMPLE_NAME, line no: 616,SegmentInfos,SIMPLE_NAME, line no: 664
iterator,SIMPLE_NAME, line no: 616,sis,SIMPLE_NAME, line no: 664
iterator,SIMPLE_NAME, line no: 616,new SegmentInfos(),CLASS_INSTANCE_CREATION, line no: 664
iterator,SIMPLE_NAME, line no: 616,sis.read(d),METHOD_INVOCATION, line no: 665
iterator,SIMPLE_NAME, line no: 616,read,SIMPLE_NAME, line no: 665
iterator,SIMPLE_NAME, line no: 616,r,SIMPLE_NAME, line no: 666
iterator,SIMPLE_NAME, line no: 616,IndexCommit,SIMPLE_NAME, line no: 667
iterator,SIMPLE_NAME, line no: 616,c,SIMPLE_NAME, line no: 667
iterator,SIMPLE_NAME, line no: 616,r.getIndexCommit(),METHOD_INVOCATION, line no: 667
iterator,SIMPLE_NAME, line no: 616,getIndexCommit,SIMPLE_NAME, line no: 667
iterator,SIMPLE_NAME, line no: 616,assertEquals(sis.getSegmentsFileName() c.getSegmentsFileName()),METHOD_INVOCATION, line no: 669
iterator,SIMPLE_NAME, line no: 616,sis.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
iterator,SIMPLE_NAME, line no: 616,getSegmentsFileName,SIMPLE_NAME, line no: 669
iterator,SIMPLE_NAME, line no: 616,c.getSegmentsFileName(),METHOD_INVOCATION, line no: 669
iterator,SIMPLE_NAME, line no: 616,assertTrue(c.equals(r.getIndexCommit())),METHOD_INVOCATION, line no: 671
iterator,SIMPLE_NAME, line no: 616,c.equals(r.getIndexCommit()),METHOD_INVOCATION, line no: 671
iterator,SIMPLE_NAME, line no: 616,equals,SIMPLE_NAME, line no: 671
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 674
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(d newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 674
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 676
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2),METHOD_INVOCATION, line no: 676
iterator,SIMPLE_NAME, line no: 616,i < 7,INFIX_EXPRESSION, line no: 681
iterator,SIMPLE_NAME, line no: 616,r2,SIMPLE_NAME, line no: 685
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r),METHOD_INVOCATION, line no: 685
iterator,SIMPLE_NAME, line no: 616,openIfChanged,SIMPLE_NAME, line no: 685
iterator,SIMPLE_NAME, line no: 616,assertNotNull(r2),METHOD_INVOCATION, line no: 686
iterator,SIMPLE_NAME, line no: 616,assertFalse(c.equals(r2.getIndexCommit())),METHOD_INVOCATION, line no: 687
iterator,SIMPLE_NAME, line no: 616,c.equals(r2.getIndexCommit()),METHOD_INVOCATION, line no: 687
iterator,SIMPLE_NAME, line no: 616,r2.getIndexCommit(),METHOD_INVOCATION, line no: 687
iterator,SIMPLE_NAME, line no: 616,assertFalse(r2.getIndexCommit().getSegmentCount() == 1),METHOD_INVOCATION, line no: 688
iterator,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount() == 1,INFIX_EXPRESSION, line no: 688
iterator,SIMPLE_NAME, line no: 616,r2.getIndexCommit().getSegmentCount(),METHOD_INVOCATION, line no: 688
iterator,SIMPLE_NAME, line no: 616,getSegmentCount,SIMPLE_NAME, line no: 688
iterator,SIMPLE_NAME, line no: 616,r2.close(),METHOD_INVOCATION, line no: 689
iterator,SIMPLE_NAME, line no: 616,r2=DirectoryReader.openIfChanged(r),ASSIGNMENT, line no: 697
iterator,SIMPLE_NAME, line no: 616,assertNull(DirectoryReader.openIfChanged(r2)),METHOD_INVOCATION, line no: 699
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.openIfChanged(r2),METHOD_INVOCATION, line no: 699
iterator,SIMPLE_NAME, line no: 616,assertEquals(1 r2.getIndexCommit().getSegmentCount()),METHOD_INVOCATION, line no: 700
iterator,SIMPLE_NAME, line no: 616,r.close(),METHOD_INVOCATION, line no: 702
iterator,SIMPLE_NAME, line no: 616,createDocument,SIMPLE_NAME, line no: 707
iterator,SIMPLE_NAME, line no: 616,id,SIMPLE_NAME, line no: 707
iterator,SIMPLE_NAME, line no: 616,customType,SIMPLE_NAME, line no: 709
iterator,SIMPLE_NAME, line no: 616,customType.setTokenized(false),METHOD_INVOCATION, line no: 710
iterator,SIMPLE_NAME, line no: 616,setTokenized,SIMPLE_NAME, line no: 710
iterator,SIMPLE_NAME, line no: 616,false,BOOLEAN_LITERAL, line no: 710
iterator,SIMPLE_NAME, line no: 616,customType.setOmitNorms(true),METHOD_INVOCATION, line no: 711
iterator,SIMPLE_NAME, line no: 616,setOmitNorms,SIMPLE_NAME, line no: 711
iterator,SIMPLE_NAME, line no: 616,doc.add(newField("id" id customType)),METHOD_INVOCATION, line no: 713
iterator,SIMPLE_NAME, line no: 616,newField("id" id customType),METHOD_INVOCATION, line no: 713
iterator,SIMPLE_NAME, line no: 616,"id",STRING_LITERAL, line no: 713
iterator,SIMPLE_NAME, line no: 616,testNoDir,SIMPLE_NAME, line no: 720
iterator,SIMPLE_NAME, line no: 616,Throwable,SIMPLE_NAME, line no: 720
iterator,SIMPLE_NAME, line no: 616,newFSDirectory(_TestUtil.getTempDir("doesnotexist")),METHOD_INVOCATION, line no: 721
iterator,SIMPLE_NAME, line no: 616,_TestUtil.getTempDir("doesnotexist"),METHOD_INVOCATION, line no: 721
iterator,SIMPLE_NAME, line no: 616,"doesnotexist",STRING_LITERAL, line no: 721
iterator,SIMPLE_NAME, line no: 616,fail("did not hit expected exception"),METHOD_INVOCATION, line no: 724
iterator,SIMPLE_NAME, line no: 616,"did not hit expected exception",STRING_LITERAL, line no: 724
iterator,SIMPLE_NAME, line no: 616,nsde,SIMPLE_NAME, line no: 725
iterator,SIMPLE_NAME, line no: 616,testNoDupCommitFileNames,SIMPLE_NAME, line no: 732
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMaxBufferedDocs(2)),CLASS_INSTANCE_CREATION, line no: 736
iterator,SIMPLE_NAME, line no: 616,writer.addDocument(createDocument("a")),METHOD_INVOCATION, line no: 739
iterator,SIMPLE_NAME, line no: 616,createDocument("a"),METHOD_INVOCATION, line no: 739
iterator,SIMPLE_NAME, line no: 616,"a",STRING_LITERAL, line no: 739
iterator,SIMPLE_NAME, line no: 616,commits,SIMPLE_NAME, line no: 744
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.listCommits(dir),METHOD_INVOCATION, line no: 744
iterator,SIMPLE_NAME, line no: 616,listCommits,SIMPLE_NAME, line no: 744
iterator,SIMPLE_NAME, line no: 616,commit,SIMPLE_NAME, line no: 745
iterator,SIMPLE_NAME, line no: 616,files,SIMPLE_NAME, line no: 746
iterator,SIMPLE_NAME, line no: 616,commit.getFileNames(),METHOD_INVOCATION, line no: 746
iterator,SIMPLE_NAME, line no: 616,getFileNames,SIMPLE_NAME, line no: 746
iterator,SIMPLE_NAME, line no: 616,seen,SIMPLE_NAME, line no: 747
iterator,SIMPLE_NAME, line no: 616,fileName,SIMPLE_NAME, line no: 748
iterator,SIMPLE_NAME, line no: 616,assertTrue("file " + fileName + " was duplicated" !seen.contains(fileName)),METHOD_INVOCATION, line no: 749
iterator,SIMPLE_NAME, line no: 616,"file " + fileName + " was duplicated",INFIX_EXPRESSION, line no: 749
iterator,SIMPLE_NAME, line no: 616,"file ",STRING_LITERAL, line no: 749
iterator,SIMPLE_NAME, line no: 616," was duplicated",STRING_LITERAL, line no: 749
iterator,SIMPLE_NAME, line no: 616,!seen.contains(fileName),PREFIX_EXPRESSION, line no: 749
iterator,SIMPLE_NAME, line no: 616,seen.contains(fileName),METHOD_INVOCATION, line no: 749
iterator,SIMPLE_NAME, line no: 616,seen.add(fileName),METHOD_INVOCATION, line no: 750
iterator,SIMPLE_NAME, line no: 616,testFieldCacheReuseAfterReopen,SIMPLE_NAME, line no: 760
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 762
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 764
iterator,SIMPLE_NAME, line no: 616,doc.add(newStringField("number" "17" Field.Store.NO)),METHOD_INVOCATION, line no: 768
iterator,SIMPLE_NAME, line no: 616,newStringField("number" "17" Field.Store.NO),METHOD_INVOCATION, line no: 768
iterator,SIMPLE_NAME, line no: 616,"number",STRING_LITERAL, line no: 768
iterator,SIMPLE_NAME, line no: 616,"17",STRING_LITERAL, line no: 768
iterator,SIMPLE_NAME, line no: 616,writer.commit(),METHOD_INVOCATION, line no: 770
iterator,SIMPLE_NAME, line no: 616,AtomicReader,SIMPLE_NAME, line no: 774
iterator,SIMPLE_NAME, line no: 616,r1,SIMPLE_NAME, line no: 774
iterator,SIMPLE_NAME, line no: 616,getOnlySegmentReader(r),METHOD_INVOCATION, line no: 774
iterator,SIMPLE_NAME, line no: 616,getOnlySegmentReader,SIMPLE_NAME, line no: 774
iterator,SIMPLE_NAME, line no: 616,ints,SIMPLE_NAME, line no: 775
iterator,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(r1 "number" false),METHOD_INVOCATION, line no: 775
iterator,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT,QUALIFIED_NAME, line no: 775
iterator,SIMPLE_NAME, line no: 616,DEFAULT,SIMPLE_NAME, line no: 775
iterator,SIMPLE_NAME, line no: 616,getInts,SIMPLE_NAME, line no: 775
iterator,SIMPLE_NAME, line no: 616,assertEquals(1 ints.length),METHOD_INVOCATION, line no: 776
iterator,SIMPLE_NAME, line no: 616,ints.length,QUALIFIED_NAME, line no: 776
iterator,SIMPLE_NAME, line no: 616,assertEquals(17 ints[0]),METHOD_INVOCATION, line no: 777
iterator,SIMPLE_NAME, line no: 616,17,NUMBER_LITERAL, line no: 777
iterator,SIMPLE_NAME, line no: 616,ints[0],ARRAY_ACCESS, line no: 777
iterator,SIMPLE_NAME, line no: 616,sub0,SIMPLE_NAME, line no: 787
iterator,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 787
iterator,SIMPLE_NAME, line no: 616,r2.getSequentialSubReaders(),METHOD_INVOCATION, line no: 787
iterator,SIMPLE_NAME, line no: 616,ints2,SIMPLE_NAME, line no: 788
iterator,SIMPLE_NAME, line no: 616,FieldCache.DEFAULT.getInts(sub0 "number" false),METHOD_INVOCATION, line no: 788
iterator,SIMPLE_NAME, line no: 616,assertTrue(ints == ints2),METHOD_INVOCATION, line no: 790
iterator,SIMPLE_NAME, line no: 616,ints == ints2,INFIX_EXPRESSION, line no: 790
iterator,SIMPLE_NAME, line no: 616,testUniqueTermCount,SIMPLE_NAME, line no: 797
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO)),METHOD_INVOCATION, line no: 801
iterator,SIMPLE_NAME, line no: 616,newTextField("field" "a b c d e f g h i j k l m n o p q r s t u v w x y z" Field.Store.NO),METHOD_INVOCATION, line no: 801
iterator,SIMPLE_NAME, line no: 616,"field",STRING_LITERAL, line no: 801
iterator,SIMPLE_NAME, line no: 616,"a b c d e f g h i j k l m n o p q r s t u v w x y z",STRING_LITERAL, line no: 801
iterator,SIMPLE_NAME, line no: 616,doc.add(newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO)),METHOD_INVOCATION, line no: 802
iterator,SIMPLE_NAME, line no: 616,newTextField("number" "0 1 2 3 4 5 6 7 8 9" Field.Store.NO),METHOD_INVOCATION, line no: 802
iterator,SIMPLE_NAME, line no: 616,"0 1 2 3 4 5 6 7 8 9",STRING_LITERAL, line no: 802
iterator,SIMPLE_NAME, line no: 616,assertEquals(36 r1.getUniqueTermCount()),METHOD_INVOCATION, line no: 809
iterator,SIMPLE_NAME, line no: 616,36,NUMBER_LITERAL, line no: 809
iterator,SIMPLE_NAME, line no: 616,r1.getUniqueTermCount(),METHOD_INVOCATION, line no: 809
iterator,SIMPLE_NAME, line no: 616,getUniqueTermCount,SIMPLE_NAME, line no: 809
iterator,SIMPLE_NAME, line no: 616,subs,SIMPLE_NAME, line no: 816
iterator,SIMPLE_NAME, line no: 616,assertEquals(36 s.getUniqueTermCount()),METHOD_INVOCATION, line no: 818
iterator,SIMPLE_NAME, line no: 616,s.getUniqueTermCount(),METHOD_INVOCATION, line no: 818
iterator,SIMPLE_NAME, line no: 616,testNoTermsIndex,SIMPLE_NAME, line no: 826
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()))),CLASS_INSTANCE_CREATION, line no: 828
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())),METHOD_INVOCATION, line no: 828
iterator,SIMPLE_NAME, line no: 616,setCodec,SIMPLE_NAME, line no: 828
iterator,SIMPLE_NAME, line no: 616,_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()),METHOD_INVOCATION, line no: 828
iterator,SIMPLE_NAME, line no: 616,alwaysPostingsFormat,SIMPLE_NAME, line no: 828
iterator,SIMPLE_NAME, line no: 616,new Lucene40PostingsFormat(),CLASS_INSTANCE_CREATION, line no: 828
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.open(dir -1),METHOD_INVOCATION, line no: 836
iterator,SIMPLE_NAME, line no: 616,-1,PREFIX_EXPRESSION, line no: 836
iterator,SIMPLE_NAME, line no: 616,r.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 838
iterator,SIMPLE_NAME, line no: 616,docFreq,SIMPLE_NAME, line no: 838
iterator,SIMPLE_NAME, line no: 616,new Term("field" "f"),CLASS_INSTANCE_CREATION, line no: 838
iterator,SIMPLE_NAME, line no: 616,"f",STRING_LITERAL, line no: 838
iterator,SIMPLE_NAME, line no: 616,IllegalStateException,SIMPLE_NAME, line no: 840
iterator,SIMPLE_NAME, line no: 616,ise,SIMPLE_NAME, line no: 840
iterator,SIMPLE_NAME, line no: 616,assertEquals(-1 ((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor()),METHOD_INVOCATION, line no: 844
iterator,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)).getTermInfosIndexDivisor(),METHOD_INVOCATION, line no: 844
iterator,SIMPLE_NAME, line no: 616,((SegmentReader)r.getSequentialSubReaders().get(0)),PARENTHESIZED_EXPRESSION, line no: 844
iterator,SIMPLE_NAME, line no: 616,(SegmentReader)r.getSequentialSubReaders().get(0),CAST_EXPRESSION, line no: 844
iterator,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders().get(0),METHOD_INVOCATION, line no: 844
iterator,SIMPLE_NAME, line no: 616,r.getSequentialSubReaders(),METHOD_INVOCATION, line no: 844
iterator,SIMPLE_NAME, line no: 616,getTermInfosIndexDivisor,SIMPLE_NAME, line no: 844
iterator,SIMPLE_NAME, line no: 616,writer=new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),ASSIGNMENT, line no: 845
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10))),CLASS_INSTANCE_CREATION, line no: 845
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT new MockAnalyzer(random())).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())).setMergePolicy(newLogMergePolicy(10)),METHOD_INVOCATION, line no: 847
iterator,SIMPLE_NAME, line no: 616,subReaders,SIMPLE_NAME, line no: 859
iterator,SIMPLE_NAME, line no: 616,assertEquals(2 subReaders.size()),METHOD_INVOCATION, line no: 860
iterator,SIMPLE_NAME, line no: 616,subReaders.size(),METHOD_INVOCATION, line no: 860
iterator,SIMPLE_NAME, line no: 616,s.docFreq(new Term("field" "f")),METHOD_INVOCATION, line no: 863
iterator,SIMPLE_NAME, line no: 616,testPrepareCommitIsCurrent,SIMPLE_NAME, line no: 874
iterator,SIMPLE_NAME, line no: 616,assertTrue(r.isCurrent()),METHOD_INVOCATION, line no: 882
iterator,SIMPLE_NAME, line no: 616,r.isCurrent(),METHOD_INVOCATION, line no: 882
iterator,SIMPLE_NAME, line no: 616,writer.prepareCommit(),METHOD_INVOCATION, line no: 884
iterator,SIMPLE_NAME, line no: 616,prepareCommit,SIMPLE_NAME, line no: 884
iterator,SIMPLE_NAME, line no: 616,assertNull(r2),METHOD_INVOCATION, line no: 887
iterator,SIMPLE_NAME, line no: 616,assertFalse(r.isCurrent()),METHOD_INVOCATION, line no: 889
iterator,SIMPLE_NAME, line no: 616,testListCommits,SIMPLE_NAME, line no: 896
iterator,SIMPLE_NAME, line no: 616,SnapshotDeletionPolicy,SIMPLE_NAME, line no: 898
iterator,SIMPLE_NAME, line no: 616,sdp,SIMPLE_NAME, line no: 898
iterator,SIMPLE_NAME, line no: 616,new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()),CLASS_INSTANCE_CREATION, line no: 898
iterator,SIMPLE_NAME, line no: 616,new KeepOnlyLastCommitDeletionPolicy(),CLASS_INSTANCE_CREATION, line no: 898
iterator,SIMPLE_NAME, line no: 616,KeepOnlyLastCommitDeletionPolicy,SIMPLE_NAME, line no: 898
iterator,SIMPLE_NAME, line no: 616,new IndexWriter(dir newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp)),CLASS_INSTANCE_CREATION, line no: 899
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null).setIndexDeletionPolicy(sdp),METHOD_INVOCATION, line no: 899
iterator,SIMPLE_NAME, line no: 616,newIndexWriterConfig(TEST_VERSION_CURRENT null),METHOD_INVOCATION, line no: 899
iterator,SIMPLE_NAME, line no: 616,setIndexDeletionPolicy,SIMPLE_NAME, line no: 900
iterator,SIMPLE_NAME, line no: 616,writer.addDocument(new Document()),METHOD_INVOCATION, line no: 901
iterator,SIMPLE_NAME, line no: 616,sdp.snapshot("c1"),METHOD_INVOCATION, line no: 903
iterator,SIMPLE_NAME, line no: 616,snapshot,SIMPLE_NAME, line no: 903
iterator,SIMPLE_NAME, line no: 616,"c1",STRING_LITERAL, line no: 903
iterator,SIMPLE_NAME, line no: 616,sdp.snapshot("c2"),METHOD_INVOCATION, line no: 906
iterator,SIMPLE_NAME, line no: 616,"c2",STRING_LITERAL, line no: 906
iterator,SIMPLE_NAME, line no: 616,sdp.snapshot("c3"),METHOD_INVOCATION, line no: 909
iterator,SIMPLE_NAME, line no: 616,"c3",STRING_LITERAL, line no: 909
iterator,SIMPLE_NAME, line no: 616,currentGen,SIMPLE_NAME, line no: 911
iterator,SIMPLE_NAME, line no: 616,ic,SIMPLE_NAME, line no: 912
iterator,SIMPLE_NAME, line no: 616,assertTrue("currentGen=" + currentGen + " commitGen="+ ic.getGeneration() currentGen < ic.getGeneration()),METHOD_INVOCATION, line no: 913
iterator,SIMPLE_NAME, line no: 616,"currentGen=" + currentGen + " commitGen="+ ic.getGeneration(),INFIX_EXPRESSION, line no: 913
iterator,SIMPLE_NAME, line no: 616,"currentGen=",STRING_LITERAL, line no: 913
iterator,SIMPLE_NAME, line no: 616," commitGen=",STRING_LITERAL, line no: 913
iterator,SIMPLE_NAME, line no: 616,ic.getGeneration(),METHOD_INVOCATION, line no: 913
iterator,SIMPLE_NAME, line no: 616,getGeneration,SIMPLE_NAME, line no: 913
iterator,SIMPLE_NAME, line no: 616,currentGen < ic.getGeneration(),INFIX_EXPRESSION, line no: 913
iterator,SIMPLE_NAME, line no: 616,currentGen=ic.getGeneration(),ASSIGNMENT, line no: 914
iterator,SIMPLE_NAME, line no: 616,testIndexExists,SIMPLE_NAME, line no: 920
iterator,SIMPLE_NAME, line no: 616,assertFalse(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 925
iterator,SIMPLE_NAME, line no: 616,DirectoryReader.indexExists(dir),METHOD_INVOCATION, line no: 925
iterator,SIMPLE_NAME, line no: 616,indexExists,SIMPLE_NAME, line no: 925
iterator,SIMPLE_NAME, line no: 616,assertTrue(DirectoryReader.indexExists(dir)),METHOD_INVOCATION, line no: 928
iterator,SIMPLE_NAME, line no: 616,testTotalTermFreqCached,SIMPLE_NAME, line no: 934
iterator,SIMPLE_NAME, line no: 616,d.add(newTextField("f" "a a b" Field.Store.NO)),METHOD_INVOCATION, line no: 938
iterator,SIMPLE_NAME, line no: 616,newTextField("f" "a a b" Field.Store.NO),METHOD_INVOCATION, line no: 938
iterator,SIMPLE_NAME, line no: 616,"a a b",STRING_LITERAL, line no: 938
iterator,SIMPLE_NAME, line no: 616,writer.addDocument(d),METHOD_INVOCATION, line no: 939
iterator,SIMPLE_NAME, line no: 616,writer.getReader(),METHOD_INVOCATION, line no: 940
iterator,SIMPLE_NAME, line no: 616,getReader,SIMPLE_NAME, line no: 940
iterator,SIMPLE_NAME, line no: 616,Assume.assumeTrue(MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1),METHOD_INVOCATION, line no: 944
iterator,SIMPLE_NAME, line no: 616,assumeTrue,SIMPLE_NAME, line no: 944
iterator,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")) != -1,INFIX_EXPRESSION, line no: 944
iterator,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("b")),METHOD_INVOCATION, line no: 944
iterator,SIMPLE_NAME, line no: 616,totalTermFreq,SIMPLE_NAME, line no: 944
iterator,SIMPLE_NAME, line no: 616,new BytesRef("b"),CLASS_INSTANCE_CREATION, line no: 944
iterator,SIMPLE_NAME, line no: 616,"b",STRING_LITERAL, line no: 944
iterator,SIMPLE_NAME, line no: 616,assertEquals(1 MultiFields.totalTermFreq(r "f" new BytesRef("b"))),METHOD_INVOCATION, line no: 945
iterator,SIMPLE_NAME, line no: 616,assertEquals(2 MultiFields.totalTermFreq(r "f" new BytesRef("a"))),METHOD_INVOCATION, line no: 946
iterator,SIMPLE_NAME, line no: 616,MultiFields.totalTermFreq(r "f" new BytesRef("a")),METHOD_INVOCATION, line no: 946
iterator,SIMPLE_NAME, line no: 616,new BytesRef("a"),CLASS_INSTANCE_CREATION, line no: 946
iterator,SIMPLE_NAME, line no: 616,testReaderFinishedListener,SIMPLE_NAME, line no: 955
iterator,SIMPLE_NAME, line no: 616,((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(3),METHOD_INVOCATION, line no: 958
iterator,SIMPLE_NAME, line no: 616,setMergeFactor,SIMPLE_NAME, line no: 958
iterator,SIMPLE_NAME, line no: 616,closeCount,SIMPLE_NAME, line no: 964
iterator,SIMPLE_NAME, line no: 616,new int[1],ARRAY_CREATION, line no: 964
iterator,SIMPLE_NAME, line no: 616,IndexReader.ReaderClosedListener,QUALIFIED_NAME, line no: 965
iterator,SIMPLE_NAME, line no: 616,ReaderClosedListener,SIMPLE_NAME, line no: 965
iterator,SIMPLE_NAME, line no: 616,listener,SIMPLE_NAME, line no: 965
iterator,SIMPLE_NAME, line no: 616,new IndexReader.ReaderClosedListener(){   public void onClose(  IndexReader reader){     closeCount[0]++;   } } ,CLASS_INSTANCE_CREATION, line no: 965
iterator,SIMPLE_NAME, line no: 616,onClose,SIMPLE_NAME, line no: 966
iterator,SIMPLE_NAME, line no: 616,closeCount[0]++,POSTFIX_EXPRESSION, line no: 967
iterator,SIMPLE_NAME, line no: 616,closeCount[0],ARRAY_ACCESS, line no: 967
iterator,SIMPLE_NAME, line no: 616,reader.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 971
iterator,SIMPLE_NAME, line no: 616,addReaderClosedListener,SIMPLE_NAME, line no: 971
iterator,SIMPLE_NAME, line no: 616,assertEquals(1 closeCount[0]),METHOD_INVOCATION, line no: 976
iterator,SIMPLE_NAME, line no: 616,reader2,SIMPLE_NAME, line no: 979
iterator,SIMPLE_NAME, line no: 616,reader2.addReaderClosedListener(listener),METHOD_INVOCATION, line no: 980
iterator,SIMPLE_NAME, line no: 616,closeCount[0]=0,ASSIGNMENT, line no: 982
iterator,SIMPLE_NAME, line no: 616,reader2.close(),METHOD_INVOCATION, line no: 983
iterator,SIMPLE_NAME, line no: 616,testOOBDocID,SIMPLE_NAME, line no: 988
iterator,SIMPLE_NAME, line no: 616,r.document(0),METHOD_INVOCATION, line no: 994
iterator,SIMPLE_NAME, line no: 616,r.document(1),METHOD_INVOCATION, line no: 996
iterator,SIMPLE_NAME, line no: 616,fail("did not hit exception"),METHOD_INVOCATION, line no: 997
iterator,SIMPLE_NAME, line no: 616,"did not hit exception",STRING_LITERAL, line no: 997
iterator,SIMPLE_NAME, line no: 616,IllegalArgumentException,SIMPLE_NAME, line no: 998
iterator,SIMPLE_NAME, line no: 616,iae,SIMPLE_NAME, line no: 998
iterator,SIMPLE_NAME, line no: 616,testTryIncRef,SIMPLE_NAME, line no: 1005
iterator,SIMPLE_NAME, line no: 616,assertTrue(r.tryIncRef()),METHOD_INVOCATION, line no: 1011
iterator,SIMPLE_NAME, line no: 616,r.tryIncRef(),METHOD_INVOCATION, line no: 1011
iterator,SIMPLE_NAME, line no: 616,tryIncRef,SIMPLE_NAME, line no: 1011
iterator,SIMPLE_NAME, line no: 616,r.decRef(),METHOD_INVOCATION, line no: 1012
iterator,SIMPLE_NAME, line no: 616,decRef,SIMPLE_NAME, line no: 1012
iterator,SIMPLE_NAME, line no: 616,assertFalse(r.tryIncRef()),METHOD_INVOCATION, line no: 1014
iterator,SIMPLE_NAME, line no: 616,testStressTryIncRef,SIMPLE_NAME, line no: 1019
iterator,SIMPLE_NAME, line no: 616,InterruptedException,SIMPLE_NAME, line no: 1019
iterator,SIMPLE_NAME, line no: 616,numThreads,SIMPLE_NAME, line no: 1025
iterator,SIMPLE_NAME, line no: 616,atLeast(2),METHOD_INVOCATION, line no: 1025
iterator,SIMPLE_NAME, line no: 616,atLeast,SIMPLE_NAME, line no: 1025
iterator,SIMPLE_NAME, line no: 616,IncThread,SIMPLE_NAME, line no: 1027
iterator,SIMPLE_NAME, line no: 616,threads,SIMPLE_NAME, line no: 1027
iterator,SIMPLE_NAME, line no: 616,new IncThread[numThreads],ARRAY_CREATION, line no: 1027
iterator,SIMPLE_NAME, line no: 616,i < threads.length,INFIX_EXPRESSION, line no: 1028
iterator,SIMPLE_NAME, line no: 616,threads.length,QUALIFIED_NAME, line no: 1028
iterator,SIMPLE_NAME, line no: 616,threads[i]=new IncThread(r random()),ASSIGNMENT, line no: 1029
iterator,SIMPLE_NAME, line no: 616,threads[i],ARRAY_ACCESS, line no: 1029
iterator,SIMPLE_NAME, line no: 616,new IncThread(r random()),CLASS_INSTANCE_CREATION, line no: 1029
iterator,SIMPLE_NAME, line no: 616,threads[i].start(),METHOD_INVOCATION, line no: 1030
iterator,SIMPLE_NAME, line no: 616,start,SIMPLE_NAME, line no: 1030
iterator,SIMPLE_NAME, line no: 616,Thread.sleep(100),METHOD_INVOCATION, line no: 1032
iterator,SIMPLE_NAME, line no: 616,Thread,SIMPLE_NAME, line no: 1032
iterator,SIMPLE_NAME, line no: 616,sleep,SIMPLE_NAME, line no: 1032
iterator,SIMPLE_NAME, line no: 616,100,NUMBER_LITERAL, line no: 1032
iterator,SIMPLE_NAME, line no: 616,threads[i].join(),METHOD_INVOCATION, line no: 1039
iterator,SIMPLE_NAME, line no: 616,join,SIMPLE_NAME, line no: 1039
iterator,SIMPLE_NAME, line no: 616,assertNull(threads[i].failed),METHOD_INVOCATION, line no: 1040
iterator,SIMPLE_NAME, line no: 616,threads[i].failed,FIELD_ACCESS, line no: 1040
iterator,SIMPLE_NAME, line no: 616,failed,SIMPLE_NAME, line no: 1040
iterator,SIMPLE_NAME, line no: 616,toInc,SIMPLE_NAME, line no: 1048
iterator,SIMPLE_NAME, line no: 616,this.toInc=toInc,ASSIGNMENT, line no: 1053
iterator,SIMPLE_NAME, line no: 616,this.toInc,FIELD_ACCESS, line no: 1053
iterator,SIMPLE_NAME, line no: 616,this,THIS_EXPRESSION, line no: 1053
iterator,SIMPLE_NAME, line no: 616,this.random=random,ASSIGNMENT, line no: 1054
iterator,SIMPLE_NAME, line no: 616,this.random,FIELD_ACCESS, line no: 1054
iterator,SIMPLE_NAME, line no: 616,@Override,, line no: 1057
iterator,SIMPLE_NAME, line no: 616,Override,SIMPLE_NAME, line no: 1057
iterator,SIMPLE_NAME, line no: 616,run,SIMPLE_NAME, line no: 1058
iterator,SIMPLE_NAME, line no: 616,toInc.tryIncRef(),METHOD_INVOCATION, line no: 1060
iterator,SIMPLE_NAME, line no: 616,assertFalse(toInc.hasDeletions()),METHOD_INVOCATION, line no: 1061
iterator,SIMPLE_NAME, line no: 616,toInc.hasDeletions(),METHOD_INVOCATION, line no: 1061
iterator,SIMPLE_NAME, line no: 616,toInc.decRef(),METHOD_INVOCATION, line no: 1062
iterator,SIMPLE_NAME, line no: 616,assertFalse(toInc.tryIncRef()),METHOD_INVOCATION, line no: 1064
iterator,SIMPLE_NAME, line no: 616,failed=e,ASSIGNMENT, line no: 1066
iterator,SIMPLE_NAME, line no: 616,testLoadCertainFields,SIMPLE_NAME, line no: 1071
iterator,SIMPLE_NAME, line no: 616,RandomIndexWriter,SIMPLE_NAME, line no: 1073
iterator,SIMPLE_NAME, line no: 616,new RandomIndexWriter(random() dir),CLASS_INSTANCE_CREATION, line no: 1073
iterator,SIMPLE_NAME, line no: 616,doc.add(newStringField("field1" "foobar" Field.Store.YES)),METHOD_INVOCATION, line no: 1075
iterator,SIMPLE_NAME, line no: 616,newStringField("field1" "foobar" Field.Store.YES),METHOD_INVOCATION, line no: 1075
iterator,SIMPLE_NAME, line no: 616,"field1",STRING_LITERAL, line no: 1075
iterator,SIMPLE_NAME, line no: 616,"foobar",STRING_LITERAL, line no: 1075
iterator,SIMPLE_NAME, line no: 616,doc.add(newStringField("field2" "foobaz" Field.Store.YES)),METHOD_INVOCATION, line no: 1076
iterator,SIMPLE_NAME, line no: 616,newStringField("field2" "foobaz" Field.Store.YES),METHOD_INVOCATION, line no: 1076
iterator,SIMPLE_NAME, line no: 616,"field2",STRING_LITERAL, line no: 1076
iterator,SIMPLE_NAME, line no: 616,"foobaz",STRING_LITERAL, line no: 1076
iterator,SIMPLE_NAME, line no: 616,fieldsToLoad,SIMPLE_NAME, line no: 1080
iterator,SIMPLE_NAME, line no: 616,assertEquals(0 r.document(0 fieldsToLoad).getFields().size()),METHOD_INVOCATION, line no: 1081
iterator,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields().size(),METHOD_INVOCATION, line no: 1081
iterator,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad).getFields(),METHOD_INVOCATION, line no: 1081
iterator,SIMPLE_NAME, line no: 616,r.document(0 fieldsToLoad),METHOD_INVOCATION, line no: 1081
iterator,SIMPLE_NAME, line no: 616,fieldsToLoad.add("field1"),METHOD_INVOCATION, line no: 1082
iterator,SIMPLE_NAME, line no: 616,assertEquals(1 doc2.getFields().size()),METHOD_INVOCATION, line no: 1084
iterator,SIMPLE_NAME, line no: 616,doc2.getFields().size(),METHOD_INVOCATION, line no: 1084
iterator,SIMPLE_NAME, line no: 616,assertEquals("foobar" doc2.get("field1")),METHOD_INVOCATION, line no: 1085
iterator,SIMPLE_NAME, line no: 616,doc2.get("field1"),METHOD_INVOCATION, line no: 1085
